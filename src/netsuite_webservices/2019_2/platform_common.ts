import * as PlatformCore from "./platform_core";
import * as PlatformCommonTypes from "./platform_common_types";

export type ManufacturingCostTemplateSearchRowBasicProps = {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  item?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class ManufacturingCostTemplateSearchRowBasic extends PlatformCore.SearchRowBasic {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  item?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: ManufacturingCostTemplateSearchRowBasicProps) {
    super();
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.item = props.item;
    this.memo = props.memo;
    this.name = props.name;
    this.subsidiary = props.subsidiary;
    this.customFieldList = props.customFieldList;
  }
}

export type GiftCertRedemptionProps = {
  authCode?: PlatformCore.RecordRef;
  authCodeApplied?: number;
  authCodeAmtRemaining?: number;
  giftCertAvailable?: number;
};

export class GiftCertRedemption {
  authCode?: PlatformCore.RecordRef;
  authCodeApplied?: number;
  authCodeAmtRemaining?: number;
  giftCertAvailable?: number;
  constructor(props: GiftCertRedemptionProps) {
    this.authCode = props.authCode;
    this.authCodeApplied = props.authCodeApplied;
    this.authCodeAmtRemaining = props.authCodeAmtRemaining;
    this.giftCertAvailable = props.giftCertAvailable;
  }
}

export type PartnerCategorySearchRowBasicProps = {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  parent?: PlatformCore.SearchColumnSelectField[];
};

export class PartnerCategorySearchRowBasic extends PlatformCore.SearchRowBasic {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  parent?: PlatformCore.SearchColumnSelectField[];
  constructor(props: PartnerCategorySearchRowBasicProps) {
    super();
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.parent = props.parent;
  }
}

export type LocationSearchRowBasicProps = {
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  allowStorePickup?: PlatformCore.SearchColumnBooleanField[];
  autoAssignmentRegionSetting?: PlatformCore.SearchColumnEnumSelectField[];
  bufferStock?: PlatformCore.SearchColumnLongField[];
  city?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  dailyShippingCapacity?: PlatformCore.SearchColumnLongField[];
  endTime?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  geolocationMethod?: PlatformCore.SearchColumnEnumSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isFriday?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isIncludeInCt?: PlatformCore.SearchColumnBooleanField[];
  isMonday?: PlatformCore.SearchColumnBooleanField[];
  isOffice?: PlatformCore.SearchColumnBooleanField[];
  isSaturday?: PlatformCore.SearchColumnBooleanField[];
  isSunday?: PlatformCore.SearchColumnBooleanField[];
  isThursday?: PlatformCore.SearchColumnBooleanField[];
  isTuesday?: PlatformCore.SearchColumnBooleanField[];
  isWednesday?: PlatformCore.SearchColumnBooleanField[];
  latitude?: PlatformCore.SearchColumnDoubleField[];
  locationType?: PlatformCore.SearchColumnEnumSelectField[];
  longitude?: PlatformCore.SearchColumnDoubleField[];
  makeInventoryAvailable?: PlatformCore.SearchColumnBooleanField[];
  makeInventoryAvailableStore?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  nameNoHierarchy?: PlatformCore.SearchColumnStringField[];
  nextPickupCutOffTime?: PlatformCore.SearchColumnDateField[];
  phone?: PlatformCore.SearchColumnStringField[];
  sameDayPickupCutOffTime?: PlatformCore.SearchColumnDateField[];
  startTime?: PlatformCore.SearchColumnDateField[];
  state?: PlatformCore.SearchColumnStringField[];
  storePickupBufferStock?: PlatformCore.SearchColumnDoubleField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  timeZone?: PlatformCore.SearchColumnEnumSelectField[];
  totalShippingCapacity?: PlatformCore.SearchColumnLongField[];
  tranPrefix?: PlatformCore.SearchColumnStringField[];
  usesBins?: PlatformCore.SearchColumnBooleanField[];
  zip?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class LocationSearchRowBasic extends PlatformCore.SearchRowBasic {
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  allowStorePickup?: PlatformCore.SearchColumnBooleanField[];
  autoAssignmentRegionSetting?: PlatformCore.SearchColumnEnumSelectField[];
  bufferStock?: PlatformCore.SearchColumnLongField[];
  city?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  dailyShippingCapacity?: PlatformCore.SearchColumnLongField[];
  endTime?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  geolocationMethod?: PlatformCore.SearchColumnEnumSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isFriday?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isIncludeInCt?: PlatformCore.SearchColumnBooleanField[];
  isMonday?: PlatformCore.SearchColumnBooleanField[];
  isOffice?: PlatformCore.SearchColumnBooleanField[];
  isSaturday?: PlatformCore.SearchColumnBooleanField[];
  isSunday?: PlatformCore.SearchColumnBooleanField[];
  isThursday?: PlatformCore.SearchColumnBooleanField[];
  isTuesday?: PlatformCore.SearchColumnBooleanField[];
  isWednesday?: PlatformCore.SearchColumnBooleanField[];
  latitude?: PlatformCore.SearchColumnDoubleField[];
  locationType?: PlatformCore.SearchColumnEnumSelectField[];
  longitude?: PlatformCore.SearchColumnDoubleField[];
  makeInventoryAvailable?: PlatformCore.SearchColumnBooleanField[];
  makeInventoryAvailableStore?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  nameNoHierarchy?: PlatformCore.SearchColumnStringField[];
  nextPickupCutOffTime?: PlatformCore.SearchColumnDateField[];
  phone?: PlatformCore.SearchColumnStringField[];
  sameDayPickupCutOffTime?: PlatformCore.SearchColumnDateField[];
  startTime?: PlatformCore.SearchColumnDateField[];
  state?: PlatformCore.SearchColumnStringField[];
  storePickupBufferStock?: PlatformCore.SearchColumnDoubleField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  timeZone?: PlatformCore.SearchColumnEnumSelectField[];
  totalShippingCapacity?: PlatformCore.SearchColumnLongField[];
  tranPrefix?: PlatformCore.SearchColumnStringField[];
  usesBins?: PlatformCore.SearchColumnBooleanField[];
  zip?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: LocationSearchRowBasicProps) {
    super();
    this.address1 = props.address1;
    this.address2 = props.address2;
    this.address3 = props.address3;
    this.allowStorePickup = props.allowStorePickup;
    this.autoAssignmentRegionSetting = props.autoAssignmentRegionSetting;
    this.bufferStock = props.bufferStock;
    this.city = props.city;
    this.country = props.country;
    this.dailyShippingCapacity = props.dailyShippingCapacity;
    this.endTime = props.endTime;
    this.externalId = props.externalId;
    this.geolocationMethod = props.geolocationMethod;
    this.internalId = props.internalId;
    this.isFriday = props.isFriday;
    this.isInactive = props.isInactive;
    this.isIncludeInCt = props.isIncludeInCt;
    this.isMonday = props.isMonday;
    this.isOffice = props.isOffice;
    this.isSaturday = props.isSaturday;
    this.isSunday = props.isSunday;
    this.isThursday = props.isThursday;
    this.isTuesday = props.isTuesday;
    this.isWednesday = props.isWednesday;
    this.latitude = props.latitude;
    this.locationType = props.locationType;
    this.longitude = props.longitude;
    this.makeInventoryAvailable = props.makeInventoryAvailable;
    this.makeInventoryAvailableStore = props.makeInventoryAvailableStore;
    this.name = props.name;
    this.nameNoHierarchy = props.nameNoHierarchy;
    this.nextPickupCutOffTime = props.nextPickupCutOffTime;
    this.phone = props.phone;
    this.sameDayPickupCutOffTime = props.sameDayPickupCutOffTime;
    this.startTime = props.startTime;
    this.state = props.state;
    this.storePickupBufferStock = props.storePickupBufferStock;
    this.subsidiary = props.subsidiary;
    this.timeZone = props.timeZone;
    this.totalShippingCapacity = props.totalShippingCapacity;
    this.tranPrefix = props.tranPrefix;
    this.usesBins = props.usesBins;
    this.zip = props.zip;
    this.customFieldList = props.customFieldList;
  }
}

export type NoteSearchBasicProps = {
  author?: PlatformCore.SearchMultiSelectField;
  direction?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  note?: PlatformCore.SearchStringField;
  noteDate?: PlatformCore.SearchDateField;
  noteType?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class NoteSearchBasic extends PlatformCore.SearchRecordBasic {
  author?: PlatformCore.SearchMultiSelectField;
  direction?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  note?: PlatformCore.SearchStringField;
  noteDate?: PlatformCore.SearchDateField;
  noteType?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: NoteSearchBasicProps) {
    super();
    this.author = props.author;
    this.direction = props.direction;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.note = props.note;
    this.noteDate = props.noteDate;
    this.noteType = props.noteType;
    this.title = props.title;
    this.customFieldList = props.customFieldList;
  }
}

export type EntityGroupSearchBasicProps = {
  email?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  groupName?: PlatformCore.SearchStringField;
  groupOwner?: PlatformCore.SearchMultiSelectField;
  groupType?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDynamic?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isManufacturingWorkCenter?: PlatformCore.SearchBooleanField;
  isPrivate?: PlatformCore.SearchBooleanField;
  laborResources?: PlatformCore.SearchDoubleField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  machineResources?: PlatformCore.SearchDoubleField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  workCalendar?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class EntityGroupSearchBasic extends PlatformCore.SearchRecordBasic {
  email?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  groupName?: PlatformCore.SearchStringField;
  groupOwner?: PlatformCore.SearchMultiSelectField;
  groupType?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDynamic?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isManufacturingWorkCenter?: PlatformCore.SearchBooleanField;
  isPrivate?: PlatformCore.SearchBooleanField;
  laborResources?: PlatformCore.SearchDoubleField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  machineResources?: PlatformCore.SearchDoubleField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  workCalendar?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: EntityGroupSearchBasicProps) {
    super();
    this.email = props.email;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.groupName = props.groupName;
    this.groupOwner = props.groupOwner;
    this.groupType = props.groupType;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isDynamic = props.isDynamic;
    this.isInactive = props.isInactive;
    this.isManufacturingWorkCenter = props.isManufacturingWorkCenter;
    this.isPrivate = props.isPrivate;
    this.laborResources = props.laborResources;
    this.lastModifiedDate = props.lastModifiedDate;
    this.machineResources = props.machineResources;
    this.subsidiary = props.subsidiary;
    this.workCalendar = props.workCalendar;
    this.customFieldList = props.customFieldList;
  }
}

export type PhoneCallSearchRowBasicProps = {
  accessLevel?: PlatformCore.SearchColumnStringField[];
  assigned?: PlatformCore.SearchColumnSelectField[];
  company?: PlatformCore.SearchColumnSelectField[];
  completedDate?: PlatformCore.SearchColumnDateField[];
  contact?: PlatformCore.SearchColumnSelectField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  markdone?: PlatformCore.SearchColumnStringField[];
  message?: PlatformCore.SearchColumnStringField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  priority?: PlatformCore.SearchColumnEnumSelectField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  startTime?: PlatformCore.SearchColumnDateField[];
  status?: PlatformCore.SearchColumnEnumSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  transaction?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class PhoneCallSearchRowBasic extends PlatformCore.SearchRowBasic {
  accessLevel?: PlatformCore.SearchColumnStringField[];
  assigned?: PlatformCore.SearchColumnSelectField[];
  company?: PlatformCore.SearchColumnSelectField[];
  completedDate?: PlatformCore.SearchColumnDateField[];
  contact?: PlatformCore.SearchColumnSelectField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  markdone?: PlatformCore.SearchColumnStringField[];
  message?: PlatformCore.SearchColumnStringField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  priority?: PlatformCore.SearchColumnEnumSelectField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  startTime?: PlatformCore.SearchColumnDateField[];
  status?: PlatformCore.SearchColumnEnumSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  transaction?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: PhoneCallSearchRowBasicProps) {
    super();
    this.accessLevel = props.accessLevel;
    this.assigned = props.assigned;
    this.company = props.company;
    this.completedDate = props.completedDate;
    this.contact = props.contact;
    this.createdDate = props.createdDate;
    this.endDate = props.endDate;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.lastModifiedDate = props.lastModifiedDate;
    this.markdone = props.markdone;
    this.message = props.message;
    this.owner = props.owner;
    this.phone = props.phone;
    this.priority = props.priority;
    this.startDate = props.startDate;
    this.startTime = props.startTime;
    this.status = props.status;
    this.title = props.title;
    this.transaction = props.transaction;
    this.customFieldList = props.customFieldList;
  }
}

export type TransactionSearchRowBasicProps = {
  abbrev?: PlatformCore.SearchColumnStringField[];
  account?: PlatformCore.SearchColumnSelectField[];
  accountType?: PlatformCore.SearchColumnEnumSelectField[];
  acctCorpCardExp?: PlatformCore.SearchColumnSelectField[];
  actualShipDate?: PlatformCore.SearchColumnDateField[];
  altSalesAmount?: PlatformCore.SearchColumnDoubleField[];
  altSalesNetAmount?: PlatformCore.SearchColumnDoubleField[];
  amount?: PlatformCore.SearchColumnDoubleField[];
  amountPaid?: PlatformCore.SearchColumnDoubleField[];
  amountRemaining?: PlatformCore.SearchColumnDoubleField[];
  amountUnbilled?: PlatformCore.SearchColumnDoubleField[];
  appliedToForeignAmount?: PlatformCore.SearchColumnDoubleField[];
  appliedToIsFxVariance?: PlatformCore.SearchColumnBooleanField[];
  appliedToLinkAmount?: PlatformCore.SearchColumnDoubleField[];
  appliedToLinkType?: PlatformCore.SearchColumnStringField[];
  appliedToTransaction?: PlatformCore.SearchColumnSelectField[];
  applyingForeignAmount?: PlatformCore.SearchColumnDoubleField[];
  applyingIsFxVariance?: PlatformCore.SearchColumnBooleanField[];
  applyingLinkAmount?: PlatformCore.SearchColumnDoubleField[];
  applyingLinkType?: PlatformCore.SearchColumnStringField[];
  applyingTransaction?: PlatformCore.SearchColumnSelectField[];
  approvalStatus?: PlatformCore.SearchColumnEnumSelectField[];
  authCode?: PlatformCore.SearchColumnStringField[];
  autoCalculateLag?: PlatformCore.SearchColumnBooleanField[];
  avsStreetMatch?: PlatformCore.SearchColumnEnumSelectField[];
  avsZipMatch?: PlatformCore.SearchColumnEnumSelectField[];
  billable?: PlatformCore.SearchColumnBooleanField[];
  billAddress?: PlatformCore.SearchColumnStringField[];
  billAddress1?: PlatformCore.SearchColumnStringField[];
  billAddress2?: PlatformCore.SearchColumnStringField[];
  billAddress3?: PlatformCore.SearchColumnStringField[];
  billAddressee?: PlatformCore.SearchColumnStringField[];
  billAttention?: PlatformCore.SearchColumnStringField[];
  billCity?: PlatformCore.SearchColumnStringField[];
  billCountry?: PlatformCore.SearchColumnEnumSelectField[];
  billCountryCode?: PlatformCore.SearchColumnStringField[];
  billedDate?: PlatformCore.SearchColumnDateField[];
  billingAccount?: PlatformCore.SearchColumnSelectField[];
  billingAmount?: PlatformCore.SearchColumnDoubleField[];
  billingSchedule?: PlatformCore.SearchColumnSelectField[];
  billingTransaction?: PlatformCore.SearchColumnSelectField[];
  billPhone?: PlatformCore.SearchColumnStringField[];
  billState?: PlatformCore.SearchColumnStringField[];
  billVarianceStatus?: PlatformCore.SearchColumnEnumSelectField[];
  billZip?: PlatformCore.SearchColumnStringField[];
  binNumber?: PlatformCore.SearchColumnStringField[];
  binNumberQuantity?: PlatformCore.SearchColumnDoubleField[];
  bomQuantity?: PlatformCore.SearchColumnDoubleField[];
  buildEntireAssembly?: PlatformCore.SearchColumnBooleanField[];
  buildVariance?: PlatformCore.SearchColumnDoubleField[];
  built?: PlatformCore.SearchColumnDoubleField[];
  canHaveStackablePromotions?: PlatformCore.SearchColumnBooleanField[];
  catchUpPeriod?: PlatformCore.SearchColumnStringField[];
  ccCustomerCode?: PlatformCore.SearchColumnStringField[];
  ccExpDate?: PlatformCore.SearchColumnDateField[];
  ccHolderName?: PlatformCore.SearchColumnStringField[];
  ccNumber?: PlatformCore.SearchColumnStringField[];
  ccStreet?: PlatformCore.SearchColumnStringField[];
  ccZipCode?: PlatformCore.SearchColumnStringField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  cleared?: PlatformCore.SearchColumnBooleanField[];
  closed?: PlatformCore.SearchColumnBooleanField[];
  closeDate?: PlatformCore.SearchColumnDateField[];
  cogsAmount?: PlatformCore.SearchColumnDoubleField[];
  commissionEffectiveDate?: PlatformCore.SearchColumnDateField[];
  commit?: PlatformCore.SearchColumnEnumSelectField[];
  componentYield?: PlatformCore.SearchColumnDoubleField[];
  confirmationNumber?: PlatformCore.SearchColumnStringField[];
  contribution?: PlatformCore.SearchColumnDoubleField[];
  contributionPrimary?: PlatformCore.SearchColumnDoubleField[];
  costComponentAmount?: PlatformCore.SearchColumnDoubleField[];
  costComponentCategory?: PlatformCore.SearchColumnStringField[];
  costComponentItem?: PlatformCore.SearchColumnStringField[];
  costComponentQuantity?: PlatformCore.SearchColumnDoubleField[];
  costComponentStandardCost?: PlatformCore.SearchColumnDoubleField[];
  costEstimate?: PlatformCore.SearchColumnDoubleField[];
  costEstimateRate?: PlatformCore.SearchColumnDoubleField[];
  costEstimateType?: PlatformCore.SearchColumnEnumSelectField[];
  createdBy?: PlatformCore.SearchColumnSelectField[];
  createdFrom?: PlatformCore.SearchColumnSelectField[];
  creditAmount?: PlatformCore.SearchColumnDoubleField[];
  cscMatch?: PlatformCore.SearchColumnEnumSelectField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  customForm?: PlatformCore.SearchColumnSelectField[];
  customGL?: PlatformCore.SearchColumnBooleanField[];
  custType?: PlatformCore.SearchColumnSelectField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  daysOpen?: PlatformCore.SearchColumnLongField[];
  daysOverdue?: PlatformCore.SearchColumnLongField[];
  debitAmount?: PlatformCore.SearchColumnDoubleField[];
  deferredRevenue?: PlatformCore.SearchColumnDoubleField[];
  deferRevRec?: PlatformCore.SearchColumnBooleanField[];
  department?: PlatformCore.SearchColumnSelectField[];
  depositDate?: PlatformCore.SearchColumnDateField[];
  depositTransaction?: PlatformCore.SearchColumnSelectField[];
  discountAmount?: PlatformCore.SearchColumnDoubleField[];
  docUnit?: PlatformCore.SearchColumnStringField[];
  drAccount?: PlatformCore.SearchColumnStringField[];
  dueDate?: PlatformCore.SearchColumnDateField[];
  effectiveRate?: PlatformCore.SearchColumnDoubleField[];
  email?: PlatformCore.SearchColumnStringField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  entity?: PlatformCore.SearchColumnSelectField[];
  entityStatus?: PlatformCore.SearchColumnSelectField[];
  estGrossProfit?: PlatformCore.SearchColumnDoubleField[];
  estGrossProfitPct?: PlatformCore.SearchColumnDoubleField[];
  estGrossProfitPercent?: PlatformCore.SearchColumnDoubleField[];
  exchangeRate?: PlatformCore.SearchColumnDoubleField[];
  excludeCommission?: PlatformCore.SearchColumnBooleanField[];
  excludeFromRateRequest?: PlatformCore.SearchColumnBooleanField[];
  expectedCloseDate?: PlatformCore.SearchColumnDateField[];
  expectedReceiptDate?: PlatformCore.SearchColumnDateField[];
  expenseCategory?: PlatformCore.SearchColumnSelectField[];
  expenseDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  firmed?: PlatformCore.SearchColumnBooleanField[];
  forecastType?: PlatformCore.SearchColumnEnumSelectField[];
  fulfillingTransaction?: PlatformCore.SearchColumnSelectField[];
  fxAccount?: PlatformCore.SearchColumnStringField[];
  fxAmount?: PlatformCore.SearchColumnDoubleField[];
  fxCostEstimate?: PlatformCore.SearchColumnDoubleField[];
  fxCostEstimateRate?: PlatformCore.SearchColumnDoubleField[];
  fxEstGrossProfit?: PlatformCore.SearchColumnDoubleField[];
  fxTranCostEstimate?: PlatformCore.SearchColumnDoubleField[];
  fxVsoeAllocation?: PlatformCore.SearchColumnDoubleField[];
  fxVsoeAmount?: PlatformCore.SearchColumnDoubleField[];
  fxVsoePrice?: PlatformCore.SearchColumnDoubleField[];
  gcoAvailabelToCharge?: PlatformCore.SearchColumnBooleanField[];
  gcoAvailableToRefund?: PlatformCore.SearchColumnBooleanField[];
  gcoAvsStreetMatch?: PlatformCore.SearchColumnEnumSelectField[];
  gcoAvsZipMatch?: PlatformCore.SearchColumnEnumSelectField[];
  gcoBuyerAccountAge?: PlatformCore.SearchColumnLongField[];
  gcoBuyerIp?: PlatformCore.SearchColumnStringField[];
  gcoChargeAmount?: PlatformCore.SearchColumnDoubleField[];
  gcoChargebackAmount?: PlatformCore.SearchColumnDoubleField[];
  gcoConfirmedChargedTotal?: PlatformCore.SearchColumnDoubleField[];
  gcoConfirmedRefundedTotal?: PlatformCore.SearchColumnDoubleField[];
  gcoCreditcardNumber?: PlatformCore.SearchColumnStringField[];
  gcoCscMatch?: PlatformCore.SearchColumnEnumSelectField[];
  gcoFinancialState?: PlatformCore.SearchColumnStringField[];
  gcoFulfillmentState?: PlatformCore.SearchColumnStringField[];
  gcoOrderId?: PlatformCore.SearchColumnStringField[];
  gcoOrderTotal?: PlatformCore.SearchColumnDoubleField[];
  gcoPromotionAmount?: PlatformCore.SearchColumnDoubleField[];
  gcoPromotionName?: PlatformCore.SearchColumnStringField[];
  gcoRefundAmount?: PlatformCore.SearchColumnDoubleField[];
  gcoShippingTotal?: PlatformCore.SearchColumnDoubleField[];
  gcoStateChangedDetail?: PlatformCore.SearchColumnStringField[];
  giftCert?: PlatformCore.SearchColumnStringField[];
  grossAmount?: PlatformCore.SearchColumnDoubleField[];
  includeInForecast?: PlatformCore.SearchColumnBooleanField[];
  incoterm?: PlatformCore.SearchColumnSelectField[];
  intercoStatus?: PlatformCore.SearchColumnEnumSelectField[];
  intercoTransaction?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  inventoryLocation?: PlatformCore.SearchColumnSelectField[];
  inventorySubsidiary?: PlatformCore.SearchColumnSelectField[];
  inVsoeBundle?: PlatformCore.SearchColumnBooleanField[];
  isAllocation?: PlatformCore.SearchColumnBooleanField[];
  isBackflush?: PlatformCore.SearchColumnBooleanField[];
  isGcoChargeback?: PlatformCore.SearchColumnBooleanField[];
  isGcoChargeConfirmed?: PlatformCore.SearchColumnBooleanField[];
  isGcoPaymentGuaranteed?: PlatformCore.SearchColumnBooleanField[];
  isGcoRefundConfirmed?: PlatformCore.SearchColumnBooleanField[];
  isInsideDelivery?: PlatformCore.SearchColumnBooleanField[];
  isInsidePickup?: PlatformCore.SearchColumnBooleanField[];
  isIntercompanyAdjustment?: PlatformCore.SearchColumnBooleanField[];
  isInTransitPayment?: PlatformCore.SearchColumnBooleanField[];
  isMultiShipTo?: PlatformCore.SearchColumnBooleanField[];
  isReversal?: PlatformCore.SearchColumnBooleanField[];
  isRevRecTransaction?: PlatformCore.SearchColumnBooleanField[];
  isScrap?: PlatformCore.SearchColumnBooleanField[];
  isShipAddress?: PlatformCore.SearchColumnBooleanField[];
  isTransferPriceCosting?: PlatformCore.SearchColumnBooleanField[];
  isWip?: PlatformCore.SearchColumnBooleanField[];
  item?: PlatformCore.SearchColumnSelectField[];
  itemFulfillmentChoice?: PlatformCore.SearchColumnEnumSelectField[];
  itemRevision?: PlatformCore.SearchColumnSelectField[];
  landedCostPerLine?: PlatformCore.SearchColumnBooleanField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  leadSource?: PlatformCore.SearchColumnSelectField[];
  line?: PlatformCore.SearchColumnLongField[];
  lineSequenceNumber?: PlatformCore.SearchColumnLongField[];
  lineUniqueKey?: PlatformCore.SearchColumnLongField[];
  location?: PlatformCore.SearchColumnSelectField[];
  locationAutoAssigned?: PlatformCore.SearchColumnBooleanField[];
  mainLine?: PlatformCore.SearchColumnBooleanField[];
  mainName?: PlatformCore.SearchColumnStringField[];
  manufacturingRouting?: PlatformCore.SearchColumnSelectField[];
  matchBillToReceipt?: PlatformCore.SearchColumnBooleanField[];
  memo?: PlatformCore.SearchColumnStringField[];
  memoMain?: PlatformCore.SearchColumnStringField[];
  memorized?: PlatformCore.SearchColumnBooleanField[];
  merchantAccount?: PlatformCore.SearchColumnSelectField[];
  message?: PlatformCore.SearchColumnStringField[];
  multiSubsidiary?: PlatformCore.SearchColumnBooleanField[];
  netAmount?: PlatformCore.SearchColumnDoubleField[];
  netAmountNoTax?: PlatformCore.SearchColumnDoubleField[];
  nextApprover?: PlatformCore.SearchColumnSelectField[];
  nextBillDate?: PlatformCore.SearchColumnDateField[];
  nexus?: PlatformCore.SearchColumnSelectField[];
  noAutoAssignLocation?: PlatformCore.SearchColumnBooleanField[];
  nonReimbursable?: PlatformCore.SearchColumnBooleanField[];
  oneTimeTotal?: PlatformCore.SearchColumnDoubleField[];
  opportunity?: PlatformCore.SearchColumnSelectField[];
  options?: PlatformCore.SearchColumnStringField[];
  orderPriority?: PlatformCore.SearchColumnDoubleField[];
  originator?: PlatformCore.SearchColumnEnumSelectField[];
  otherRefNum?: PlatformCore.SearchColumnTextNumberField[];
  overheadParentItem?: PlatformCore.SearchColumnSelectField[];
  overrideInstallments?: PlatformCore.SearchColumnBooleanField[];
  packageCount?: PlatformCore.SearchColumnLongField[];
  paidAmount?: PlatformCore.SearchColumnDoubleField[];
  paidTransaction?: PlatformCore.SearchColumnSelectField[];
  partner?: PlatformCore.SearchColumnSelectField[];
  partnerContribution?: PlatformCore.SearchColumnDoubleField[];
  partnerRole?: PlatformCore.SearchColumnSelectField[];
  partnerTeamMember?: PlatformCore.SearchColumnSelectField[];
  payingAmount?: PlatformCore.SearchColumnDoubleField[];
  payingTransaction?: PlatformCore.SearchColumnSelectField[];
  paymentApproved?: PlatformCore.SearchColumnBooleanField[];
  paymentEventDate?: PlatformCore.SearchColumnDateField[];
  paymentEventHoldReason?: PlatformCore.SearchColumnEnumSelectField[];
  paymentEventPurchaseCardUsed?: PlatformCore.SearchColumnBooleanField[];
  paymentEventPurchaseDataSent?: PlatformCore.SearchColumnBooleanField[];
  paymentEventResult?: PlatformCore.SearchColumnEnumSelectField[];
  paymentEventType?: PlatformCore.SearchColumnEnumSelectField[];
  paymentHold?: PlatformCore.SearchColumnBooleanField[];
  paymentMethod?: PlatformCore.SearchColumnSelectField[];
  paymentOption?: PlatformCore.SearchColumnSelectField[];
  payPalPending?: PlatformCore.SearchColumnBooleanField[];
  payPalStatus?: PlatformCore.SearchColumnStringField[];
  payPalTranId?: PlatformCore.SearchColumnStringField[];
  payrollBatch?: PlatformCore.SearchColumnStringField[];
  pnRefNum?: PlatformCore.SearchColumnStringField[];
  poRate?: PlatformCore.SearchColumnDoubleField[];
  posting?: PlatformCore.SearchColumnBooleanField[];
  postingPeriod?: PlatformCore.SearchColumnSelectField[];
  priceLevel?: PlatformCore.SearchColumnSelectField[];
  print?: PlatformCore.SearchColumnStringField[];
  probability?: PlatformCore.SearchColumnDoubleField[];
  projectedAmount?: PlatformCore.SearchColumnDoubleField[];
  projectTask?: PlatformCore.SearchColumnSelectField[];
  promoCode?: PlatformCore.SearchColumnSelectField[];
  purchaseOrder?: PlatformCore.SearchColumnSelectField[];
  quantity?: PlatformCore.SearchColumnDoubleField[];
  quantityBilled?: PlatformCore.SearchColumnDoubleField[];
  quantityCommitted?: PlatformCore.SearchColumnDoubleField[];
  quantityPacked?: PlatformCore.SearchColumnDoubleField[];
  quantityPicked?: PlatformCore.SearchColumnDoubleField[];
  quantityRevCommitted?: PlatformCore.SearchColumnDoubleField[];
  quantityShipRecv?: PlatformCore.SearchColumnDoubleField[];
  quantityUom?: PlatformCore.SearchColumnDoubleField[];
  rate?: PlatformCore.SearchColumnDoubleField[];
  realizedGainPostingTransaction?: PlatformCore.SearchColumnStringField[];
  recognizedRevenue?: PlatformCore.SearchColumnDoubleField[];
  recordType?: PlatformCore.SearchColumnStringField[];
  recurAnnuallyTotal?: PlatformCore.SearchColumnDoubleField[];
  recurMonthlyTotal?: PlatformCore.SearchColumnDoubleField[];
  recurQuarterlyTotal?: PlatformCore.SearchColumnDoubleField[];
  recurringBill?: PlatformCore.SearchColumnBooleanField[];
  recurWeeklyTotal?: PlatformCore.SearchColumnDoubleField[];
  refNumber?: PlatformCore.SearchColumnLongField[];
  revCommitStatus?: PlatformCore.SearchColumnEnumSelectField[];
  revCommittingTransaction?: PlatformCore.SearchColumnSelectField[];
  revenueStatus?: PlatformCore.SearchColumnEnumSelectField[];
  reversalDate?: PlatformCore.SearchColumnDateField[];
  reversalNumber?: PlatformCore.SearchColumnStringField[];
  revRecEndDate?: PlatformCore.SearchColumnDateField[];
  revRecOnRevCommitment?: PlatformCore.SearchColumnBooleanField[];
  revRecStartDate?: PlatformCore.SearchColumnDateField[];
  rgAccount?: PlatformCore.SearchColumnSelectField[];
  rgAmount?: PlatformCore.SearchColumnDoubleField[];
  salesEffectiveDate?: PlatformCore.SearchColumnDateField[];
  salesOrder?: PlatformCore.SearchColumnSelectField[];
  salesRep?: PlatformCore.SearchColumnSelectField[];
  salesTeamMember?: PlatformCore.SearchColumnSelectField[];
  salesTeamRole?: PlatformCore.SearchColumnSelectField[];
  schedulingMethod?: PlatformCore.SearchColumnEnumSelectField[];
  serialNumber?: PlatformCore.SearchColumnStringField[];
  serialNumberCost?: PlatformCore.SearchColumnDoubleField[];
  serialNumberCostAdjustment?: PlatformCore.SearchColumnDoubleField[];
  serialNumberQuantity?: PlatformCore.SearchColumnDoubleField[];
  serialNumbers?: PlatformCore.SearchColumnStringField[];
  shipAddress?: PlatformCore.SearchColumnStringField[];
  shipAddress1?: PlatformCore.SearchColumnStringField[];
  shipAddress2?: PlatformCore.SearchColumnStringField[];
  shipAddress3?: PlatformCore.SearchColumnStringField[];
  shipAddressee?: PlatformCore.SearchColumnStringField[];
  shipAttention?: PlatformCore.SearchColumnStringField[];
  shipCarrier?: PlatformCore.SearchColumnEnumSelectField[];
  shipCity?: PlatformCore.SearchColumnStringField[];
  shipComplete?: PlatformCore.SearchColumnBooleanField[];
  shipCountry?: PlatformCore.SearchColumnEnumSelectField[];
  shipCountryCode?: PlatformCore.SearchColumnStringField[];
  shipDate?: PlatformCore.SearchColumnDateField[];
  shipGroup?: PlatformCore.SearchColumnLongField[];
  shipMethod?: PlatformCore.SearchColumnSelectField[];
  shipPhone?: PlatformCore.SearchColumnStringField[];
  shippingAmount?: PlatformCore.SearchColumnDoubleField[];
  shipRecvStatusLine?: PlatformCore.SearchColumnBooleanField[];
  shipState?: PlatformCore.SearchColumnStringField[];
  shipTo?: PlatformCore.SearchColumnSelectField[];
  shipZip?: PlatformCore.SearchColumnStringField[];
  signedAmount?: PlatformCore.SearchColumnDoubleField[];
  source?: PlatformCore.SearchColumnStringField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  status?: PlatformCore.SearchColumnEnumSelectField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionLine?: PlatformCore.SearchColumnSelectField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  subsidiaryTaxRegNum?: PlatformCore.SearchColumnStringField[];
  taxAmount?: PlatformCore.SearchColumnDoubleField[];
  taxCode?: PlatformCore.SearchColumnSelectField[];
  taxLine?: PlatformCore.SearchColumnBooleanField[];
  taxPeriod?: PlatformCore.SearchColumnSelectField[];
  taxPointDate?: PlatformCore.SearchColumnDateField[];
  taxTotal?: PlatformCore.SearchColumnDoubleField[];
  termInMonths?: PlatformCore.SearchColumnLongField[];
  terms?: PlatformCore.SearchColumnSelectField[];
  termsOfSale?: PlatformCore.SearchColumnStringField[];
  title?: PlatformCore.SearchColumnStringField[];
  toBeEmailed?: PlatformCore.SearchColumnBooleanField[];
  toBePrinted?: PlatformCore.SearchColumnBooleanField[];
  toSubsidiary?: PlatformCore.SearchColumnSelectField[];
  total?: PlatformCore.SearchColumnDoubleField[];
  totalCostEstimate?: PlatformCore.SearchColumnDoubleField[];
  trackingNumbers?: PlatformCore.SearchColumnStringField[];
  tranDate?: PlatformCore.SearchColumnDateField[];
  tranEstGrossProfit?: PlatformCore.SearchColumnDoubleField[];
  tranFxEstGrossProfit?: PlatformCore.SearchColumnDoubleField[];
  tranId?: PlatformCore.SearchColumnStringField[];
  tranIsVsoeBundle?: PlatformCore.SearchColumnBooleanField[];
  transactionDiscount?: PlatformCore.SearchColumnBooleanField[];
  transactionLineType?: PlatformCore.SearchColumnEnumSelectField[];
  transactionNumber?: PlatformCore.SearchColumnStringField[];
  transferLocation?: PlatformCore.SearchColumnSelectField[];
  transferOrderItemLine?: PlatformCore.SearchColumnStringField[];
  transferOrderQuantityCommitted?: PlatformCore.SearchColumnDoubleField[];
  transferOrderQuantityPacked?: PlatformCore.SearchColumnDoubleField[];
  transferOrderQuantityPicked?: PlatformCore.SearchColumnDoubleField[];
  transferOrderQuantityReceived?: PlatformCore.SearchColumnDoubleField[];
  transferOrderQuantityShipped?: PlatformCore.SearchColumnDoubleField[];
  type?: PlatformCore.SearchColumnEnumSelectField[];
  unit?: PlatformCore.SearchColumnStringField[];
  unitCostOverride?: PlatformCore.SearchColumnDoubleField[];
  vendType?: PlatformCore.SearchColumnSelectField[];
  visibleToCustomer?: PlatformCore.SearchColumnBooleanField[];
  vsoeAllocation?: PlatformCore.SearchColumnDoubleField[];
  vsoeAmount?: PlatformCore.SearchColumnDoubleField[];
  vsoeDeferral?: PlatformCore.SearchColumnEnumSelectField[];
  vsoeDelivered?: PlatformCore.SearchColumnBooleanField[];
  vsoePermitDiscount?: PlatformCore.SearchColumnEnumSelectField[];
  vsoePrice?: PlatformCore.SearchColumnDoubleField[];
  webSite?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class TransactionSearchRowBasic extends PlatformCore.SearchRowBasic {
  abbrev?: PlatformCore.SearchColumnStringField[];
  account?: PlatformCore.SearchColumnSelectField[];
  accountType?: PlatformCore.SearchColumnEnumSelectField[];
  acctCorpCardExp?: PlatformCore.SearchColumnSelectField[];
  actualShipDate?: PlatformCore.SearchColumnDateField[];
  altSalesAmount?: PlatformCore.SearchColumnDoubleField[];
  altSalesNetAmount?: PlatformCore.SearchColumnDoubleField[];
  amount?: PlatformCore.SearchColumnDoubleField[];
  amountPaid?: PlatformCore.SearchColumnDoubleField[];
  amountRemaining?: PlatformCore.SearchColumnDoubleField[];
  amountUnbilled?: PlatformCore.SearchColumnDoubleField[];
  appliedToForeignAmount?: PlatformCore.SearchColumnDoubleField[];
  appliedToIsFxVariance?: PlatformCore.SearchColumnBooleanField[];
  appliedToLinkAmount?: PlatformCore.SearchColumnDoubleField[];
  appliedToLinkType?: PlatformCore.SearchColumnStringField[];
  appliedToTransaction?: PlatformCore.SearchColumnSelectField[];
  applyingForeignAmount?: PlatformCore.SearchColumnDoubleField[];
  applyingIsFxVariance?: PlatformCore.SearchColumnBooleanField[];
  applyingLinkAmount?: PlatformCore.SearchColumnDoubleField[];
  applyingLinkType?: PlatformCore.SearchColumnStringField[];
  applyingTransaction?: PlatformCore.SearchColumnSelectField[];
  approvalStatus?: PlatformCore.SearchColumnEnumSelectField[];
  authCode?: PlatformCore.SearchColumnStringField[];
  autoCalculateLag?: PlatformCore.SearchColumnBooleanField[];
  avsStreetMatch?: PlatformCore.SearchColumnEnumSelectField[];
  avsZipMatch?: PlatformCore.SearchColumnEnumSelectField[];
  billable?: PlatformCore.SearchColumnBooleanField[];
  billAddress?: PlatformCore.SearchColumnStringField[];
  billAddress1?: PlatformCore.SearchColumnStringField[];
  billAddress2?: PlatformCore.SearchColumnStringField[];
  billAddress3?: PlatformCore.SearchColumnStringField[];
  billAddressee?: PlatformCore.SearchColumnStringField[];
  billAttention?: PlatformCore.SearchColumnStringField[];
  billCity?: PlatformCore.SearchColumnStringField[];
  billCountry?: PlatformCore.SearchColumnEnumSelectField[];
  billCountryCode?: PlatformCore.SearchColumnStringField[];
  billedDate?: PlatformCore.SearchColumnDateField[];
  billingAccount?: PlatformCore.SearchColumnSelectField[];
  billingAmount?: PlatformCore.SearchColumnDoubleField[];
  billingSchedule?: PlatformCore.SearchColumnSelectField[];
  billingTransaction?: PlatformCore.SearchColumnSelectField[];
  billPhone?: PlatformCore.SearchColumnStringField[];
  billState?: PlatformCore.SearchColumnStringField[];
  billVarianceStatus?: PlatformCore.SearchColumnEnumSelectField[];
  billZip?: PlatformCore.SearchColumnStringField[];
  binNumber?: PlatformCore.SearchColumnStringField[];
  binNumberQuantity?: PlatformCore.SearchColumnDoubleField[];
  bomQuantity?: PlatformCore.SearchColumnDoubleField[];
  buildEntireAssembly?: PlatformCore.SearchColumnBooleanField[];
  buildVariance?: PlatformCore.SearchColumnDoubleField[];
  built?: PlatformCore.SearchColumnDoubleField[];
  canHaveStackablePromotions?: PlatformCore.SearchColumnBooleanField[];
  catchUpPeriod?: PlatformCore.SearchColumnStringField[];
  ccCustomerCode?: PlatformCore.SearchColumnStringField[];
  ccExpDate?: PlatformCore.SearchColumnDateField[];
  ccHolderName?: PlatformCore.SearchColumnStringField[];
  ccNumber?: PlatformCore.SearchColumnStringField[];
  ccStreet?: PlatformCore.SearchColumnStringField[];
  ccZipCode?: PlatformCore.SearchColumnStringField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  cleared?: PlatformCore.SearchColumnBooleanField[];
  closed?: PlatformCore.SearchColumnBooleanField[];
  closeDate?: PlatformCore.SearchColumnDateField[];
  cogsAmount?: PlatformCore.SearchColumnDoubleField[];
  commissionEffectiveDate?: PlatformCore.SearchColumnDateField[];
  commit?: PlatformCore.SearchColumnEnumSelectField[];
  componentYield?: PlatformCore.SearchColumnDoubleField[];
  confirmationNumber?: PlatformCore.SearchColumnStringField[];
  contribution?: PlatformCore.SearchColumnDoubleField[];
  contributionPrimary?: PlatformCore.SearchColumnDoubleField[];
  costComponentAmount?: PlatformCore.SearchColumnDoubleField[];
  costComponentCategory?: PlatformCore.SearchColumnStringField[];
  costComponentItem?: PlatformCore.SearchColumnStringField[];
  costComponentQuantity?: PlatformCore.SearchColumnDoubleField[];
  costComponentStandardCost?: PlatformCore.SearchColumnDoubleField[];
  costEstimate?: PlatformCore.SearchColumnDoubleField[];
  costEstimateRate?: PlatformCore.SearchColumnDoubleField[];
  costEstimateType?: PlatformCore.SearchColumnEnumSelectField[];
  createdBy?: PlatformCore.SearchColumnSelectField[];
  createdFrom?: PlatformCore.SearchColumnSelectField[];
  creditAmount?: PlatformCore.SearchColumnDoubleField[];
  cscMatch?: PlatformCore.SearchColumnEnumSelectField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  customForm?: PlatformCore.SearchColumnSelectField[];
  customGL?: PlatformCore.SearchColumnBooleanField[];
  custType?: PlatformCore.SearchColumnSelectField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  daysOpen?: PlatformCore.SearchColumnLongField[];
  daysOverdue?: PlatformCore.SearchColumnLongField[];
  debitAmount?: PlatformCore.SearchColumnDoubleField[];
  deferredRevenue?: PlatformCore.SearchColumnDoubleField[];
  deferRevRec?: PlatformCore.SearchColumnBooleanField[];
  department?: PlatformCore.SearchColumnSelectField[];
  depositDate?: PlatformCore.SearchColumnDateField[];
  depositTransaction?: PlatformCore.SearchColumnSelectField[];
  discountAmount?: PlatformCore.SearchColumnDoubleField[];
  docUnit?: PlatformCore.SearchColumnStringField[];
  drAccount?: PlatformCore.SearchColumnStringField[];
  dueDate?: PlatformCore.SearchColumnDateField[];
  effectiveRate?: PlatformCore.SearchColumnDoubleField[];
  email?: PlatformCore.SearchColumnStringField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  entity?: PlatformCore.SearchColumnSelectField[];
  entityStatus?: PlatformCore.SearchColumnSelectField[];
  estGrossProfit?: PlatformCore.SearchColumnDoubleField[];
  estGrossProfitPct?: PlatformCore.SearchColumnDoubleField[];
  estGrossProfitPercent?: PlatformCore.SearchColumnDoubleField[];
  exchangeRate?: PlatformCore.SearchColumnDoubleField[];
  excludeCommission?: PlatformCore.SearchColumnBooleanField[];
  excludeFromRateRequest?: PlatformCore.SearchColumnBooleanField[];
  expectedCloseDate?: PlatformCore.SearchColumnDateField[];
  expectedReceiptDate?: PlatformCore.SearchColumnDateField[];
  expenseCategory?: PlatformCore.SearchColumnSelectField[];
  expenseDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  firmed?: PlatformCore.SearchColumnBooleanField[];
  forecastType?: PlatformCore.SearchColumnEnumSelectField[];
  fulfillingTransaction?: PlatformCore.SearchColumnSelectField[];
  fxAccount?: PlatformCore.SearchColumnStringField[];
  fxAmount?: PlatformCore.SearchColumnDoubleField[];
  fxCostEstimate?: PlatformCore.SearchColumnDoubleField[];
  fxCostEstimateRate?: PlatformCore.SearchColumnDoubleField[];
  fxEstGrossProfit?: PlatformCore.SearchColumnDoubleField[];
  fxTranCostEstimate?: PlatformCore.SearchColumnDoubleField[];
  fxVsoeAllocation?: PlatformCore.SearchColumnDoubleField[];
  fxVsoeAmount?: PlatformCore.SearchColumnDoubleField[];
  fxVsoePrice?: PlatformCore.SearchColumnDoubleField[];
  gcoAvailabelToCharge?: PlatformCore.SearchColumnBooleanField[];
  gcoAvailableToRefund?: PlatformCore.SearchColumnBooleanField[];
  gcoAvsStreetMatch?: PlatformCore.SearchColumnEnumSelectField[];
  gcoAvsZipMatch?: PlatformCore.SearchColumnEnumSelectField[];
  gcoBuyerAccountAge?: PlatformCore.SearchColumnLongField[];
  gcoBuyerIp?: PlatformCore.SearchColumnStringField[];
  gcoChargeAmount?: PlatformCore.SearchColumnDoubleField[];
  gcoChargebackAmount?: PlatformCore.SearchColumnDoubleField[];
  gcoConfirmedChargedTotal?: PlatformCore.SearchColumnDoubleField[];
  gcoConfirmedRefundedTotal?: PlatformCore.SearchColumnDoubleField[];
  gcoCreditcardNumber?: PlatformCore.SearchColumnStringField[];
  gcoCscMatch?: PlatformCore.SearchColumnEnumSelectField[];
  gcoFinancialState?: PlatformCore.SearchColumnStringField[];
  gcoFulfillmentState?: PlatformCore.SearchColumnStringField[];
  gcoOrderId?: PlatformCore.SearchColumnStringField[];
  gcoOrderTotal?: PlatformCore.SearchColumnDoubleField[];
  gcoPromotionAmount?: PlatformCore.SearchColumnDoubleField[];
  gcoPromotionName?: PlatformCore.SearchColumnStringField[];
  gcoRefundAmount?: PlatformCore.SearchColumnDoubleField[];
  gcoShippingTotal?: PlatformCore.SearchColumnDoubleField[];
  gcoStateChangedDetail?: PlatformCore.SearchColumnStringField[];
  giftCert?: PlatformCore.SearchColumnStringField[];
  grossAmount?: PlatformCore.SearchColumnDoubleField[];
  includeInForecast?: PlatformCore.SearchColumnBooleanField[];
  incoterm?: PlatformCore.SearchColumnSelectField[];
  intercoStatus?: PlatformCore.SearchColumnEnumSelectField[];
  intercoTransaction?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  inventoryLocation?: PlatformCore.SearchColumnSelectField[];
  inventorySubsidiary?: PlatformCore.SearchColumnSelectField[];
  inVsoeBundle?: PlatformCore.SearchColumnBooleanField[];
  isAllocation?: PlatformCore.SearchColumnBooleanField[];
  isBackflush?: PlatformCore.SearchColumnBooleanField[];
  isGcoChargeback?: PlatformCore.SearchColumnBooleanField[];
  isGcoChargeConfirmed?: PlatformCore.SearchColumnBooleanField[];
  isGcoPaymentGuaranteed?: PlatformCore.SearchColumnBooleanField[];
  isGcoRefundConfirmed?: PlatformCore.SearchColumnBooleanField[];
  isInsideDelivery?: PlatformCore.SearchColumnBooleanField[];
  isInsidePickup?: PlatformCore.SearchColumnBooleanField[];
  isIntercompanyAdjustment?: PlatformCore.SearchColumnBooleanField[];
  isInTransitPayment?: PlatformCore.SearchColumnBooleanField[];
  isMultiShipTo?: PlatformCore.SearchColumnBooleanField[];
  isReversal?: PlatformCore.SearchColumnBooleanField[];
  isRevRecTransaction?: PlatformCore.SearchColumnBooleanField[];
  isScrap?: PlatformCore.SearchColumnBooleanField[];
  isShipAddress?: PlatformCore.SearchColumnBooleanField[];
  isTransferPriceCosting?: PlatformCore.SearchColumnBooleanField[];
  isWip?: PlatformCore.SearchColumnBooleanField[];
  item?: PlatformCore.SearchColumnSelectField[];
  itemFulfillmentChoice?: PlatformCore.SearchColumnEnumSelectField[];
  itemRevision?: PlatformCore.SearchColumnSelectField[];
  landedCostPerLine?: PlatformCore.SearchColumnBooleanField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  leadSource?: PlatformCore.SearchColumnSelectField[];
  line?: PlatformCore.SearchColumnLongField[];
  lineSequenceNumber?: PlatformCore.SearchColumnLongField[];
  lineUniqueKey?: PlatformCore.SearchColumnLongField[];
  location?: PlatformCore.SearchColumnSelectField[];
  locationAutoAssigned?: PlatformCore.SearchColumnBooleanField[];
  mainLine?: PlatformCore.SearchColumnBooleanField[];
  mainName?: PlatformCore.SearchColumnStringField[];
  manufacturingRouting?: PlatformCore.SearchColumnSelectField[];
  matchBillToReceipt?: PlatformCore.SearchColumnBooleanField[];
  memo?: PlatformCore.SearchColumnStringField[];
  memoMain?: PlatformCore.SearchColumnStringField[];
  memorized?: PlatformCore.SearchColumnBooleanField[];
  merchantAccount?: PlatformCore.SearchColumnSelectField[];
  message?: PlatformCore.SearchColumnStringField[];
  multiSubsidiary?: PlatformCore.SearchColumnBooleanField[];
  netAmount?: PlatformCore.SearchColumnDoubleField[];
  netAmountNoTax?: PlatformCore.SearchColumnDoubleField[];
  nextApprover?: PlatformCore.SearchColumnSelectField[];
  nextBillDate?: PlatformCore.SearchColumnDateField[];
  nexus?: PlatformCore.SearchColumnSelectField[];
  noAutoAssignLocation?: PlatformCore.SearchColumnBooleanField[];
  nonReimbursable?: PlatformCore.SearchColumnBooleanField[];
  oneTimeTotal?: PlatformCore.SearchColumnDoubleField[];
  opportunity?: PlatformCore.SearchColumnSelectField[];
  options?: PlatformCore.SearchColumnStringField[];
  orderPriority?: PlatformCore.SearchColumnDoubleField[];
  originator?: PlatformCore.SearchColumnEnumSelectField[];
  otherRefNum?: PlatformCore.SearchColumnTextNumberField[];
  overheadParentItem?: PlatformCore.SearchColumnSelectField[];
  overrideInstallments?: PlatformCore.SearchColumnBooleanField[];
  packageCount?: PlatformCore.SearchColumnLongField[];
  paidAmount?: PlatformCore.SearchColumnDoubleField[];
  paidTransaction?: PlatformCore.SearchColumnSelectField[];
  partner?: PlatformCore.SearchColumnSelectField[];
  partnerContribution?: PlatformCore.SearchColumnDoubleField[];
  partnerRole?: PlatformCore.SearchColumnSelectField[];
  partnerTeamMember?: PlatformCore.SearchColumnSelectField[];
  payingAmount?: PlatformCore.SearchColumnDoubleField[];
  payingTransaction?: PlatformCore.SearchColumnSelectField[];
  paymentApproved?: PlatformCore.SearchColumnBooleanField[];
  paymentEventDate?: PlatformCore.SearchColumnDateField[];
  paymentEventHoldReason?: PlatformCore.SearchColumnEnumSelectField[];
  paymentEventPurchaseCardUsed?: PlatformCore.SearchColumnBooleanField[];
  paymentEventPurchaseDataSent?: PlatformCore.SearchColumnBooleanField[];
  paymentEventResult?: PlatformCore.SearchColumnEnumSelectField[];
  paymentEventType?: PlatformCore.SearchColumnEnumSelectField[];
  paymentHold?: PlatformCore.SearchColumnBooleanField[];
  paymentMethod?: PlatformCore.SearchColumnSelectField[];
  paymentOption?: PlatformCore.SearchColumnSelectField[];
  payPalPending?: PlatformCore.SearchColumnBooleanField[];
  payPalStatus?: PlatformCore.SearchColumnStringField[];
  payPalTranId?: PlatformCore.SearchColumnStringField[];
  payrollBatch?: PlatformCore.SearchColumnStringField[];
  pnRefNum?: PlatformCore.SearchColumnStringField[];
  poRate?: PlatformCore.SearchColumnDoubleField[];
  posting?: PlatformCore.SearchColumnBooleanField[];
  postingPeriod?: PlatformCore.SearchColumnSelectField[];
  priceLevel?: PlatformCore.SearchColumnSelectField[];
  print?: PlatformCore.SearchColumnStringField[];
  probability?: PlatformCore.SearchColumnDoubleField[];
  projectedAmount?: PlatformCore.SearchColumnDoubleField[];
  projectTask?: PlatformCore.SearchColumnSelectField[];
  promoCode?: PlatformCore.SearchColumnSelectField[];
  purchaseOrder?: PlatformCore.SearchColumnSelectField[];
  quantity?: PlatformCore.SearchColumnDoubleField[];
  quantityBilled?: PlatformCore.SearchColumnDoubleField[];
  quantityCommitted?: PlatformCore.SearchColumnDoubleField[];
  quantityPacked?: PlatformCore.SearchColumnDoubleField[];
  quantityPicked?: PlatformCore.SearchColumnDoubleField[];
  quantityRevCommitted?: PlatformCore.SearchColumnDoubleField[];
  quantityShipRecv?: PlatformCore.SearchColumnDoubleField[];
  quantityUom?: PlatformCore.SearchColumnDoubleField[];
  rate?: PlatformCore.SearchColumnDoubleField[];
  realizedGainPostingTransaction?: PlatformCore.SearchColumnStringField[];
  recognizedRevenue?: PlatformCore.SearchColumnDoubleField[];
  recordType?: PlatformCore.SearchColumnStringField[];
  recurAnnuallyTotal?: PlatformCore.SearchColumnDoubleField[];
  recurMonthlyTotal?: PlatformCore.SearchColumnDoubleField[];
  recurQuarterlyTotal?: PlatformCore.SearchColumnDoubleField[];
  recurringBill?: PlatformCore.SearchColumnBooleanField[];
  recurWeeklyTotal?: PlatformCore.SearchColumnDoubleField[];
  refNumber?: PlatformCore.SearchColumnLongField[];
  revCommitStatus?: PlatformCore.SearchColumnEnumSelectField[];
  revCommittingTransaction?: PlatformCore.SearchColumnSelectField[];
  revenueStatus?: PlatformCore.SearchColumnEnumSelectField[];
  reversalDate?: PlatformCore.SearchColumnDateField[];
  reversalNumber?: PlatformCore.SearchColumnStringField[];
  revRecEndDate?: PlatformCore.SearchColumnDateField[];
  revRecOnRevCommitment?: PlatformCore.SearchColumnBooleanField[];
  revRecStartDate?: PlatformCore.SearchColumnDateField[];
  rgAccount?: PlatformCore.SearchColumnSelectField[];
  rgAmount?: PlatformCore.SearchColumnDoubleField[];
  salesEffectiveDate?: PlatformCore.SearchColumnDateField[];
  salesOrder?: PlatformCore.SearchColumnSelectField[];
  salesRep?: PlatformCore.SearchColumnSelectField[];
  salesTeamMember?: PlatformCore.SearchColumnSelectField[];
  salesTeamRole?: PlatformCore.SearchColumnSelectField[];
  schedulingMethod?: PlatformCore.SearchColumnEnumSelectField[];
  serialNumber?: PlatformCore.SearchColumnStringField[];
  serialNumberCost?: PlatformCore.SearchColumnDoubleField[];
  serialNumberCostAdjustment?: PlatformCore.SearchColumnDoubleField[];
  serialNumberQuantity?: PlatformCore.SearchColumnDoubleField[];
  serialNumbers?: PlatformCore.SearchColumnStringField[];
  shipAddress?: PlatformCore.SearchColumnStringField[];
  shipAddress1?: PlatformCore.SearchColumnStringField[];
  shipAddress2?: PlatformCore.SearchColumnStringField[];
  shipAddress3?: PlatformCore.SearchColumnStringField[];
  shipAddressee?: PlatformCore.SearchColumnStringField[];
  shipAttention?: PlatformCore.SearchColumnStringField[];
  shipCarrier?: PlatformCore.SearchColumnEnumSelectField[];
  shipCity?: PlatformCore.SearchColumnStringField[];
  shipComplete?: PlatformCore.SearchColumnBooleanField[];
  shipCountry?: PlatformCore.SearchColumnEnumSelectField[];
  shipCountryCode?: PlatformCore.SearchColumnStringField[];
  shipDate?: PlatformCore.SearchColumnDateField[];
  shipGroup?: PlatformCore.SearchColumnLongField[];
  shipMethod?: PlatformCore.SearchColumnSelectField[];
  shipPhone?: PlatformCore.SearchColumnStringField[];
  shippingAmount?: PlatformCore.SearchColumnDoubleField[];
  shipRecvStatusLine?: PlatformCore.SearchColumnBooleanField[];
  shipState?: PlatformCore.SearchColumnStringField[];
  shipTo?: PlatformCore.SearchColumnSelectField[];
  shipZip?: PlatformCore.SearchColumnStringField[];
  signedAmount?: PlatformCore.SearchColumnDoubleField[];
  source?: PlatformCore.SearchColumnStringField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  status?: PlatformCore.SearchColumnEnumSelectField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionLine?: PlatformCore.SearchColumnSelectField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  subsidiaryTaxRegNum?: PlatformCore.SearchColumnStringField[];
  taxAmount?: PlatformCore.SearchColumnDoubleField[];
  taxCode?: PlatformCore.SearchColumnSelectField[];
  taxLine?: PlatformCore.SearchColumnBooleanField[];
  taxPeriod?: PlatformCore.SearchColumnSelectField[];
  taxPointDate?: PlatformCore.SearchColumnDateField[];
  taxTotal?: PlatformCore.SearchColumnDoubleField[];
  termInMonths?: PlatformCore.SearchColumnLongField[];
  terms?: PlatformCore.SearchColumnSelectField[];
  termsOfSale?: PlatformCore.SearchColumnStringField[];
  title?: PlatformCore.SearchColumnStringField[];
  toBeEmailed?: PlatformCore.SearchColumnBooleanField[];
  toBePrinted?: PlatformCore.SearchColumnBooleanField[];
  toSubsidiary?: PlatformCore.SearchColumnSelectField[];
  total?: PlatformCore.SearchColumnDoubleField[];
  totalCostEstimate?: PlatformCore.SearchColumnDoubleField[];
  trackingNumbers?: PlatformCore.SearchColumnStringField[];
  tranDate?: PlatformCore.SearchColumnDateField[];
  tranEstGrossProfit?: PlatformCore.SearchColumnDoubleField[];
  tranFxEstGrossProfit?: PlatformCore.SearchColumnDoubleField[];
  tranId?: PlatformCore.SearchColumnStringField[];
  tranIsVsoeBundle?: PlatformCore.SearchColumnBooleanField[];
  transactionDiscount?: PlatformCore.SearchColumnBooleanField[];
  transactionLineType?: PlatformCore.SearchColumnEnumSelectField[];
  transactionNumber?: PlatformCore.SearchColumnStringField[];
  transferLocation?: PlatformCore.SearchColumnSelectField[];
  transferOrderItemLine?: PlatformCore.SearchColumnStringField[];
  transferOrderQuantityCommitted?: PlatformCore.SearchColumnDoubleField[];
  transferOrderQuantityPacked?: PlatformCore.SearchColumnDoubleField[];
  transferOrderQuantityPicked?: PlatformCore.SearchColumnDoubleField[];
  transferOrderQuantityReceived?: PlatformCore.SearchColumnDoubleField[];
  transferOrderQuantityShipped?: PlatformCore.SearchColumnDoubleField[];
  type?: PlatformCore.SearchColumnEnumSelectField[];
  unit?: PlatformCore.SearchColumnStringField[];
  unitCostOverride?: PlatformCore.SearchColumnDoubleField[];
  vendType?: PlatformCore.SearchColumnSelectField[];
  visibleToCustomer?: PlatformCore.SearchColumnBooleanField[];
  vsoeAllocation?: PlatformCore.SearchColumnDoubleField[];
  vsoeAmount?: PlatformCore.SearchColumnDoubleField[];
  vsoeDeferral?: PlatformCore.SearchColumnEnumSelectField[];
  vsoeDelivered?: PlatformCore.SearchColumnBooleanField[];
  vsoePermitDiscount?: PlatformCore.SearchColumnEnumSelectField[];
  vsoePrice?: PlatformCore.SearchColumnDoubleField[];
  webSite?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: TransactionSearchRowBasicProps) {
    super();
    this.abbrev = props.abbrev;
    this.account = props.account;
    this.accountType = props.accountType;
    this.acctCorpCardExp = props.acctCorpCardExp;
    this.actualShipDate = props.actualShipDate;
    this.altSalesAmount = props.altSalesAmount;
    this.altSalesNetAmount = props.altSalesNetAmount;
    this.amount = props.amount;
    this.amountPaid = props.amountPaid;
    this.amountRemaining = props.amountRemaining;
    this.amountUnbilled = props.amountUnbilled;
    this.appliedToForeignAmount = props.appliedToForeignAmount;
    this.appliedToIsFxVariance = props.appliedToIsFxVariance;
    this.appliedToLinkAmount = props.appliedToLinkAmount;
    this.appliedToLinkType = props.appliedToLinkType;
    this.appliedToTransaction = props.appliedToTransaction;
    this.applyingForeignAmount = props.applyingForeignAmount;
    this.applyingIsFxVariance = props.applyingIsFxVariance;
    this.applyingLinkAmount = props.applyingLinkAmount;
    this.applyingLinkType = props.applyingLinkType;
    this.applyingTransaction = props.applyingTransaction;
    this.approvalStatus = props.approvalStatus;
    this.authCode = props.authCode;
    this.autoCalculateLag = props.autoCalculateLag;
    this.avsStreetMatch = props.avsStreetMatch;
    this.avsZipMatch = props.avsZipMatch;
    this.billable = props.billable;
    this.billAddress = props.billAddress;
    this.billAddress1 = props.billAddress1;
    this.billAddress2 = props.billAddress2;
    this.billAddress3 = props.billAddress3;
    this.billAddressee = props.billAddressee;
    this.billAttention = props.billAttention;
    this.billCity = props.billCity;
    this.billCountry = props.billCountry;
    this.billCountryCode = props.billCountryCode;
    this.billedDate = props.billedDate;
    this.billingAccount = props.billingAccount;
    this.billingAmount = props.billingAmount;
    this.billingSchedule = props.billingSchedule;
    this.billingTransaction = props.billingTransaction;
    this.billPhone = props.billPhone;
    this.billState = props.billState;
    this.billVarianceStatus = props.billVarianceStatus;
    this.billZip = props.billZip;
    this.binNumber = props.binNumber;
    this.binNumberQuantity = props.binNumberQuantity;
    this.bomQuantity = props.bomQuantity;
    this.buildEntireAssembly = props.buildEntireAssembly;
    this.buildVariance = props.buildVariance;
    this.built = props.built;
    this.canHaveStackablePromotions = props.canHaveStackablePromotions;
    this.catchUpPeriod = props.catchUpPeriod;
    this.ccCustomerCode = props.ccCustomerCode;
    this.ccExpDate = props.ccExpDate;
    this.ccHolderName = props.ccHolderName;
    this.ccNumber = props.ccNumber;
    this.ccStreet = props.ccStreet;
    this.ccZipCode = props.ccZipCode;
    this.clazz = props.clazz;
    this.cleared = props.cleared;
    this.closed = props.closed;
    this.closeDate = props.closeDate;
    this.cogsAmount = props.cogsAmount;
    this.commissionEffectiveDate = props.commissionEffectiveDate;
    this.commit = props.commit;
    this.componentYield = props.componentYield;
    this.confirmationNumber = props.confirmationNumber;
    this.contribution = props.contribution;
    this.contributionPrimary = props.contributionPrimary;
    this.costComponentAmount = props.costComponentAmount;
    this.costComponentCategory = props.costComponentCategory;
    this.costComponentItem = props.costComponentItem;
    this.costComponentQuantity = props.costComponentQuantity;
    this.costComponentStandardCost = props.costComponentStandardCost;
    this.costEstimate = props.costEstimate;
    this.costEstimateRate = props.costEstimateRate;
    this.costEstimateType = props.costEstimateType;
    this.createdBy = props.createdBy;
    this.createdFrom = props.createdFrom;
    this.creditAmount = props.creditAmount;
    this.cscMatch = props.cscMatch;
    this.currency = props.currency;
    this.customForm = props.customForm;
    this.customGL = props.customGL;
    this.custType = props.custType;
    this.dateCreated = props.dateCreated;
    this.daysOpen = props.daysOpen;
    this.daysOverdue = props.daysOverdue;
    this.debitAmount = props.debitAmount;
    this.deferredRevenue = props.deferredRevenue;
    this.deferRevRec = props.deferRevRec;
    this.department = props.department;
    this.depositDate = props.depositDate;
    this.depositTransaction = props.depositTransaction;
    this.discountAmount = props.discountAmount;
    this.docUnit = props.docUnit;
    this.drAccount = props.drAccount;
    this.dueDate = props.dueDate;
    this.effectiveRate = props.effectiveRate;
    this.email = props.email;
    this.endDate = props.endDate;
    this.entity = props.entity;
    this.entityStatus = props.entityStatus;
    this.estGrossProfit = props.estGrossProfit;
    this.estGrossProfitPct = props.estGrossProfitPct;
    this.estGrossProfitPercent = props.estGrossProfitPercent;
    this.exchangeRate = props.exchangeRate;
    this.excludeCommission = props.excludeCommission;
    this.excludeFromRateRequest = props.excludeFromRateRequest;
    this.expectedCloseDate = props.expectedCloseDate;
    this.expectedReceiptDate = props.expectedReceiptDate;
    this.expenseCategory = props.expenseCategory;
    this.expenseDate = props.expenseDate;
    this.externalId = props.externalId;
    this.firmed = props.firmed;
    this.forecastType = props.forecastType;
    this.fulfillingTransaction = props.fulfillingTransaction;
    this.fxAccount = props.fxAccount;
    this.fxAmount = props.fxAmount;
    this.fxCostEstimate = props.fxCostEstimate;
    this.fxCostEstimateRate = props.fxCostEstimateRate;
    this.fxEstGrossProfit = props.fxEstGrossProfit;
    this.fxTranCostEstimate = props.fxTranCostEstimate;
    this.fxVsoeAllocation = props.fxVsoeAllocation;
    this.fxVsoeAmount = props.fxVsoeAmount;
    this.fxVsoePrice = props.fxVsoePrice;
    this.gcoAvailabelToCharge = props.gcoAvailabelToCharge;
    this.gcoAvailableToRefund = props.gcoAvailableToRefund;
    this.gcoAvsStreetMatch = props.gcoAvsStreetMatch;
    this.gcoAvsZipMatch = props.gcoAvsZipMatch;
    this.gcoBuyerAccountAge = props.gcoBuyerAccountAge;
    this.gcoBuyerIp = props.gcoBuyerIp;
    this.gcoChargeAmount = props.gcoChargeAmount;
    this.gcoChargebackAmount = props.gcoChargebackAmount;
    this.gcoConfirmedChargedTotal = props.gcoConfirmedChargedTotal;
    this.gcoConfirmedRefundedTotal = props.gcoConfirmedRefundedTotal;
    this.gcoCreditcardNumber = props.gcoCreditcardNumber;
    this.gcoCscMatch = props.gcoCscMatch;
    this.gcoFinancialState = props.gcoFinancialState;
    this.gcoFulfillmentState = props.gcoFulfillmentState;
    this.gcoOrderId = props.gcoOrderId;
    this.gcoOrderTotal = props.gcoOrderTotal;
    this.gcoPromotionAmount = props.gcoPromotionAmount;
    this.gcoPromotionName = props.gcoPromotionName;
    this.gcoRefundAmount = props.gcoRefundAmount;
    this.gcoShippingTotal = props.gcoShippingTotal;
    this.gcoStateChangedDetail = props.gcoStateChangedDetail;
    this.giftCert = props.giftCert;
    this.grossAmount = props.grossAmount;
    this.includeInForecast = props.includeInForecast;
    this.incoterm = props.incoterm;
    this.intercoStatus = props.intercoStatus;
    this.intercoTransaction = props.intercoTransaction;
    this.internalId = props.internalId;
    this.inventoryLocation = props.inventoryLocation;
    this.inventorySubsidiary = props.inventorySubsidiary;
    this.inVsoeBundle = props.inVsoeBundle;
    this.isAllocation = props.isAllocation;
    this.isBackflush = props.isBackflush;
    this.isGcoChargeback = props.isGcoChargeback;
    this.isGcoChargeConfirmed = props.isGcoChargeConfirmed;
    this.isGcoPaymentGuaranteed = props.isGcoPaymentGuaranteed;
    this.isGcoRefundConfirmed = props.isGcoRefundConfirmed;
    this.isInsideDelivery = props.isInsideDelivery;
    this.isInsidePickup = props.isInsidePickup;
    this.isIntercompanyAdjustment = props.isIntercompanyAdjustment;
    this.isInTransitPayment = props.isInTransitPayment;
    this.isMultiShipTo = props.isMultiShipTo;
    this.isReversal = props.isReversal;
    this.isRevRecTransaction = props.isRevRecTransaction;
    this.isScrap = props.isScrap;
    this.isShipAddress = props.isShipAddress;
    this.isTransferPriceCosting = props.isTransferPriceCosting;
    this.isWip = props.isWip;
    this.item = props.item;
    this.itemFulfillmentChoice = props.itemFulfillmentChoice;
    this.itemRevision = props.itemRevision;
    this.landedCostPerLine = props.landedCostPerLine;
    this.lastModifiedDate = props.lastModifiedDate;
    this.leadSource = props.leadSource;
    this.line = props.line;
    this.lineSequenceNumber = props.lineSequenceNumber;
    this.lineUniqueKey = props.lineUniqueKey;
    this.location = props.location;
    this.locationAutoAssigned = props.locationAutoAssigned;
    this.mainLine = props.mainLine;
    this.mainName = props.mainName;
    this.manufacturingRouting = props.manufacturingRouting;
    this.matchBillToReceipt = props.matchBillToReceipt;
    this.memo = props.memo;
    this.memoMain = props.memoMain;
    this.memorized = props.memorized;
    this.merchantAccount = props.merchantAccount;
    this.message = props.message;
    this.multiSubsidiary = props.multiSubsidiary;
    this.netAmount = props.netAmount;
    this.netAmountNoTax = props.netAmountNoTax;
    this.nextApprover = props.nextApprover;
    this.nextBillDate = props.nextBillDate;
    this.nexus = props.nexus;
    this.noAutoAssignLocation = props.noAutoAssignLocation;
    this.nonReimbursable = props.nonReimbursable;
    this.oneTimeTotal = props.oneTimeTotal;
    this.opportunity = props.opportunity;
    this.options = props.options;
    this.orderPriority = props.orderPriority;
    this.originator = props.originator;
    this.otherRefNum = props.otherRefNum;
    this.overheadParentItem = props.overheadParentItem;
    this.overrideInstallments = props.overrideInstallments;
    this.packageCount = props.packageCount;
    this.paidAmount = props.paidAmount;
    this.paidTransaction = props.paidTransaction;
    this.partner = props.partner;
    this.partnerContribution = props.partnerContribution;
    this.partnerRole = props.partnerRole;
    this.partnerTeamMember = props.partnerTeamMember;
    this.payingAmount = props.payingAmount;
    this.payingTransaction = props.payingTransaction;
    this.paymentApproved = props.paymentApproved;
    this.paymentEventDate = props.paymentEventDate;
    this.paymentEventHoldReason = props.paymentEventHoldReason;
    this.paymentEventPurchaseCardUsed = props.paymentEventPurchaseCardUsed;
    this.paymentEventPurchaseDataSent = props.paymentEventPurchaseDataSent;
    this.paymentEventResult = props.paymentEventResult;
    this.paymentEventType = props.paymentEventType;
    this.paymentHold = props.paymentHold;
    this.paymentMethod = props.paymentMethod;
    this.paymentOption = props.paymentOption;
    this.payPalPending = props.payPalPending;
    this.payPalStatus = props.payPalStatus;
    this.payPalTranId = props.payPalTranId;
    this.payrollBatch = props.payrollBatch;
    this.pnRefNum = props.pnRefNum;
    this.poRate = props.poRate;
    this.posting = props.posting;
    this.postingPeriod = props.postingPeriod;
    this.priceLevel = props.priceLevel;
    this.print = props.print;
    this.probability = props.probability;
    this.projectedAmount = props.projectedAmount;
    this.projectTask = props.projectTask;
    this.promoCode = props.promoCode;
    this.purchaseOrder = props.purchaseOrder;
    this.quantity = props.quantity;
    this.quantityBilled = props.quantityBilled;
    this.quantityCommitted = props.quantityCommitted;
    this.quantityPacked = props.quantityPacked;
    this.quantityPicked = props.quantityPicked;
    this.quantityRevCommitted = props.quantityRevCommitted;
    this.quantityShipRecv = props.quantityShipRecv;
    this.quantityUom = props.quantityUom;
    this.rate = props.rate;
    this.realizedGainPostingTransaction = props.realizedGainPostingTransaction;
    this.recognizedRevenue = props.recognizedRevenue;
    this.recordType = props.recordType;
    this.recurAnnuallyTotal = props.recurAnnuallyTotal;
    this.recurMonthlyTotal = props.recurMonthlyTotal;
    this.recurQuarterlyTotal = props.recurQuarterlyTotal;
    this.recurringBill = props.recurringBill;
    this.recurWeeklyTotal = props.recurWeeklyTotal;
    this.refNumber = props.refNumber;
    this.revCommitStatus = props.revCommitStatus;
    this.revCommittingTransaction = props.revCommittingTransaction;
    this.revenueStatus = props.revenueStatus;
    this.reversalDate = props.reversalDate;
    this.reversalNumber = props.reversalNumber;
    this.revRecEndDate = props.revRecEndDate;
    this.revRecOnRevCommitment = props.revRecOnRevCommitment;
    this.revRecStartDate = props.revRecStartDate;
    this.rgAccount = props.rgAccount;
    this.rgAmount = props.rgAmount;
    this.salesEffectiveDate = props.salesEffectiveDate;
    this.salesOrder = props.salesOrder;
    this.salesRep = props.salesRep;
    this.salesTeamMember = props.salesTeamMember;
    this.salesTeamRole = props.salesTeamRole;
    this.schedulingMethod = props.schedulingMethod;
    this.serialNumber = props.serialNumber;
    this.serialNumberCost = props.serialNumberCost;
    this.serialNumberCostAdjustment = props.serialNumberCostAdjustment;
    this.serialNumberQuantity = props.serialNumberQuantity;
    this.serialNumbers = props.serialNumbers;
    this.shipAddress = props.shipAddress;
    this.shipAddress1 = props.shipAddress1;
    this.shipAddress2 = props.shipAddress2;
    this.shipAddress3 = props.shipAddress3;
    this.shipAddressee = props.shipAddressee;
    this.shipAttention = props.shipAttention;
    this.shipCarrier = props.shipCarrier;
    this.shipCity = props.shipCity;
    this.shipComplete = props.shipComplete;
    this.shipCountry = props.shipCountry;
    this.shipCountryCode = props.shipCountryCode;
    this.shipDate = props.shipDate;
    this.shipGroup = props.shipGroup;
    this.shipMethod = props.shipMethod;
    this.shipPhone = props.shipPhone;
    this.shippingAmount = props.shippingAmount;
    this.shipRecvStatusLine = props.shipRecvStatusLine;
    this.shipState = props.shipState;
    this.shipTo = props.shipTo;
    this.shipZip = props.shipZip;
    this.signedAmount = props.signedAmount;
    this.source = props.source;
    this.startDate = props.startDate;
    this.status = props.status;
    this.subscription = props.subscription;
    this.subscriptionLine = props.subscriptionLine;
    this.subsidiary = props.subsidiary;
    this.subsidiaryTaxRegNum = props.subsidiaryTaxRegNum;
    this.taxAmount = props.taxAmount;
    this.taxCode = props.taxCode;
    this.taxLine = props.taxLine;
    this.taxPeriod = props.taxPeriod;
    this.taxPointDate = props.taxPointDate;
    this.taxTotal = props.taxTotal;
    this.termInMonths = props.termInMonths;
    this.terms = props.terms;
    this.termsOfSale = props.termsOfSale;
    this.title = props.title;
    this.toBeEmailed = props.toBeEmailed;
    this.toBePrinted = props.toBePrinted;
    this.toSubsidiary = props.toSubsidiary;
    this.total = props.total;
    this.totalCostEstimate = props.totalCostEstimate;
    this.trackingNumbers = props.trackingNumbers;
    this.tranDate = props.tranDate;
    this.tranEstGrossProfit = props.tranEstGrossProfit;
    this.tranFxEstGrossProfit = props.tranFxEstGrossProfit;
    this.tranId = props.tranId;
    this.tranIsVsoeBundle = props.tranIsVsoeBundle;
    this.transactionDiscount = props.transactionDiscount;
    this.transactionLineType = props.transactionLineType;
    this.transactionNumber = props.transactionNumber;
    this.transferLocation = props.transferLocation;
    this.transferOrderItemLine = props.transferOrderItemLine;
    this.transferOrderQuantityCommitted = props.transferOrderQuantityCommitted;
    this.transferOrderQuantityPacked = props.transferOrderQuantityPacked;
    this.transferOrderQuantityPicked = props.transferOrderQuantityPicked;
    this.transferOrderQuantityReceived = props.transferOrderQuantityReceived;
    this.transferOrderQuantityShipped = props.transferOrderQuantityShipped;
    this.type = props.type;
    this.unit = props.unit;
    this.unitCostOverride = props.unitCostOverride;
    this.vendType = props.vendType;
    this.visibleToCustomer = props.visibleToCustomer;
    this.vsoeAllocation = props.vsoeAllocation;
    this.vsoeAmount = props.vsoeAmount;
    this.vsoeDeferral = props.vsoeDeferral;
    this.vsoeDelivered = props.vsoeDelivered;
    this.vsoePermitDiscount = props.vsoePermitDiscount;
    this.vsoePrice = props.vsoePrice;
    this.webSite = props.webSite;
    this.customFieldList = props.customFieldList;
  }
}

export type AssemblyItemBomSearchRowBasicProps = {
  assembly?: PlatformCore.SearchColumnSelectField[];
  billOfMaterials?: PlatformCore.SearchColumnSelectField[];
  _default?: PlatformCore.SearchColumnBooleanField[];
  locations?: PlatformCore.SearchColumnSelectField[];
};

export class AssemblyItemBomSearchRowBasic extends PlatformCore.SearchRowBasic {
  assembly?: PlatformCore.SearchColumnSelectField[];
  billOfMaterials?: PlatformCore.SearchColumnSelectField[];
  _default?: PlatformCore.SearchColumnBooleanField[];
  locations?: PlatformCore.SearchColumnSelectField[];
  constructor(props: AssemblyItemBomSearchRowBasicProps) {
    super();
    this.assembly = props.assembly;
    this.billOfMaterials = props.billOfMaterials;
    this._default = props._default;
    this.locations = props.locations;
  }
}

export type BomSearchBasicProps = {
  availableForAllAssemblies?: PlatformCore.SearchBooleanField;
  availableForAllLocations?: PlatformCore.SearchBooleanField;
  createdDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  includeChildren?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  legacyBomForAssembly?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
  restrictToAssemblies?: PlatformCore.SearchMultiSelectField;
  restrictToLocations?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  useComponentYield?: PlatformCore.SearchBooleanField;
  usedOnAssembly?: PlatformCore.SearchBooleanField;
};

export class BomSearchBasic extends PlatformCore.SearchRecordBasic {
  availableForAllAssemblies?: PlatformCore.SearchBooleanField;
  availableForAllLocations?: PlatformCore.SearchBooleanField;
  createdDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  includeChildren?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  legacyBomForAssembly?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
  restrictToAssemblies?: PlatformCore.SearchMultiSelectField;
  restrictToLocations?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  useComponentYield?: PlatformCore.SearchBooleanField;
  usedOnAssembly?: PlatformCore.SearchBooleanField;
  constructor(props: BomSearchBasicProps) {
    super();
    this.availableForAllAssemblies = props.availableForAllAssemblies;
    this.availableForAllLocations = props.availableForAllLocations;
    this.createdDate = props.createdDate;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.includeChildren = props.includeChildren;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.legacyBomForAssembly = props.legacyBomForAssembly;
    this.memo = props.memo;
    this.name = props.name;
    this.restrictToAssemblies = props.restrictToAssemblies;
    this.restrictToLocations = props.restrictToLocations;
    this.subsidiary = props.subsidiary;
    this.useComponentYield = props.useComponentYield;
    this.usedOnAssembly = props.usedOnAssembly;
  }
}

export type SalesRoleSearchBasicProps = {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
};

export class SalesRoleSearchBasic extends PlatformCore.SearchRecordBasic {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  constructor(props: SalesRoleSearchBasicProps) {
    super();
    this.description = props.description;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type MerchandiseHierarchyNodeSearchBasicProps = {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  hierarchyLevel?: PlatformCore.SearchMultiSelectField;
  hierarchyVersion?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  name?: PlatformCore.SearchStringField;
  parentNode?: PlatformCore.SearchMultiSelectField;
};

export class MerchandiseHierarchyNodeSearchBasic extends PlatformCore.SearchRecordBasic {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  hierarchyLevel?: PlatformCore.SearchMultiSelectField;
  hierarchyVersion?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  name?: PlatformCore.SearchStringField;
  parentNode?: PlatformCore.SearchMultiSelectField;
  constructor(props: MerchandiseHierarchyNodeSearchBasicProps) {
    super();
    this.description = props.description;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.hierarchyLevel = props.hierarchyLevel;
    this.hierarchyVersion = props.hierarchyVersion;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.name = props.name;
    this.parentNode = props.parentNode;
  }
}

export type CustomSearchRowBasicProps = {
  customizationRef: PlatformCore.CustomizationRef;
  searchRowBasic: PlatformCore.SearchRowBasic;
};

export class CustomSearchRowBasic {
  customizationRef: PlatformCore.CustomizationRef;
  searchRowBasic: PlatformCore.SearchRowBasic;
  constructor(props: CustomSearchRowBasicProps) {
    this.customizationRef = props.customizationRef;
    this.searchRowBasic = props.searchRowBasic;
  }
}

export type ItemAccountMappingSearchRowBasicProps = {
  accountingBook?: PlatformCore.SearchColumnSelectField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  customDimension?: PlatformCore.SearchColumnSelectCustomField[];
  department?: PlatformCore.SearchColumnSelectField[];
  destinationAccount?: PlatformCore.SearchColumnSelectField[];
  effectiveDate?: PlatformCore.SearchColumnDateField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  itemAccount?: PlatformCore.SearchColumnEnumSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  sourceAccount?: PlatformCore.SearchColumnSelectField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class ItemAccountMappingSearchRowBasic extends PlatformCore.SearchRowBasic {
  accountingBook?: PlatformCore.SearchColumnSelectField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  customDimension?: PlatformCore.SearchColumnSelectCustomField[];
  department?: PlatformCore.SearchColumnSelectField[];
  destinationAccount?: PlatformCore.SearchColumnSelectField[];
  effectiveDate?: PlatformCore.SearchColumnDateField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  itemAccount?: PlatformCore.SearchColumnEnumSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  sourceAccount?: PlatformCore.SearchColumnSelectField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: ItemAccountMappingSearchRowBasicProps) {
    super();
    this.accountingBook = props.accountingBook;
    this.clazz = props.clazz;
    this.customDimension = props.customDimension;
    this.department = props.department;
    this.destinationAccount = props.destinationAccount;
    this.effectiveDate = props.effectiveDate;
    this.endDate = props.endDate;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.itemAccount = props.itemAccount;
    this.location = props.location;
    this.sourceAccount = props.sourceAccount;
    this.subsidiary = props.subsidiary;
    this.customFieldList = props.customFieldList;
  }
}

export type InventoryDetailSearchBasicProps = {
  binNumber?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  inventoryNumber?: PlatformCore.SearchMultiSelectField;
  quantity?: PlatformCore.SearchDoubleField;
};

export class InventoryDetailSearchBasic extends PlatformCore.SearchRecordBasic {
  binNumber?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  inventoryNumber?: PlatformCore.SearchMultiSelectField;
  quantity?: PlatformCore.SearchDoubleField;
  constructor(props: InventoryDetailSearchBasicProps) {
    super();
    this.binNumber = props.binNumber;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.inventoryNumber = props.inventoryNumber;
    this.quantity = props.quantity;
  }
}

export type DepartmentSearchRowBasicProps = {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  nameNoHierarchy?: PlatformCore.SearchColumnStringField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class DepartmentSearchRowBasic extends PlatformCore.SearchRowBasic {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  nameNoHierarchy?: PlatformCore.SearchColumnStringField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: DepartmentSearchRowBasicProps) {
    super();
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.nameNoHierarchy = props.nameNoHierarchy;
    this.subsidiary = props.subsidiary;
    this.customFieldList = props.customFieldList;
  }
}

export type FolderSearchRowBasicProps = {
  clazz?: PlatformCore.SearchColumnSelectField[];
  department?: PlatformCore.SearchColumnSelectField[];
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  folderSize?: PlatformCore.SearchColumnLongField[];
  group?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  location?: PlatformCore.SearchColumnSelectField[];
  name?: PlatformCore.SearchColumnStringField[];
  numFiles?: PlatformCore.SearchColumnLongField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  parent?: PlatformCore.SearchColumnSelectField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
};

export class FolderSearchRowBasic extends PlatformCore.SearchRowBasic {
  clazz?: PlatformCore.SearchColumnSelectField[];
  department?: PlatformCore.SearchColumnSelectField[];
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  folderSize?: PlatformCore.SearchColumnLongField[];
  group?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  location?: PlatformCore.SearchColumnSelectField[];
  name?: PlatformCore.SearchColumnStringField[];
  numFiles?: PlatformCore.SearchColumnLongField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  parent?: PlatformCore.SearchColumnSelectField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  constructor(props: FolderSearchRowBasicProps) {
    super();
    this.clazz = props.clazz;
    this.department = props.department;
    this.description = props.description;
    this.externalId = props.externalId;
    this.folderSize = props.folderSize;
    this.group = props.group;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.lastModifiedDate = props.lastModifiedDate;
    this.location = props.location;
    this.name = props.name;
    this.numFiles = props.numFiles;
    this.owner = props.owner;
    this.parent = props.parent;
    this.subsidiary = props.subsidiary;
  }
}

export type CustomerSearchBasicProps = {
  accountNumber?: PlatformCore.SearchStringField;
  address?: PlatformCore.SearchStringField;
  addressee?: PlatformCore.SearchStringField;
  addressLabel?: PlatformCore.SearchStringField;
  addressPhone?: PlatformCore.SearchStringField;
  assignedSite?: PlatformCore.SearchMultiSelectField;
  assignedSiteId?: PlatformCore.SearchMultiSelectField;
  attention?: PlatformCore.SearchStringField;
  availableOffline?: PlatformCore.SearchBooleanField;
  balance?: PlatformCore.SearchDoubleField;
  billAddress?: PlatformCore.SearchStringField;
  boughtAmount?: PlatformCore.SearchDoubleField;
  boughtDate?: PlatformCore.SearchDateField;
  buyingReason?: PlatformCore.SearchMultiSelectField;
  buyingTimeFrame?: PlatformCore.SearchMultiSelectField;
  category?: PlatformCore.SearchMultiSelectField;
  ccCustomerCode?: PlatformCore.SearchStringField;
  ccDefault?: PlatformCore.SearchBooleanField;
  ccExpDate?: PlatformCore.SearchDateField;
  ccHolderName?: PlatformCore.SearchStringField;
  ccNumber?: PlatformCore.SearchStringField;
  ccState?: PlatformCore.SearchMultiSelectField;
  ccStateFrom?: PlatformCore.SearchDateField;
  ccType?: PlatformCore.SearchMultiSelectField;
  city?: PlatformCore.SearchStringField;
  classBought?: PlatformCore.SearchMultiSelectField;
  comments?: PlatformCore.SearchStringField;
  companyName?: PlatformCore.SearchStringField;
  consolBalance?: PlatformCore.SearchDoubleField;
  consolDaysOverdue?: PlatformCore.SearchLongField;
  consolDepositBalance?: PlatformCore.SearchDoubleField;
  consolOverdueBalance?: PlatformCore.SearchDoubleField;
  consolUnbilledOrders?: PlatformCore.SearchDoubleField;
  contact?: PlatformCore.SearchStringField;
  contribution?: PlatformCore.SearchLongField;
  conversionDate?: PlatformCore.SearchDateField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  creditHold?: PlatformCore.SearchEnumMultiSelectField;
  creditHoldOverride?: PlatformCore.SearchBooleanField;
  creditLimit?: PlatformCore.SearchDoubleField;
  currency?: PlatformCore.SearchMultiSelectField;
  custStage?: PlatformCore.SearchMultiSelectField;
  custStatus?: PlatformCore.SearchMultiSelectField;
  dateClosed?: PlatformCore.SearchDateField;
  dateCreated?: PlatformCore.SearchDateField;
  daysOverdue?: PlatformCore.SearchLongField;
  defaultOrderPriority?: PlatformCore.SearchDoubleField;
  defaultTaxReg?: PlatformCore.SearchMultiSelectField;
  defaultTaxRegText?: PlatformCore.SearchStringField;
  depositBalance?: PlatformCore.SearchDoubleField;
  deptBought?: PlatformCore.SearchMultiSelectField;
  drAccount?: PlatformCore.SearchMultiSelectField;
  email?: PlatformCore.SearchStringField;
  emailPreference?: PlatformCore.SearchEnumMultiSelectField;
  emailTransactions?: PlatformCore.SearchBooleanField;
  endDate?: PlatformCore.SearchDateField;
  entityId?: PlatformCore.SearchStringField;
  entityStatus?: PlatformCore.SearchMultiSelectField;
  estimatedBudget?: PlatformCore.SearchDoubleField;
  explicitConversion?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  faxTransactions?: PlatformCore.SearchBooleanField;
  firstName?: PlatformCore.SearchStringField;
  firstOrderDate?: PlatformCore.SearchDateField;
  firstSaleDate?: PlatformCore.SearchDateField;
  fxAccount?: PlatformCore.SearchMultiSelectField;
  fxBalance?: PlatformCore.SearchDoubleField;
  fxConsolBalance?: PlatformCore.SearchDoubleField;
  fxConsolUnbilledOrders?: PlatformCore.SearchDoubleField;
  fxUnbilledOrders?: PlatformCore.SearchDoubleField;
  giveAccess?: PlatformCore.SearchBooleanField;
  globalSubscriptionStatus?: PlatformCore.SearchEnumMultiSelectField;
  group?: PlatformCore.SearchMultiSelectField;
  groupPricingLevel?: PlatformCore.SearchMultiSelectField;
  hasDuplicates?: PlatformCore.SearchBooleanField;
  image?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isBudgetApproved?: PlatformCore.SearchBooleanField;
  isDefaultBilling?: PlatformCore.SearchBooleanField;
  isDefaultShipping?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isPerson?: PlatformCore.SearchBooleanField;
  isReportedLead?: PlatformCore.SearchBooleanField;
  isShipAddress?: PlatformCore.SearchBooleanField;
  itemPricingLevel?: PlatformCore.SearchMultiSelectField;
  itemPricingUnitPrice?: PlatformCore.SearchDoubleField;
  itemsBought?: PlatformCore.SearchMultiSelectField;
  itemsOrdered?: PlatformCore.SearchMultiSelectField;
  language?: PlatformCore.SearchEnumMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  lastName?: PlatformCore.SearchStringField;
  lastOrderDate?: PlatformCore.SearchDateField;
  lastSaleDate?: PlatformCore.SearchDateField;
  leadDate?: PlatformCore.SearchDateField;
  leadSource?: PlatformCore.SearchMultiSelectField;
  level?: PlatformCore.SearchEnumMultiSelectField;
  locationBought?: PlatformCore.SearchMultiSelectField;
  manualCreditHold?: PlatformCore.SearchBooleanField;
  merchantAccount?: PlatformCore.SearchMultiSelectField;
  middleName?: PlatformCore.SearchStringField;
  monthlyClosing?: PlatformCore.SearchEnumMultiSelectField;
  onCreditHold?: PlatformCore.SearchBooleanField;
  orderedAmount?: PlatformCore.SearchDoubleField;
  orderedDate?: PlatformCore.SearchDateField;
  otherRelationships?: PlatformCore.SearchEnumMultiSelectField;
  overdueBalance?: PlatformCore.SearchDoubleField;
  parent?: PlatformCore.SearchMultiSelectField;
  parentItemsBought?: PlatformCore.SearchMultiSelectField;
  parentItemsOrdered?: PlatformCore.SearchMultiSelectField;
  partner?: PlatformCore.SearchMultiSelectField;
  partnerContribution?: PlatformCore.SearchLongField;
  partnerRole?: PlatformCore.SearchMultiSelectField;
  partnerTeamMember?: PlatformCore.SearchMultiSelectField;
  pec?: PlatformCore.SearchStringField;
  permission?: PlatformCore.SearchEnumMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  phoneticName?: PlatformCore.SearchStringField;
  priceLevel?: PlatformCore.SearchMultiSelectField;
  pricingGroup?: PlatformCore.SearchMultiSelectField;
  pricingItem?: PlatformCore.SearchMultiSelectField;
  printTransactions?: PlatformCore.SearchBooleanField;
  prospectDate?: PlatformCore.SearchDateField;
  pstExempt?: PlatformCore.SearchBooleanField;
  receivablesAccount?: PlatformCore.SearchMultiSelectField;
  reminderDate?: PlatformCore.SearchDateField;
  resaleNumber?: PlatformCore.SearchStringField;
  role?: PlatformCore.SearchMultiSelectField;
  salesReadiness?: PlatformCore.SearchMultiSelectField;
  salesRep?: PlatformCore.SearchMultiSelectField;
  salesTeamMember?: PlatformCore.SearchMultiSelectField;
  salesTeamRole?: PlatformCore.SearchMultiSelectField;
  salutation?: PlatformCore.SearchStringField;
  shipAddress?: PlatformCore.SearchStringField;
  shipComplete?: PlatformCore.SearchBooleanField;
  shippingItem?: PlatformCore.SearchMultiSelectField;
  sourceSite?: PlatformCore.SearchMultiSelectField;
  sourceSiteId?: PlatformCore.SearchMultiSelectField;
  stage?: PlatformCore.SearchEnumMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  state?: PlatformCore.SearchStringField;
  subsidBought?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  taxable?: PlatformCore.SearchBooleanField;
  terms?: PlatformCore.SearchMultiSelectField;
  territory?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  unbilledOrders?: PlatformCore.SearchDoubleField;
  url?: PlatformCore.SearchStringField;
  vatRegNumber?: PlatformCore.SearchStringField;
  webLead?: PlatformCore.SearchBooleanField;
  zipCode?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class CustomerSearchBasic extends PlatformCore.SearchRecordBasic {
  accountNumber?: PlatformCore.SearchStringField;
  address?: PlatformCore.SearchStringField;
  addressee?: PlatformCore.SearchStringField;
  addressLabel?: PlatformCore.SearchStringField;
  addressPhone?: PlatformCore.SearchStringField;
  assignedSite?: PlatformCore.SearchMultiSelectField;
  assignedSiteId?: PlatformCore.SearchMultiSelectField;
  attention?: PlatformCore.SearchStringField;
  availableOffline?: PlatformCore.SearchBooleanField;
  balance?: PlatformCore.SearchDoubleField;
  billAddress?: PlatformCore.SearchStringField;
  boughtAmount?: PlatformCore.SearchDoubleField;
  boughtDate?: PlatformCore.SearchDateField;
  buyingReason?: PlatformCore.SearchMultiSelectField;
  buyingTimeFrame?: PlatformCore.SearchMultiSelectField;
  category?: PlatformCore.SearchMultiSelectField;
  ccCustomerCode?: PlatformCore.SearchStringField;
  ccDefault?: PlatformCore.SearchBooleanField;
  ccExpDate?: PlatformCore.SearchDateField;
  ccHolderName?: PlatformCore.SearchStringField;
  ccNumber?: PlatformCore.SearchStringField;
  ccState?: PlatformCore.SearchMultiSelectField;
  ccStateFrom?: PlatformCore.SearchDateField;
  ccType?: PlatformCore.SearchMultiSelectField;
  city?: PlatformCore.SearchStringField;
  classBought?: PlatformCore.SearchMultiSelectField;
  comments?: PlatformCore.SearchStringField;
  companyName?: PlatformCore.SearchStringField;
  consolBalance?: PlatformCore.SearchDoubleField;
  consolDaysOverdue?: PlatformCore.SearchLongField;
  consolDepositBalance?: PlatformCore.SearchDoubleField;
  consolOverdueBalance?: PlatformCore.SearchDoubleField;
  consolUnbilledOrders?: PlatformCore.SearchDoubleField;
  contact?: PlatformCore.SearchStringField;
  contribution?: PlatformCore.SearchLongField;
  conversionDate?: PlatformCore.SearchDateField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  creditHold?: PlatformCore.SearchEnumMultiSelectField;
  creditHoldOverride?: PlatformCore.SearchBooleanField;
  creditLimit?: PlatformCore.SearchDoubleField;
  currency?: PlatformCore.SearchMultiSelectField;
  custStage?: PlatformCore.SearchMultiSelectField;
  custStatus?: PlatformCore.SearchMultiSelectField;
  dateClosed?: PlatformCore.SearchDateField;
  dateCreated?: PlatformCore.SearchDateField;
  daysOverdue?: PlatformCore.SearchLongField;
  defaultOrderPriority?: PlatformCore.SearchDoubleField;
  defaultTaxReg?: PlatformCore.SearchMultiSelectField;
  defaultTaxRegText?: PlatformCore.SearchStringField;
  depositBalance?: PlatformCore.SearchDoubleField;
  deptBought?: PlatformCore.SearchMultiSelectField;
  drAccount?: PlatformCore.SearchMultiSelectField;
  email?: PlatformCore.SearchStringField;
  emailPreference?: PlatformCore.SearchEnumMultiSelectField;
  emailTransactions?: PlatformCore.SearchBooleanField;
  endDate?: PlatformCore.SearchDateField;
  entityId?: PlatformCore.SearchStringField;
  entityStatus?: PlatformCore.SearchMultiSelectField;
  estimatedBudget?: PlatformCore.SearchDoubleField;
  explicitConversion?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  faxTransactions?: PlatformCore.SearchBooleanField;
  firstName?: PlatformCore.SearchStringField;
  firstOrderDate?: PlatformCore.SearchDateField;
  firstSaleDate?: PlatformCore.SearchDateField;
  fxAccount?: PlatformCore.SearchMultiSelectField;
  fxBalance?: PlatformCore.SearchDoubleField;
  fxConsolBalance?: PlatformCore.SearchDoubleField;
  fxConsolUnbilledOrders?: PlatformCore.SearchDoubleField;
  fxUnbilledOrders?: PlatformCore.SearchDoubleField;
  giveAccess?: PlatformCore.SearchBooleanField;
  globalSubscriptionStatus?: PlatformCore.SearchEnumMultiSelectField;
  group?: PlatformCore.SearchMultiSelectField;
  groupPricingLevel?: PlatformCore.SearchMultiSelectField;
  hasDuplicates?: PlatformCore.SearchBooleanField;
  image?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isBudgetApproved?: PlatformCore.SearchBooleanField;
  isDefaultBilling?: PlatformCore.SearchBooleanField;
  isDefaultShipping?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isPerson?: PlatformCore.SearchBooleanField;
  isReportedLead?: PlatformCore.SearchBooleanField;
  isShipAddress?: PlatformCore.SearchBooleanField;
  itemPricingLevel?: PlatformCore.SearchMultiSelectField;
  itemPricingUnitPrice?: PlatformCore.SearchDoubleField;
  itemsBought?: PlatformCore.SearchMultiSelectField;
  itemsOrdered?: PlatformCore.SearchMultiSelectField;
  language?: PlatformCore.SearchEnumMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  lastName?: PlatformCore.SearchStringField;
  lastOrderDate?: PlatformCore.SearchDateField;
  lastSaleDate?: PlatformCore.SearchDateField;
  leadDate?: PlatformCore.SearchDateField;
  leadSource?: PlatformCore.SearchMultiSelectField;
  level?: PlatformCore.SearchEnumMultiSelectField;
  locationBought?: PlatformCore.SearchMultiSelectField;
  manualCreditHold?: PlatformCore.SearchBooleanField;
  merchantAccount?: PlatformCore.SearchMultiSelectField;
  middleName?: PlatformCore.SearchStringField;
  monthlyClosing?: PlatformCore.SearchEnumMultiSelectField;
  onCreditHold?: PlatformCore.SearchBooleanField;
  orderedAmount?: PlatformCore.SearchDoubleField;
  orderedDate?: PlatformCore.SearchDateField;
  otherRelationships?: PlatformCore.SearchEnumMultiSelectField;
  overdueBalance?: PlatformCore.SearchDoubleField;
  parent?: PlatformCore.SearchMultiSelectField;
  parentItemsBought?: PlatformCore.SearchMultiSelectField;
  parentItemsOrdered?: PlatformCore.SearchMultiSelectField;
  partner?: PlatformCore.SearchMultiSelectField;
  partnerContribution?: PlatformCore.SearchLongField;
  partnerRole?: PlatformCore.SearchMultiSelectField;
  partnerTeamMember?: PlatformCore.SearchMultiSelectField;
  pec?: PlatformCore.SearchStringField;
  permission?: PlatformCore.SearchEnumMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  phoneticName?: PlatformCore.SearchStringField;
  priceLevel?: PlatformCore.SearchMultiSelectField;
  pricingGroup?: PlatformCore.SearchMultiSelectField;
  pricingItem?: PlatformCore.SearchMultiSelectField;
  printTransactions?: PlatformCore.SearchBooleanField;
  prospectDate?: PlatformCore.SearchDateField;
  pstExempt?: PlatformCore.SearchBooleanField;
  receivablesAccount?: PlatformCore.SearchMultiSelectField;
  reminderDate?: PlatformCore.SearchDateField;
  resaleNumber?: PlatformCore.SearchStringField;
  role?: PlatformCore.SearchMultiSelectField;
  salesReadiness?: PlatformCore.SearchMultiSelectField;
  salesRep?: PlatformCore.SearchMultiSelectField;
  salesTeamMember?: PlatformCore.SearchMultiSelectField;
  salesTeamRole?: PlatformCore.SearchMultiSelectField;
  salutation?: PlatformCore.SearchStringField;
  shipAddress?: PlatformCore.SearchStringField;
  shipComplete?: PlatformCore.SearchBooleanField;
  shippingItem?: PlatformCore.SearchMultiSelectField;
  sourceSite?: PlatformCore.SearchMultiSelectField;
  sourceSiteId?: PlatformCore.SearchMultiSelectField;
  stage?: PlatformCore.SearchEnumMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  state?: PlatformCore.SearchStringField;
  subsidBought?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  taxable?: PlatformCore.SearchBooleanField;
  terms?: PlatformCore.SearchMultiSelectField;
  territory?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  unbilledOrders?: PlatformCore.SearchDoubleField;
  url?: PlatformCore.SearchStringField;
  vatRegNumber?: PlatformCore.SearchStringField;
  webLead?: PlatformCore.SearchBooleanField;
  zipCode?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: CustomerSearchBasicProps) {
    super();
    this.accountNumber = props.accountNumber;
    this.address = props.address;
    this.addressee = props.addressee;
    this.addressLabel = props.addressLabel;
    this.addressPhone = props.addressPhone;
    this.assignedSite = props.assignedSite;
    this.assignedSiteId = props.assignedSiteId;
    this.attention = props.attention;
    this.availableOffline = props.availableOffline;
    this.balance = props.balance;
    this.billAddress = props.billAddress;
    this.boughtAmount = props.boughtAmount;
    this.boughtDate = props.boughtDate;
    this.buyingReason = props.buyingReason;
    this.buyingTimeFrame = props.buyingTimeFrame;
    this.category = props.category;
    this.ccCustomerCode = props.ccCustomerCode;
    this.ccDefault = props.ccDefault;
    this.ccExpDate = props.ccExpDate;
    this.ccHolderName = props.ccHolderName;
    this.ccNumber = props.ccNumber;
    this.ccState = props.ccState;
    this.ccStateFrom = props.ccStateFrom;
    this.ccType = props.ccType;
    this.city = props.city;
    this.classBought = props.classBought;
    this.comments = props.comments;
    this.companyName = props.companyName;
    this.consolBalance = props.consolBalance;
    this.consolDaysOverdue = props.consolDaysOverdue;
    this.consolDepositBalance = props.consolDepositBalance;
    this.consolOverdueBalance = props.consolOverdueBalance;
    this.consolUnbilledOrders = props.consolUnbilledOrders;
    this.contact = props.contact;
    this.contribution = props.contribution;
    this.conversionDate = props.conversionDate;
    this.country = props.country;
    this.county = props.county;
    this.creditHold = props.creditHold;
    this.creditHoldOverride = props.creditHoldOverride;
    this.creditLimit = props.creditLimit;
    this.currency = props.currency;
    this.custStage = props.custStage;
    this.custStatus = props.custStatus;
    this.dateClosed = props.dateClosed;
    this.dateCreated = props.dateCreated;
    this.daysOverdue = props.daysOverdue;
    this.defaultOrderPriority = props.defaultOrderPriority;
    this.defaultTaxReg = props.defaultTaxReg;
    this.defaultTaxRegText = props.defaultTaxRegText;
    this.depositBalance = props.depositBalance;
    this.deptBought = props.deptBought;
    this.drAccount = props.drAccount;
    this.email = props.email;
    this.emailPreference = props.emailPreference;
    this.emailTransactions = props.emailTransactions;
    this.endDate = props.endDate;
    this.entityId = props.entityId;
    this.entityStatus = props.entityStatus;
    this.estimatedBudget = props.estimatedBudget;
    this.explicitConversion = props.explicitConversion;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.fax = props.fax;
    this.faxTransactions = props.faxTransactions;
    this.firstName = props.firstName;
    this.firstOrderDate = props.firstOrderDate;
    this.firstSaleDate = props.firstSaleDate;
    this.fxAccount = props.fxAccount;
    this.fxBalance = props.fxBalance;
    this.fxConsolBalance = props.fxConsolBalance;
    this.fxConsolUnbilledOrders = props.fxConsolUnbilledOrders;
    this.fxUnbilledOrders = props.fxUnbilledOrders;
    this.giveAccess = props.giveAccess;
    this.globalSubscriptionStatus = props.globalSubscriptionStatus;
    this.group = props.group;
    this.groupPricingLevel = props.groupPricingLevel;
    this.hasDuplicates = props.hasDuplicates;
    this.image = props.image;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isBudgetApproved = props.isBudgetApproved;
    this.isDefaultBilling = props.isDefaultBilling;
    this.isDefaultShipping = props.isDefaultShipping;
    this.isInactive = props.isInactive;
    this.isPerson = props.isPerson;
    this.isReportedLead = props.isReportedLead;
    this.isShipAddress = props.isShipAddress;
    this.itemPricingLevel = props.itemPricingLevel;
    this.itemPricingUnitPrice = props.itemPricingUnitPrice;
    this.itemsBought = props.itemsBought;
    this.itemsOrdered = props.itemsOrdered;
    this.language = props.language;
    this.lastModifiedDate = props.lastModifiedDate;
    this.lastName = props.lastName;
    this.lastOrderDate = props.lastOrderDate;
    this.lastSaleDate = props.lastSaleDate;
    this.leadDate = props.leadDate;
    this.leadSource = props.leadSource;
    this.level = props.level;
    this.locationBought = props.locationBought;
    this.manualCreditHold = props.manualCreditHold;
    this.merchantAccount = props.merchantAccount;
    this.middleName = props.middleName;
    this.monthlyClosing = props.monthlyClosing;
    this.onCreditHold = props.onCreditHold;
    this.orderedAmount = props.orderedAmount;
    this.orderedDate = props.orderedDate;
    this.otherRelationships = props.otherRelationships;
    this.overdueBalance = props.overdueBalance;
    this.parent = props.parent;
    this.parentItemsBought = props.parentItemsBought;
    this.parentItemsOrdered = props.parentItemsOrdered;
    this.partner = props.partner;
    this.partnerContribution = props.partnerContribution;
    this.partnerRole = props.partnerRole;
    this.partnerTeamMember = props.partnerTeamMember;
    this.pec = props.pec;
    this.permission = props.permission;
    this.phone = props.phone;
    this.phoneticName = props.phoneticName;
    this.priceLevel = props.priceLevel;
    this.pricingGroup = props.pricingGroup;
    this.pricingItem = props.pricingItem;
    this.printTransactions = props.printTransactions;
    this.prospectDate = props.prospectDate;
    this.pstExempt = props.pstExempt;
    this.receivablesAccount = props.receivablesAccount;
    this.reminderDate = props.reminderDate;
    this.resaleNumber = props.resaleNumber;
    this.role = props.role;
    this.salesReadiness = props.salesReadiness;
    this.salesRep = props.salesRep;
    this.salesTeamMember = props.salesTeamMember;
    this.salesTeamRole = props.salesTeamRole;
    this.salutation = props.salutation;
    this.shipAddress = props.shipAddress;
    this.shipComplete = props.shipComplete;
    this.shippingItem = props.shippingItem;
    this.sourceSite = props.sourceSite;
    this.sourceSiteId = props.sourceSiteId;
    this.stage = props.stage;
    this.startDate = props.startDate;
    this.state = props.state;
    this.subsidBought = props.subsidBought;
    this.subsidiary = props.subsidiary;
    this.taxable = props.taxable;
    this.terms = props.terms;
    this.territory = props.territory;
    this.title = props.title;
    this.unbilledOrders = props.unbilledOrders;
    this.url = props.url;
    this.vatRegNumber = props.vatRegNumber;
    this.webLead = props.webLead;
    this.zipCode = props.zipCode;
    this.customFieldList = props.customFieldList;
  }
}

export type TopicSearchRowBasicProps = {
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
};

export class TopicSearchRowBasic extends PlatformCore.SearchRowBasic {
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  constructor(props: TopicSearchRowBasicProps) {
    super();
    this.description = props.description;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type AccountingTransactionSearchRowBasicProps = {
  account?: PlatformCore.SearchColumnSelectField[];
  accountingBook?: PlatformCore.SearchColumnSelectField[];
  accountType?: PlatformCore.SearchColumnStringField[];
  altSalesAmount?: PlatformCore.SearchColumnDoubleField[];
  altSalesNetAmount?: PlatformCore.SearchColumnDoubleField[];
  amount?: PlatformCore.SearchColumnDoubleField[];
  baseCurrency?: PlatformCore.SearchColumnStringField[];
  catchUpPeriod?: PlatformCore.SearchColumnStringField[];
  creditAmount?: PlatformCore.SearchColumnDoubleField[];
  customGL?: PlatformCore.SearchColumnBooleanField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  debitAmount?: PlatformCore.SearchColumnDoubleField[];
  deferRevRec?: PlatformCore.SearchColumnBooleanField[];
  exchangeRate?: PlatformCore.SearchColumnDoubleField[];
  fxAmount?: PlatformCore.SearchColumnDoubleField[];
  grossAmount?: PlatformCore.SearchColumnDoubleField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  multiSubsidiary?: PlatformCore.SearchColumnBooleanField[];
  netAmount?: PlatformCore.SearchColumnDoubleField[];
  posting?: PlatformCore.SearchColumnBooleanField[];
  quantityRevCommitted?: PlatformCore.SearchColumnDoubleField[];
  recognizedRevenue?: PlatformCore.SearchColumnDoubleField[];
  revCommitStatus?: PlatformCore.SearchColumnEnumSelectField[];
  revenueStatus?: PlatformCore.SearchColumnEnumSelectField[];
  revRecEndDate?: PlatformCore.SearchColumnDateField[];
  revRecOnRevCommitment?: PlatformCore.SearchColumnBooleanField[];
  revRecStartDate?: PlatformCore.SearchColumnDateField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  tranIsVsoeBundle?: PlatformCore.SearchColumnBooleanField[];
  vsoeAllocation?: PlatformCore.SearchColumnDoubleField[];
};

export class AccountingTransactionSearchRowBasic extends PlatformCore.SearchRowBasic {
  account?: PlatformCore.SearchColumnSelectField[];
  accountingBook?: PlatformCore.SearchColumnSelectField[];
  accountType?: PlatformCore.SearchColumnStringField[];
  altSalesAmount?: PlatformCore.SearchColumnDoubleField[];
  altSalesNetAmount?: PlatformCore.SearchColumnDoubleField[];
  amount?: PlatformCore.SearchColumnDoubleField[];
  baseCurrency?: PlatformCore.SearchColumnStringField[];
  catchUpPeriod?: PlatformCore.SearchColumnStringField[];
  creditAmount?: PlatformCore.SearchColumnDoubleField[];
  customGL?: PlatformCore.SearchColumnBooleanField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  debitAmount?: PlatformCore.SearchColumnDoubleField[];
  deferRevRec?: PlatformCore.SearchColumnBooleanField[];
  exchangeRate?: PlatformCore.SearchColumnDoubleField[];
  fxAmount?: PlatformCore.SearchColumnDoubleField[];
  grossAmount?: PlatformCore.SearchColumnDoubleField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  multiSubsidiary?: PlatformCore.SearchColumnBooleanField[];
  netAmount?: PlatformCore.SearchColumnDoubleField[];
  posting?: PlatformCore.SearchColumnBooleanField[];
  quantityRevCommitted?: PlatformCore.SearchColumnDoubleField[];
  recognizedRevenue?: PlatformCore.SearchColumnDoubleField[];
  revCommitStatus?: PlatformCore.SearchColumnEnumSelectField[];
  revenueStatus?: PlatformCore.SearchColumnEnumSelectField[];
  revRecEndDate?: PlatformCore.SearchColumnDateField[];
  revRecOnRevCommitment?: PlatformCore.SearchColumnBooleanField[];
  revRecStartDate?: PlatformCore.SearchColumnDateField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  tranIsVsoeBundle?: PlatformCore.SearchColumnBooleanField[];
  vsoeAllocation?: PlatformCore.SearchColumnDoubleField[];
  constructor(props: AccountingTransactionSearchRowBasicProps) {
    super();
    this.account = props.account;
    this.accountingBook = props.accountingBook;
    this.accountType = props.accountType;
    this.altSalesAmount = props.altSalesAmount;
    this.altSalesNetAmount = props.altSalesNetAmount;
    this.amount = props.amount;
    this.baseCurrency = props.baseCurrency;
    this.catchUpPeriod = props.catchUpPeriod;
    this.creditAmount = props.creditAmount;
    this.customGL = props.customGL;
    this.dateCreated = props.dateCreated;
    this.debitAmount = props.debitAmount;
    this.deferRevRec = props.deferRevRec;
    this.exchangeRate = props.exchangeRate;
    this.fxAmount = props.fxAmount;
    this.grossAmount = props.grossAmount;
    this.internalId = props.internalId;
    this.lastModifiedDate = props.lastModifiedDate;
    this.multiSubsidiary = props.multiSubsidiary;
    this.netAmount = props.netAmount;
    this.posting = props.posting;
    this.quantityRevCommitted = props.quantityRevCommitted;
    this.recognizedRevenue = props.recognizedRevenue;
    this.revCommitStatus = props.revCommitStatus;
    this.revenueStatus = props.revenueStatus;
    this.revRecEndDate = props.revRecEndDate;
    this.revRecOnRevCommitment = props.revRecOnRevCommitment;
    this.revRecStartDate = props.revRecStartDate;
    this.subsidiary = props.subsidiary;
    this.tranIsVsoeBundle = props.tranIsVsoeBundle;
    this.vsoeAllocation = props.vsoeAllocation;
  }
}

export type CustomerSearchRowBasicProps = {
  accountNumber?: PlatformCore.SearchColumnStringField[];
  address?: PlatformCore.SearchColumnStringField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  addressee?: PlatformCore.SearchColumnStringField[];
  addressInternalId?: PlatformCore.SearchColumnStringField[];
  addressLabel?: PlatformCore.SearchColumnStringField[];
  addressPhone?: PlatformCore.SearchColumnStringField[];
  altContact?: PlatformCore.SearchColumnStringField[];
  altEmail?: PlatformCore.SearchColumnStringField[];
  altName?: PlatformCore.SearchColumnStringField[];
  altPhone?: PlatformCore.SearchColumnStringField[];
  assignedSite?: PlatformCore.SearchColumnSelectField[];
  assignedSiteId?: PlatformCore.SearchColumnLongField[];
  attention?: PlatformCore.SearchColumnStringField[];
  availableOffline?: PlatformCore.SearchColumnBooleanField[];
  balance?: PlatformCore.SearchColumnDoubleField[];
  billAddress?: PlatformCore.SearchColumnStringField[];
  billAddress1?: PlatformCore.SearchColumnStringField[];
  billAddress2?: PlatformCore.SearchColumnStringField[];
  billAddress3?: PlatformCore.SearchColumnStringField[];
  billAddressee?: PlatformCore.SearchColumnStringField[];
  billAttention?: PlatformCore.SearchColumnStringField[];
  billCity?: PlatformCore.SearchColumnStringField[];
  billCountry?: PlatformCore.SearchColumnEnumSelectField[];
  billCountryCode?: PlatformCore.SearchColumnStringField[];
  billPhone?: PlatformCore.SearchColumnStringField[];
  billState?: PlatformCore.SearchColumnStringField[];
  billZipCode?: PlatformCore.SearchColumnStringField[];
  buyingReason?: PlatformCore.SearchColumnStringField[];
  buyingTimeFrame?: PlatformCore.SearchColumnStringField[];
  category?: PlatformCore.SearchColumnSelectField[];
  ccCustomerCode?: PlatformCore.SearchColumnStringField[];
  ccDefault?: PlatformCore.SearchColumnBooleanField[];
  ccExpDate?: PlatformCore.SearchColumnDateField[];
  ccHolderName?: PlatformCore.SearchColumnStringField[];
  ccInternalId?: PlatformCore.SearchColumnStringField[];
  ccNumber?: PlatformCore.SearchColumnStringField[];
  ccState?: PlatformCore.SearchColumnSelectField[];
  ccStateFrom?: PlatformCore.SearchColumnDateField[];
  ccType?: PlatformCore.SearchColumnSelectField[];
  city?: PlatformCore.SearchColumnStringField[];
  comments?: PlatformCore.SearchColumnStringField[];
  companyName?: PlatformCore.SearchColumnStringField[];
  consolBalance?: PlatformCore.SearchColumnDoubleField[];
  consolDaysOverdue?: PlatformCore.SearchColumnLongField[];
  consolDepositBalance?: PlatformCore.SearchColumnDoubleField[];
  consolOverdueBalance?: PlatformCore.SearchColumnDoubleField[];
  consolUnbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  contact?: PlatformCore.SearchColumnStringField[];
  contribution?: PlatformCore.SearchColumnDoubleField[];
  contributionPrimary?: PlatformCore.SearchColumnDoubleField[];
  conversionDate?: PlatformCore.SearchColumnDateField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  countryCode?: PlatformCore.SearchColumnStringField[];
  creditHold?: PlatformCore.SearchColumnEnumSelectField[];
  creditHoldOverride?: PlatformCore.SearchColumnBooleanField[];
  creditLimit?: PlatformCore.SearchColumnDoubleField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  dateClosed?: PlatformCore.SearchColumnDateField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  daysOverdue?: PlatformCore.SearchColumnLongField[];
  defaultOrderPriority?: PlatformCore.SearchColumnDoubleField[];
  defaultTaxReg?: PlatformCore.SearchColumnStringField[];
  depositBalance?: PlatformCore.SearchColumnDoubleField[];
  drAccount?: PlatformCore.SearchColumnStringField[];
  email?: PlatformCore.SearchColumnStringField[];
  emailPreference?: PlatformCore.SearchColumnEnumSelectField[];
  emailTransactions?: PlatformCore.SearchColumnBooleanField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  entityId?: PlatformCore.SearchColumnStringField[];
  entityNumber?: PlatformCore.SearchColumnLongField[];
  entityStatus?: PlatformCore.SearchColumnSelectField[];
  estimatedBudget?: PlatformCore.SearchColumnDoubleField[];
  explicitConversion?: PlatformCore.SearchColumnBooleanField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  faxTransactions?: PlatformCore.SearchColumnBooleanField[];
  firstName?: PlatformCore.SearchColumnStringField[];
  firstOrderDate?: PlatformCore.SearchColumnDateField[];
  firstSaleDate?: PlatformCore.SearchColumnDateField[];
  fxAccount?: PlatformCore.SearchColumnStringField[];
  fxBalance?: PlatformCore.SearchColumnDoubleField[];
  fxConsolBalance?: PlatformCore.SearchColumnDoubleField[];
  fxConsolUnbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  fxUnbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  giveAccess?: PlatformCore.SearchColumnBooleanField[];
  globalSubscriptionStatus?: PlatformCore.SearchColumnEnumSelectField[];
  groupPricingLevel?: PlatformCore.SearchColumnStringField[];
  hasDuplicates?: PlatformCore.SearchColumnBooleanField[];
  homePhone?: PlatformCore.SearchColumnStringField[];
  image?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isBudgetApproved?: PlatformCore.SearchColumnBooleanField[];
  isDefaultBilling?: PlatformCore.SearchColumnBooleanField[];
  isDefaultShipping?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isPerson?: PlatformCore.SearchColumnBooleanField[];
  isShipAddress?: PlatformCore.SearchColumnBooleanField[];
  itemPricingLevel?: PlatformCore.SearchColumnStringField[];
  itemPricingUnitPrice?: PlatformCore.SearchColumnDoubleField[];
  jobEndDate?: PlatformCore.SearchColumnDateField[];
  jobProjectedEnd?: PlatformCore.SearchColumnDateField[];
  jobStartDate?: PlatformCore.SearchColumnDateField[];
  jobType?: PlatformCore.SearchColumnSelectField[];
  language?: PlatformCore.SearchColumnEnumSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  lastName?: PlatformCore.SearchColumnStringField[];
  lastOrderDate?: PlatformCore.SearchColumnDateField[];
  lastSaleDate?: PlatformCore.SearchColumnDateField[];
  leadDate?: PlatformCore.SearchColumnDateField[];
  leadSource?: PlatformCore.SearchColumnSelectField[];
  level?: PlatformCore.SearchColumnEnumSelectField[];
  manualCreditHold?: PlatformCore.SearchColumnBooleanField[];
  middleName?: PlatformCore.SearchColumnStringField[];
  mobilePhone?: PlatformCore.SearchColumnStringField[];
  monthlyClosing?: PlatformCore.SearchColumnEnumSelectField[];
  onCreditHold?: PlatformCore.SearchColumnBooleanField[];
  overdueBalance?: PlatformCore.SearchColumnDoubleField[];
  parent?: PlatformCore.SearchColumnSelectField[];
  partner?: PlatformCore.SearchColumnSelectField[];
  partnerContribution?: PlatformCore.SearchColumnDoubleField[];
  partnerRole?: PlatformCore.SearchColumnStringField[];
  partnerTeamMember?: PlatformCore.SearchColumnSelectField[];
  pec?: PlatformCore.SearchColumnStringField[];
  permission?: PlatformCore.SearchColumnEnumSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  phoneticName?: PlatformCore.SearchColumnStringField[];
  prefCCProcessor?: PlatformCore.SearchColumnSelectField[];
  priceLevel?: PlatformCore.SearchColumnSelectField[];
  pricingGroup?: PlatformCore.SearchColumnStringField[];
  pricingItem?: PlatformCore.SearchColumnStringField[];
  printTransactions?: PlatformCore.SearchColumnBooleanField[];
  prospectDate?: PlatformCore.SearchColumnDateField[];
  receivablesAccount?: PlatformCore.SearchColumnStringField[];
  reminderDays?: PlatformCore.SearchColumnLongField[];
  resaleNumber?: PlatformCore.SearchColumnStringField[];
  role?: PlatformCore.SearchColumnStringField[];
  salesReadiness?: PlatformCore.SearchColumnStringField[];
  salesRep?: PlatformCore.SearchColumnSelectField[];
  salesTeamMember?: PlatformCore.SearchColumnSelectField[];
  salesTeamRole?: PlatformCore.SearchColumnSelectField[];
  salutation?: PlatformCore.SearchColumnStringField[];
  shipAddress?: PlatformCore.SearchColumnStringField[];
  shipAddress1?: PlatformCore.SearchColumnStringField[];
  shipAddress2?: PlatformCore.SearchColumnStringField[];
  shipAddress3?: PlatformCore.SearchColumnStringField[];
  shipAddressee?: PlatformCore.SearchColumnStringField[];
  shipAttention?: PlatformCore.SearchColumnStringField[];
  shipCity?: PlatformCore.SearchColumnStringField[];
  shipComplete?: PlatformCore.SearchColumnBooleanField[];
  shipCountry?: PlatformCore.SearchColumnEnumSelectField[];
  shipCountryCode?: PlatformCore.SearchColumnStringField[];
  shipPhone?: PlatformCore.SearchColumnStringField[];
  shippingItem?: PlatformCore.SearchColumnSelectField[];
  shipState?: PlatformCore.SearchColumnStringField[];
  shipZip?: PlatformCore.SearchColumnStringField[];
  sourceSite?: PlatformCore.SearchColumnSelectField[];
  sourceSiteId?: PlatformCore.SearchColumnLongField[];
  stage?: PlatformCore.SearchColumnEnumSelectField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  state?: PlatformCore.SearchColumnStringField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionDate?: PlatformCore.SearchColumnDateField[];
  subscriptionStatus?: PlatformCore.SearchColumnBooleanField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  taxable?: PlatformCore.SearchColumnBooleanField[];
  taxItem?: PlatformCore.SearchColumnSelectField[];
  terms?: PlatformCore.SearchColumnSelectField[];
  territory?: PlatformCore.SearchColumnSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  unbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  url?: PlatformCore.SearchColumnStringField[];
  vatRegNumber?: PlatformCore.SearchColumnStringField[];
  webLead?: PlatformCore.SearchColumnBooleanField[];
  zipCode?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class CustomerSearchRowBasic extends PlatformCore.SearchRowBasic {
  accountNumber?: PlatformCore.SearchColumnStringField[];
  address?: PlatformCore.SearchColumnStringField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  addressee?: PlatformCore.SearchColumnStringField[];
  addressInternalId?: PlatformCore.SearchColumnStringField[];
  addressLabel?: PlatformCore.SearchColumnStringField[];
  addressPhone?: PlatformCore.SearchColumnStringField[];
  altContact?: PlatformCore.SearchColumnStringField[];
  altEmail?: PlatformCore.SearchColumnStringField[];
  altName?: PlatformCore.SearchColumnStringField[];
  altPhone?: PlatformCore.SearchColumnStringField[];
  assignedSite?: PlatformCore.SearchColumnSelectField[];
  assignedSiteId?: PlatformCore.SearchColumnLongField[];
  attention?: PlatformCore.SearchColumnStringField[];
  availableOffline?: PlatformCore.SearchColumnBooleanField[];
  balance?: PlatformCore.SearchColumnDoubleField[];
  billAddress?: PlatformCore.SearchColumnStringField[];
  billAddress1?: PlatformCore.SearchColumnStringField[];
  billAddress2?: PlatformCore.SearchColumnStringField[];
  billAddress3?: PlatformCore.SearchColumnStringField[];
  billAddressee?: PlatformCore.SearchColumnStringField[];
  billAttention?: PlatformCore.SearchColumnStringField[];
  billCity?: PlatformCore.SearchColumnStringField[];
  billCountry?: PlatformCore.SearchColumnEnumSelectField[];
  billCountryCode?: PlatformCore.SearchColumnStringField[];
  billPhone?: PlatformCore.SearchColumnStringField[];
  billState?: PlatformCore.SearchColumnStringField[];
  billZipCode?: PlatformCore.SearchColumnStringField[];
  buyingReason?: PlatformCore.SearchColumnStringField[];
  buyingTimeFrame?: PlatformCore.SearchColumnStringField[];
  category?: PlatformCore.SearchColumnSelectField[];
  ccCustomerCode?: PlatformCore.SearchColumnStringField[];
  ccDefault?: PlatformCore.SearchColumnBooleanField[];
  ccExpDate?: PlatformCore.SearchColumnDateField[];
  ccHolderName?: PlatformCore.SearchColumnStringField[];
  ccInternalId?: PlatformCore.SearchColumnStringField[];
  ccNumber?: PlatformCore.SearchColumnStringField[];
  ccState?: PlatformCore.SearchColumnSelectField[];
  ccStateFrom?: PlatformCore.SearchColumnDateField[];
  ccType?: PlatformCore.SearchColumnSelectField[];
  city?: PlatformCore.SearchColumnStringField[];
  comments?: PlatformCore.SearchColumnStringField[];
  companyName?: PlatformCore.SearchColumnStringField[];
  consolBalance?: PlatformCore.SearchColumnDoubleField[];
  consolDaysOverdue?: PlatformCore.SearchColumnLongField[];
  consolDepositBalance?: PlatformCore.SearchColumnDoubleField[];
  consolOverdueBalance?: PlatformCore.SearchColumnDoubleField[];
  consolUnbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  contact?: PlatformCore.SearchColumnStringField[];
  contribution?: PlatformCore.SearchColumnDoubleField[];
  contributionPrimary?: PlatformCore.SearchColumnDoubleField[];
  conversionDate?: PlatformCore.SearchColumnDateField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  countryCode?: PlatformCore.SearchColumnStringField[];
  creditHold?: PlatformCore.SearchColumnEnumSelectField[];
  creditHoldOverride?: PlatformCore.SearchColumnBooleanField[];
  creditLimit?: PlatformCore.SearchColumnDoubleField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  dateClosed?: PlatformCore.SearchColumnDateField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  daysOverdue?: PlatformCore.SearchColumnLongField[];
  defaultOrderPriority?: PlatformCore.SearchColumnDoubleField[];
  defaultTaxReg?: PlatformCore.SearchColumnStringField[];
  depositBalance?: PlatformCore.SearchColumnDoubleField[];
  drAccount?: PlatformCore.SearchColumnStringField[];
  email?: PlatformCore.SearchColumnStringField[];
  emailPreference?: PlatformCore.SearchColumnEnumSelectField[];
  emailTransactions?: PlatformCore.SearchColumnBooleanField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  entityId?: PlatformCore.SearchColumnStringField[];
  entityNumber?: PlatformCore.SearchColumnLongField[];
  entityStatus?: PlatformCore.SearchColumnSelectField[];
  estimatedBudget?: PlatformCore.SearchColumnDoubleField[];
  explicitConversion?: PlatformCore.SearchColumnBooleanField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  faxTransactions?: PlatformCore.SearchColumnBooleanField[];
  firstName?: PlatformCore.SearchColumnStringField[];
  firstOrderDate?: PlatformCore.SearchColumnDateField[];
  firstSaleDate?: PlatformCore.SearchColumnDateField[];
  fxAccount?: PlatformCore.SearchColumnStringField[];
  fxBalance?: PlatformCore.SearchColumnDoubleField[];
  fxConsolBalance?: PlatformCore.SearchColumnDoubleField[];
  fxConsolUnbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  fxUnbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  giveAccess?: PlatformCore.SearchColumnBooleanField[];
  globalSubscriptionStatus?: PlatformCore.SearchColumnEnumSelectField[];
  groupPricingLevel?: PlatformCore.SearchColumnStringField[];
  hasDuplicates?: PlatformCore.SearchColumnBooleanField[];
  homePhone?: PlatformCore.SearchColumnStringField[];
  image?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isBudgetApproved?: PlatformCore.SearchColumnBooleanField[];
  isDefaultBilling?: PlatformCore.SearchColumnBooleanField[];
  isDefaultShipping?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isPerson?: PlatformCore.SearchColumnBooleanField[];
  isShipAddress?: PlatformCore.SearchColumnBooleanField[];
  itemPricingLevel?: PlatformCore.SearchColumnStringField[];
  itemPricingUnitPrice?: PlatformCore.SearchColumnDoubleField[];
  jobEndDate?: PlatformCore.SearchColumnDateField[];
  jobProjectedEnd?: PlatformCore.SearchColumnDateField[];
  jobStartDate?: PlatformCore.SearchColumnDateField[];
  jobType?: PlatformCore.SearchColumnSelectField[];
  language?: PlatformCore.SearchColumnEnumSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  lastName?: PlatformCore.SearchColumnStringField[];
  lastOrderDate?: PlatformCore.SearchColumnDateField[];
  lastSaleDate?: PlatformCore.SearchColumnDateField[];
  leadDate?: PlatformCore.SearchColumnDateField[];
  leadSource?: PlatformCore.SearchColumnSelectField[];
  level?: PlatformCore.SearchColumnEnumSelectField[];
  manualCreditHold?: PlatformCore.SearchColumnBooleanField[];
  middleName?: PlatformCore.SearchColumnStringField[];
  mobilePhone?: PlatformCore.SearchColumnStringField[];
  monthlyClosing?: PlatformCore.SearchColumnEnumSelectField[];
  onCreditHold?: PlatformCore.SearchColumnBooleanField[];
  overdueBalance?: PlatformCore.SearchColumnDoubleField[];
  parent?: PlatformCore.SearchColumnSelectField[];
  partner?: PlatformCore.SearchColumnSelectField[];
  partnerContribution?: PlatformCore.SearchColumnDoubleField[];
  partnerRole?: PlatformCore.SearchColumnStringField[];
  partnerTeamMember?: PlatformCore.SearchColumnSelectField[];
  pec?: PlatformCore.SearchColumnStringField[];
  permission?: PlatformCore.SearchColumnEnumSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  phoneticName?: PlatformCore.SearchColumnStringField[];
  prefCCProcessor?: PlatformCore.SearchColumnSelectField[];
  priceLevel?: PlatformCore.SearchColumnSelectField[];
  pricingGroup?: PlatformCore.SearchColumnStringField[];
  pricingItem?: PlatformCore.SearchColumnStringField[];
  printTransactions?: PlatformCore.SearchColumnBooleanField[];
  prospectDate?: PlatformCore.SearchColumnDateField[];
  receivablesAccount?: PlatformCore.SearchColumnStringField[];
  reminderDays?: PlatformCore.SearchColumnLongField[];
  resaleNumber?: PlatformCore.SearchColumnStringField[];
  role?: PlatformCore.SearchColumnStringField[];
  salesReadiness?: PlatformCore.SearchColumnStringField[];
  salesRep?: PlatformCore.SearchColumnSelectField[];
  salesTeamMember?: PlatformCore.SearchColumnSelectField[];
  salesTeamRole?: PlatformCore.SearchColumnSelectField[];
  salutation?: PlatformCore.SearchColumnStringField[];
  shipAddress?: PlatformCore.SearchColumnStringField[];
  shipAddress1?: PlatformCore.SearchColumnStringField[];
  shipAddress2?: PlatformCore.SearchColumnStringField[];
  shipAddress3?: PlatformCore.SearchColumnStringField[];
  shipAddressee?: PlatformCore.SearchColumnStringField[];
  shipAttention?: PlatformCore.SearchColumnStringField[];
  shipCity?: PlatformCore.SearchColumnStringField[];
  shipComplete?: PlatformCore.SearchColumnBooleanField[];
  shipCountry?: PlatformCore.SearchColumnEnumSelectField[];
  shipCountryCode?: PlatformCore.SearchColumnStringField[];
  shipPhone?: PlatformCore.SearchColumnStringField[];
  shippingItem?: PlatformCore.SearchColumnSelectField[];
  shipState?: PlatformCore.SearchColumnStringField[];
  shipZip?: PlatformCore.SearchColumnStringField[];
  sourceSite?: PlatformCore.SearchColumnSelectField[];
  sourceSiteId?: PlatformCore.SearchColumnLongField[];
  stage?: PlatformCore.SearchColumnEnumSelectField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  state?: PlatformCore.SearchColumnStringField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionDate?: PlatformCore.SearchColumnDateField[];
  subscriptionStatus?: PlatformCore.SearchColumnBooleanField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  taxable?: PlatformCore.SearchColumnBooleanField[];
  taxItem?: PlatformCore.SearchColumnSelectField[];
  terms?: PlatformCore.SearchColumnSelectField[];
  territory?: PlatformCore.SearchColumnSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  unbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  url?: PlatformCore.SearchColumnStringField[];
  vatRegNumber?: PlatformCore.SearchColumnStringField[];
  webLead?: PlatformCore.SearchColumnBooleanField[];
  zipCode?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: CustomerSearchRowBasicProps) {
    super();
    this.accountNumber = props.accountNumber;
    this.address = props.address;
    this.address1 = props.address1;
    this.address2 = props.address2;
    this.address3 = props.address3;
    this.addressee = props.addressee;
    this.addressInternalId = props.addressInternalId;
    this.addressLabel = props.addressLabel;
    this.addressPhone = props.addressPhone;
    this.altContact = props.altContact;
    this.altEmail = props.altEmail;
    this.altName = props.altName;
    this.altPhone = props.altPhone;
    this.assignedSite = props.assignedSite;
    this.assignedSiteId = props.assignedSiteId;
    this.attention = props.attention;
    this.availableOffline = props.availableOffline;
    this.balance = props.balance;
    this.billAddress = props.billAddress;
    this.billAddress1 = props.billAddress1;
    this.billAddress2 = props.billAddress2;
    this.billAddress3 = props.billAddress3;
    this.billAddressee = props.billAddressee;
    this.billAttention = props.billAttention;
    this.billCity = props.billCity;
    this.billCountry = props.billCountry;
    this.billCountryCode = props.billCountryCode;
    this.billPhone = props.billPhone;
    this.billState = props.billState;
    this.billZipCode = props.billZipCode;
    this.buyingReason = props.buyingReason;
    this.buyingTimeFrame = props.buyingTimeFrame;
    this.category = props.category;
    this.ccCustomerCode = props.ccCustomerCode;
    this.ccDefault = props.ccDefault;
    this.ccExpDate = props.ccExpDate;
    this.ccHolderName = props.ccHolderName;
    this.ccInternalId = props.ccInternalId;
    this.ccNumber = props.ccNumber;
    this.ccState = props.ccState;
    this.ccStateFrom = props.ccStateFrom;
    this.ccType = props.ccType;
    this.city = props.city;
    this.comments = props.comments;
    this.companyName = props.companyName;
    this.consolBalance = props.consolBalance;
    this.consolDaysOverdue = props.consolDaysOverdue;
    this.consolDepositBalance = props.consolDepositBalance;
    this.consolOverdueBalance = props.consolOverdueBalance;
    this.consolUnbilledOrders = props.consolUnbilledOrders;
    this.contact = props.contact;
    this.contribution = props.contribution;
    this.contributionPrimary = props.contributionPrimary;
    this.conversionDate = props.conversionDate;
    this.country = props.country;
    this.countryCode = props.countryCode;
    this.creditHold = props.creditHold;
    this.creditHoldOverride = props.creditHoldOverride;
    this.creditLimit = props.creditLimit;
    this.currency = props.currency;
    this.dateClosed = props.dateClosed;
    this.dateCreated = props.dateCreated;
    this.daysOverdue = props.daysOverdue;
    this.defaultOrderPriority = props.defaultOrderPriority;
    this.defaultTaxReg = props.defaultTaxReg;
    this.depositBalance = props.depositBalance;
    this.drAccount = props.drAccount;
    this.email = props.email;
    this.emailPreference = props.emailPreference;
    this.emailTransactions = props.emailTransactions;
    this.endDate = props.endDate;
    this.entityId = props.entityId;
    this.entityNumber = props.entityNumber;
    this.entityStatus = props.entityStatus;
    this.estimatedBudget = props.estimatedBudget;
    this.explicitConversion = props.explicitConversion;
    this.externalId = props.externalId;
    this.fax = props.fax;
    this.faxTransactions = props.faxTransactions;
    this.firstName = props.firstName;
    this.firstOrderDate = props.firstOrderDate;
    this.firstSaleDate = props.firstSaleDate;
    this.fxAccount = props.fxAccount;
    this.fxBalance = props.fxBalance;
    this.fxConsolBalance = props.fxConsolBalance;
    this.fxConsolUnbilledOrders = props.fxConsolUnbilledOrders;
    this.fxUnbilledOrders = props.fxUnbilledOrders;
    this.giveAccess = props.giveAccess;
    this.globalSubscriptionStatus = props.globalSubscriptionStatus;
    this.groupPricingLevel = props.groupPricingLevel;
    this.hasDuplicates = props.hasDuplicates;
    this.homePhone = props.homePhone;
    this.image = props.image;
    this.internalId = props.internalId;
    this.isBudgetApproved = props.isBudgetApproved;
    this.isDefaultBilling = props.isDefaultBilling;
    this.isDefaultShipping = props.isDefaultShipping;
    this.isInactive = props.isInactive;
    this.isPerson = props.isPerson;
    this.isShipAddress = props.isShipAddress;
    this.itemPricingLevel = props.itemPricingLevel;
    this.itemPricingUnitPrice = props.itemPricingUnitPrice;
    this.jobEndDate = props.jobEndDate;
    this.jobProjectedEnd = props.jobProjectedEnd;
    this.jobStartDate = props.jobStartDate;
    this.jobType = props.jobType;
    this.language = props.language;
    this.lastModifiedDate = props.lastModifiedDate;
    this.lastName = props.lastName;
    this.lastOrderDate = props.lastOrderDate;
    this.lastSaleDate = props.lastSaleDate;
    this.leadDate = props.leadDate;
    this.leadSource = props.leadSource;
    this.level = props.level;
    this.manualCreditHold = props.manualCreditHold;
    this.middleName = props.middleName;
    this.mobilePhone = props.mobilePhone;
    this.monthlyClosing = props.monthlyClosing;
    this.onCreditHold = props.onCreditHold;
    this.overdueBalance = props.overdueBalance;
    this.parent = props.parent;
    this.partner = props.partner;
    this.partnerContribution = props.partnerContribution;
    this.partnerRole = props.partnerRole;
    this.partnerTeamMember = props.partnerTeamMember;
    this.pec = props.pec;
    this.permission = props.permission;
    this.phone = props.phone;
    this.phoneticName = props.phoneticName;
    this.prefCCProcessor = props.prefCCProcessor;
    this.priceLevel = props.priceLevel;
    this.pricingGroup = props.pricingGroup;
    this.pricingItem = props.pricingItem;
    this.printTransactions = props.printTransactions;
    this.prospectDate = props.prospectDate;
    this.receivablesAccount = props.receivablesAccount;
    this.reminderDays = props.reminderDays;
    this.resaleNumber = props.resaleNumber;
    this.role = props.role;
    this.salesReadiness = props.salesReadiness;
    this.salesRep = props.salesRep;
    this.salesTeamMember = props.salesTeamMember;
    this.salesTeamRole = props.salesTeamRole;
    this.salutation = props.salutation;
    this.shipAddress = props.shipAddress;
    this.shipAddress1 = props.shipAddress1;
    this.shipAddress2 = props.shipAddress2;
    this.shipAddress3 = props.shipAddress3;
    this.shipAddressee = props.shipAddressee;
    this.shipAttention = props.shipAttention;
    this.shipCity = props.shipCity;
    this.shipComplete = props.shipComplete;
    this.shipCountry = props.shipCountry;
    this.shipCountryCode = props.shipCountryCode;
    this.shipPhone = props.shipPhone;
    this.shippingItem = props.shippingItem;
    this.shipState = props.shipState;
    this.shipZip = props.shipZip;
    this.sourceSite = props.sourceSite;
    this.sourceSiteId = props.sourceSiteId;
    this.stage = props.stage;
    this.startDate = props.startDate;
    this.state = props.state;
    this.subscription = props.subscription;
    this.subscriptionDate = props.subscriptionDate;
    this.subscriptionStatus = props.subscriptionStatus;
    this.subsidiary = props.subsidiary;
    this.taxable = props.taxable;
    this.taxItem = props.taxItem;
    this.terms = props.terms;
    this.territory = props.territory;
    this.title = props.title;
    this.unbilledOrders = props.unbilledOrders;
    this.url = props.url;
    this.vatRegNumber = props.vatRegNumber;
    this.webLead = props.webLead;
    this.zipCode = props.zipCode;
    this.customFieldList = props.customFieldList;
  }
}

export type CampaignSearchBasicProps = {
  audience?: PlatformCore.SearchMultiSelectField;
  baseCost?: PlatformCore.SearchDoubleField;
  campaignEventType?: PlatformCore.SearchEnumMultiSelectField;
  campaignId?: PlatformCore.SearchStringField;
  category?: PlatformCore.SearchMultiSelectField;
  channel?: PlatformCore.SearchMultiSelectField;
  cost?: PlatformCore.SearchDoubleField;
  createdDate?: PlatformCore.SearchDateField;
  endDate?: PlatformCore.SearchDateField;
  event?: PlatformCore.SearchStringField;
  expectedRevenue?: PlatformCore.SearchDoubleField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  family?: PlatformCore.SearchMultiSelectField;
  group?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  isSalesCampaign?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  keyword?: PlatformCore.SearchStringField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  manager?: PlatformCore.SearchMultiSelectField;
  managerRole?: PlatformCore.SearchMultiSelectField;
  number?: PlatformCore.SearchLongField;
  offer?: PlatformCore.SearchMultiSelectField;
  promoCode?: PlatformCore.SearchMultiSelectField;
  recipient?: PlatformCore.SearchMultiSelectField;
  response?: PlatformCore.SearchEnumMultiSelectField;
  responseCategory?: PlatformCore.SearchEnumMultiSelectField;
  responseCode?: PlatformCore.SearchLongField;
  responseComments?: PlatformCore.SearchStringField;
  responseDate?: PlatformCore.SearchDateField;
  scheduleDate?: PlatformCore.SearchDateField;
  searchEngine?: PlatformCore.SearchMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  status?: PlatformCore.SearchEnumMultiSelectField;
  subscription?: PlatformCore.SearchMultiSelectField;
  template?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  vertical?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class CampaignSearchBasic extends PlatformCore.SearchRecordBasic {
  audience?: PlatformCore.SearchMultiSelectField;
  baseCost?: PlatformCore.SearchDoubleField;
  campaignEventType?: PlatformCore.SearchEnumMultiSelectField;
  campaignId?: PlatformCore.SearchStringField;
  category?: PlatformCore.SearchMultiSelectField;
  channel?: PlatformCore.SearchMultiSelectField;
  cost?: PlatformCore.SearchDoubleField;
  createdDate?: PlatformCore.SearchDateField;
  endDate?: PlatformCore.SearchDateField;
  event?: PlatformCore.SearchStringField;
  expectedRevenue?: PlatformCore.SearchDoubleField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  family?: PlatformCore.SearchMultiSelectField;
  group?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  isSalesCampaign?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  keyword?: PlatformCore.SearchStringField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  manager?: PlatformCore.SearchMultiSelectField;
  managerRole?: PlatformCore.SearchMultiSelectField;
  number?: PlatformCore.SearchLongField;
  offer?: PlatformCore.SearchMultiSelectField;
  promoCode?: PlatformCore.SearchMultiSelectField;
  recipient?: PlatformCore.SearchMultiSelectField;
  response?: PlatformCore.SearchEnumMultiSelectField;
  responseCategory?: PlatformCore.SearchEnumMultiSelectField;
  responseCode?: PlatformCore.SearchLongField;
  responseComments?: PlatformCore.SearchStringField;
  responseDate?: PlatformCore.SearchDateField;
  scheduleDate?: PlatformCore.SearchDateField;
  searchEngine?: PlatformCore.SearchMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  status?: PlatformCore.SearchEnumMultiSelectField;
  subscription?: PlatformCore.SearchMultiSelectField;
  template?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  vertical?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: CampaignSearchBasicProps) {
    super();
    this.audience = props.audience;
    this.baseCost = props.baseCost;
    this.campaignEventType = props.campaignEventType;
    this.campaignId = props.campaignId;
    this.category = props.category;
    this.channel = props.channel;
    this.cost = props.cost;
    this.createdDate = props.createdDate;
    this.endDate = props.endDate;
    this.event = props.event;
    this.expectedRevenue = props.expectedRevenue;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.family = props.family;
    this.group = props.group;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.isSalesCampaign = props.isSalesCampaign;
    this.item = props.item;
    this.keyword = props.keyword;
    this.lastModifiedDate = props.lastModifiedDate;
    this.manager = props.manager;
    this.managerRole = props.managerRole;
    this.number = props.number;
    this.offer = props.offer;
    this.promoCode = props.promoCode;
    this.recipient = props.recipient;
    this.response = props.response;
    this.responseCategory = props.responseCategory;
    this.responseCode = props.responseCode;
    this.responseComments = props.responseComments;
    this.responseDate = props.responseDate;
    this.scheduleDate = props.scheduleDate;
    this.searchEngine = props.searchEngine;
    this.startDate = props.startDate;
    this.status = props.status;
    this.subscription = props.subscription;
    this.template = props.template;
    this.title = props.title;
    this.vertical = props.vertical;
    this.customFieldList = props.customFieldList;
  }
}

export type EntitySearchRowBasicProps = {
  address?: PlatformCore.SearchColumnStringField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  addressee?: PlatformCore.SearchColumnStringField[];
  addressInternalId?: PlatformCore.SearchColumnStringField[];
  addressLabel?: PlatformCore.SearchColumnStringField[];
  addressPhone?: PlatformCore.SearchColumnStringField[];
  altEmail?: PlatformCore.SearchColumnStringField[];
  altName?: PlatformCore.SearchColumnStringField[];
  altPhone?: PlatformCore.SearchColumnStringField[];
  attention?: PlatformCore.SearchColumnStringField[];
  billAddress1?: PlatformCore.SearchColumnStringField[];
  billAddress2?: PlatformCore.SearchColumnStringField[];
  billAddress3?: PlatformCore.SearchColumnStringField[];
  billAddressee?: PlatformCore.SearchColumnStringField[];
  billAttention?: PlatformCore.SearchColumnStringField[];
  billCity?: PlatformCore.SearchColumnStringField[];
  billCountry?: PlatformCore.SearchColumnEnumSelectField[];
  billCountryCode?: PlatformCore.SearchColumnStringField[];
  billPhone?: PlatformCore.SearchColumnStringField[];
  billState?: PlatformCore.SearchColumnStringField[];
  billZipCode?: PlatformCore.SearchColumnStringField[];
  city?: PlatformCore.SearchColumnStringField[];
  comments?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  countryCode?: PlatformCore.SearchColumnStringField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  defaultTaxReg?: PlatformCore.SearchColumnStringField[];
  email?: PlatformCore.SearchColumnStringField[];
  entityId?: PlatformCore.SearchColumnStringField[];
  entityNumber?: PlatformCore.SearchColumnLongField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  globalSubscriptionStatus?: PlatformCore.SearchColumnEnumSelectField[];
  image?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isDefaultBilling?: PlatformCore.SearchColumnBooleanField[];
  isDefaultShipping?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  language?: PlatformCore.SearchColumnEnumSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  level?: PlatformCore.SearchColumnEnumSelectField[];
  permission?: PlatformCore.SearchColumnEnumSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  phoneticName?: PlatformCore.SearchColumnStringField[];
  shipAddress1?: PlatformCore.SearchColumnStringField[];
  shipAddress2?: PlatformCore.SearchColumnStringField[];
  shipAddress3?: PlatformCore.SearchColumnStringField[];
  shipAddressee?: PlatformCore.SearchColumnStringField[];
  shipAttention?: PlatformCore.SearchColumnStringField[];
  shipCity?: PlatformCore.SearchColumnStringField[];
  shipCountry?: PlatformCore.SearchColumnEnumSelectField[];
  shipCountryCode?: PlatformCore.SearchColumnStringField[];
  shipPhone?: PlatformCore.SearchColumnStringField[];
  shipState?: PlatformCore.SearchColumnStringField[];
  shipZip?: PlatformCore.SearchColumnStringField[];
  state?: PlatformCore.SearchColumnStringField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionDate?: PlatformCore.SearchColumnDateField[];
  subscriptionStatus?: PlatformCore.SearchColumnBooleanField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  type?: PlatformCore.SearchColumnEnumSelectField[];
  zipCode?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class EntitySearchRowBasic extends PlatformCore.SearchRowBasic {
  address?: PlatformCore.SearchColumnStringField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  addressee?: PlatformCore.SearchColumnStringField[];
  addressInternalId?: PlatformCore.SearchColumnStringField[];
  addressLabel?: PlatformCore.SearchColumnStringField[];
  addressPhone?: PlatformCore.SearchColumnStringField[];
  altEmail?: PlatformCore.SearchColumnStringField[];
  altName?: PlatformCore.SearchColumnStringField[];
  altPhone?: PlatformCore.SearchColumnStringField[];
  attention?: PlatformCore.SearchColumnStringField[];
  billAddress1?: PlatformCore.SearchColumnStringField[];
  billAddress2?: PlatformCore.SearchColumnStringField[];
  billAddress3?: PlatformCore.SearchColumnStringField[];
  billAddressee?: PlatformCore.SearchColumnStringField[];
  billAttention?: PlatformCore.SearchColumnStringField[];
  billCity?: PlatformCore.SearchColumnStringField[];
  billCountry?: PlatformCore.SearchColumnEnumSelectField[];
  billCountryCode?: PlatformCore.SearchColumnStringField[];
  billPhone?: PlatformCore.SearchColumnStringField[];
  billState?: PlatformCore.SearchColumnStringField[];
  billZipCode?: PlatformCore.SearchColumnStringField[];
  city?: PlatformCore.SearchColumnStringField[];
  comments?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  countryCode?: PlatformCore.SearchColumnStringField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  defaultTaxReg?: PlatformCore.SearchColumnStringField[];
  email?: PlatformCore.SearchColumnStringField[];
  entityId?: PlatformCore.SearchColumnStringField[];
  entityNumber?: PlatformCore.SearchColumnLongField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  globalSubscriptionStatus?: PlatformCore.SearchColumnEnumSelectField[];
  image?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isDefaultBilling?: PlatformCore.SearchColumnBooleanField[];
  isDefaultShipping?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  language?: PlatformCore.SearchColumnEnumSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  level?: PlatformCore.SearchColumnEnumSelectField[];
  permission?: PlatformCore.SearchColumnEnumSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  phoneticName?: PlatformCore.SearchColumnStringField[];
  shipAddress1?: PlatformCore.SearchColumnStringField[];
  shipAddress2?: PlatformCore.SearchColumnStringField[];
  shipAddress3?: PlatformCore.SearchColumnStringField[];
  shipAddressee?: PlatformCore.SearchColumnStringField[];
  shipAttention?: PlatformCore.SearchColumnStringField[];
  shipCity?: PlatformCore.SearchColumnStringField[];
  shipCountry?: PlatformCore.SearchColumnEnumSelectField[];
  shipCountryCode?: PlatformCore.SearchColumnStringField[];
  shipPhone?: PlatformCore.SearchColumnStringField[];
  shipState?: PlatformCore.SearchColumnStringField[];
  shipZip?: PlatformCore.SearchColumnStringField[];
  state?: PlatformCore.SearchColumnStringField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionDate?: PlatformCore.SearchColumnDateField[];
  subscriptionStatus?: PlatformCore.SearchColumnBooleanField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  type?: PlatformCore.SearchColumnEnumSelectField[];
  zipCode?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: EntitySearchRowBasicProps) {
    super();
    this.address = props.address;
    this.address1 = props.address1;
    this.address2 = props.address2;
    this.address3 = props.address3;
    this.addressee = props.addressee;
    this.addressInternalId = props.addressInternalId;
    this.addressLabel = props.addressLabel;
    this.addressPhone = props.addressPhone;
    this.altEmail = props.altEmail;
    this.altName = props.altName;
    this.altPhone = props.altPhone;
    this.attention = props.attention;
    this.billAddress1 = props.billAddress1;
    this.billAddress2 = props.billAddress2;
    this.billAddress3 = props.billAddress3;
    this.billAddressee = props.billAddressee;
    this.billAttention = props.billAttention;
    this.billCity = props.billCity;
    this.billCountry = props.billCountry;
    this.billCountryCode = props.billCountryCode;
    this.billPhone = props.billPhone;
    this.billState = props.billState;
    this.billZipCode = props.billZipCode;
    this.city = props.city;
    this.comments = props.comments;
    this.country = props.country;
    this.countryCode = props.countryCode;
    this.dateCreated = props.dateCreated;
    this.defaultTaxReg = props.defaultTaxReg;
    this.email = props.email;
    this.entityId = props.entityId;
    this.entityNumber = props.entityNumber;
    this.externalId = props.externalId;
    this.fax = props.fax;
    this.globalSubscriptionStatus = props.globalSubscriptionStatus;
    this.image = props.image;
    this.internalId = props.internalId;
    this.isDefaultBilling = props.isDefaultBilling;
    this.isDefaultShipping = props.isDefaultShipping;
    this.isInactive = props.isInactive;
    this.language = props.language;
    this.lastModifiedDate = props.lastModifiedDate;
    this.level = props.level;
    this.permission = props.permission;
    this.phone = props.phone;
    this.phoneticName = props.phoneticName;
    this.shipAddress1 = props.shipAddress1;
    this.shipAddress2 = props.shipAddress2;
    this.shipAddress3 = props.shipAddress3;
    this.shipAddressee = props.shipAddressee;
    this.shipAttention = props.shipAttention;
    this.shipCity = props.shipCity;
    this.shipCountry = props.shipCountry;
    this.shipCountryCode = props.shipCountryCode;
    this.shipPhone = props.shipPhone;
    this.shipState = props.shipState;
    this.shipZip = props.shipZip;
    this.state = props.state;
    this.subscription = props.subscription;
    this.subscriptionDate = props.subscriptionDate;
    this.subscriptionStatus = props.subscriptionStatus;
    this.subsidiary = props.subsidiary;
    this.type = props.type;
    this.zipCode = props.zipCode;
    this.customFieldList = props.customFieldList;
  }
}

export type BinSearchRowBasicProps = {
  binNumber?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  inactive?: PlatformCore.SearchColumnBooleanField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  location?: PlatformCore.SearchColumnStringField[];
  memo?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class BinSearchRowBasic extends PlatformCore.SearchRowBasic {
  binNumber?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  inactive?: PlatformCore.SearchColumnBooleanField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  location?: PlatformCore.SearchColumnStringField[];
  memo?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: BinSearchRowBasicProps) {
    super();
    this.binNumber = props.binNumber;
    this.externalId = props.externalId;
    this.inactive = props.inactive;
    this.internalId = props.internalId;
    this.location = props.location;
    this.memo = props.memo;
    this.customFieldList = props.customFieldList;
  }
}

export type EntityTaxRegistrationSearchRowBasicProps = {
  address?: PlatformCore.SearchColumnSelectField[];
  id?: PlatformCore.SearchColumnLongField[];
  nexusCountry?: PlatformCore.SearchColumnEnumSelectField[];
  taxRegistrationNumber?: PlatformCore.SearchColumnStringField[];
};

export class EntityTaxRegistrationSearchRowBasic extends PlatformCore.SearchRowBasic {
  address?: PlatformCore.SearchColumnSelectField[];
  id?: PlatformCore.SearchColumnLongField[];
  nexusCountry?: PlatformCore.SearchColumnEnumSelectField[];
  taxRegistrationNumber?: PlatformCore.SearchColumnStringField[];
  constructor(props: EntityTaxRegistrationSearchRowBasicProps) {
    super();
    this.address = props.address;
    this.id = props.id;
    this.nexusCountry = props.nexusCountry;
    this.taxRegistrationNumber = props.taxRegistrationNumber;
  }
}

export type CustomRecordSearchRowBasicProps = {
  recType: PlatformCore.RecordRef;
  altName?: PlatformCore.SearchColumnStringField[];
  availableOffline?: PlatformCore.SearchColumnBooleanField[];
  created?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  id?: PlatformCore.SearchColumnLongField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  lastModified?: PlatformCore.SearchColumnDateField[];
  lastModifiedBy?: PlatformCore.SearchColumnSelectField[];
  name?: PlatformCore.SearchColumnStringField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  parent?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class CustomRecordSearchRowBasic extends PlatformCore.SearchRowBasic {
  recType: PlatformCore.RecordRef;
  altName?: PlatformCore.SearchColumnStringField[];
  availableOffline?: PlatformCore.SearchColumnBooleanField[];
  created?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  id?: PlatformCore.SearchColumnLongField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  lastModified?: PlatformCore.SearchColumnDateField[];
  lastModifiedBy?: PlatformCore.SearchColumnSelectField[];
  name?: PlatformCore.SearchColumnStringField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  parent?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: CustomRecordSearchRowBasicProps) {
    super();
    this.recType = props.recType;
    this.altName = props.altName;
    this.availableOffline = props.availableOffline;
    this.created = props.created;
    this.externalId = props.externalId;
    this.id = props.id;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.lastModified = props.lastModified;
    this.lastModifiedBy = props.lastModifiedBy;
    this.name = props.name;
    this.owner = props.owner;
    this.parent = props.parent;
    this.customFieldList = props.customFieldList;
  }
}

export type IssueSearchRowBasicProps = {
  ageInMonths?: PlatformCore.SearchColumnLongField[];
  assigned?: PlatformCore.SearchColumnSelectField[];
  buildBroken?: PlatformCore.SearchColumnSelectField[];
  buildFixed?: PlatformCore.SearchColumnSelectField[];
  buildTarget?: PlatformCore.SearchColumnSelectField[];
  caseCount?: PlatformCore.SearchColumnLongField[];
  caseNumber?: PlatformCore.SearchColumnStringField[];
  closedDate?: PlatformCore.SearchColumnDateField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  dateReleased?: PlatformCore.SearchColumnDateField[];
  duplicateOf?: PlatformCore.SearchColumnSelectField[];
  employeeOrTeam?: PlatformCore.SearchColumnSelectField[];
  eventStatus?: PlatformCore.SearchColumnEnumSelectField[];
  externalAbstract?: PlatformCore.SearchColumnStringField[];
  externalDetails?: PlatformCore.SearchColumnStringField[];
  externalFixedIn?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  externalStatus?: PlatformCore.SearchColumnSelectField[];
  fixed?: PlatformCore.SearchColumnDateField[];
  fixedBy?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isOwner?: PlatformCore.SearchColumnBooleanField[];
  isReviewed?: PlatformCore.SearchColumnBooleanField[];
  isShowStopper?: PlatformCore.SearchColumnBooleanField[];
  issueAbstract?: PlatformCore.SearchColumnStringField[];
  issueStatus?: PlatformCore.SearchColumnSelectField[];
  item?: PlatformCore.SearchColumnSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  module?: PlatformCore.SearchColumnStringField[];
  number?: PlatformCore.SearchColumnStringField[];
  originalFixedIn?: PlatformCore.SearchColumnStringField[];
  priority?: PlatformCore.SearchColumnSelectField[];
  product?: PlatformCore.SearchColumnSelectField[];
  productTeam?: PlatformCore.SearchColumnSelectField[];
  relatedIssue?: PlatformCore.SearchColumnSelectField[];
  relationship?: PlatformCore.SearchColumnEnumSelectField[];
  relationshipComment?: PlatformCore.SearchColumnStringField[];
  reportedBy?: PlatformCore.SearchColumnSelectField[];
  reproduce?: PlatformCore.SearchColumnSelectField[];
  resolved?: PlatformCore.SearchColumnDateField[];
  resolvedBy?: PlatformCore.SearchColumnSelectField[];
  reviewer?: PlatformCore.SearchColumnSelectField[];
  severity?: PlatformCore.SearchColumnSelectField[];
  source?: PlatformCore.SearchColumnEnumSelectField[];
  tags?: PlatformCore.SearchColumnSelectField[];
  type?: PlatformCore.SearchColumnStringField[];
  userType?: PlatformCore.SearchColumnSelectField[];
  versionBroken?: PlatformCore.SearchColumnSelectField[];
  versionFixed?: PlatformCore.SearchColumnSelectField[];
  versionTarget?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class IssueSearchRowBasic extends PlatformCore.SearchRowBasic {
  ageInMonths?: PlatformCore.SearchColumnLongField[];
  assigned?: PlatformCore.SearchColumnSelectField[];
  buildBroken?: PlatformCore.SearchColumnSelectField[];
  buildFixed?: PlatformCore.SearchColumnSelectField[];
  buildTarget?: PlatformCore.SearchColumnSelectField[];
  caseCount?: PlatformCore.SearchColumnLongField[];
  caseNumber?: PlatformCore.SearchColumnStringField[];
  closedDate?: PlatformCore.SearchColumnDateField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  dateReleased?: PlatformCore.SearchColumnDateField[];
  duplicateOf?: PlatformCore.SearchColumnSelectField[];
  employeeOrTeam?: PlatformCore.SearchColumnSelectField[];
  eventStatus?: PlatformCore.SearchColumnEnumSelectField[];
  externalAbstract?: PlatformCore.SearchColumnStringField[];
  externalDetails?: PlatformCore.SearchColumnStringField[];
  externalFixedIn?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  externalStatus?: PlatformCore.SearchColumnSelectField[];
  fixed?: PlatformCore.SearchColumnDateField[];
  fixedBy?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isOwner?: PlatformCore.SearchColumnBooleanField[];
  isReviewed?: PlatformCore.SearchColumnBooleanField[];
  isShowStopper?: PlatformCore.SearchColumnBooleanField[];
  issueAbstract?: PlatformCore.SearchColumnStringField[];
  issueStatus?: PlatformCore.SearchColumnSelectField[];
  item?: PlatformCore.SearchColumnSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  module?: PlatformCore.SearchColumnStringField[];
  number?: PlatformCore.SearchColumnStringField[];
  originalFixedIn?: PlatformCore.SearchColumnStringField[];
  priority?: PlatformCore.SearchColumnSelectField[];
  product?: PlatformCore.SearchColumnSelectField[];
  productTeam?: PlatformCore.SearchColumnSelectField[];
  relatedIssue?: PlatformCore.SearchColumnSelectField[];
  relationship?: PlatformCore.SearchColumnEnumSelectField[];
  relationshipComment?: PlatformCore.SearchColumnStringField[];
  reportedBy?: PlatformCore.SearchColumnSelectField[];
  reproduce?: PlatformCore.SearchColumnSelectField[];
  resolved?: PlatformCore.SearchColumnDateField[];
  resolvedBy?: PlatformCore.SearchColumnSelectField[];
  reviewer?: PlatformCore.SearchColumnSelectField[];
  severity?: PlatformCore.SearchColumnSelectField[];
  source?: PlatformCore.SearchColumnEnumSelectField[];
  tags?: PlatformCore.SearchColumnSelectField[];
  type?: PlatformCore.SearchColumnStringField[];
  userType?: PlatformCore.SearchColumnSelectField[];
  versionBroken?: PlatformCore.SearchColumnSelectField[];
  versionFixed?: PlatformCore.SearchColumnSelectField[];
  versionTarget?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: IssueSearchRowBasicProps) {
    super();
    this.ageInMonths = props.ageInMonths;
    this.assigned = props.assigned;
    this.buildBroken = props.buildBroken;
    this.buildFixed = props.buildFixed;
    this.buildTarget = props.buildTarget;
    this.caseCount = props.caseCount;
    this.caseNumber = props.caseNumber;
    this.closedDate = props.closedDate;
    this.createdDate = props.createdDate;
    this.dateReleased = props.dateReleased;
    this.duplicateOf = props.duplicateOf;
    this.employeeOrTeam = props.employeeOrTeam;
    this.eventStatus = props.eventStatus;
    this.externalAbstract = props.externalAbstract;
    this.externalDetails = props.externalDetails;
    this.externalFixedIn = props.externalFixedIn;
    this.externalId = props.externalId;
    this.externalStatus = props.externalStatus;
    this.fixed = props.fixed;
    this.fixedBy = props.fixedBy;
    this.internalId = props.internalId;
    this.isOwner = props.isOwner;
    this.isReviewed = props.isReviewed;
    this.isShowStopper = props.isShowStopper;
    this.issueAbstract = props.issueAbstract;
    this.issueStatus = props.issueStatus;
    this.item = props.item;
    this.lastModifiedDate = props.lastModifiedDate;
    this.module = props.module;
    this.number = props.number;
    this.originalFixedIn = props.originalFixedIn;
    this.priority = props.priority;
    this.product = props.product;
    this.productTeam = props.productTeam;
    this.relatedIssue = props.relatedIssue;
    this.relationship = props.relationship;
    this.relationshipComment = props.relationshipComment;
    this.reportedBy = props.reportedBy;
    this.reproduce = props.reproduce;
    this.resolved = props.resolved;
    this.resolvedBy = props.resolvedBy;
    this.reviewer = props.reviewer;
    this.severity = props.severity;
    this.source = props.source;
    this.tags = props.tags;
    this.type = props.type;
    this.userType = props.userType;
    this.versionBroken = props.versionBroken;
    this.versionFixed = props.versionFixed;
    this.versionTarget = props.versionTarget;
    this.customFieldList = props.customFieldList;
  }
}

export type ItemSupplyPlanSearchBasicProps = {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  item?: PlatformCore.SearchMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  location?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  orderCreated?: PlatformCore.SearchBooleanField;
  orderDate?: PlatformCore.SearchDateField;
  orderType?: PlatformCore.SearchMultiSelectField;
  quantity?: PlatformCore.SearchDoubleField;
  receiptDate?: PlatformCore.SearchDateField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  units?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class ItemSupplyPlanSearchBasic extends PlatformCore.SearchRecordBasic {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  item?: PlatformCore.SearchMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  location?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  orderCreated?: PlatformCore.SearchBooleanField;
  orderDate?: PlatformCore.SearchDateField;
  orderType?: PlatformCore.SearchMultiSelectField;
  quantity?: PlatformCore.SearchDoubleField;
  receiptDate?: PlatformCore.SearchDateField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  units?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: ItemSupplyPlanSearchBasicProps) {
    super();
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.item = props.item;
    this.lastModifiedDate = props.lastModifiedDate;
    this.location = props.location;
    this.memo = props.memo;
    this.orderCreated = props.orderCreated;
    this.orderDate = props.orderDate;
    this.orderType = props.orderType;
    this.quantity = props.quantity;
    this.receiptDate = props.receiptDate;
    this.subsidiary = props.subsidiary;
    this.units = props.units;
    this.customFieldList = props.customFieldList;
  }
}

export type BillingAccountSearchRowBasicProps = {
  billingSchedule?: PlatformCore.SearchColumnSelectField[];
  cashSaleForm?: PlatformCore.SearchColumnSelectField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  customer?: PlatformCore.SearchColumnSelectField[];
  customerDefault?: PlatformCore.SearchColumnBooleanField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  department?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  frequency?: PlatformCore.SearchColumnEnumSelectField[];
  idNumber?: PlatformCore.SearchColumnStringField[];
  inactive?: PlatformCore.SearchColumnBooleanField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  invoiceForm?: PlatformCore.SearchColumnSelectField[];
  lastBillCycleDate?: PlatformCore.SearchColumnDateField[];
  lastBillDate?: PlatformCore.SearchColumnDateField[];
  location?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  nextBillCycleDate?: PlatformCore.SearchColumnDateField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class BillingAccountSearchRowBasic extends PlatformCore.SearchRowBasic {
  billingSchedule?: PlatformCore.SearchColumnSelectField[];
  cashSaleForm?: PlatformCore.SearchColumnSelectField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  customer?: PlatformCore.SearchColumnSelectField[];
  customerDefault?: PlatformCore.SearchColumnBooleanField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  department?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  frequency?: PlatformCore.SearchColumnEnumSelectField[];
  idNumber?: PlatformCore.SearchColumnStringField[];
  inactive?: PlatformCore.SearchColumnBooleanField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  invoiceForm?: PlatformCore.SearchColumnSelectField[];
  lastBillCycleDate?: PlatformCore.SearchColumnDateField[];
  lastBillDate?: PlatformCore.SearchColumnDateField[];
  location?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  nextBillCycleDate?: PlatformCore.SearchColumnDateField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: BillingAccountSearchRowBasicProps) {
    super();
    this.billingSchedule = props.billingSchedule;
    this.cashSaleForm = props.cashSaleForm;
    this.clazz = props.clazz;
    this.currency = props.currency;
    this.customer = props.customer;
    this.customerDefault = props.customerDefault;
    this.dateCreated = props.dateCreated;
    this.department = props.department;
    this.externalId = props.externalId;
    this.frequency = props.frequency;
    this.idNumber = props.idNumber;
    this.inactive = props.inactive;
    this.internalId = props.internalId;
    this.invoiceForm = props.invoiceForm;
    this.lastBillCycleDate = props.lastBillCycleDate;
    this.lastBillDate = props.lastBillDate;
    this.location = props.location;
    this.memo = props.memo;
    this.name = props.name;
    this.nextBillCycleDate = props.nextBillCycleDate;
    this.startDate = props.startDate;
    this.subsidiary = props.subsidiary;
    this.customFieldList = props.customFieldList;
  }
}

export type RevRecTemplateSearchRowBasicProps = {
  amorMethod?: PlatformCore.SearchColumnStringField[];
  amorPeriod?: PlatformCore.SearchColumnStringField[];
  amorStartOffset?: PlatformCore.SearchColumnStringField[];
  amorTermSrc?: PlatformCore.SearchColumnStringField[];
  amorType?: PlatformCore.SearchColumnStringField[];
  contraAccount?: PlatformCore.SearchColumnStringField[];
  deferralAccount?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  periodOffset?: PlatformCore.SearchColumnStringField[];
  targetAccount?: PlatformCore.SearchColumnStringField[];
  useForeignAmounts?: PlatformCore.SearchColumnBooleanField[];
};

export class RevRecTemplateSearchRowBasic extends PlatformCore.SearchRowBasic {
  amorMethod?: PlatformCore.SearchColumnStringField[];
  amorPeriod?: PlatformCore.SearchColumnStringField[];
  amorStartOffset?: PlatformCore.SearchColumnStringField[];
  amorTermSrc?: PlatformCore.SearchColumnStringField[];
  amorType?: PlatformCore.SearchColumnStringField[];
  contraAccount?: PlatformCore.SearchColumnStringField[];
  deferralAccount?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  periodOffset?: PlatformCore.SearchColumnStringField[];
  targetAccount?: PlatformCore.SearchColumnStringField[];
  useForeignAmounts?: PlatformCore.SearchColumnBooleanField[];
  constructor(props: RevRecTemplateSearchRowBasicProps) {
    super();
    this.amorMethod = props.amorMethod;
    this.amorPeriod = props.amorPeriod;
    this.amorStartOffset = props.amorStartOffset;
    this.amorTermSrc = props.amorTermSrc;
    this.amorType = props.amorType;
    this.contraAccount = props.contraAccount;
    this.deferralAccount = props.deferralAccount;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.periodOffset = props.periodOffset;
    this.targetAccount = props.targetAccount;
    this.useForeignAmounts = props.useForeignAmounts;
  }
}

export type ItemSearchBasicProps = {
  accBookRevRecForecastRule?: PlatformCore.SearchMultiSelectField;
  account?: PlatformCore.SearchMultiSelectField;
  accountingBook?: PlatformCore.SearchMultiSelectField;
  accountingBookAmortization?: PlatformCore.SearchMultiSelectField;
  accountingBookCreatePlansOn?: PlatformCore.SearchMultiSelectField;
  accountingBookRevRecRule?: PlatformCore.SearchMultiSelectField;
  accountingBookRevRecSchedule?: PlatformCore.SearchMultiSelectField;
  allowedShippingMethod?: PlatformCore.SearchMultiSelectField;
  alternateDemandSourceItem?: PlatformCore.SearchMultiSelectField;
  atpLeadTime?: PlatformCore.SearchDoubleField;
  atpMethod?: PlatformCore.SearchEnumMultiSelectField;
  autoLeadTime?: PlatformCore.SearchBooleanField;
  autoPreferredStockLevel?: PlatformCore.SearchBooleanField;
  autoReorderPoint?: PlatformCore.SearchBooleanField;
  availableToPartners?: PlatformCore.SearchBooleanField;
  averageCost?: PlatformCore.SearchDoubleField;
  backwardConsumptionDays?: PlatformCore.SearchLongField;
  binNumber?: PlatformCore.SearchStringField;
  binOnHandAvail?: PlatformCore.SearchDoubleField;
  binOnHandCount?: PlatformCore.SearchDoubleField;
  bomQuantity?: PlatformCore.SearchDoubleField;
  buildEntireAssembly?: PlatformCore.SearchBooleanField;
  buildTime?: PlatformCore.SearchDoubleField;
  buyItNowPrice?: PlatformCore.SearchDoubleField;
  caption?: PlatformCore.SearchStringField;
  category?: PlatformCore.SearchMultiSelectField;
  clazz?: PlatformCore.SearchMultiSelectField;
  component?: PlatformCore.SearchMultiSelectField;
  componentOf?: PlatformCore.SearchMultiSelectField;
  componentYield?: PlatformCore.SearchDoubleField;
  consumptionUnit?: PlatformCore.SearchMultiSelectField;
  contingentRevenueHandling?: PlatformCore.SearchBooleanField;
  copyDescription?: PlatformCore.SearchBooleanField;
  correlatedItem?: PlatformCore.SearchMultiSelectField;
  correlatedItemCorrelation?: PlatformCore.SearchDoubleField;
  correlatedItemCount?: PlatformCore.SearchLongField;
  correlatedItemLift?: PlatformCore.SearchDoubleField;
  correlatedItemPurchaseRate?: PlatformCore.SearchDoubleField;
  cost?: PlatformCore.SearchDoubleField;
  costAccountingStatus?: PlatformCore.SearchEnumMultiSelectField;
  costCategory?: PlatformCore.SearchMultiSelectField;
  costEstimate?: PlatformCore.SearchDoubleField;
  costEstimateType?: PlatformCore.SearchEnumMultiSelectField;
  costingMethod?: PlatformCore.SearchEnumMultiSelectField;
  countryOfManufacture?: PlatformCore.SearchEnumMultiSelectField;
  created?: PlatformCore.SearchDateField;
  createJob?: PlatformCore.SearchBooleanField;
  createRevenuePlansOn?: PlatformCore.SearchMultiSelectField;
  dateViewed?: PlatformCore.SearchDateField;
  daysBeforeExpiration?: PlatformCore.SearchDoubleField;
  defaultReturnCost?: PlatformCore.SearchDoubleField;
  defaultShippingMethod?: PlatformCore.SearchMultiSelectField;
  deferRevRec?: PlatformCore.SearchBooleanField;
  demandModifier?: PlatformCore.SearchDoubleField;
  demandSource?: PlatformCore.SearchEnumMultiSelectField;
  demandTimeFence?: PlatformCore.SearchLongField;
  department?: PlatformCore.SearchMultiSelectField;
  directRevenuePosting?: PlatformCore.SearchBooleanField;
  displayIneBayStore?: PlatformCore.SearchBooleanField;
  displayName?: PlatformCore.SearchStringField;
  distributionCategory?: PlatformCore.SearchMultiSelectField;
  distributionNetwork?: PlatformCore.SearchMultiSelectField;
  dontShowPrice?: PlatformCore.SearchBooleanField;
  eBayItemDescription?: PlatformCore.SearchStringField;
  eBayItemSubtitle?: PlatformCore.SearchStringField;
  eBayItemTitle?: PlatformCore.SearchStringField;
  ebayRelistingOption?: PlatformCore.SearchEnumMultiSelectField;
  effectiveBomControl?: PlatformCore.SearchEnumMultiSelectField;
  effectiveDate?: PlatformCore.SearchDateField;
  effectiveRevision?: PlatformCore.SearchMultiSelectField;
  endAuctionsWhenOutOfStock?: PlatformCore.SearchBooleanField;
  excludeFromSitemap?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  featuredDescription?: PlatformCore.SearchStringField;
  feedDescription?: PlatformCore.SearchStringField;
  feedName?: PlatformCore.SearchStringField;
  fixedLotSize?: PlatformCore.SearchDoubleField;
  forwardConsumptionDays?: PlatformCore.SearchLongField;
  fraudRisk?: PlatformCore.SearchEnumMultiSelectField;
  froogleProductFeed?: PlatformCore.SearchBooleanField;
  futureHorizon?: PlatformCore.SearchLongField;
  fxCost?: PlatformCore.SearchDoubleField;
  generateAccruals?: PlatformCore.SearchBooleanField;
  giftCertAuthCode?: PlatformCore.SearchStringField;
  giftCertEmail?: PlatformCore.SearchStringField;
  giftCertExpDate?: PlatformCore.SearchDateField;
  giftCertFrom?: PlatformCore.SearchStringField;
  giftCertMsg?: PlatformCore.SearchStringField;
  giftCertOrigAmt?: PlatformCore.SearchStringField;
  giftCertRecipient?: PlatformCore.SearchStringField;
  hierarchyNode?: PlatformCore.SearchMultiSelectField;
  hierarchyVersion?: PlatformCore.SearchMultiSelectField;
  imageUrl?: PlatformCore.SearchStringField;
  includeChildren?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  inventoryLocation?: PlatformCore.SearchMultiSelectField;
  invtClassification?: PlatformCore.SearchEnumMultiSelectField;
  invtCountInterval?: PlatformCore.SearchLongField;
  isAvailable?: PlatformCore.SearchBooleanField;
  isDropShipItem?: PlatformCore.SearchBooleanField;
  isFulfillable?: PlatformCore.SearchBooleanField;
  isGcoCompliant?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isLotItem?: PlatformCore.SearchBooleanField;
  isOnline?: PlatformCore.SearchBooleanField;
  isPreferredVendor?: PlatformCore.SearchBooleanField;
  isSerialItem?: PlatformCore.SearchBooleanField;
  isSpecialOrderItem?: PlatformCore.SearchBooleanField;
  isSpecialWorkOrderItem?: PlatformCore.SearchBooleanField;
  isStorePickupAllowed?: PlatformCore.SearchBooleanField;
  issueProduct?: PlatformCore.SearchMultiSelectField;
  isTaxable?: PlatformCore.SearchBooleanField;
  isVsoeBundle?: PlatformCore.SearchBooleanField;
  isWip?: PlatformCore.SearchBooleanField;
  itemId?: PlatformCore.SearchStringField;
  itemRevenueCategory?: PlatformCore.SearchMultiSelectField;
  itemUrl?: PlatformCore.SearchStringField;
  lastInvtCountDate?: PlatformCore.SearchDateField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  lastPurchasePrice?: PlatformCore.SearchDoubleField;
  lastQuantityAvailableChange?: PlatformCore.SearchDateField;
  leadTime?: PlatformCore.SearchLongField;
  listingDuration?: PlatformCore.SearchEnumMultiSelectField;
  location?: PlatformCore.SearchMultiSelectField;
  locationAllowStorePickup?: PlatformCore.SearchBooleanField;
  locationAtpLeadTime?: PlatformCore.SearchDoubleField;
  locationAverageCost?: PlatformCore.SearchDoubleField;
  locationBuildTime?: PlatformCore.SearchDoubleField;
  locationCost?: PlatformCore.SearchDoubleField;
  locationCostAccountingStatus?: PlatformCore.SearchEnumMultiSelectField;
  locationDefaultReturnCost?: PlatformCore.SearchDoubleField;
  locationDemandSource?: PlatformCore.SearchEnumMultiSelectField;
  locationDemandTimeFence?: PlatformCore.SearchLongField;
  locationFixedLotSize?: PlatformCore.SearchDoubleField;
  locationInventoryCostTemplate?: PlatformCore.SearchMultiSelectField;
  locationInvtClassification?: PlatformCore.SearchEnumMultiSelectField;
  locationInvtCountInterval?: PlatformCore.SearchLongField;
  locationLastInvtCountDate?: PlatformCore.SearchDateField;
  locationLeadTime?: PlatformCore.SearchLongField;
  locationNextInvtCountDate?: PlatformCore.SearchDateField;
  locationPeriodicLotSizeDays?: PlatformCore.SearchLongField;
  locationPeriodicLotSizeType?: PlatformCore.SearchEnumMultiSelectField;
  locationPreferredStockLevel?: PlatformCore.SearchDoubleField;
  locationQtyAvailForStorePickup?: PlatformCore.SearchDoubleField;
  locationQuantityAvailable?: PlatformCore.SearchDoubleField;
  locationQuantityBackOrdered?: PlatformCore.SearchDoubleField;
  locationQuantityCommitted?: PlatformCore.SearchDoubleField;
  locationQuantityInTransit?: PlatformCore.SearchDoubleField;
  locationQuantityOnHand?: PlatformCore.SearchDoubleField;
  locationQuantityOnOrder?: PlatformCore.SearchDoubleField;
  locationReorderPoint?: PlatformCore.SearchDoubleField;
  locationRescheduleInDays?: PlatformCore.SearchLongField;
  locationRescheduleOutDays?: PlatformCore.SearchLongField;
  locationSafetyStockLevel?: PlatformCore.SearchDoubleField;
  locationStorePickupBufferStock?: PlatformCore.SearchDoubleField;
  locationSupplyLotSizingMethod?: PlatformCore.SearchEnumMultiSelectField;
  locationSupplyTimeFence?: PlatformCore.SearchLongField;
  locationSupplyType?: PlatformCore.SearchEnumMultiSelectField;
  locationTotalValue?: PlatformCore.SearchDoubleField;
  locBackwardConsumptionDays?: PlatformCore.SearchLongField;
  locForwardConsumptionDays?: PlatformCore.SearchLongField;
  manufacturer?: PlatformCore.SearchStringField;
  manufactureraddr1?: PlatformCore.SearchStringField;
  manufacturerCity?: PlatformCore.SearchStringField;
  manufacturerState?: PlatformCore.SearchStringField;
  manufacturerTariff?: PlatformCore.SearchStringField;
  manufacturerTaxId?: PlatformCore.SearchStringField;
  manufacturerZip?: PlatformCore.SearchStringField;
  manufacturingChargeItem?: PlatformCore.SearchBooleanField;
  matchBillToReceipt?: PlatformCore.SearchBooleanField;
  matrix?: PlatformCore.SearchBooleanField;
  matrixChild?: PlatformCore.SearchBooleanField;
  maximumQuantity?: PlatformCore.SearchLongField;
  metaTagHtml?: PlatformCore.SearchStringField;
  minimumQuantity?: PlatformCore.SearchLongField;
  mossApplies?: PlatformCore.SearchBooleanField;
  mpn?: PlatformCore.SearchStringField;
  multManufactureAddr?: PlatformCore.SearchBooleanField;
  nexTagCategory?: PlatformCore.SearchStringField;
  nexTagProductFeed?: PlatformCore.SearchBooleanField;
  nextInvtCountDate?: PlatformCore.SearchDateField;
  numActiveListings?: PlatformCore.SearchLongField;
  numberAllowedDownloads?: PlatformCore.SearchDoubleField;
  numCurrentlyListed?: PlatformCore.SearchLongField;
  obsoleteDate?: PlatformCore.SearchDateField;
  obsoleteRevision?: PlatformCore.SearchMultiSelectField;
  offerSupport?: PlatformCore.SearchBooleanField;
  onlineCustomerPrice?: PlatformCore.SearchDoubleField;
  onSpecial?: PlatformCore.SearchBooleanField;
  otherVendor?: PlatformCore.SearchMultiSelectField;
  outOfStockBehavior?: PlatformCore.SearchMultiSelectField;
  overallQuantityPricingType?: PlatformCore.SearchEnumMultiSelectField;
  overheadType?: PlatformCore.SearchEnumMultiSelectField;
  pageTitle?: PlatformCore.SearchStringField;
  parent?: PlatformCore.SearchMultiSelectField;
  periodicLotSizeDays?: PlatformCore.SearchLongField;
  periodicLotSizeType?: PlatformCore.SearchEnumMultiSelectField;
  preferenceCriterion?: PlatformCore.SearchStringField;
  preferredBin?: PlatformCore.SearchBooleanField;
  preferredLocation?: PlatformCore.SearchMultiSelectField;
  preferredStockLevel?: PlatformCore.SearchDoubleField;
  preferredStockLevelDays?: PlatformCore.SearchLongField;
  price?: PlatformCore.SearchDoubleField;
  pricesIncludeTax?: PlatformCore.SearchBooleanField;
  pricingGroup?: PlatformCore.SearchMultiSelectField;
  primaryCategory?: PlatformCore.SearchLongField;
  purchaseOrderAmount?: PlatformCore.SearchDoubleField;
  purchaseOrderQuantity?: PlatformCore.SearchDoubleField;
  purchaseOrderQuantityDiff?: PlatformCore.SearchDoubleField;
  purchaseUnit?: PlatformCore.SearchMultiSelectField;
  quantityAvailable?: PlatformCore.SearchDoubleField;
  quantityBackOrdered?: PlatformCore.SearchDoubleField;
  quantityCommitted?: PlatformCore.SearchDoubleField;
  quantityOnHand?: PlatformCore.SearchDoubleField;
  quantityOnOrder?: PlatformCore.SearchDoubleField;
  quantityPricingSchedule?: PlatformCore.SearchMultiSelectField;
  receiptAmount?: PlatformCore.SearchDoubleField;
  receiptQuantity?: PlatformCore.SearchDoubleField;
  receiptQuantityDiff?: PlatformCore.SearchDoubleField;
  reorderMultiple?: PlatformCore.SearchLongField;
  reorderPoint?: PlatformCore.SearchDoubleField;
  rescheduleInDays?: PlatformCore.SearchLongField;
  rescheduleOutDays?: PlatformCore.SearchLongField;
  reservePrice?: PlatformCore.SearchDoubleField;
  revenueAllocationGroup?: PlatformCore.SearchMultiSelectField;
  revenueRecognitionRule?: PlatformCore.SearchMultiSelectField;
  revRecForecastRule?: PlatformCore.SearchMultiSelectField;
  revRecSchedule?: PlatformCore.SearchMultiSelectField;
  roundUpAsComponent?: PlatformCore.SearchBooleanField;
  safetyStockLevel?: PlatformCore.SearchDoubleField;
  safetyStockLevelDays?: PlatformCore.SearchLongField;
  salesDescription?: PlatformCore.SearchStringField;
  saleUnit?: PlatformCore.SearchMultiSelectField;
  sameAsPrimaryBookAmortization?: PlatformCore.SearchBooleanField;
  sameAsPrimaryBookRevRec?: PlatformCore.SearchBooleanField;
  scheduleBCode?: PlatformCore.SearchEnumMultiSelectField;
  scheduleBNumber?: PlatformCore.SearchStringField;
  scheduleBQuantity?: PlatformCore.SearchStringField;
  searchKeywords?: PlatformCore.SearchStringField;
  seasonalDemand?: PlatformCore.SearchBooleanField;
  sellOnEBay?: PlatformCore.SearchBooleanField;
  serialNumber?: PlatformCore.SearchStringField;
  serialNumberLocation?: PlatformCore.SearchMultiSelectField;
  shipIndividually?: PlatformCore.SearchBooleanField;
  shipPackage?: PlatformCore.SearchMultiSelectField;
  shippingCarrier?: PlatformCore.SearchEnumMultiSelectField;
  shippingRate?: PlatformCore.SearchDoubleField;
  shoppingDotComCategory?: PlatformCore.SearchStringField;
  shoppingProductFeed?: PlatformCore.SearchBooleanField;
  shopzillaCategoryId?: PlatformCore.SearchLongField;
  shopzillaProductFeed?: PlatformCore.SearchBooleanField;
  sitemapPriority?: PlatformCore.SearchEnumMultiSelectField;
  softDescriptor?: PlatformCore.SearchMultiSelectField;
  startingPrice?: PlatformCore.SearchDoubleField;
  stockDescription?: PlatformCore.SearchStringField;
  stockUnit?: PlatformCore.SearchMultiSelectField;
  storeDescription?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  subType?: PlatformCore.SearchEnumMultiSelectField;
  supplyLotSizingMethod?: PlatformCore.SearchEnumMultiSelectField;
  supplyReplenishmentMethod?: PlatformCore.SearchEnumMultiSelectField;
  supplyTimeFence?: PlatformCore.SearchLongField;
  supplyType?: PlatformCore.SearchEnumMultiSelectField;
  taxCode?: PlatformCore.SearchMultiSelectField;
  taxSchedule?: PlatformCore.SearchMultiSelectField;
  thumbnailUrl?: PlatformCore.SearchStringField;
  totalValue?: PlatformCore.SearchDoubleField;
  trackLandedCost?: PlatformCore.SearchBooleanField;
  transferPrice?: PlatformCore.SearchDoubleField;
  type?: PlatformCore.SearchEnumMultiSelectField;
  unitsType?: PlatformCore.SearchMultiSelectField;
  upcCode?: PlatformCore.SearchStringField;
  urlComponent?: PlatformCore.SearchStringField;
  useBins?: PlatformCore.SearchBooleanField;
  useComponentYield?: PlatformCore.SearchBooleanField;
  useMarginalRates?: PlatformCore.SearchBooleanField;
  vendor?: PlatformCore.SearchMultiSelectField;
  vendorCode?: PlatformCore.SearchStringField;
  vendorCost?: PlatformCore.SearchDoubleField;
  vendorCostEntered?: PlatformCore.SearchDoubleField;
  vendorName?: PlatformCore.SearchStringField;
  vendorPriceCurrency?: PlatformCore.SearchMultiSelectField;
  vsoeDeferral?: PlatformCore.SearchEnumMultiSelectField;
  vsoeDelivered?: PlatformCore.SearchBooleanField;
  vsoePermitDiscount?: PlatformCore.SearchEnumMultiSelectField;
  vsoePrice?: PlatformCore.SearchDoubleField;
  vsoeSopGroup?: PlatformCore.SearchEnumMultiSelectField;
  webSite?: PlatformCore.SearchMultiSelectField;
  weight?: PlatformCore.SearchDoubleField;
  yahooProductFeed?: PlatformCore.SearchBooleanField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class ItemSearchBasic extends PlatformCore.SearchRecordBasic {
  accBookRevRecForecastRule?: PlatformCore.SearchMultiSelectField;
  account?: PlatformCore.SearchMultiSelectField;
  accountingBook?: PlatformCore.SearchMultiSelectField;
  accountingBookAmortization?: PlatformCore.SearchMultiSelectField;
  accountingBookCreatePlansOn?: PlatformCore.SearchMultiSelectField;
  accountingBookRevRecRule?: PlatformCore.SearchMultiSelectField;
  accountingBookRevRecSchedule?: PlatformCore.SearchMultiSelectField;
  allowedShippingMethod?: PlatformCore.SearchMultiSelectField;
  alternateDemandSourceItem?: PlatformCore.SearchMultiSelectField;
  atpLeadTime?: PlatformCore.SearchDoubleField;
  atpMethod?: PlatformCore.SearchEnumMultiSelectField;
  autoLeadTime?: PlatformCore.SearchBooleanField;
  autoPreferredStockLevel?: PlatformCore.SearchBooleanField;
  autoReorderPoint?: PlatformCore.SearchBooleanField;
  availableToPartners?: PlatformCore.SearchBooleanField;
  averageCost?: PlatformCore.SearchDoubleField;
  backwardConsumptionDays?: PlatformCore.SearchLongField;
  binNumber?: PlatformCore.SearchStringField;
  binOnHandAvail?: PlatformCore.SearchDoubleField;
  binOnHandCount?: PlatformCore.SearchDoubleField;
  bomQuantity?: PlatformCore.SearchDoubleField;
  buildEntireAssembly?: PlatformCore.SearchBooleanField;
  buildTime?: PlatformCore.SearchDoubleField;
  buyItNowPrice?: PlatformCore.SearchDoubleField;
  caption?: PlatformCore.SearchStringField;
  category?: PlatformCore.SearchMultiSelectField;
  clazz?: PlatformCore.SearchMultiSelectField;
  component?: PlatformCore.SearchMultiSelectField;
  componentOf?: PlatformCore.SearchMultiSelectField;
  componentYield?: PlatformCore.SearchDoubleField;
  consumptionUnit?: PlatformCore.SearchMultiSelectField;
  contingentRevenueHandling?: PlatformCore.SearchBooleanField;
  copyDescription?: PlatformCore.SearchBooleanField;
  correlatedItem?: PlatformCore.SearchMultiSelectField;
  correlatedItemCorrelation?: PlatformCore.SearchDoubleField;
  correlatedItemCount?: PlatformCore.SearchLongField;
  correlatedItemLift?: PlatformCore.SearchDoubleField;
  correlatedItemPurchaseRate?: PlatformCore.SearchDoubleField;
  cost?: PlatformCore.SearchDoubleField;
  costAccountingStatus?: PlatformCore.SearchEnumMultiSelectField;
  costCategory?: PlatformCore.SearchMultiSelectField;
  costEstimate?: PlatformCore.SearchDoubleField;
  costEstimateType?: PlatformCore.SearchEnumMultiSelectField;
  costingMethod?: PlatformCore.SearchEnumMultiSelectField;
  countryOfManufacture?: PlatformCore.SearchEnumMultiSelectField;
  created?: PlatformCore.SearchDateField;
  createJob?: PlatformCore.SearchBooleanField;
  createRevenuePlansOn?: PlatformCore.SearchMultiSelectField;
  dateViewed?: PlatformCore.SearchDateField;
  daysBeforeExpiration?: PlatformCore.SearchDoubleField;
  defaultReturnCost?: PlatformCore.SearchDoubleField;
  defaultShippingMethod?: PlatformCore.SearchMultiSelectField;
  deferRevRec?: PlatformCore.SearchBooleanField;
  demandModifier?: PlatformCore.SearchDoubleField;
  demandSource?: PlatformCore.SearchEnumMultiSelectField;
  demandTimeFence?: PlatformCore.SearchLongField;
  department?: PlatformCore.SearchMultiSelectField;
  directRevenuePosting?: PlatformCore.SearchBooleanField;
  displayIneBayStore?: PlatformCore.SearchBooleanField;
  displayName?: PlatformCore.SearchStringField;
  distributionCategory?: PlatformCore.SearchMultiSelectField;
  distributionNetwork?: PlatformCore.SearchMultiSelectField;
  dontShowPrice?: PlatformCore.SearchBooleanField;
  eBayItemDescription?: PlatformCore.SearchStringField;
  eBayItemSubtitle?: PlatformCore.SearchStringField;
  eBayItemTitle?: PlatformCore.SearchStringField;
  ebayRelistingOption?: PlatformCore.SearchEnumMultiSelectField;
  effectiveBomControl?: PlatformCore.SearchEnumMultiSelectField;
  effectiveDate?: PlatformCore.SearchDateField;
  effectiveRevision?: PlatformCore.SearchMultiSelectField;
  endAuctionsWhenOutOfStock?: PlatformCore.SearchBooleanField;
  excludeFromSitemap?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  featuredDescription?: PlatformCore.SearchStringField;
  feedDescription?: PlatformCore.SearchStringField;
  feedName?: PlatformCore.SearchStringField;
  fixedLotSize?: PlatformCore.SearchDoubleField;
  forwardConsumptionDays?: PlatformCore.SearchLongField;
  fraudRisk?: PlatformCore.SearchEnumMultiSelectField;
  froogleProductFeed?: PlatformCore.SearchBooleanField;
  futureHorizon?: PlatformCore.SearchLongField;
  fxCost?: PlatformCore.SearchDoubleField;
  generateAccruals?: PlatformCore.SearchBooleanField;
  giftCertAuthCode?: PlatformCore.SearchStringField;
  giftCertEmail?: PlatformCore.SearchStringField;
  giftCertExpDate?: PlatformCore.SearchDateField;
  giftCertFrom?: PlatformCore.SearchStringField;
  giftCertMsg?: PlatformCore.SearchStringField;
  giftCertOrigAmt?: PlatformCore.SearchStringField;
  giftCertRecipient?: PlatformCore.SearchStringField;
  hierarchyNode?: PlatformCore.SearchMultiSelectField;
  hierarchyVersion?: PlatformCore.SearchMultiSelectField;
  imageUrl?: PlatformCore.SearchStringField;
  includeChildren?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  inventoryLocation?: PlatformCore.SearchMultiSelectField;
  invtClassification?: PlatformCore.SearchEnumMultiSelectField;
  invtCountInterval?: PlatformCore.SearchLongField;
  isAvailable?: PlatformCore.SearchBooleanField;
  isDropShipItem?: PlatformCore.SearchBooleanField;
  isFulfillable?: PlatformCore.SearchBooleanField;
  isGcoCompliant?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isLotItem?: PlatformCore.SearchBooleanField;
  isOnline?: PlatformCore.SearchBooleanField;
  isPreferredVendor?: PlatformCore.SearchBooleanField;
  isSerialItem?: PlatformCore.SearchBooleanField;
  isSpecialOrderItem?: PlatformCore.SearchBooleanField;
  isSpecialWorkOrderItem?: PlatformCore.SearchBooleanField;
  isStorePickupAllowed?: PlatformCore.SearchBooleanField;
  issueProduct?: PlatformCore.SearchMultiSelectField;
  isTaxable?: PlatformCore.SearchBooleanField;
  isVsoeBundle?: PlatformCore.SearchBooleanField;
  isWip?: PlatformCore.SearchBooleanField;
  itemId?: PlatformCore.SearchStringField;
  itemRevenueCategory?: PlatformCore.SearchMultiSelectField;
  itemUrl?: PlatformCore.SearchStringField;
  lastInvtCountDate?: PlatformCore.SearchDateField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  lastPurchasePrice?: PlatformCore.SearchDoubleField;
  lastQuantityAvailableChange?: PlatformCore.SearchDateField;
  leadTime?: PlatformCore.SearchLongField;
  listingDuration?: PlatformCore.SearchEnumMultiSelectField;
  location?: PlatformCore.SearchMultiSelectField;
  locationAllowStorePickup?: PlatformCore.SearchBooleanField;
  locationAtpLeadTime?: PlatformCore.SearchDoubleField;
  locationAverageCost?: PlatformCore.SearchDoubleField;
  locationBuildTime?: PlatformCore.SearchDoubleField;
  locationCost?: PlatformCore.SearchDoubleField;
  locationCostAccountingStatus?: PlatformCore.SearchEnumMultiSelectField;
  locationDefaultReturnCost?: PlatformCore.SearchDoubleField;
  locationDemandSource?: PlatformCore.SearchEnumMultiSelectField;
  locationDemandTimeFence?: PlatformCore.SearchLongField;
  locationFixedLotSize?: PlatformCore.SearchDoubleField;
  locationInventoryCostTemplate?: PlatformCore.SearchMultiSelectField;
  locationInvtClassification?: PlatformCore.SearchEnumMultiSelectField;
  locationInvtCountInterval?: PlatformCore.SearchLongField;
  locationLastInvtCountDate?: PlatformCore.SearchDateField;
  locationLeadTime?: PlatformCore.SearchLongField;
  locationNextInvtCountDate?: PlatformCore.SearchDateField;
  locationPeriodicLotSizeDays?: PlatformCore.SearchLongField;
  locationPeriodicLotSizeType?: PlatformCore.SearchEnumMultiSelectField;
  locationPreferredStockLevel?: PlatformCore.SearchDoubleField;
  locationQtyAvailForStorePickup?: PlatformCore.SearchDoubleField;
  locationQuantityAvailable?: PlatformCore.SearchDoubleField;
  locationQuantityBackOrdered?: PlatformCore.SearchDoubleField;
  locationQuantityCommitted?: PlatformCore.SearchDoubleField;
  locationQuantityInTransit?: PlatformCore.SearchDoubleField;
  locationQuantityOnHand?: PlatformCore.SearchDoubleField;
  locationQuantityOnOrder?: PlatformCore.SearchDoubleField;
  locationReorderPoint?: PlatformCore.SearchDoubleField;
  locationRescheduleInDays?: PlatformCore.SearchLongField;
  locationRescheduleOutDays?: PlatformCore.SearchLongField;
  locationSafetyStockLevel?: PlatformCore.SearchDoubleField;
  locationStorePickupBufferStock?: PlatformCore.SearchDoubleField;
  locationSupplyLotSizingMethod?: PlatformCore.SearchEnumMultiSelectField;
  locationSupplyTimeFence?: PlatformCore.SearchLongField;
  locationSupplyType?: PlatformCore.SearchEnumMultiSelectField;
  locationTotalValue?: PlatformCore.SearchDoubleField;
  locBackwardConsumptionDays?: PlatformCore.SearchLongField;
  locForwardConsumptionDays?: PlatformCore.SearchLongField;
  manufacturer?: PlatformCore.SearchStringField;
  manufactureraddr1?: PlatformCore.SearchStringField;
  manufacturerCity?: PlatformCore.SearchStringField;
  manufacturerState?: PlatformCore.SearchStringField;
  manufacturerTariff?: PlatformCore.SearchStringField;
  manufacturerTaxId?: PlatformCore.SearchStringField;
  manufacturerZip?: PlatformCore.SearchStringField;
  manufacturingChargeItem?: PlatformCore.SearchBooleanField;
  matchBillToReceipt?: PlatformCore.SearchBooleanField;
  matrix?: PlatformCore.SearchBooleanField;
  matrixChild?: PlatformCore.SearchBooleanField;
  maximumQuantity?: PlatformCore.SearchLongField;
  metaTagHtml?: PlatformCore.SearchStringField;
  minimumQuantity?: PlatformCore.SearchLongField;
  mossApplies?: PlatformCore.SearchBooleanField;
  mpn?: PlatformCore.SearchStringField;
  multManufactureAddr?: PlatformCore.SearchBooleanField;
  nexTagCategory?: PlatformCore.SearchStringField;
  nexTagProductFeed?: PlatformCore.SearchBooleanField;
  nextInvtCountDate?: PlatformCore.SearchDateField;
  numActiveListings?: PlatformCore.SearchLongField;
  numberAllowedDownloads?: PlatformCore.SearchDoubleField;
  numCurrentlyListed?: PlatformCore.SearchLongField;
  obsoleteDate?: PlatformCore.SearchDateField;
  obsoleteRevision?: PlatformCore.SearchMultiSelectField;
  offerSupport?: PlatformCore.SearchBooleanField;
  onlineCustomerPrice?: PlatformCore.SearchDoubleField;
  onSpecial?: PlatformCore.SearchBooleanField;
  otherVendor?: PlatformCore.SearchMultiSelectField;
  outOfStockBehavior?: PlatformCore.SearchMultiSelectField;
  overallQuantityPricingType?: PlatformCore.SearchEnumMultiSelectField;
  overheadType?: PlatformCore.SearchEnumMultiSelectField;
  pageTitle?: PlatformCore.SearchStringField;
  parent?: PlatformCore.SearchMultiSelectField;
  periodicLotSizeDays?: PlatformCore.SearchLongField;
  periodicLotSizeType?: PlatformCore.SearchEnumMultiSelectField;
  preferenceCriterion?: PlatformCore.SearchStringField;
  preferredBin?: PlatformCore.SearchBooleanField;
  preferredLocation?: PlatformCore.SearchMultiSelectField;
  preferredStockLevel?: PlatformCore.SearchDoubleField;
  preferredStockLevelDays?: PlatformCore.SearchLongField;
  price?: PlatformCore.SearchDoubleField;
  pricesIncludeTax?: PlatformCore.SearchBooleanField;
  pricingGroup?: PlatformCore.SearchMultiSelectField;
  primaryCategory?: PlatformCore.SearchLongField;
  purchaseOrderAmount?: PlatformCore.SearchDoubleField;
  purchaseOrderQuantity?: PlatformCore.SearchDoubleField;
  purchaseOrderQuantityDiff?: PlatformCore.SearchDoubleField;
  purchaseUnit?: PlatformCore.SearchMultiSelectField;
  quantityAvailable?: PlatformCore.SearchDoubleField;
  quantityBackOrdered?: PlatformCore.SearchDoubleField;
  quantityCommitted?: PlatformCore.SearchDoubleField;
  quantityOnHand?: PlatformCore.SearchDoubleField;
  quantityOnOrder?: PlatformCore.SearchDoubleField;
  quantityPricingSchedule?: PlatformCore.SearchMultiSelectField;
  receiptAmount?: PlatformCore.SearchDoubleField;
  receiptQuantity?: PlatformCore.SearchDoubleField;
  receiptQuantityDiff?: PlatformCore.SearchDoubleField;
  reorderMultiple?: PlatformCore.SearchLongField;
  reorderPoint?: PlatformCore.SearchDoubleField;
  rescheduleInDays?: PlatformCore.SearchLongField;
  rescheduleOutDays?: PlatformCore.SearchLongField;
  reservePrice?: PlatformCore.SearchDoubleField;
  revenueAllocationGroup?: PlatformCore.SearchMultiSelectField;
  revenueRecognitionRule?: PlatformCore.SearchMultiSelectField;
  revRecForecastRule?: PlatformCore.SearchMultiSelectField;
  revRecSchedule?: PlatformCore.SearchMultiSelectField;
  roundUpAsComponent?: PlatformCore.SearchBooleanField;
  safetyStockLevel?: PlatformCore.SearchDoubleField;
  safetyStockLevelDays?: PlatformCore.SearchLongField;
  salesDescription?: PlatformCore.SearchStringField;
  saleUnit?: PlatformCore.SearchMultiSelectField;
  sameAsPrimaryBookAmortization?: PlatformCore.SearchBooleanField;
  sameAsPrimaryBookRevRec?: PlatformCore.SearchBooleanField;
  scheduleBCode?: PlatformCore.SearchEnumMultiSelectField;
  scheduleBNumber?: PlatformCore.SearchStringField;
  scheduleBQuantity?: PlatformCore.SearchStringField;
  searchKeywords?: PlatformCore.SearchStringField;
  seasonalDemand?: PlatformCore.SearchBooleanField;
  sellOnEBay?: PlatformCore.SearchBooleanField;
  serialNumber?: PlatformCore.SearchStringField;
  serialNumberLocation?: PlatformCore.SearchMultiSelectField;
  shipIndividually?: PlatformCore.SearchBooleanField;
  shipPackage?: PlatformCore.SearchMultiSelectField;
  shippingCarrier?: PlatformCore.SearchEnumMultiSelectField;
  shippingRate?: PlatformCore.SearchDoubleField;
  shoppingDotComCategory?: PlatformCore.SearchStringField;
  shoppingProductFeed?: PlatformCore.SearchBooleanField;
  shopzillaCategoryId?: PlatformCore.SearchLongField;
  shopzillaProductFeed?: PlatformCore.SearchBooleanField;
  sitemapPriority?: PlatformCore.SearchEnumMultiSelectField;
  softDescriptor?: PlatformCore.SearchMultiSelectField;
  startingPrice?: PlatformCore.SearchDoubleField;
  stockDescription?: PlatformCore.SearchStringField;
  stockUnit?: PlatformCore.SearchMultiSelectField;
  storeDescription?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  subType?: PlatformCore.SearchEnumMultiSelectField;
  supplyLotSizingMethod?: PlatformCore.SearchEnumMultiSelectField;
  supplyReplenishmentMethod?: PlatformCore.SearchEnumMultiSelectField;
  supplyTimeFence?: PlatformCore.SearchLongField;
  supplyType?: PlatformCore.SearchEnumMultiSelectField;
  taxCode?: PlatformCore.SearchMultiSelectField;
  taxSchedule?: PlatformCore.SearchMultiSelectField;
  thumbnailUrl?: PlatformCore.SearchStringField;
  totalValue?: PlatformCore.SearchDoubleField;
  trackLandedCost?: PlatformCore.SearchBooleanField;
  transferPrice?: PlatformCore.SearchDoubleField;
  type?: PlatformCore.SearchEnumMultiSelectField;
  unitsType?: PlatformCore.SearchMultiSelectField;
  upcCode?: PlatformCore.SearchStringField;
  urlComponent?: PlatformCore.SearchStringField;
  useBins?: PlatformCore.SearchBooleanField;
  useComponentYield?: PlatformCore.SearchBooleanField;
  useMarginalRates?: PlatformCore.SearchBooleanField;
  vendor?: PlatformCore.SearchMultiSelectField;
  vendorCode?: PlatformCore.SearchStringField;
  vendorCost?: PlatformCore.SearchDoubleField;
  vendorCostEntered?: PlatformCore.SearchDoubleField;
  vendorName?: PlatformCore.SearchStringField;
  vendorPriceCurrency?: PlatformCore.SearchMultiSelectField;
  vsoeDeferral?: PlatformCore.SearchEnumMultiSelectField;
  vsoeDelivered?: PlatformCore.SearchBooleanField;
  vsoePermitDiscount?: PlatformCore.SearchEnumMultiSelectField;
  vsoePrice?: PlatformCore.SearchDoubleField;
  vsoeSopGroup?: PlatformCore.SearchEnumMultiSelectField;
  webSite?: PlatformCore.SearchMultiSelectField;
  weight?: PlatformCore.SearchDoubleField;
  yahooProductFeed?: PlatformCore.SearchBooleanField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: ItemSearchBasicProps) {
    super();
    this.accBookRevRecForecastRule = props.accBookRevRecForecastRule;
    this.account = props.account;
    this.accountingBook = props.accountingBook;
    this.accountingBookAmortization = props.accountingBookAmortization;
    this.accountingBookCreatePlansOn = props.accountingBookCreatePlansOn;
    this.accountingBookRevRecRule = props.accountingBookRevRecRule;
    this.accountingBookRevRecSchedule = props.accountingBookRevRecSchedule;
    this.allowedShippingMethod = props.allowedShippingMethod;
    this.alternateDemandSourceItem = props.alternateDemandSourceItem;
    this.atpLeadTime = props.atpLeadTime;
    this.atpMethod = props.atpMethod;
    this.autoLeadTime = props.autoLeadTime;
    this.autoPreferredStockLevel = props.autoPreferredStockLevel;
    this.autoReorderPoint = props.autoReorderPoint;
    this.availableToPartners = props.availableToPartners;
    this.averageCost = props.averageCost;
    this.backwardConsumptionDays = props.backwardConsumptionDays;
    this.binNumber = props.binNumber;
    this.binOnHandAvail = props.binOnHandAvail;
    this.binOnHandCount = props.binOnHandCount;
    this.bomQuantity = props.bomQuantity;
    this.buildEntireAssembly = props.buildEntireAssembly;
    this.buildTime = props.buildTime;
    this.buyItNowPrice = props.buyItNowPrice;
    this.caption = props.caption;
    this.category = props.category;
    this.clazz = props.clazz;
    this.component = props.component;
    this.componentOf = props.componentOf;
    this.componentYield = props.componentYield;
    this.consumptionUnit = props.consumptionUnit;
    this.contingentRevenueHandling = props.contingentRevenueHandling;
    this.copyDescription = props.copyDescription;
    this.correlatedItem = props.correlatedItem;
    this.correlatedItemCorrelation = props.correlatedItemCorrelation;
    this.correlatedItemCount = props.correlatedItemCount;
    this.correlatedItemLift = props.correlatedItemLift;
    this.correlatedItemPurchaseRate = props.correlatedItemPurchaseRate;
    this.cost = props.cost;
    this.costAccountingStatus = props.costAccountingStatus;
    this.costCategory = props.costCategory;
    this.costEstimate = props.costEstimate;
    this.costEstimateType = props.costEstimateType;
    this.costingMethod = props.costingMethod;
    this.countryOfManufacture = props.countryOfManufacture;
    this.created = props.created;
    this.createJob = props.createJob;
    this.createRevenuePlansOn = props.createRevenuePlansOn;
    this.dateViewed = props.dateViewed;
    this.daysBeforeExpiration = props.daysBeforeExpiration;
    this.defaultReturnCost = props.defaultReturnCost;
    this.defaultShippingMethod = props.defaultShippingMethod;
    this.deferRevRec = props.deferRevRec;
    this.demandModifier = props.demandModifier;
    this.demandSource = props.demandSource;
    this.demandTimeFence = props.demandTimeFence;
    this.department = props.department;
    this.directRevenuePosting = props.directRevenuePosting;
    this.displayIneBayStore = props.displayIneBayStore;
    this.displayName = props.displayName;
    this.distributionCategory = props.distributionCategory;
    this.distributionNetwork = props.distributionNetwork;
    this.dontShowPrice = props.dontShowPrice;
    this.eBayItemDescription = props.eBayItemDescription;
    this.eBayItemSubtitle = props.eBayItemSubtitle;
    this.eBayItemTitle = props.eBayItemTitle;
    this.ebayRelistingOption = props.ebayRelistingOption;
    this.effectiveBomControl = props.effectiveBomControl;
    this.effectiveDate = props.effectiveDate;
    this.effectiveRevision = props.effectiveRevision;
    this.endAuctionsWhenOutOfStock = props.endAuctionsWhenOutOfStock;
    this.excludeFromSitemap = props.excludeFromSitemap;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.featuredDescription = props.featuredDescription;
    this.feedDescription = props.feedDescription;
    this.feedName = props.feedName;
    this.fixedLotSize = props.fixedLotSize;
    this.forwardConsumptionDays = props.forwardConsumptionDays;
    this.fraudRisk = props.fraudRisk;
    this.froogleProductFeed = props.froogleProductFeed;
    this.futureHorizon = props.futureHorizon;
    this.fxCost = props.fxCost;
    this.generateAccruals = props.generateAccruals;
    this.giftCertAuthCode = props.giftCertAuthCode;
    this.giftCertEmail = props.giftCertEmail;
    this.giftCertExpDate = props.giftCertExpDate;
    this.giftCertFrom = props.giftCertFrom;
    this.giftCertMsg = props.giftCertMsg;
    this.giftCertOrigAmt = props.giftCertOrigAmt;
    this.giftCertRecipient = props.giftCertRecipient;
    this.hierarchyNode = props.hierarchyNode;
    this.hierarchyVersion = props.hierarchyVersion;
    this.imageUrl = props.imageUrl;
    this.includeChildren = props.includeChildren;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.inventoryLocation = props.inventoryLocation;
    this.invtClassification = props.invtClassification;
    this.invtCountInterval = props.invtCountInterval;
    this.isAvailable = props.isAvailable;
    this.isDropShipItem = props.isDropShipItem;
    this.isFulfillable = props.isFulfillable;
    this.isGcoCompliant = props.isGcoCompliant;
    this.isInactive = props.isInactive;
    this.isLotItem = props.isLotItem;
    this.isOnline = props.isOnline;
    this.isPreferredVendor = props.isPreferredVendor;
    this.isSerialItem = props.isSerialItem;
    this.isSpecialOrderItem = props.isSpecialOrderItem;
    this.isSpecialWorkOrderItem = props.isSpecialWorkOrderItem;
    this.isStorePickupAllowed = props.isStorePickupAllowed;
    this.issueProduct = props.issueProduct;
    this.isTaxable = props.isTaxable;
    this.isVsoeBundle = props.isVsoeBundle;
    this.isWip = props.isWip;
    this.itemId = props.itemId;
    this.itemRevenueCategory = props.itemRevenueCategory;
    this.itemUrl = props.itemUrl;
    this.lastInvtCountDate = props.lastInvtCountDate;
    this.lastModifiedDate = props.lastModifiedDate;
    this.lastPurchasePrice = props.lastPurchasePrice;
    this.lastQuantityAvailableChange = props.lastQuantityAvailableChange;
    this.leadTime = props.leadTime;
    this.listingDuration = props.listingDuration;
    this.location = props.location;
    this.locationAllowStorePickup = props.locationAllowStorePickup;
    this.locationAtpLeadTime = props.locationAtpLeadTime;
    this.locationAverageCost = props.locationAverageCost;
    this.locationBuildTime = props.locationBuildTime;
    this.locationCost = props.locationCost;
    this.locationCostAccountingStatus = props.locationCostAccountingStatus;
    this.locationDefaultReturnCost = props.locationDefaultReturnCost;
    this.locationDemandSource = props.locationDemandSource;
    this.locationDemandTimeFence = props.locationDemandTimeFence;
    this.locationFixedLotSize = props.locationFixedLotSize;
    this.locationInventoryCostTemplate = props.locationInventoryCostTemplate;
    this.locationInvtClassification = props.locationInvtClassification;
    this.locationInvtCountInterval = props.locationInvtCountInterval;
    this.locationLastInvtCountDate = props.locationLastInvtCountDate;
    this.locationLeadTime = props.locationLeadTime;
    this.locationNextInvtCountDate = props.locationNextInvtCountDate;
    this.locationPeriodicLotSizeDays = props.locationPeriodicLotSizeDays;
    this.locationPeriodicLotSizeType = props.locationPeriodicLotSizeType;
    this.locationPreferredStockLevel = props.locationPreferredStockLevel;
    this.locationQtyAvailForStorePickup = props.locationQtyAvailForStorePickup;
    this.locationQuantityAvailable = props.locationQuantityAvailable;
    this.locationQuantityBackOrdered = props.locationQuantityBackOrdered;
    this.locationQuantityCommitted = props.locationQuantityCommitted;
    this.locationQuantityInTransit = props.locationQuantityInTransit;
    this.locationQuantityOnHand = props.locationQuantityOnHand;
    this.locationQuantityOnOrder = props.locationQuantityOnOrder;
    this.locationReorderPoint = props.locationReorderPoint;
    this.locationRescheduleInDays = props.locationRescheduleInDays;
    this.locationRescheduleOutDays = props.locationRescheduleOutDays;
    this.locationSafetyStockLevel = props.locationSafetyStockLevel;
    this.locationStorePickupBufferStock = props.locationStorePickupBufferStock;
    this.locationSupplyLotSizingMethod = props.locationSupplyLotSizingMethod;
    this.locationSupplyTimeFence = props.locationSupplyTimeFence;
    this.locationSupplyType = props.locationSupplyType;
    this.locationTotalValue = props.locationTotalValue;
    this.locBackwardConsumptionDays = props.locBackwardConsumptionDays;
    this.locForwardConsumptionDays = props.locForwardConsumptionDays;
    this.manufacturer = props.manufacturer;
    this.manufactureraddr1 = props.manufactureraddr1;
    this.manufacturerCity = props.manufacturerCity;
    this.manufacturerState = props.manufacturerState;
    this.manufacturerTariff = props.manufacturerTariff;
    this.manufacturerTaxId = props.manufacturerTaxId;
    this.manufacturerZip = props.manufacturerZip;
    this.manufacturingChargeItem = props.manufacturingChargeItem;
    this.matchBillToReceipt = props.matchBillToReceipt;
    this.matrix = props.matrix;
    this.matrixChild = props.matrixChild;
    this.maximumQuantity = props.maximumQuantity;
    this.metaTagHtml = props.metaTagHtml;
    this.minimumQuantity = props.minimumQuantity;
    this.mossApplies = props.mossApplies;
    this.mpn = props.mpn;
    this.multManufactureAddr = props.multManufactureAddr;
    this.nexTagCategory = props.nexTagCategory;
    this.nexTagProductFeed = props.nexTagProductFeed;
    this.nextInvtCountDate = props.nextInvtCountDate;
    this.numActiveListings = props.numActiveListings;
    this.numberAllowedDownloads = props.numberAllowedDownloads;
    this.numCurrentlyListed = props.numCurrentlyListed;
    this.obsoleteDate = props.obsoleteDate;
    this.obsoleteRevision = props.obsoleteRevision;
    this.offerSupport = props.offerSupport;
    this.onlineCustomerPrice = props.onlineCustomerPrice;
    this.onSpecial = props.onSpecial;
    this.otherVendor = props.otherVendor;
    this.outOfStockBehavior = props.outOfStockBehavior;
    this.overallQuantityPricingType = props.overallQuantityPricingType;
    this.overheadType = props.overheadType;
    this.pageTitle = props.pageTitle;
    this.parent = props.parent;
    this.periodicLotSizeDays = props.periodicLotSizeDays;
    this.periodicLotSizeType = props.periodicLotSizeType;
    this.preferenceCriterion = props.preferenceCriterion;
    this.preferredBin = props.preferredBin;
    this.preferredLocation = props.preferredLocation;
    this.preferredStockLevel = props.preferredStockLevel;
    this.preferredStockLevelDays = props.preferredStockLevelDays;
    this.price = props.price;
    this.pricesIncludeTax = props.pricesIncludeTax;
    this.pricingGroup = props.pricingGroup;
    this.primaryCategory = props.primaryCategory;
    this.purchaseOrderAmount = props.purchaseOrderAmount;
    this.purchaseOrderQuantity = props.purchaseOrderQuantity;
    this.purchaseOrderQuantityDiff = props.purchaseOrderQuantityDiff;
    this.purchaseUnit = props.purchaseUnit;
    this.quantityAvailable = props.quantityAvailable;
    this.quantityBackOrdered = props.quantityBackOrdered;
    this.quantityCommitted = props.quantityCommitted;
    this.quantityOnHand = props.quantityOnHand;
    this.quantityOnOrder = props.quantityOnOrder;
    this.quantityPricingSchedule = props.quantityPricingSchedule;
    this.receiptAmount = props.receiptAmount;
    this.receiptQuantity = props.receiptQuantity;
    this.receiptQuantityDiff = props.receiptQuantityDiff;
    this.reorderMultiple = props.reorderMultiple;
    this.reorderPoint = props.reorderPoint;
    this.rescheduleInDays = props.rescheduleInDays;
    this.rescheduleOutDays = props.rescheduleOutDays;
    this.reservePrice = props.reservePrice;
    this.revenueAllocationGroup = props.revenueAllocationGroup;
    this.revenueRecognitionRule = props.revenueRecognitionRule;
    this.revRecForecastRule = props.revRecForecastRule;
    this.revRecSchedule = props.revRecSchedule;
    this.roundUpAsComponent = props.roundUpAsComponent;
    this.safetyStockLevel = props.safetyStockLevel;
    this.safetyStockLevelDays = props.safetyStockLevelDays;
    this.salesDescription = props.salesDescription;
    this.saleUnit = props.saleUnit;
    this.sameAsPrimaryBookAmortization = props.sameAsPrimaryBookAmortization;
    this.sameAsPrimaryBookRevRec = props.sameAsPrimaryBookRevRec;
    this.scheduleBCode = props.scheduleBCode;
    this.scheduleBNumber = props.scheduleBNumber;
    this.scheduleBQuantity = props.scheduleBQuantity;
    this.searchKeywords = props.searchKeywords;
    this.seasonalDemand = props.seasonalDemand;
    this.sellOnEBay = props.sellOnEBay;
    this.serialNumber = props.serialNumber;
    this.serialNumberLocation = props.serialNumberLocation;
    this.shipIndividually = props.shipIndividually;
    this.shipPackage = props.shipPackage;
    this.shippingCarrier = props.shippingCarrier;
    this.shippingRate = props.shippingRate;
    this.shoppingDotComCategory = props.shoppingDotComCategory;
    this.shoppingProductFeed = props.shoppingProductFeed;
    this.shopzillaCategoryId = props.shopzillaCategoryId;
    this.shopzillaProductFeed = props.shopzillaProductFeed;
    this.sitemapPriority = props.sitemapPriority;
    this.softDescriptor = props.softDescriptor;
    this.startingPrice = props.startingPrice;
    this.stockDescription = props.stockDescription;
    this.stockUnit = props.stockUnit;
    this.storeDescription = props.storeDescription;
    this.subsidiary = props.subsidiary;
    this.subType = props.subType;
    this.supplyLotSizingMethod = props.supplyLotSizingMethod;
    this.supplyReplenishmentMethod = props.supplyReplenishmentMethod;
    this.supplyTimeFence = props.supplyTimeFence;
    this.supplyType = props.supplyType;
    this.taxCode = props.taxCode;
    this.taxSchedule = props.taxSchedule;
    this.thumbnailUrl = props.thumbnailUrl;
    this.totalValue = props.totalValue;
    this.trackLandedCost = props.trackLandedCost;
    this.transferPrice = props.transferPrice;
    this.type = props.type;
    this.unitsType = props.unitsType;
    this.upcCode = props.upcCode;
    this.urlComponent = props.urlComponent;
    this.useBins = props.useBins;
    this.useComponentYield = props.useComponentYield;
    this.useMarginalRates = props.useMarginalRates;
    this.vendor = props.vendor;
    this.vendorCode = props.vendorCode;
    this.vendorCost = props.vendorCost;
    this.vendorCostEntered = props.vendorCostEntered;
    this.vendorName = props.vendorName;
    this.vendorPriceCurrency = props.vendorPriceCurrency;
    this.vsoeDeferral = props.vsoeDeferral;
    this.vsoeDelivered = props.vsoeDelivered;
    this.vsoePermitDiscount = props.vsoePermitDiscount;
    this.vsoePrice = props.vsoePrice;
    this.vsoeSopGroup = props.vsoeSopGroup;
    this.webSite = props.webSite;
    this.weight = props.weight;
    this.yahooProductFeed = props.yahooProductFeed;
    this.customFieldList = props.customFieldList;
  }
}

export type CouponCodeSearchBasicProps = {
  code?: PlatformCore.SearchStringField;
  dateSent?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  id?: PlatformCore.SearchLongField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  promotion?: PlatformCore.SearchMultiSelectField;
  recipient?: PlatformCore.SearchMultiSelectField;
  useCount?: PlatformCore.SearchLongField;
  used?: PlatformCore.SearchBooleanField;
};

export class CouponCodeSearchBasic extends PlatformCore.SearchRecordBasic {
  code?: PlatformCore.SearchStringField;
  dateSent?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  id?: PlatformCore.SearchLongField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  promotion?: PlatformCore.SearchMultiSelectField;
  recipient?: PlatformCore.SearchMultiSelectField;
  useCount?: PlatformCore.SearchLongField;
  used?: PlatformCore.SearchBooleanField;
  constructor(props: CouponCodeSearchBasicProps) {
    super();
    this.code = props.code;
    this.dateSent = props.dateSent;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.id = props.id;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.promotion = props.promotion;
    this.recipient = props.recipient;
    this.useCount = props.useCount;
    this.used = props.used;
  }
}

export type ExpenseCategorySearchRowBasicProps = {
  account?: PlatformCore.SearchColumnSelectField[];
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  rateRequired?: PlatformCore.SearchColumnBooleanField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class ExpenseCategorySearchRowBasic extends PlatformCore.SearchRowBasic {
  account?: PlatformCore.SearchColumnSelectField[];
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  rateRequired?: PlatformCore.SearchColumnBooleanField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: ExpenseCategorySearchRowBasicProps) {
    super();
    this.account = props.account;
    this.description = props.description;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.rateRequired = props.rateRequired;
    this.subsidiary = props.subsidiary;
    this.customFieldList = props.customFieldList;
  }
}

export type VendorSearchRowBasicProps = {
  accountNumber?: PlatformCore.SearchColumnStringField[];
  address?: PlatformCore.SearchColumnStringField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  addressee?: PlatformCore.SearchColumnStringField[];
  addressInternalId?: PlatformCore.SearchColumnStringField[];
  addressLabel?: PlatformCore.SearchColumnStringField[];
  addressPhone?: PlatformCore.SearchColumnStringField[];
  altContact?: PlatformCore.SearchColumnStringField[];
  altEmail?: PlatformCore.SearchColumnStringField[];
  altName?: PlatformCore.SearchColumnStringField[];
  altPhone?: PlatformCore.SearchColumnStringField[];
  attention?: PlatformCore.SearchColumnStringField[];
  balance?: PlatformCore.SearchColumnDoubleField[];
  billAddress?: PlatformCore.SearchColumnStringField[];
  billAddress1?: PlatformCore.SearchColumnStringField[];
  billAddress2?: PlatformCore.SearchColumnStringField[];
  billAddress3?: PlatformCore.SearchColumnStringField[];
  billAddressee?: PlatformCore.SearchColumnStringField[];
  billAttention?: PlatformCore.SearchColumnStringField[];
  billCity?: PlatformCore.SearchColumnStringField[];
  billCountry?: PlatformCore.SearchColumnEnumSelectField[];
  billCountryCode?: PlatformCore.SearchColumnStringField[];
  billPhone?: PlatformCore.SearchColumnStringField[];
  billState?: PlatformCore.SearchColumnStringField[];
  billZipCode?: PlatformCore.SearchColumnStringField[];
  category?: PlatformCore.SearchColumnSelectField[];
  city?: PlatformCore.SearchColumnStringField[];
  comments?: PlatformCore.SearchColumnStringField[];
  companyName?: PlatformCore.SearchColumnStringField[];
  contact?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  countryCode?: PlatformCore.SearchColumnStringField[];
  creditLimit?: PlatformCore.SearchColumnDoubleField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  currentExchangeRate?: PlatformCore.SearchColumnDoubleField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  defaultTaxReg?: PlatformCore.SearchColumnStringField[];
  eligibleForCommission?: PlatformCore.SearchColumnBooleanField[];
  email?: PlatformCore.SearchColumnStringField[];
  emailPreference?: PlatformCore.SearchColumnEnumSelectField[];
  emailTransactions?: PlatformCore.SearchColumnBooleanField[];
  entityId?: PlatformCore.SearchColumnStringField[];
  entityNumber?: PlatformCore.SearchColumnLongField[];
  expenseAccount?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  faxTransactions?: PlatformCore.SearchColumnBooleanField[];
  firstName?: PlatformCore.SearchColumnStringField[];
  fxBalance?: PlatformCore.SearchColumnDoubleField[];
  fxUnbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  giveAccess?: PlatformCore.SearchColumnBooleanField[];
  globalSubscriptionStatus?: PlatformCore.SearchColumnEnumSelectField[];
  hasDuplicates?: PlatformCore.SearchColumnBooleanField[];
  homePhone?: PlatformCore.SearchColumnStringField[];
  image?: PlatformCore.SearchColumnSelectField[];
  incoterm?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  is1099Eligible?: PlatformCore.SearchColumnBooleanField[];
  isDefaultBilling?: PlatformCore.SearchColumnBooleanField[];
  isDefaultShipping?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isJobResourceVend?: PlatformCore.SearchColumnBooleanField[];
  isPerson?: PlatformCore.SearchColumnBooleanField[];
  laborCost?: PlatformCore.SearchColumnDoubleField[];
  language?: PlatformCore.SearchColumnEnumSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  lastName?: PlatformCore.SearchColumnStringField[];
  level?: PlatformCore.SearchColumnEnumSelectField[];
  middleName?: PlatformCore.SearchColumnStringField[];
  mobilePhone?: PlatformCore.SearchColumnStringField[];
  payablesAccount?: PlatformCore.SearchColumnSelectField[];
  pec?: PlatformCore.SearchColumnStringField[];
  permission?: PlatformCore.SearchColumnEnumSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  phoneticName?: PlatformCore.SearchColumnStringField[];
  predConfidence?: PlatformCore.SearchColumnDoubleField[];
  predictedDays?: PlatformCore.SearchColumnDoubleField[];
  printOnCheckAs?: PlatformCore.SearchColumnStringField[];
  printTransactions?: PlatformCore.SearchColumnBooleanField[];
  purchaseOrderAmount?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrderQuantity?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrderQuantityDiff?: PlatformCore.SearchColumnDoubleField[];
  receiptAmount?: PlatformCore.SearchColumnDoubleField[];
  receiptQuantity?: PlatformCore.SearchColumnDoubleField[];
  receiptQuantityDiff?: PlatformCore.SearchColumnDoubleField[];
  salutation?: PlatformCore.SearchColumnStringField[];
  shipAddress?: PlatformCore.SearchColumnStringField[];
  shipAddress1?: PlatformCore.SearchColumnStringField[];
  shipAddress2?: PlatformCore.SearchColumnStringField[];
  shipAddress3?: PlatformCore.SearchColumnStringField[];
  shipAddressee?: PlatformCore.SearchColumnStringField[];
  shipAttention?: PlatformCore.SearchColumnStringField[];
  shipCity?: PlatformCore.SearchColumnStringField[];
  shipCountry?: PlatformCore.SearchColumnEnumSelectField[];
  shipCountryCode?: PlatformCore.SearchColumnStringField[];
  shipPhone?: PlatformCore.SearchColumnStringField[];
  shipState?: PlatformCore.SearchColumnStringField[];
  shipZip?: PlatformCore.SearchColumnStringField[];
  state?: PlatformCore.SearchColumnStringField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionDate?: PlatformCore.SearchColumnDateField[];
  subscriptionStatus?: PlatformCore.SearchColumnBooleanField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  taxIdNum?: PlatformCore.SearchColumnStringField[];
  terms?: PlatformCore.SearchColumnSelectField[];
  timeApprover?: PlatformCore.SearchColumnSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  unbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  url?: PlatformCore.SearchColumnStringField[];
  vatRegNumber?: PlatformCore.SearchColumnStringField[];
  workCalendar?: PlatformCore.SearchColumnSelectField[];
  zipCode?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class VendorSearchRowBasic extends PlatformCore.SearchRowBasic {
  accountNumber?: PlatformCore.SearchColumnStringField[];
  address?: PlatformCore.SearchColumnStringField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  addressee?: PlatformCore.SearchColumnStringField[];
  addressInternalId?: PlatformCore.SearchColumnStringField[];
  addressLabel?: PlatformCore.SearchColumnStringField[];
  addressPhone?: PlatformCore.SearchColumnStringField[];
  altContact?: PlatformCore.SearchColumnStringField[];
  altEmail?: PlatformCore.SearchColumnStringField[];
  altName?: PlatformCore.SearchColumnStringField[];
  altPhone?: PlatformCore.SearchColumnStringField[];
  attention?: PlatformCore.SearchColumnStringField[];
  balance?: PlatformCore.SearchColumnDoubleField[];
  billAddress?: PlatformCore.SearchColumnStringField[];
  billAddress1?: PlatformCore.SearchColumnStringField[];
  billAddress2?: PlatformCore.SearchColumnStringField[];
  billAddress3?: PlatformCore.SearchColumnStringField[];
  billAddressee?: PlatformCore.SearchColumnStringField[];
  billAttention?: PlatformCore.SearchColumnStringField[];
  billCity?: PlatformCore.SearchColumnStringField[];
  billCountry?: PlatformCore.SearchColumnEnumSelectField[];
  billCountryCode?: PlatformCore.SearchColumnStringField[];
  billPhone?: PlatformCore.SearchColumnStringField[];
  billState?: PlatformCore.SearchColumnStringField[];
  billZipCode?: PlatformCore.SearchColumnStringField[];
  category?: PlatformCore.SearchColumnSelectField[];
  city?: PlatformCore.SearchColumnStringField[];
  comments?: PlatformCore.SearchColumnStringField[];
  companyName?: PlatformCore.SearchColumnStringField[];
  contact?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  countryCode?: PlatformCore.SearchColumnStringField[];
  creditLimit?: PlatformCore.SearchColumnDoubleField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  currentExchangeRate?: PlatformCore.SearchColumnDoubleField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  defaultTaxReg?: PlatformCore.SearchColumnStringField[];
  eligibleForCommission?: PlatformCore.SearchColumnBooleanField[];
  email?: PlatformCore.SearchColumnStringField[];
  emailPreference?: PlatformCore.SearchColumnEnumSelectField[];
  emailTransactions?: PlatformCore.SearchColumnBooleanField[];
  entityId?: PlatformCore.SearchColumnStringField[];
  entityNumber?: PlatformCore.SearchColumnLongField[];
  expenseAccount?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  faxTransactions?: PlatformCore.SearchColumnBooleanField[];
  firstName?: PlatformCore.SearchColumnStringField[];
  fxBalance?: PlatformCore.SearchColumnDoubleField[];
  fxUnbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  giveAccess?: PlatformCore.SearchColumnBooleanField[];
  globalSubscriptionStatus?: PlatformCore.SearchColumnEnumSelectField[];
  hasDuplicates?: PlatformCore.SearchColumnBooleanField[];
  homePhone?: PlatformCore.SearchColumnStringField[];
  image?: PlatformCore.SearchColumnSelectField[];
  incoterm?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  is1099Eligible?: PlatformCore.SearchColumnBooleanField[];
  isDefaultBilling?: PlatformCore.SearchColumnBooleanField[];
  isDefaultShipping?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isJobResourceVend?: PlatformCore.SearchColumnBooleanField[];
  isPerson?: PlatformCore.SearchColumnBooleanField[];
  laborCost?: PlatformCore.SearchColumnDoubleField[];
  language?: PlatformCore.SearchColumnEnumSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  lastName?: PlatformCore.SearchColumnStringField[];
  level?: PlatformCore.SearchColumnEnumSelectField[];
  middleName?: PlatformCore.SearchColumnStringField[];
  mobilePhone?: PlatformCore.SearchColumnStringField[];
  payablesAccount?: PlatformCore.SearchColumnSelectField[];
  pec?: PlatformCore.SearchColumnStringField[];
  permission?: PlatformCore.SearchColumnEnumSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  phoneticName?: PlatformCore.SearchColumnStringField[];
  predConfidence?: PlatformCore.SearchColumnDoubleField[];
  predictedDays?: PlatformCore.SearchColumnDoubleField[];
  printOnCheckAs?: PlatformCore.SearchColumnStringField[];
  printTransactions?: PlatformCore.SearchColumnBooleanField[];
  purchaseOrderAmount?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrderQuantity?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrderQuantityDiff?: PlatformCore.SearchColumnDoubleField[];
  receiptAmount?: PlatformCore.SearchColumnDoubleField[];
  receiptQuantity?: PlatformCore.SearchColumnDoubleField[];
  receiptQuantityDiff?: PlatformCore.SearchColumnDoubleField[];
  salutation?: PlatformCore.SearchColumnStringField[];
  shipAddress?: PlatformCore.SearchColumnStringField[];
  shipAddress1?: PlatformCore.SearchColumnStringField[];
  shipAddress2?: PlatformCore.SearchColumnStringField[];
  shipAddress3?: PlatformCore.SearchColumnStringField[];
  shipAddressee?: PlatformCore.SearchColumnStringField[];
  shipAttention?: PlatformCore.SearchColumnStringField[];
  shipCity?: PlatformCore.SearchColumnStringField[];
  shipCountry?: PlatformCore.SearchColumnEnumSelectField[];
  shipCountryCode?: PlatformCore.SearchColumnStringField[];
  shipPhone?: PlatformCore.SearchColumnStringField[];
  shipState?: PlatformCore.SearchColumnStringField[];
  shipZip?: PlatformCore.SearchColumnStringField[];
  state?: PlatformCore.SearchColumnStringField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionDate?: PlatformCore.SearchColumnDateField[];
  subscriptionStatus?: PlatformCore.SearchColumnBooleanField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  taxIdNum?: PlatformCore.SearchColumnStringField[];
  terms?: PlatformCore.SearchColumnSelectField[];
  timeApprover?: PlatformCore.SearchColumnSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  unbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  url?: PlatformCore.SearchColumnStringField[];
  vatRegNumber?: PlatformCore.SearchColumnStringField[];
  workCalendar?: PlatformCore.SearchColumnSelectField[];
  zipCode?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: VendorSearchRowBasicProps) {
    super();
    this.accountNumber = props.accountNumber;
    this.address = props.address;
    this.address1 = props.address1;
    this.address2 = props.address2;
    this.address3 = props.address3;
    this.addressee = props.addressee;
    this.addressInternalId = props.addressInternalId;
    this.addressLabel = props.addressLabel;
    this.addressPhone = props.addressPhone;
    this.altContact = props.altContact;
    this.altEmail = props.altEmail;
    this.altName = props.altName;
    this.altPhone = props.altPhone;
    this.attention = props.attention;
    this.balance = props.balance;
    this.billAddress = props.billAddress;
    this.billAddress1 = props.billAddress1;
    this.billAddress2 = props.billAddress2;
    this.billAddress3 = props.billAddress3;
    this.billAddressee = props.billAddressee;
    this.billAttention = props.billAttention;
    this.billCity = props.billCity;
    this.billCountry = props.billCountry;
    this.billCountryCode = props.billCountryCode;
    this.billPhone = props.billPhone;
    this.billState = props.billState;
    this.billZipCode = props.billZipCode;
    this.category = props.category;
    this.city = props.city;
    this.comments = props.comments;
    this.companyName = props.companyName;
    this.contact = props.contact;
    this.country = props.country;
    this.countryCode = props.countryCode;
    this.creditLimit = props.creditLimit;
    this.currency = props.currency;
    this.currentExchangeRate = props.currentExchangeRate;
    this.dateCreated = props.dateCreated;
    this.defaultTaxReg = props.defaultTaxReg;
    this.eligibleForCommission = props.eligibleForCommission;
    this.email = props.email;
    this.emailPreference = props.emailPreference;
    this.emailTransactions = props.emailTransactions;
    this.entityId = props.entityId;
    this.entityNumber = props.entityNumber;
    this.expenseAccount = props.expenseAccount;
    this.externalId = props.externalId;
    this.fax = props.fax;
    this.faxTransactions = props.faxTransactions;
    this.firstName = props.firstName;
    this.fxBalance = props.fxBalance;
    this.fxUnbilledOrders = props.fxUnbilledOrders;
    this.giveAccess = props.giveAccess;
    this.globalSubscriptionStatus = props.globalSubscriptionStatus;
    this.hasDuplicates = props.hasDuplicates;
    this.homePhone = props.homePhone;
    this.image = props.image;
    this.incoterm = props.incoterm;
    this.internalId = props.internalId;
    this.is1099Eligible = props.is1099Eligible;
    this.isDefaultBilling = props.isDefaultBilling;
    this.isDefaultShipping = props.isDefaultShipping;
    this.isInactive = props.isInactive;
    this.isJobResourceVend = props.isJobResourceVend;
    this.isPerson = props.isPerson;
    this.laborCost = props.laborCost;
    this.language = props.language;
    this.lastModifiedDate = props.lastModifiedDate;
    this.lastName = props.lastName;
    this.level = props.level;
    this.middleName = props.middleName;
    this.mobilePhone = props.mobilePhone;
    this.payablesAccount = props.payablesAccount;
    this.pec = props.pec;
    this.permission = props.permission;
    this.phone = props.phone;
    this.phoneticName = props.phoneticName;
    this.predConfidence = props.predConfidence;
    this.predictedDays = props.predictedDays;
    this.printOnCheckAs = props.printOnCheckAs;
    this.printTransactions = props.printTransactions;
    this.purchaseOrderAmount = props.purchaseOrderAmount;
    this.purchaseOrderQuantity = props.purchaseOrderQuantity;
    this.purchaseOrderQuantityDiff = props.purchaseOrderQuantityDiff;
    this.receiptAmount = props.receiptAmount;
    this.receiptQuantity = props.receiptQuantity;
    this.receiptQuantityDiff = props.receiptQuantityDiff;
    this.salutation = props.salutation;
    this.shipAddress = props.shipAddress;
    this.shipAddress1 = props.shipAddress1;
    this.shipAddress2 = props.shipAddress2;
    this.shipAddress3 = props.shipAddress3;
    this.shipAddressee = props.shipAddressee;
    this.shipAttention = props.shipAttention;
    this.shipCity = props.shipCity;
    this.shipCountry = props.shipCountry;
    this.shipCountryCode = props.shipCountryCode;
    this.shipPhone = props.shipPhone;
    this.shipState = props.shipState;
    this.shipZip = props.shipZip;
    this.state = props.state;
    this.subscription = props.subscription;
    this.subscriptionDate = props.subscriptionDate;
    this.subscriptionStatus = props.subscriptionStatus;
    this.subsidiary = props.subsidiary;
    this.taxIdNum = props.taxIdNum;
    this.terms = props.terms;
    this.timeApprover = props.timeApprover;
    this.title = props.title;
    this.unbilledOrders = props.unbilledOrders;
    this.url = props.url;
    this.vatRegNumber = props.vatRegNumber;
    this.workCalendar = props.workCalendar;
    this.zipCode = props.zipCode;
    this.customFieldList = props.customFieldList;
  }
}

export type PartnerSearchBasicProps = {
  address?: PlatformCore.SearchStringField;
  addressee?: PlatformCore.SearchStringField;
  addressLabel?: PlatformCore.SearchStringField;
  addressPhone?: PlatformCore.SearchStringField;
  assignTasks?: PlatformCore.SearchBooleanField;
  attention?: PlatformCore.SearchStringField;
  billAddress?: PlatformCore.SearchStringField;
  category?: PlatformCore.SearchMultiSelectField;
  city?: PlatformCore.SearchStringField;
  clazz?: PlatformCore.SearchMultiSelectField;
  comments?: PlatformCore.SearchStringField;
  commissionPlan?: PlatformCore.SearchMultiSelectField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  dateCreated?: PlatformCore.SearchDateField;
  defaultTaxReg?: PlatformCore.SearchMultiSelectField;
  defaultTaxRegText?: PlatformCore.SearchStringField;
  department?: PlatformCore.SearchMultiSelectField;
  eligibleForCommission?: PlatformCore.SearchBooleanField;
  email?: PlatformCore.SearchStringField;
  emailPreference?: PlatformCore.SearchEnumMultiSelectField;
  entityId?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  firstName?: PlatformCore.SearchStringField;
  giveAccess?: PlatformCore.SearchBooleanField;
  globalSubscriptionStatus?: PlatformCore.SearchEnumMultiSelectField;
  group?: PlatformCore.SearchMultiSelectField;
  hasDuplicates?: PlatformCore.SearchBooleanField;
  image?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDefaultBilling?: PlatformCore.SearchBooleanField;
  isDefaultShipping?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isPerson?: PlatformCore.SearchBooleanField;
  language?: PlatformCore.SearchEnumMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  lastName?: PlatformCore.SearchStringField;
  level?: PlatformCore.SearchEnumMultiSelectField;
  location?: PlatformCore.SearchMultiSelectField;
  middleName?: PlatformCore.SearchStringField;
  otherRelationships?: PlatformCore.SearchEnumMultiSelectField;
  parent?: PlatformCore.SearchMultiSelectField;
  partnerCode?: PlatformCore.SearchStringField;
  permission?: PlatformCore.SearchEnumMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  phoneticName?: PlatformCore.SearchStringField;
  promoCode?: PlatformCore.SearchMultiSelectField;
  salutation?: PlatformCore.SearchStringField;
  shipAddress?: PlatformCore.SearchStringField;
  state?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  url?: PlatformCore.SearchStringField;
  zipCode?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class PartnerSearchBasic extends PlatformCore.SearchRecordBasic {
  address?: PlatformCore.SearchStringField;
  addressee?: PlatformCore.SearchStringField;
  addressLabel?: PlatformCore.SearchStringField;
  addressPhone?: PlatformCore.SearchStringField;
  assignTasks?: PlatformCore.SearchBooleanField;
  attention?: PlatformCore.SearchStringField;
  billAddress?: PlatformCore.SearchStringField;
  category?: PlatformCore.SearchMultiSelectField;
  city?: PlatformCore.SearchStringField;
  clazz?: PlatformCore.SearchMultiSelectField;
  comments?: PlatformCore.SearchStringField;
  commissionPlan?: PlatformCore.SearchMultiSelectField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  dateCreated?: PlatformCore.SearchDateField;
  defaultTaxReg?: PlatformCore.SearchMultiSelectField;
  defaultTaxRegText?: PlatformCore.SearchStringField;
  department?: PlatformCore.SearchMultiSelectField;
  eligibleForCommission?: PlatformCore.SearchBooleanField;
  email?: PlatformCore.SearchStringField;
  emailPreference?: PlatformCore.SearchEnumMultiSelectField;
  entityId?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  firstName?: PlatformCore.SearchStringField;
  giveAccess?: PlatformCore.SearchBooleanField;
  globalSubscriptionStatus?: PlatformCore.SearchEnumMultiSelectField;
  group?: PlatformCore.SearchMultiSelectField;
  hasDuplicates?: PlatformCore.SearchBooleanField;
  image?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDefaultBilling?: PlatformCore.SearchBooleanField;
  isDefaultShipping?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isPerson?: PlatformCore.SearchBooleanField;
  language?: PlatformCore.SearchEnumMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  lastName?: PlatformCore.SearchStringField;
  level?: PlatformCore.SearchEnumMultiSelectField;
  location?: PlatformCore.SearchMultiSelectField;
  middleName?: PlatformCore.SearchStringField;
  otherRelationships?: PlatformCore.SearchEnumMultiSelectField;
  parent?: PlatformCore.SearchMultiSelectField;
  partnerCode?: PlatformCore.SearchStringField;
  permission?: PlatformCore.SearchEnumMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  phoneticName?: PlatformCore.SearchStringField;
  promoCode?: PlatformCore.SearchMultiSelectField;
  salutation?: PlatformCore.SearchStringField;
  shipAddress?: PlatformCore.SearchStringField;
  state?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  url?: PlatformCore.SearchStringField;
  zipCode?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: PartnerSearchBasicProps) {
    super();
    this.address = props.address;
    this.addressee = props.addressee;
    this.addressLabel = props.addressLabel;
    this.addressPhone = props.addressPhone;
    this.assignTasks = props.assignTasks;
    this.attention = props.attention;
    this.billAddress = props.billAddress;
    this.category = props.category;
    this.city = props.city;
    this.clazz = props.clazz;
    this.comments = props.comments;
    this.commissionPlan = props.commissionPlan;
    this.country = props.country;
    this.county = props.county;
    this.dateCreated = props.dateCreated;
    this.defaultTaxReg = props.defaultTaxReg;
    this.defaultTaxRegText = props.defaultTaxRegText;
    this.department = props.department;
    this.eligibleForCommission = props.eligibleForCommission;
    this.email = props.email;
    this.emailPreference = props.emailPreference;
    this.entityId = props.entityId;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.fax = props.fax;
    this.firstName = props.firstName;
    this.giveAccess = props.giveAccess;
    this.globalSubscriptionStatus = props.globalSubscriptionStatus;
    this.group = props.group;
    this.hasDuplicates = props.hasDuplicates;
    this.image = props.image;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isDefaultBilling = props.isDefaultBilling;
    this.isDefaultShipping = props.isDefaultShipping;
    this.isInactive = props.isInactive;
    this.isPerson = props.isPerson;
    this.language = props.language;
    this.lastModifiedDate = props.lastModifiedDate;
    this.lastName = props.lastName;
    this.level = props.level;
    this.location = props.location;
    this.middleName = props.middleName;
    this.otherRelationships = props.otherRelationships;
    this.parent = props.parent;
    this.partnerCode = props.partnerCode;
    this.permission = props.permission;
    this.phone = props.phone;
    this.phoneticName = props.phoneticName;
    this.promoCode = props.promoCode;
    this.salutation = props.salutation;
    this.shipAddress = props.shipAddress;
    this.state = props.state;
    this.subsidiary = props.subsidiary;
    this.title = props.title;
    this.url = props.url;
    this.zipCode = props.zipCode;
    this.customFieldList = props.customFieldList;
  }
}

export type ContactCategorySearchBasicProps = {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  _private?: PlatformCore.SearchBooleanField;
  sync?: PlatformCore.SearchBooleanField;
};

export class ContactCategorySearchBasic extends PlatformCore.SearchRecordBasic {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  _private?: PlatformCore.SearchBooleanField;
  sync?: PlatformCore.SearchBooleanField;
  constructor(props: ContactCategorySearchBasicProps) {
    super();
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this._private = props._private;
    this.sync = props.sync;
  }
}

export type InventoryAssignmentListProps = {
  inventoryAssignment?: InventoryAssignment[];
  replaceAll?: boolean;
};

export class InventoryAssignmentList {
  inventoryAssignment?: InventoryAssignment[];
  replaceAll?: boolean;
  constructor(props: InventoryAssignmentListProps) {
    this.inventoryAssignment = props.inventoryAssignment;
    this.replaceAll = props.replaceAll;
  }
}

export type VendorCategorySearchRowBasicProps = {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isTaxAgency?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
};

export class VendorCategorySearchRowBasic extends PlatformCore.SearchRowBasic {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isTaxAgency?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  constructor(props: VendorCategorySearchRowBasicProps) {
    super();
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.isTaxAgency = props.isTaxAgency;
    this.name = props.name;
  }
}

export type CouponCodeSearchRowBasicProps = {
  code?: PlatformCore.SearchColumnStringField[];
  dateSent?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  id?: PlatformCore.SearchColumnLongField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  promotion?: PlatformCore.SearchColumnStringField[];
  recipient?: PlatformCore.SearchColumnStringField[];
  useCount?: PlatformCore.SearchColumnLongField[];
  used?: PlatformCore.SearchColumnBooleanField[];
};

export class CouponCodeSearchRowBasic extends PlatformCore.SearchRowBasic {
  code?: PlatformCore.SearchColumnStringField[];
  dateSent?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  id?: PlatformCore.SearchColumnLongField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  promotion?: PlatformCore.SearchColumnStringField[];
  recipient?: PlatformCore.SearchColumnStringField[];
  useCount?: PlatformCore.SearchColumnLongField[];
  used?: PlatformCore.SearchColumnBooleanField[];
  constructor(props: CouponCodeSearchRowBasicProps) {
    super();
    this.code = props.code;
    this.dateSent = props.dateSent;
    this.externalId = props.externalId;
    this.id = props.id;
    this.internalId = props.internalId;
    this.promotion = props.promotion;
    this.recipient = props.recipient;
    this.useCount = props.useCount;
    this.used = props.used;
  }
}

export type BillingScheduleSearchRowBasicProps = {
  applyToSubtotal?: PlatformCore.SearchColumnBooleanField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  frequency?: PlatformCore.SearchColumnEnumSelectField[];
  inArrears?: PlatformCore.SearchColumnBooleanField[];
  initialAmount?: PlatformCore.SearchColumnStringField[];
  initialTerms?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isPublic?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  recurrenceCount?: PlatformCore.SearchColumnLongField[];
  recurrencePattern?: PlatformCore.SearchColumnEnumSelectField[];
  recurrenceTerms?: PlatformCore.SearchColumnStringField[];
  repeatEvery?: PlatformCore.SearchColumnLongField[];
  type?: PlatformCore.SearchColumnEnumSelectField[];
};

export class BillingScheduleSearchRowBasic extends PlatformCore.SearchRowBasic {
  applyToSubtotal?: PlatformCore.SearchColumnBooleanField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  frequency?: PlatformCore.SearchColumnEnumSelectField[];
  inArrears?: PlatformCore.SearchColumnBooleanField[];
  initialAmount?: PlatformCore.SearchColumnStringField[];
  initialTerms?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isPublic?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  recurrenceCount?: PlatformCore.SearchColumnLongField[];
  recurrencePattern?: PlatformCore.SearchColumnEnumSelectField[];
  recurrenceTerms?: PlatformCore.SearchColumnStringField[];
  repeatEvery?: PlatformCore.SearchColumnLongField[];
  type?: PlatformCore.SearchColumnEnumSelectField[];
  constructor(props: BillingScheduleSearchRowBasicProps) {
    super();
    this.applyToSubtotal = props.applyToSubtotal;
    this.externalId = props.externalId;
    this.frequency = props.frequency;
    this.inArrears = props.inArrears;
    this.initialAmount = props.initialAmount;
    this.initialTerms = props.initialTerms;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.isPublic = props.isPublic;
    this.name = props.name;
    this.recurrenceCount = props.recurrenceCount;
    this.recurrencePattern = props.recurrencePattern;
    this.recurrenceTerms = props.recurrenceTerms;
    this.repeatEvery = props.repeatEvery;
    this.type = props.type;
  }
}

export type UsageSearchBasicProps = {
  customer?: PlatformCore.SearchMultiSelectField;
  date?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  item?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  quantity?: PlatformCore.SearchDoubleField;
  subscription?: PlatformCore.SearchMultiSelectField;
  subscriptionLine?: PlatformCore.SearchMultiSelectField;
  subscriptionPlan?: PlatformCore.SearchMultiSelectField;
};

export class UsageSearchBasic extends PlatformCore.SearchRecordBasic {
  customer?: PlatformCore.SearchMultiSelectField;
  date?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  item?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  quantity?: PlatformCore.SearchDoubleField;
  subscription?: PlatformCore.SearchMultiSelectField;
  subscriptionLine?: PlatformCore.SearchMultiSelectField;
  subscriptionPlan?: PlatformCore.SearchMultiSelectField;
  constructor(props: UsageSearchBasicProps) {
    super();
    this.customer = props.customer;
    this.date = props.date;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.item = props.item;
    this.memo = props.memo;
    this.quantity = props.quantity;
    this.subscription = props.subscription;
    this.subscriptionLine = props.subscriptionLine;
    this.subscriptionPlan = props.subscriptionPlan;
  }
}

export type BomRevisionSearchRowBasicProps = {
  billOfMaterials?: PlatformCore.SearchColumnSelectField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  effectiveEndDate?: PlatformCore.SearchColumnDateField[];
  effectiveStartDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  memo?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class BomRevisionSearchRowBasic extends PlatformCore.SearchRowBasic {
  billOfMaterials?: PlatformCore.SearchColumnSelectField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  effectiveEndDate?: PlatformCore.SearchColumnDateField[];
  effectiveStartDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  memo?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: BomRevisionSearchRowBasicProps) {
    super();
    this.billOfMaterials = props.billOfMaterials;
    this.createdDate = props.createdDate;
    this.effectiveEndDate = props.effectiveEndDate;
    this.effectiveStartDate = props.effectiveStartDate;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.memo = props.memo;
    this.name = props.name;
    this.customFieldList = props.customFieldList;
  }
}

export type OpportunitySearchRowBasicProps = {
  actionItem?: PlatformCore.SearchColumnStringField[];
  availableOffline?: PlatformCore.SearchColumnBooleanField[];
  buyingReason?: PlatformCore.SearchColumnStringField[];
  buyingTimeFrame?: PlatformCore.SearchColumnStringField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  closeDate?: PlatformCore.SearchColumnDateField[];
  competitor?: PlatformCore.SearchColumnSelectField[];
  contribution?: PlatformCore.SearchColumnDoubleField[];
  contributionPrimary?: PlatformCore.SearchColumnDoubleField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  custType?: PlatformCore.SearchColumnStringField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  daysOpen?: PlatformCore.SearchColumnLongField[];
  daysToClose?: PlatformCore.SearchColumnLongField[];
  decisionMaker?: PlatformCore.SearchColumnSelectField[];
  department?: PlatformCore.SearchColumnSelectField[];
  status?: PlatformCore.SearchColumnEnumSelectField[];
  entity?: PlatformCore.SearchColumnSelectField[];
  entityStatus?: PlatformCore.SearchColumnSelectField[];
  estimatedBudget?: PlatformCore.SearchColumnDoubleField[];
  expectedCloseDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  forecastType?: PlatformCore.SearchColumnEnumSelectField[];
  foreignProjectedAmount?: PlatformCore.SearchColumnDoubleField[];
  foreignRangeHigh?: PlatformCore.SearchColumnDoubleField[];
  foreignRangeLow?: PlatformCore.SearchColumnDoubleField[];
  fxTranCostEstimate?: PlatformCore.SearchColumnDoubleField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isBudgetApproved?: PlatformCore.SearchColumnBooleanField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  leadSource?: PlatformCore.SearchColumnSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  partner?: PlatformCore.SearchColumnSelectField[];
  partnerContribution?: PlatformCore.SearchColumnDoubleField[];
  partnerRole?: PlatformCore.SearchColumnSelectField[];
  partnerTeamMember?: PlatformCore.SearchColumnSelectField[];
  period?: PlatformCore.SearchColumnStringField[];
  probability?: PlatformCore.SearchColumnDoubleField[];
  projAltSalesAmt?: PlatformCore.SearchColumnDoubleField[];
  projectedTotal?: PlatformCore.SearchColumnDoubleField[];
  rangeHigh?: PlatformCore.SearchColumnDoubleField[];
  rangeHighAlt?: PlatformCore.SearchColumnDoubleField[];
  rangeLow?: PlatformCore.SearchColumnDoubleField[];
  rangeLowAlt?: PlatformCore.SearchColumnDoubleField[];
  salesReadiness?: PlatformCore.SearchColumnStringField[];
  salesRep?: PlatformCore.SearchColumnSelectField[];
  salesTeamMember?: PlatformCore.SearchColumnSelectField[];
  salesTeamRole?: PlatformCore.SearchColumnSelectField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  taxPeriod?: PlatformCore.SearchColumnSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  total?: PlatformCore.SearchColumnDoubleField[];
  tranCostEstimate?: PlatformCore.SearchColumnDoubleField[];
  tranDate?: PlatformCore.SearchColumnDateField[];
  tranEstGrossProfit?: PlatformCore.SearchColumnDoubleField[];
  tranEstGrossProfitPct?: PlatformCore.SearchColumnDoubleField[];
  tranFxEstGrossProfit?: PlatformCore.SearchColumnDoubleField[];
  tranId?: PlatformCore.SearchColumnStringField[];
  weightedTotal?: PlatformCore.SearchColumnDoubleField[];
  winLossReason?: PlatformCore.SearchColumnSelectField[];
  wonBy?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class OpportunitySearchRowBasic extends PlatformCore.SearchRowBasic {
  actionItem?: PlatformCore.SearchColumnStringField[];
  availableOffline?: PlatformCore.SearchColumnBooleanField[];
  buyingReason?: PlatformCore.SearchColumnStringField[];
  buyingTimeFrame?: PlatformCore.SearchColumnStringField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  closeDate?: PlatformCore.SearchColumnDateField[];
  competitor?: PlatformCore.SearchColumnSelectField[];
  contribution?: PlatformCore.SearchColumnDoubleField[];
  contributionPrimary?: PlatformCore.SearchColumnDoubleField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  custType?: PlatformCore.SearchColumnStringField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  daysOpen?: PlatformCore.SearchColumnLongField[];
  daysToClose?: PlatformCore.SearchColumnLongField[];
  decisionMaker?: PlatformCore.SearchColumnSelectField[];
  department?: PlatformCore.SearchColumnSelectField[];
  status?: PlatformCore.SearchColumnEnumSelectField[];
  entity?: PlatformCore.SearchColumnSelectField[];
  entityStatus?: PlatformCore.SearchColumnSelectField[];
  estimatedBudget?: PlatformCore.SearchColumnDoubleField[];
  expectedCloseDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  forecastType?: PlatformCore.SearchColumnEnumSelectField[];
  foreignProjectedAmount?: PlatformCore.SearchColumnDoubleField[];
  foreignRangeHigh?: PlatformCore.SearchColumnDoubleField[];
  foreignRangeLow?: PlatformCore.SearchColumnDoubleField[];
  fxTranCostEstimate?: PlatformCore.SearchColumnDoubleField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isBudgetApproved?: PlatformCore.SearchColumnBooleanField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  leadSource?: PlatformCore.SearchColumnSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  partner?: PlatformCore.SearchColumnSelectField[];
  partnerContribution?: PlatformCore.SearchColumnDoubleField[];
  partnerRole?: PlatformCore.SearchColumnSelectField[];
  partnerTeamMember?: PlatformCore.SearchColumnSelectField[];
  period?: PlatformCore.SearchColumnStringField[];
  probability?: PlatformCore.SearchColumnDoubleField[];
  projAltSalesAmt?: PlatformCore.SearchColumnDoubleField[];
  projectedTotal?: PlatformCore.SearchColumnDoubleField[];
  rangeHigh?: PlatformCore.SearchColumnDoubleField[];
  rangeHighAlt?: PlatformCore.SearchColumnDoubleField[];
  rangeLow?: PlatformCore.SearchColumnDoubleField[];
  rangeLowAlt?: PlatformCore.SearchColumnDoubleField[];
  salesReadiness?: PlatformCore.SearchColumnStringField[];
  salesRep?: PlatformCore.SearchColumnSelectField[];
  salesTeamMember?: PlatformCore.SearchColumnSelectField[];
  salesTeamRole?: PlatformCore.SearchColumnSelectField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  taxPeriod?: PlatformCore.SearchColumnSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  total?: PlatformCore.SearchColumnDoubleField[];
  tranCostEstimate?: PlatformCore.SearchColumnDoubleField[];
  tranDate?: PlatformCore.SearchColumnDateField[];
  tranEstGrossProfit?: PlatformCore.SearchColumnDoubleField[];
  tranEstGrossProfitPct?: PlatformCore.SearchColumnDoubleField[];
  tranFxEstGrossProfit?: PlatformCore.SearchColumnDoubleField[];
  tranId?: PlatformCore.SearchColumnStringField[];
  weightedTotal?: PlatformCore.SearchColumnDoubleField[];
  winLossReason?: PlatformCore.SearchColumnSelectField[];
  wonBy?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: OpportunitySearchRowBasicProps) {
    super();
    this.actionItem = props.actionItem;
    this.availableOffline = props.availableOffline;
    this.buyingReason = props.buyingReason;
    this.buyingTimeFrame = props.buyingTimeFrame;
    this.clazz = props.clazz;
    this.closeDate = props.closeDate;
    this.competitor = props.competitor;
    this.contribution = props.contribution;
    this.contributionPrimary = props.contributionPrimary;
    this.currency = props.currency;
    this.custType = props.custType;
    this.dateCreated = props.dateCreated;
    this.daysOpen = props.daysOpen;
    this.daysToClose = props.daysToClose;
    this.decisionMaker = props.decisionMaker;
    this.department = props.department;
    this.status = props.status;
    this.entity = props.entity;
    this.entityStatus = props.entityStatus;
    this.estimatedBudget = props.estimatedBudget;
    this.expectedCloseDate = props.expectedCloseDate;
    this.externalId = props.externalId;
    this.forecastType = props.forecastType;
    this.foreignProjectedAmount = props.foreignProjectedAmount;
    this.foreignRangeHigh = props.foreignRangeHigh;
    this.foreignRangeLow = props.foreignRangeLow;
    this.fxTranCostEstimate = props.fxTranCostEstimate;
    this.internalId = props.internalId;
    this.isBudgetApproved = props.isBudgetApproved;
    this.lastModifiedDate = props.lastModifiedDate;
    this.leadSource = props.leadSource;
    this.location = props.location;
    this.memo = props.memo;
    this.partner = props.partner;
    this.partnerContribution = props.partnerContribution;
    this.partnerRole = props.partnerRole;
    this.partnerTeamMember = props.partnerTeamMember;
    this.period = props.period;
    this.probability = props.probability;
    this.projAltSalesAmt = props.projAltSalesAmt;
    this.projectedTotal = props.projectedTotal;
    this.rangeHigh = props.rangeHigh;
    this.rangeHighAlt = props.rangeHighAlt;
    this.rangeLow = props.rangeLow;
    this.rangeLowAlt = props.rangeLowAlt;
    this.salesReadiness = props.salesReadiness;
    this.salesRep = props.salesRep;
    this.salesTeamMember = props.salesTeamMember;
    this.salesTeamRole = props.salesTeamRole;
    this.subsidiary = props.subsidiary;
    this.taxPeriod = props.taxPeriod;
    this.title = props.title;
    this.total = props.total;
    this.tranCostEstimate = props.tranCostEstimate;
    this.tranDate = props.tranDate;
    this.tranEstGrossProfit = props.tranEstGrossProfit;
    this.tranEstGrossProfitPct = props.tranEstGrossProfitPct;
    this.tranFxEstGrossProfit = props.tranFxEstGrossProfit;
    this.tranId = props.tranId;
    this.weightedTotal = props.weightedTotal;
    this.winLossReason = props.winLossReason;
    this.wonBy = props.wonBy;
    this.customFieldList = props.customFieldList;
  }
}

export type ClassificationSearchRowBasicProps = {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  nameNoHierarchy?: PlatformCore.SearchColumnStringField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class ClassificationSearchRowBasic extends PlatformCore.SearchRowBasic {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  nameNoHierarchy?: PlatformCore.SearchColumnStringField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: ClassificationSearchRowBasicProps) {
    super();
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.nameNoHierarchy = props.nameNoHierarchy;
    this.subsidiary = props.subsidiary;
    this.customFieldList = props.customFieldList;
  }
}

export type ClassificationSearchBasicProps = {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  nameNoHierarchy?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class ClassificationSearchBasic extends PlatformCore.SearchRecordBasic {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  nameNoHierarchy?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: ClassificationSearchBasicProps) {
    super();
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.nameNoHierarchy = props.nameNoHierarchy;
    this.subsidiary = props.subsidiary;
    this.customFieldList = props.customFieldList;
  }
}

export type ConsolidatedExchangeRateSearchRowBasicProps = {
  accountingBook?: PlatformCore.SearchColumnStringField[];
  averageRate?: PlatformCore.SearchColumnStringField[];
  closed?: PlatformCore.SearchColumnBooleanField[];
  currentRate?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fromCurrency?: PlatformCore.SearchColumnStringField[];
  fromSubsidiary?: PlatformCore.SearchColumnStringField[];
  historicalRate?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  periodEndDate?: PlatformCore.SearchColumnDateField[];
  periodName?: PlatformCore.SearchColumnStringField[];
  periodStartDate?: PlatformCore.SearchColumnDateField[];
  toCurrency?: PlatformCore.SearchColumnStringField[];
  toSubsidiary?: PlatformCore.SearchColumnStringField[];
};

export class ConsolidatedExchangeRateSearchRowBasic extends PlatformCore.SearchRowBasic {
  accountingBook?: PlatformCore.SearchColumnStringField[];
  averageRate?: PlatformCore.SearchColumnStringField[];
  closed?: PlatformCore.SearchColumnBooleanField[];
  currentRate?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fromCurrency?: PlatformCore.SearchColumnStringField[];
  fromSubsidiary?: PlatformCore.SearchColumnStringField[];
  historicalRate?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  periodEndDate?: PlatformCore.SearchColumnDateField[];
  periodName?: PlatformCore.SearchColumnStringField[];
  periodStartDate?: PlatformCore.SearchColumnDateField[];
  toCurrency?: PlatformCore.SearchColumnStringField[];
  toSubsidiary?: PlatformCore.SearchColumnStringField[];
  constructor(props: ConsolidatedExchangeRateSearchRowBasicProps) {
    super();
    this.accountingBook = props.accountingBook;
    this.averageRate = props.averageRate;
    this.closed = props.closed;
    this.currentRate = props.currentRate;
    this.externalId = props.externalId;
    this.fromCurrency = props.fromCurrency;
    this.fromSubsidiary = props.fromSubsidiary;
    this.historicalRate = props.historicalRate;
    this.internalId = props.internalId;
    this.periodEndDate = props.periodEndDate;
    this.periodName = props.periodName;
    this.periodStartDate = props.periodStartDate;
    this.toCurrency = props.toCurrency;
    this.toSubsidiary = props.toSubsidiary;
  }
}

export type JobTypeSearchRowBasicProps = {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  parent?: PlatformCore.SearchColumnSelectField[];
};

export class JobTypeSearchRowBasic extends PlatformCore.SearchRowBasic {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  parent?: PlatformCore.SearchColumnSelectField[];
  constructor(props: JobTypeSearchRowBasicProps) {
    super();
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.parent = props.parent;
  }
}

export type PriceLevelSearchBasicProps = {
  discountPct?: PlatformCore.SearchDoubleField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  isOnline?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
};

export class PriceLevelSearchBasic extends PlatformCore.SearchRecordBasic {
  discountPct?: PlatformCore.SearchDoubleField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  isOnline?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  constructor(props: PriceLevelSearchBasicProps) {
    super();
    this.discountPct = props.discountPct;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.isOnline = props.isOnline;
    this.name = props.name;
  }
}

export type ItemSupplyPlanSearchRowBasicProps = {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  item?: PlatformCore.SearchColumnSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  location?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  orderCreated?: PlatformCore.SearchColumnBooleanField[];
  orderDate?: PlatformCore.SearchColumnDateField[];
  orderType?: PlatformCore.SearchColumnSelectField[];
  quantity?: PlatformCore.SearchColumnDoubleField[];
  quantityUom?: PlatformCore.SearchColumnDoubleField[];
  receiptDate?: PlatformCore.SearchColumnDateField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  units?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class ItemSupplyPlanSearchRowBasic extends PlatformCore.SearchRowBasic {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  item?: PlatformCore.SearchColumnSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  location?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  orderCreated?: PlatformCore.SearchColumnBooleanField[];
  orderDate?: PlatformCore.SearchColumnDateField[];
  orderType?: PlatformCore.SearchColumnSelectField[];
  quantity?: PlatformCore.SearchColumnDoubleField[];
  quantityUom?: PlatformCore.SearchColumnDoubleField[];
  receiptDate?: PlatformCore.SearchColumnDateField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  units?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: ItemSupplyPlanSearchRowBasicProps) {
    super();
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.item = props.item;
    this.lastModifiedDate = props.lastModifiedDate;
    this.location = props.location;
    this.memo = props.memo;
    this.orderCreated = props.orderCreated;
    this.orderDate = props.orderDate;
    this.orderType = props.orderType;
    this.quantity = props.quantity;
    this.quantityUom = props.quantityUom;
    this.receiptDate = props.receiptDate;
    this.subsidiary = props.subsidiary;
    this.units = props.units;
    this.customFieldList = props.customFieldList;
  }
}

export type ManufacturingOperationTaskSearchRowBasicProps = {
  actualRunTime?: PlatformCore.SearchColumnDoubleField[];
  actualSetupTime?: PlatformCore.SearchColumnDoubleField[];
  completedQuantity?: PlatformCore.SearchColumnDoubleField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  estimatedWork?: PlatformCore.SearchColumnDoubleField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  id?: PlatformCore.SearchColumnLongField[];
  inputQuantity?: PlatformCore.SearchColumnDoubleField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  laborResources?: PlatformCore.SearchColumnDoubleField[];
  lagAmount?: PlatformCore.SearchColumnDoubleField[];
  lagType?: PlatformCore.SearchColumnEnumSelectField[];
  lagUnits?: PlatformCore.SearchColumnStringField[];
  machineResources?: PlatformCore.SearchColumnDoubleField[];
  manufacturingCostTemplate?: PlatformCore.SearchColumnSelectField[];
  manufacturingWorkCenter?: PlatformCore.SearchColumnSelectField[];
  message?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  order?: PlatformCore.SearchColumnDoubleField[];
  predecessor?: PlatformCore.SearchColumnSelectField[];
  predecessorType?: PlatformCore.SearchColumnStringField[];
  remainingQuantity?: PlatformCore.SearchColumnDoubleField[];
  runRate?: PlatformCore.SearchColumnDoubleField[];
  runTime?: PlatformCore.SearchColumnDoubleField[];
  sequence?: PlatformCore.SearchColumnLongField[];
  setupTime?: PlatformCore.SearchColumnDoubleField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  status?: PlatformCore.SearchColumnSelectField[];
  workOrder?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class ManufacturingOperationTaskSearchRowBasic extends PlatformCore.SearchRowBasic {
  actualRunTime?: PlatformCore.SearchColumnDoubleField[];
  actualSetupTime?: PlatformCore.SearchColumnDoubleField[];
  completedQuantity?: PlatformCore.SearchColumnDoubleField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  estimatedWork?: PlatformCore.SearchColumnDoubleField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  id?: PlatformCore.SearchColumnLongField[];
  inputQuantity?: PlatformCore.SearchColumnDoubleField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  laborResources?: PlatformCore.SearchColumnDoubleField[];
  lagAmount?: PlatformCore.SearchColumnDoubleField[];
  lagType?: PlatformCore.SearchColumnEnumSelectField[];
  lagUnits?: PlatformCore.SearchColumnStringField[];
  machineResources?: PlatformCore.SearchColumnDoubleField[];
  manufacturingCostTemplate?: PlatformCore.SearchColumnSelectField[];
  manufacturingWorkCenter?: PlatformCore.SearchColumnSelectField[];
  message?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  order?: PlatformCore.SearchColumnDoubleField[];
  predecessor?: PlatformCore.SearchColumnSelectField[];
  predecessorType?: PlatformCore.SearchColumnStringField[];
  remainingQuantity?: PlatformCore.SearchColumnDoubleField[];
  runRate?: PlatformCore.SearchColumnDoubleField[];
  runTime?: PlatformCore.SearchColumnDoubleField[];
  sequence?: PlatformCore.SearchColumnLongField[];
  setupTime?: PlatformCore.SearchColumnDoubleField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  status?: PlatformCore.SearchColumnSelectField[];
  workOrder?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: ManufacturingOperationTaskSearchRowBasicProps) {
    super();
    this.actualRunTime = props.actualRunTime;
    this.actualSetupTime = props.actualSetupTime;
    this.completedQuantity = props.completedQuantity;
    this.endDate = props.endDate;
    this.estimatedWork = props.estimatedWork;
    this.externalId = props.externalId;
    this.id = props.id;
    this.inputQuantity = props.inputQuantity;
    this.internalId = props.internalId;
    this.laborResources = props.laborResources;
    this.lagAmount = props.lagAmount;
    this.lagType = props.lagType;
    this.lagUnits = props.lagUnits;
    this.machineResources = props.machineResources;
    this.manufacturingCostTemplate = props.manufacturingCostTemplate;
    this.manufacturingWorkCenter = props.manufacturingWorkCenter;
    this.message = props.message;
    this.name = props.name;
    this.order = props.order;
    this.predecessor = props.predecessor;
    this.predecessorType = props.predecessorType;
    this.remainingQuantity = props.remainingQuantity;
    this.runRate = props.runRate;
    this.runTime = props.runTime;
    this.sequence = props.sequence;
    this.setupTime = props.setupTime;
    this.startDate = props.startDate;
    this.status = props.status;
    this.workOrder = props.workOrder;
    this.customFieldList = props.customFieldList;
  }
}

export type ContactSearchRowBasicProps = {
  address?: PlatformCore.SearchColumnStringField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  addressee?: PlatformCore.SearchColumnStringField[];
  addressInternalId?: PlatformCore.SearchColumnStringField[];
  addressLabel?: PlatformCore.SearchColumnStringField[];
  addressPhone?: PlatformCore.SearchColumnStringField[];
  altEmail?: PlatformCore.SearchColumnStringField[];
  altName?: PlatformCore.SearchColumnStringField[];
  altPhone?: PlatformCore.SearchColumnStringField[];
  attention?: PlatformCore.SearchColumnStringField[];
  availableOffline?: PlatformCore.SearchColumnBooleanField[];
  billAddress1?: PlatformCore.SearchColumnStringField[];
  billAddress2?: PlatformCore.SearchColumnStringField[];
  billAddress3?: PlatformCore.SearchColumnStringField[];
  billAddressee?: PlatformCore.SearchColumnStringField[];
  billAttention?: PlatformCore.SearchColumnStringField[];
  billCity?: PlatformCore.SearchColumnStringField[];
  billCountry?: PlatformCore.SearchColumnEnumSelectField[];
  billCountryCode?: PlatformCore.SearchColumnStringField[];
  billPhone?: PlatformCore.SearchColumnStringField[];
  billState?: PlatformCore.SearchColumnStringField[];
  billZipCode?: PlatformCore.SearchColumnStringField[];
  category?: PlatformCore.SearchColumnSelectField[];
  city?: PlatformCore.SearchColumnStringField[];
  comments?: PlatformCore.SearchColumnStringField[];
  company?: PlatformCore.SearchColumnSelectField[];
  contactRole?: PlatformCore.SearchColumnSelectField[];
  contactSource?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  countryCode?: PlatformCore.SearchColumnStringField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  defaultTaxReg?: PlatformCore.SearchColumnStringField[];
  email?: PlatformCore.SearchColumnStringField[];
  entityId?: PlatformCore.SearchColumnStringField[];
  entityNumber?: PlatformCore.SearchColumnLongField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  firstName?: PlatformCore.SearchColumnStringField[];
  giveAccess?: PlatformCore.SearchColumnBooleanField[];
  globalSubscriptionStatus?: PlatformCore.SearchColumnEnumSelectField[];
  hasDuplicates?: PlatformCore.SearchColumnBooleanField[];
  homePhone?: PlatformCore.SearchColumnStringField[];
  image?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isDefaultBilling?: PlatformCore.SearchColumnBooleanField[];
  isDefaultShipping?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  language?: PlatformCore.SearchColumnEnumSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  lastName?: PlatformCore.SearchColumnStringField[];
  level?: PlatformCore.SearchColumnEnumSelectField[];
  middleName?: PlatformCore.SearchColumnStringField[];
  mobilePhone?: PlatformCore.SearchColumnStringField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  permission?: PlatformCore.SearchColumnEnumSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  phoneticName?: PlatformCore.SearchColumnStringField[];
  salutation?: PlatformCore.SearchColumnStringField[];
  shipAddress1?: PlatformCore.SearchColumnStringField[];
  shipAddress2?: PlatformCore.SearchColumnStringField[];
  shipAddress3?: PlatformCore.SearchColumnStringField[];
  shipAddressee?: PlatformCore.SearchColumnStringField[];
  shipAttention?: PlatformCore.SearchColumnStringField[];
  shipCity?: PlatformCore.SearchColumnStringField[];
  shipCountry?: PlatformCore.SearchColumnEnumSelectField[];
  shipCountryCode?: PlatformCore.SearchColumnStringField[];
  shipPhone?: PlatformCore.SearchColumnStringField[];
  shipState?: PlatformCore.SearchColumnStringField[];
  shipZip?: PlatformCore.SearchColumnStringField[];
  state?: PlatformCore.SearchColumnStringField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionDate?: PlatformCore.SearchColumnDateField[];
  subscriptionStatus?: PlatformCore.SearchColumnBooleanField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  zipCode?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class ContactSearchRowBasic extends PlatformCore.SearchRowBasic {
  address?: PlatformCore.SearchColumnStringField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  addressee?: PlatformCore.SearchColumnStringField[];
  addressInternalId?: PlatformCore.SearchColumnStringField[];
  addressLabel?: PlatformCore.SearchColumnStringField[];
  addressPhone?: PlatformCore.SearchColumnStringField[];
  altEmail?: PlatformCore.SearchColumnStringField[];
  altName?: PlatformCore.SearchColumnStringField[];
  altPhone?: PlatformCore.SearchColumnStringField[];
  attention?: PlatformCore.SearchColumnStringField[];
  availableOffline?: PlatformCore.SearchColumnBooleanField[];
  billAddress1?: PlatformCore.SearchColumnStringField[];
  billAddress2?: PlatformCore.SearchColumnStringField[];
  billAddress3?: PlatformCore.SearchColumnStringField[];
  billAddressee?: PlatformCore.SearchColumnStringField[];
  billAttention?: PlatformCore.SearchColumnStringField[];
  billCity?: PlatformCore.SearchColumnStringField[];
  billCountry?: PlatformCore.SearchColumnEnumSelectField[];
  billCountryCode?: PlatformCore.SearchColumnStringField[];
  billPhone?: PlatformCore.SearchColumnStringField[];
  billState?: PlatformCore.SearchColumnStringField[];
  billZipCode?: PlatformCore.SearchColumnStringField[];
  category?: PlatformCore.SearchColumnSelectField[];
  city?: PlatformCore.SearchColumnStringField[];
  comments?: PlatformCore.SearchColumnStringField[];
  company?: PlatformCore.SearchColumnSelectField[];
  contactRole?: PlatformCore.SearchColumnSelectField[];
  contactSource?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  countryCode?: PlatformCore.SearchColumnStringField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  defaultTaxReg?: PlatformCore.SearchColumnStringField[];
  email?: PlatformCore.SearchColumnStringField[];
  entityId?: PlatformCore.SearchColumnStringField[];
  entityNumber?: PlatformCore.SearchColumnLongField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  firstName?: PlatformCore.SearchColumnStringField[];
  giveAccess?: PlatformCore.SearchColumnBooleanField[];
  globalSubscriptionStatus?: PlatformCore.SearchColumnEnumSelectField[];
  hasDuplicates?: PlatformCore.SearchColumnBooleanField[];
  homePhone?: PlatformCore.SearchColumnStringField[];
  image?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isDefaultBilling?: PlatformCore.SearchColumnBooleanField[];
  isDefaultShipping?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  language?: PlatformCore.SearchColumnEnumSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  lastName?: PlatformCore.SearchColumnStringField[];
  level?: PlatformCore.SearchColumnEnumSelectField[];
  middleName?: PlatformCore.SearchColumnStringField[];
  mobilePhone?: PlatformCore.SearchColumnStringField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  permission?: PlatformCore.SearchColumnEnumSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  phoneticName?: PlatformCore.SearchColumnStringField[];
  salutation?: PlatformCore.SearchColumnStringField[];
  shipAddress1?: PlatformCore.SearchColumnStringField[];
  shipAddress2?: PlatformCore.SearchColumnStringField[];
  shipAddress3?: PlatformCore.SearchColumnStringField[];
  shipAddressee?: PlatformCore.SearchColumnStringField[];
  shipAttention?: PlatformCore.SearchColumnStringField[];
  shipCity?: PlatformCore.SearchColumnStringField[];
  shipCountry?: PlatformCore.SearchColumnEnumSelectField[];
  shipCountryCode?: PlatformCore.SearchColumnStringField[];
  shipPhone?: PlatformCore.SearchColumnStringField[];
  shipState?: PlatformCore.SearchColumnStringField[];
  shipZip?: PlatformCore.SearchColumnStringField[];
  state?: PlatformCore.SearchColumnStringField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionDate?: PlatformCore.SearchColumnDateField[];
  subscriptionStatus?: PlatformCore.SearchColumnBooleanField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  zipCode?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: ContactSearchRowBasicProps) {
    super();
    this.address = props.address;
    this.address1 = props.address1;
    this.address2 = props.address2;
    this.address3 = props.address3;
    this.addressee = props.addressee;
    this.addressInternalId = props.addressInternalId;
    this.addressLabel = props.addressLabel;
    this.addressPhone = props.addressPhone;
    this.altEmail = props.altEmail;
    this.altName = props.altName;
    this.altPhone = props.altPhone;
    this.attention = props.attention;
    this.availableOffline = props.availableOffline;
    this.billAddress1 = props.billAddress1;
    this.billAddress2 = props.billAddress2;
    this.billAddress3 = props.billAddress3;
    this.billAddressee = props.billAddressee;
    this.billAttention = props.billAttention;
    this.billCity = props.billCity;
    this.billCountry = props.billCountry;
    this.billCountryCode = props.billCountryCode;
    this.billPhone = props.billPhone;
    this.billState = props.billState;
    this.billZipCode = props.billZipCode;
    this.category = props.category;
    this.city = props.city;
    this.comments = props.comments;
    this.company = props.company;
    this.contactRole = props.contactRole;
    this.contactSource = props.contactSource;
    this.country = props.country;
    this.countryCode = props.countryCode;
    this.dateCreated = props.dateCreated;
    this.defaultTaxReg = props.defaultTaxReg;
    this.email = props.email;
    this.entityId = props.entityId;
    this.entityNumber = props.entityNumber;
    this.externalId = props.externalId;
    this.fax = props.fax;
    this.firstName = props.firstName;
    this.giveAccess = props.giveAccess;
    this.globalSubscriptionStatus = props.globalSubscriptionStatus;
    this.hasDuplicates = props.hasDuplicates;
    this.homePhone = props.homePhone;
    this.image = props.image;
    this.internalId = props.internalId;
    this.isDefaultBilling = props.isDefaultBilling;
    this.isDefaultShipping = props.isDefaultShipping;
    this.isInactive = props.isInactive;
    this.language = props.language;
    this.lastModifiedDate = props.lastModifiedDate;
    this.lastName = props.lastName;
    this.level = props.level;
    this.middleName = props.middleName;
    this.mobilePhone = props.mobilePhone;
    this.owner = props.owner;
    this.permission = props.permission;
    this.phone = props.phone;
    this.phoneticName = props.phoneticName;
    this.salutation = props.salutation;
    this.shipAddress1 = props.shipAddress1;
    this.shipAddress2 = props.shipAddress2;
    this.shipAddress3 = props.shipAddress3;
    this.shipAddressee = props.shipAddressee;
    this.shipAttention = props.shipAttention;
    this.shipCity = props.shipCity;
    this.shipCountry = props.shipCountry;
    this.shipCountryCode = props.shipCountryCode;
    this.shipPhone = props.shipPhone;
    this.shipState = props.shipState;
    this.shipZip = props.shipZip;
    this.state = props.state;
    this.subscription = props.subscription;
    this.subscriptionDate = props.subscriptionDate;
    this.subscriptionStatus = props.subscriptionStatus;
    this.subsidiary = props.subsidiary;
    this.title = props.title;
    this.zipCode = props.zipCode;
    this.customFieldList = props.customFieldList;
  }
}

export type CostCategorySearchBasicProps = {
  account?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  itemCostType?: PlatformCore.SearchEnumMultiSelectField;
  name?: PlatformCore.SearchStringField;
};

export class CostCategorySearchBasic extends PlatformCore.SearchRecordBasic {
  account?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  itemCostType?: PlatformCore.SearchEnumMultiSelectField;
  name?: PlatformCore.SearchStringField;
  constructor(props: CostCategorySearchBasicProps) {
    super();
    this.account = props.account;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.itemCostType = props.itemCostType;
    this.name = props.name;
  }
}

export type BomRevisionComponentSearchBasicProps = {
  bomQuantity?: PlatformCore.SearchDoubleField;
  bomRevision?: PlatformCore.SearchMultiSelectField;
  componentYield?: PlatformCore.SearchDoubleField;
  description?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  item?: PlatformCore.SearchMultiSelectField;
  itemSource?: PlatformCore.SearchEnumMultiSelectField;
  itemSubtype?: PlatformCore.SearchStringField;
  itemType?: PlatformCore.SearchMultiSelectField;
  lineId?: PlatformCore.SearchLongField;
  quantity?: PlatformCore.SearchDoubleField;
  units?: PlatformCore.SearchStringField;
  weight?: PlatformCore.SearchDoubleField;
};

export class BomRevisionComponentSearchBasic extends PlatformCore.SearchRecordBasic {
  bomQuantity?: PlatformCore.SearchDoubleField;
  bomRevision?: PlatformCore.SearchMultiSelectField;
  componentYield?: PlatformCore.SearchDoubleField;
  description?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  item?: PlatformCore.SearchMultiSelectField;
  itemSource?: PlatformCore.SearchEnumMultiSelectField;
  itemSubtype?: PlatformCore.SearchStringField;
  itemType?: PlatformCore.SearchMultiSelectField;
  lineId?: PlatformCore.SearchLongField;
  quantity?: PlatformCore.SearchDoubleField;
  units?: PlatformCore.SearchStringField;
  weight?: PlatformCore.SearchDoubleField;
  constructor(props: BomRevisionComponentSearchBasicProps) {
    super();
    this.bomQuantity = props.bomQuantity;
    this.bomRevision = props.bomRevision;
    this.componentYield = props.componentYield;
    this.description = props.description;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.item = props.item;
    this.itemSource = props.itemSource;
    this.itemSubtype = props.itemSubtype;
    this.itemType = props.itemType;
    this.lineId = props.lineId;
    this.quantity = props.quantity;
    this.units = props.units;
    this.weight = props.weight;
  }
}

export type PartnerSearchRowBasicProps = {
  address?: PlatformCore.SearchColumnStringField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  addressee?: PlatformCore.SearchColumnStringField[];
  addressInternalId?: PlatformCore.SearchColumnStringField[];
  addressLabel?: PlatformCore.SearchColumnStringField[];
  addressPhone?: PlatformCore.SearchColumnStringField[];
  altEmail?: PlatformCore.SearchColumnStringField[];
  altName?: PlatformCore.SearchColumnStringField[];
  altPhone?: PlatformCore.SearchColumnStringField[];
  assignTasks?: PlatformCore.SearchColumnBooleanField[];
  attention?: PlatformCore.SearchColumnStringField[];
  billAddress?: PlatformCore.SearchColumnStringField[];
  billAddress1?: PlatformCore.SearchColumnStringField[];
  billAddress2?: PlatformCore.SearchColumnStringField[];
  billAddress3?: PlatformCore.SearchColumnStringField[];
  billAddressee?: PlatformCore.SearchColumnStringField[];
  billAttention?: PlatformCore.SearchColumnStringField[];
  billCity?: PlatformCore.SearchColumnStringField[];
  billCountry?: PlatformCore.SearchColumnEnumSelectField[];
  billCountryCode?: PlatformCore.SearchColumnStringField[];
  billPhone?: PlatformCore.SearchColumnStringField[];
  billState?: PlatformCore.SearchColumnStringField[];
  billZipCode?: PlatformCore.SearchColumnStringField[];
  category?: PlatformCore.SearchColumnStringField[];
  city?: PlatformCore.SearchColumnStringField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  comments?: PlatformCore.SearchColumnStringField[];
  companyName?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  countryCode?: PlatformCore.SearchColumnStringField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  defaultTaxReg?: PlatformCore.SearchColumnStringField[];
  department?: PlatformCore.SearchColumnSelectField[];
  eligibleForCommission?: PlatformCore.SearchColumnBooleanField[];
  email?: PlatformCore.SearchColumnStringField[];
  emailPreference?: PlatformCore.SearchColumnEnumSelectField[];
  entityId?: PlatformCore.SearchColumnStringField[];
  entityNumber?: PlatformCore.SearchColumnLongField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  firstName?: PlatformCore.SearchColumnStringField[];
  giveAccess?: PlatformCore.SearchColumnBooleanField[];
  globalSubscriptionStatus?: PlatformCore.SearchColumnEnumSelectField[];
  hasDuplicates?: PlatformCore.SearchColumnBooleanField[];
  homePhone?: PlatformCore.SearchColumnStringField[];
  image?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isDefaultBilling?: PlatformCore.SearchColumnBooleanField[];
  isDefaultShipping?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isPerson?: PlatformCore.SearchColumnBooleanField[];
  language?: PlatformCore.SearchColumnEnumSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  lastName?: PlatformCore.SearchColumnStringField[];
  level?: PlatformCore.SearchColumnEnumSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  middleName?: PlatformCore.SearchColumnStringField[];
  mobilePhone?: PlatformCore.SearchColumnStringField[];
  parent?: PlatformCore.SearchColumnSelectField[];
  partnerCode?: PlatformCore.SearchColumnStringField[];
  permission?: PlatformCore.SearchColumnEnumSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  phoneticName?: PlatformCore.SearchColumnStringField[];
  promoCode?: PlatformCore.SearchColumnStringField[];
  salutation?: PlatformCore.SearchColumnStringField[];
  shipAddress?: PlatformCore.SearchColumnStringField[];
  shipAddress1?: PlatformCore.SearchColumnStringField[];
  shipAddress2?: PlatformCore.SearchColumnStringField[];
  shipAddress3?: PlatformCore.SearchColumnStringField[];
  shipAddressee?: PlatformCore.SearchColumnStringField[];
  shipAttention?: PlatformCore.SearchColumnStringField[];
  shipCity?: PlatformCore.SearchColumnStringField[];
  shipCountry?: PlatformCore.SearchColumnEnumSelectField[];
  shipCountryCode?: PlatformCore.SearchColumnStringField[];
  shipPhone?: PlatformCore.SearchColumnStringField[];
  shipState?: PlatformCore.SearchColumnStringField[];
  shipZip?: PlatformCore.SearchColumnStringField[];
  state?: PlatformCore.SearchColumnStringField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionDate?: PlatformCore.SearchColumnDateField[];
  subscriptionStatus?: PlatformCore.SearchColumnBooleanField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  url?: PlatformCore.SearchColumnStringField[];
  zipCode?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class PartnerSearchRowBasic extends PlatformCore.SearchRowBasic {
  address?: PlatformCore.SearchColumnStringField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  addressee?: PlatformCore.SearchColumnStringField[];
  addressInternalId?: PlatformCore.SearchColumnStringField[];
  addressLabel?: PlatformCore.SearchColumnStringField[];
  addressPhone?: PlatformCore.SearchColumnStringField[];
  altEmail?: PlatformCore.SearchColumnStringField[];
  altName?: PlatformCore.SearchColumnStringField[];
  altPhone?: PlatformCore.SearchColumnStringField[];
  assignTasks?: PlatformCore.SearchColumnBooleanField[];
  attention?: PlatformCore.SearchColumnStringField[];
  billAddress?: PlatformCore.SearchColumnStringField[];
  billAddress1?: PlatformCore.SearchColumnStringField[];
  billAddress2?: PlatformCore.SearchColumnStringField[];
  billAddress3?: PlatformCore.SearchColumnStringField[];
  billAddressee?: PlatformCore.SearchColumnStringField[];
  billAttention?: PlatformCore.SearchColumnStringField[];
  billCity?: PlatformCore.SearchColumnStringField[];
  billCountry?: PlatformCore.SearchColumnEnumSelectField[];
  billCountryCode?: PlatformCore.SearchColumnStringField[];
  billPhone?: PlatformCore.SearchColumnStringField[];
  billState?: PlatformCore.SearchColumnStringField[];
  billZipCode?: PlatformCore.SearchColumnStringField[];
  category?: PlatformCore.SearchColumnStringField[];
  city?: PlatformCore.SearchColumnStringField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  comments?: PlatformCore.SearchColumnStringField[];
  companyName?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  countryCode?: PlatformCore.SearchColumnStringField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  defaultTaxReg?: PlatformCore.SearchColumnStringField[];
  department?: PlatformCore.SearchColumnSelectField[];
  eligibleForCommission?: PlatformCore.SearchColumnBooleanField[];
  email?: PlatformCore.SearchColumnStringField[];
  emailPreference?: PlatformCore.SearchColumnEnumSelectField[];
  entityId?: PlatformCore.SearchColumnStringField[];
  entityNumber?: PlatformCore.SearchColumnLongField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  firstName?: PlatformCore.SearchColumnStringField[];
  giveAccess?: PlatformCore.SearchColumnBooleanField[];
  globalSubscriptionStatus?: PlatformCore.SearchColumnEnumSelectField[];
  hasDuplicates?: PlatformCore.SearchColumnBooleanField[];
  homePhone?: PlatformCore.SearchColumnStringField[];
  image?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isDefaultBilling?: PlatformCore.SearchColumnBooleanField[];
  isDefaultShipping?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isPerson?: PlatformCore.SearchColumnBooleanField[];
  language?: PlatformCore.SearchColumnEnumSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  lastName?: PlatformCore.SearchColumnStringField[];
  level?: PlatformCore.SearchColumnEnumSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  middleName?: PlatformCore.SearchColumnStringField[];
  mobilePhone?: PlatformCore.SearchColumnStringField[];
  parent?: PlatformCore.SearchColumnSelectField[];
  partnerCode?: PlatformCore.SearchColumnStringField[];
  permission?: PlatformCore.SearchColumnEnumSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  phoneticName?: PlatformCore.SearchColumnStringField[];
  promoCode?: PlatformCore.SearchColumnStringField[];
  salutation?: PlatformCore.SearchColumnStringField[];
  shipAddress?: PlatformCore.SearchColumnStringField[];
  shipAddress1?: PlatformCore.SearchColumnStringField[];
  shipAddress2?: PlatformCore.SearchColumnStringField[];
  shipAddress3?: PlatformCore.SearchColumnStringField[];
  shipAddressee?: PlatformCore.SearchColumnStringField[];
  shipAttention?: PlatformCore.SearchColumnStringField[];
  shipCity?: PlatformCore.SearchColumnStringField[];
  shipCountry?: PlatformCore.SearchColumnEnumSelectField[];
  shipCountryCode?: PlatformCore.SearchColumnStringField[];
  shipPhone?: PlatformCore.SearchColumnStringField[];
  shipState?: PlatformCore.SearchColumnStringField[];
  shipZip?: PlatformCore.SearchColumnStringField[];
  state?: PlatformCore.SearchColumnStringField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionDate?: PlatformCore.SearchColumnDateField[];
  subscriptionStatus?: PlatformCore.SearchColumnBooleanField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  url?: PlatformCore.SearchColumnStringField[];
  zipCode?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: PartnerSearchRowBasicProps) {
    super();
    this.address = props.address;
    this.address1 = props.address1;
    this.address2 = props.address2;
    this.address3 = props.address3;
    this.addressee = props.addressee;
    this.addressInternalId = props.addressInternalId;
    this.addressLabel = props.addressLabel;
    this.addressPhone = props.addressPhone;
    this.altEmail = props.altEmail;
    this.altName = props.altName;
    this.altPhone = props.altPhone;
    this.assignTasks = props.assignTasks;
    this.attention = props.attention;
    this.billAddress = props.billAddress;
    this.billAddress1 = props.billAddress1;
    this.billAddress2 = props.billAddress2;
    this.billAddress3 = props.billAddress3;
    this.billAddressee = props.billAddressee;
    this.billAttention = props.billAttention;
    this.billCity = props.billCity;
    this.billCountry = props.billCountry;
    this.billCountryCode = props.billCountryCode;
    this.billPhone = props.billPhone;
    this.billState = props.billState;
    this.billZipCode = props.billZipCode;
    this.category = props.category;
    this.city = props.city;
    this.clazz = props.clazz;
    this.comments = props.comments;
    this.companyName = props.companyName;
    this.country = props.country;
    this.countryCode = props.countryCode;
    this.dateCreated = props.dateCreated;
    this.defaultTaxReg = props.defaultTaxReg;
    this.department = props.department;
    this.eligibleForCommission = props.eligibleForCommission;
    this.email = props.email;
    this.emailPreference = props.emailPreference;
    this.entityId = props.entityId;
    this.entityNumber = props.entityNumber;
    this.externalId = props.externalId;
    this.fax = props.fax;
    this.firstName = props.firstName;
    this.giveAccess = props.giveAccess;
    this.globalSubscriptionStatus = props.globalSubscriptionStatus;
    this.hasDuplicates = props.hasDuplicates;
    this.homePhone = props.homePhone;
    this.image = props.image;
    this.internalId = props.internalId;
    this.isDefaultBilling = props.isDefaultBilling;
    this.isDefaultShipping = props.isDefaultShipping;
    this.isInactive = props.isInactive;
    this.isPerson = props.isPerson;
    this.language = props.language;
    this.lastModifiedDate = props.lastModifiedDate;
    this.lastName = props.lastName;
    this.level = props.level;
    this.location = props.location;
    this.middleName = props.middleName;
    this.mobilePhone = props.mobilePhone;
    this.parent = props.parent;
    this.partnerCode = props.partnerCode;
    this.permission = props.permission;
    this.phone = props.phone;
    this.phoneticName = props.phoneticName;
    this.promoCode = props.promoCode;
    this.salutation = props.salutation;
    this.shipAddress = props.shipAddress;
    this.shipAddress1 = props.shipAddress1;
    this.shipAddress2 = props.shipAddress2;
    this.shipAddress3 = props.shipAddress3;
    this.shipAddressee = props.shipAddressee;
    this.shipAttention = props.shipAttention;
    this.shipCity = props.shipCity;
    this.shipCountry = props.shipCountry;
    this.shipCountryCode = props.shipCountryCode;
    this.shipPhone = props.shipPhone;
    this.shipState = props.shipState;
    this.shipZip = props.shipZip;
    this.state = props.state;
    this.subscription = props.subscription;
    this.subscriptionDate = props.subscriptionDate;
    this.subscriptionStatus = props.subscriptionStatus;
    this.subsidiary = props.subsidiary;
    this.title = props.title;
    this.url = props.url;
    this.zipCode = props.zipCode;
    this.customFieldList = props.customFieldList;
  }
}

export type LandedCostSummaryProps = {
  category?: PlatformCore.RecordRef;
  amount?: number;
  source?: PlatformCommonTypes.LandedCostSource;
  transaction?: PlatformCore.RecordRef;
};

export class LandedCostSummary {
  category?: PlatformCore.RecordRef;
  amount?: number;
  source?: PlatformCommonTypes.LandedCostSource;
  transaction?: PlatformCore.RecordRef;
  constructor(props: LandedCostSummaryProps) {
    this.category = props.category;
    this.amount = props.amount;
    this.source = props.source;
    this.transaction = props.transaction;
  }
}

export type OriginatingLeadSearchRowBasicProps = {
  accountNumber?: PlatformCore.SearchColumnStringField[];
  address?: PlatformCore.SearchColumnStringField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  addressee?: PlatformCore.SearchColumnStringField[];
  addressInternalId?: PlatformCore.SearchColumnStringField[];
  addressLabel?: PlatformCore.SearchColumnStringField[];
  addressPhone?: PlatformCore.SearchColumnStringField[];
  altContact?: PlatformCore.SearchColumnStringField[];
  altEmail?: PlatformCore.SearchColumnStringField[];
  altName?: PlatformCore.SearchColumnStringField[];
  altPhone?: PlatformCore.SearchColumnStringField[];
  assignedSite?: PlatformCore.SearchColumnSelectField[];
  assignedSiteId?: PlatformCore.SearchColumnLongField[];
  attention?: PlatformCore.SearchColumnStringField[];
  availableOffline?: PlatformCore.SearchColumnBooleanField[];
  balance?: PlatformCore.SearchColumnDoubleField[];
  billAddress?: PlatformCore.SearchColumnStringField[];
  billAddress1?: PlatformCore.SearchColumnStringField[];
  billAddress2?: PlatformCore.SearchColumnStringField[];
  billAddress3?: PlatformCore.SearchColumnStringField[];
  billAddressee?: PlatformCore.SearchColumnStringField[];
  billAttention?: PlatformCore.SearchColumnStringField[];
  billCity?: PlatformCore.SearchColumnStringField[];
  billCountry?: PlatformCore.SearchColumnEnumSelectField[];
  billCountryCode?: PlatformCore.SearchColumnStringField[];
  billPhone?: PlatformCore.SearchColumnStringField[];
  billState?: PlatformCore.SearchColumnStringField[];
  billZipCode?: PlatformCore.SearchColumnStringField[];
  buyingReason?: PlatformCore.SearchColumnStringField[];
  buyingTimeFrame?: PlatformCore.SearchColumnStringField[];
  category?: PlatformCore.SearchColumnSelectField[];
  ccCustomerCode?: PlatformCore.SearchColumnStringField[];
  ccDefault?: PlatformCore.SearchColumnBooleanField[];
  ccExpDate?: PlatformCore.SearchColumnDateField[];
  ccHolderName?: PlatformCore.SearchColumnStringField[];
  ccInternalId?: PlatformCore.SearchColumnStringField[];
  ccNumber?: PlatformCore.SearchColumnStringField[];
  ccState?: PlatformCore.SearchColumnSelectField[];
  ccStateFrom?: PlatformCore.SearchColumnDateField[];
  ccType?: PlatformCore.SearchColumnSelectField[];
  city?: PlatformCore.SearchColumnStringField[];
  comments?: PlatformCore.SearchColumnStringField[];
  companyName?: PlatformCore.SearchColumnStringField[];
  consolBalance?: PlatformCore.SearchColumnDoubleField[];
  consolDaysOverdue?: PlatformCore.SearchColumnLongField[];
  consolDepositBalance?: PlatformCore.SearchColumnDoubleField[];
  consolOverdueBalance?: PlatformCore.SearchColumnDoubleField[];
  consolUnbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  contact?: PlatformCore.SearchColumnStringField[];
  contribution?: PlatformCore.SearchColumnDoubleField[];
  contributionPrimary?: PlatformCore.SearchColumnDoubleField[];
  conversionDate?: PlatformCore.SearchColumnDateField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  countryCode?: PlatformCore.SearchColumnStringField[];
  creditHold?: PlatformCore.SearchColumnEnumSelectField[];
  creditHoldOverride?: PlatformCore.SearchColumnBooleanField[];
  creditLimit?: PlatformCore.SearchColumnDoubleField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  dateClosed?: PlatformCore.SearchColumnDateField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  daysOverdue?: PlatformCore.SearchColumnLongField[];
  defaultOrderPriority?: PlatformCore.SearchColumnDoubleField[];
  defaultTaxReg?: PlatformCore.SearchColumnStringField[];
  depositBalance?: PlatformCore.SearchColumnDoubleField[];
  drAccount?: PlatformCore.SearchColumnStringField[];
  email?: PlatformCore.SearchColumnStringField[];
  emailPreference?: PlatformCore.SearchColumnEnumSelectField[];
  emailTransactions?: PlatformCore.SearchColumnBooleanField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  entityId?: PlatformCore.SearchColumnStringField[];
  entityNumber?: PlatformCore.SearchColumnLongField[];
  entityStatus?: PlatformCore.SearchColumnSelectField[];
  estimatedBudget?: PlatformCore.SearchColumnDoubleField[];
  explicitConversion?: PlatformCore.SearchColumnBooleanField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  faxTransactions?: PlatformCore.SearchColumnBooleanField[];
  firstName?: PlatformCore.SearchColumnStringField[];
  firstOrderDate?: PlatformCore.SearchColumnDateField[];
  firstSaleDate?: PlatformCore.SearchColumnDateField[];
  fxAccount?: PlatformCore.SearchColumnStringField[];
  fxBalance?: PlatformCore.SearchColumnDoubleField[];
  fxConsolBalance?: PlatformCore.SearchColumnDoubleField[];
  fxConsolUnbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  fxUnbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  giveAccess?: PlatformCore.SearchColumnBooleanField[];
  globalSubscriptionStatus?: PlatformCore.SearchColumnEnumSelectField[];
  groupPricingLevel?: PlatformCore.SearchColumnStringField[];
  hasDuplicates?: PlatformCore.SearchColumnBooleanField[];
  homePhone?: PlatformCore.SearchColumnStringField[];
  image?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isBudgetApproved?: PlatformCore.SearchColumnBooleanField[];
  isDefaultBilling?: PlatformCore.SearchColumnBooleanField[];
  isDefaultShipping?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isPerson?: PlatformCore.SearchColumnBooleanField[];
  isShipAddress?: PlatformCore.SearchColumnBooleanField[];
  itemPricingLevel?: PlatformCore.SearchColumnStringField[];
  itemPricingUnitPrice?: PlatformCore.SearchColumnDoubleField[];
  jobEndDate?: PlatformCore.SearchColumnDateField[];
  jobProjectedEnd?: PlatformCore.SearchColumnDateField[];
  jobStartDate?: PlatformCore.SearchColumnDateField[];
  jobType?: PlatformCore.SearchColumnSelectField[];
  language?: PlatformCore.SearchColumnEnumSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  lastName?: PlatformCore.SearchColumnStringField[];
  lastOrderDate?: PlatformCore.SearchColumnDateField[];
  lastSaleDate?: PlatformCore.SearchColumnDateField[];
  leadDate?: PlatformCore.SearchColumnDateField[];
  leadSource?: PlatformCore.SearchColumnSelectField[];
  level?: PlatformCore.SearchColumnEnumSelectField[];
  manualCreditHold?: PlatformCore.SearchColumnBooleanField[];
  middleName?: PlatformCore.SearchColumnStringField[];
  mobilePhone?: PlatformCore.SearchColumnStringField[];
  monthlyClosing?: PlatformCore.SearchColumnEnumSelectField[];
  onCreditHold?: PlatformCore.SearchColumnBooleanField[];
  overdueBalance?: PlatformCore.SearchColumnDoubleField[];
  parent?: PlatformCore.SearchColumnSelectField[];
  partner?: PlatformCore.SearchColumnSelectField[];
  partnerContribution?: PlatformCore.SearchColumnDoubleField[];
  partnerRole?: PlatformCore.SearchColumnStringField[];
  partnerTeamMember?: PlatformCore.SearchColumnSelectField[];
  pec?: PlatformCore.SearchColumnStringField[];
  permission?: PlatformCore.SearchColumnEnumSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  phoneticName?: PlatformCore.SearchColumnStringField[];
  prefCCProcessor?: PlatformCore.SearchColumnSelectField[];
  priceLevel?: PlatformCore.SearchColumnSelectField[];
  pricingGroup?: PlatformCore.SearchColumnStringField[];
  pricingItem?: PlatformCore.SearchColumnStringField[];
  printTransactions?: PlatformCore.SearchColumnBooleanField[];
  prospectDate?: PlatformCore.SearchColumnDateField[];
  receivablesAccount?: PlatformCore.SearchColumnStringField[];
  reminderDays?: PlatformCore.SearchColumnLongField[];
  resaleNumber?: PlatformCore.SearchColumnStringField[];
  role?: PlatformCore.SearchColumnStringField[];
  salesReadiness?: PlatformCore.SearchColumnStringField[];
  salesRep?: PlatformCore.SearchColumnSelectField[];
  salesTeamMember?: PlatformCore.SearchColumnSelectField[];
  salesTeamRole?: PlatformCore.SearchColumnSelectField[];
  salutation?: PlatformCore.SearchColumnStringField[];
  shipAddress?: PlatformCore.SearchColumnStringField[];
  shipAddress1?: PlatformCore.SearchColumnStringField[];
  shipAddress2?: PlatformCore.SearchColumnStringField[];
  shipAddress3?: PlatformCore.SearchColumnStringField[];
  shipAddressee?: PlatformCore.SearchColumnStringField[];
  shipAttention?: PlatformCore.SearchColumnStringField[];
  shipCity?: PlatformCore.SearchColumnStringField[];
  shipComplete?: PlatformCore.SearchColumnBooleanField[];
  shipCountry?: PlatformCore.SearchColumnEnumSelectField[];
  shipCountryCode?: PlatformCore.SearchColumnStringField[];
  shipPhone?: PlatformCore.SearchColumnStringField[];
  shippingItem?: PlatformCore.SearchColumnSelectField[];
  shipState?: PlatformCore.SearchColumnStringField[];
  shipZip?: PlatformCore.SearchColumnStringField[];
  sourceSite?: PlatformCore.SearchColumnSelectField[];
  sourceSiteId?: PlatformCore.SearchColumnLongField[];
  stage?: PlatformCore.SearchColumnStringField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  state?: PlatformCore.SearchColumnEnumSelectField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionDate?: PlatformCore.SearchColumnDateField[];
  subscriptionStatus?: PlatformCore.SearchColumnBooleanField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  taxable?: PlatformCore.SearchColumnBooleanField[];
  taxItem?: PlatformCore.SearchColumnSelectField[];
  terms?: PlatformCore.SearchColumnSelectField[];
  territory?: PlatformCore.SearchColumnSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  unbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  url?: PlatformCore.SearchColumnStringField[];
  vatRegNumber?: PlatformCore.SearchColumnStringField[];
  webLead?: PlatformCore.SearchColumnBooleanField[];
  zipCode?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class OriginatingLeadSearchRowBasic extends PlatformCore.SearchRowBasic {
  accountNumber?: PlatformCore.SearchColumnStringField[];
  address?: PlatformCore.SearchColumnStringField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  addressee?: PlatformCore.SearchColumnStringField[];
  addressInternalId?: PlatformCore.SearchColumnStringField[];
  addressLabel?: PlatformCore.SearchColumnStringField[];
  addressPhone?: PlatformCore.SearchColumnStringField[];
  altContact?: PlatformCore.SearchColumnStringField[];
  altEmail?: PlatformCore.SearchColumnStringField[];
  altName?: PlatformCore.SearchColumnStringField[];
  altPhone?: PlatformCore.SearchColumnStringField[];
  assignedSite?: PlatformCore.SearchColumnSelectField[];
  assignedSiteId?: PlatformCore.SearchColumnLongField[];
  attention?: PlatformCore.SearchColumnStringField[];
  availableOffline?: PlatformCore.SearchColumnBooleanField[];
  balance?: PlatformCore.SearchColumnDoubleField[];
  billAddress?: PlatformCore.SearchColumnStringField[];
  billAddress1?: PlatformCore.SearchColumnStringField[];
  billAddress2?: PlatformCore.SearchColumnStringField[];
  billAddress3?: PlatformCore.SearchColumnStringField[];
  billAddressee?: PlatformCore.SearchColumnStringField[];
  billAttention?: PlatformCore.SearchColumnStringField[];
  billCity?: PlatformCore.SearchColumnStringField[];
  billCountry?: PlatformCore.SearchColumnEnumSelectField[];
  billCountryCode?: PlatformCore.SearchColumnStringField[];
  billPhone?: PlatformCore.SearchColumnStringField[];
  billState?: PlatformCore.SearchColumnStringField[];
  billZipCode?: PlatformCore.SearchColumnStringField[];
  buyingReason?: PlatformCore.SearchColumnStringField[];
  buyingTimeFrame?: PlatformCore.SearchColumnStringField[];
  category?: PlatformCore.SearchColumnSelectField[];
  ccCustomerCode?: PlatformCore.SearchColumnStringField[];
  ccDefault?: PlatformCore.SearchColumnBooleanField[];
  ccExpDate?: PlatformCore.SearchColumnDateField[];
  ccHolderName?: PlatformCore.SearchColumnStringField[];
  ccInternalId?: PlatformCore.SearchColumnStringField[];
  ccNumber?: PlatformCore.SearchColumnStringField[];
  ccState?: PlatformCore.SearchColumnSelectField[];
  ccStateFrom?: PlatformCore.SearchColumnDateField[];
  ccType?: PlatformCore.SearchColumnSelectField[];
  city?: PlatformCore.SearchColumnStringField[];
  comments?: PlatformCore.SearchColumnStringField[];
  companyName?: PlatformCore.SearchColumnStringField[];
  consolBalance?: PlatformCore.SearchColumnDoubleField[];
  consolDaysOverdue?: PlatformCore.SearchColumnLongField[];
  consolDepositBalance?: PlatformCore.SearchColumnDoubleField[];
  consolOverdueBalance?: PlatformCore.SearchColumnDoubleField[];
  consolUnbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  contact?: PlatformCore.SearchColumnStringField[];
  contribution?: PlatformCore.SearchColumnDoubleField[];
  contributionPrimary?: PlatformCore.SearchColumnDoubleField[];
  conversionDate?: PlatformCore.SearchColumnDateField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  countryCode?: PlatformCore.SearchColumnStringField[];
  creditHold?: PlatformCore.SearchColumnEnumSelectField[];
  creditHoldOverride?: PlatformCore.SearchColumnBooleanField[];
  creditLimit?: PlatformCore.SearchColumnDoubleField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  dateClosed?: PlatformCore.SearchColumnDateField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  daysOverdue?: PlatformCore.SearchColumnLongField[];
  defaultOrderPriority?: PlatformCore.SearchColumnDoubleField[];
  defaultTaxReg?: PlatformCore.SearchColumnStringField[];
  depositBalance?: PlatformCore.SearchColumnDoubleField[];
  drAccount?: PlatformCore.SearchColumnStringField[];
  email?: PlatformCore.SearchColumnStringField[];
  emailPreference?: PlatformCore.SearchColumnEnumSelectField[];
  emailTransactions?: PlatformCore.SearchColumnBooleanField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  entityId?: PlatformCore.SearchColumnStringField[];
  entityNumber?: PlatformCore.SearchColumnLongField[];
  entityStatus?: PlatformCore.SearchColumnSelectField[];
  estimatedBudget?: PlatformCore.SearchColumnDoubleField[];
  explicitConversion?: PlatformCore.SearchColumnBooleanField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  faxTransactions?: PlatformCore.SearchColumnBooleanField[];
  firstName?: PlatformCore.SearchColumnStringField[];
  firstOrderDate?: PlatformCore.SearchColumnDateField[];
  firstSaleDate?: PlatformCore.SearchColumnDateField[];
  fxAccount?: PlatformCore.SearchColumnStringField[];
  fxBalance?: PlatformCore.SearchColumnDoubleField[];
  fxConsolBalance?: PlatformCore.SearchColumnDoubleField[];
  fxConsolUnbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  fxUnbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  giveAccess?: PlatformCore.SearchColumnBooleanField[];
  globalSubscriptionStatus?: PlatformCore.SearchColumnEnumSelectField[];
  groupPricingLevel?: PlatformCore.SearchColumnStringField[];
  hasDuplicates?: PlatformCore.SearchColumnBooleanField[];
  homePhone?: PlatformCore.SearchColumnStringField[];
  image?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isBudgetApproved?: PlatformCore.SearchColumnBooleanField[];
  isDefaultBilling?: PlatformCore.SearchColumnBooleanField[];
  isDefaultShipping?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isPerson?: PlatformCore.SearchColumnBooleanField[];
  isShipAddress?: PlatformCore.SearchColumnBooleanField[];
  itemPricingLevel?: PlatformCore.SearchColumnStringField[];
  itemPricingUnitPrice?: PlatformCore.SearchColumnDoubleField[];
  jobEndDate?: PlatformCore.SearchColumnDateField[];
  jobProjectedEnd?: PlatformCore.SearchColumnDateField[];
  jobStartDate?: PlatformCore.SearchColumnDateField[];
  jobType?: PlatformCore.SearchColumnSelectField[];
  language?: PlatformCore.SearchColumnEnumSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  lastName?: PlatformCore.SearchColumnStringField[];
  lastOrderDate?: PlatformCore.SearchColumnDateField[];
  lastSaleDate?: PlatformCore.SearchColumnDateField[];
  leadDate?: PlatformCore.SearchColumnDateField[];
  leadSource?: PlatformCore.SearchColumnSelectField[];
  level?: PlatformCore.SearchColumnEnumSelectField[];
  manualCreditHold?: PlatformCore.SearchColumnBooleanField[];
  middleName?: PlatformCore.SearchColumnStringField[];
  mobilePhone?: PlatformCore.SearchColumnStringField[];
  monthlyClosing?: PlatformCore.SearchColumnEnumSelectField[];
  onCreditHold?: PlatformCore.SearchColumnBooleanField[];
  overdueBalance?: PlatformCore.SearchColumnDoubleField[];
  parent?: PlatformCore.SearchColumnSelectField[];
  partner?: PlatformCore.SearchColumnSelectField[];
  partnerContribution?: PlatformCore.SearchColumnDoubleField[];
  partnerRole?: PlatformCore.SearchColumnStringField[];
  partnerTeamMember?: PlatformCore.SearchColumnSelectField[];
  pec?: PlatformCore.SearchColumnStringField[];
  permission?: PlatformCore.SearchColumnEnumSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  phoneticName?: PlatformCore.SearchColumnStringField[];
  prefCCProcessor?: PlatformCore.SearchColumnSelectField[];
  priceLevel?: PlatformCore.SearchColumnSelectField[];
  pricingGroup?: PlatformCore.SearchColumnStringField[];
  pricingItem?: PlatformCore.SearchColumnStringField[];
  printTransactions?: PlatformCore.SearchColumnBooleanField[];
  prospectDate?: PlatformCore.SearchColumnDateField[];
  receivablesAccount?: PlatformCore.SearchColumnStringField[];
  reminderDays?: PlatformCore.SearchColumnLongField[];
  resaleNumber?: PlatformCore.SearchColumnStringField[];
  role?: PlatformCore.SearchColumnStringField[];
  salesReadiness?: PlatformCore.SearchColumnStringField[];
  salesRep?: PlatformCore.SearchColumnSelectField[];
  salesTeamMember?: PlatformCore.SearchColumnSelectField[];
  salesTeamRole?: PlatformCore.SearchColumnSelectField[];
  salutation?: PlatformCore.SearchColumnStringField[];
  shipAddress?: PlatformCore.SearchColumnStringField[];
  shipAddress1?: PlatformCore.SearchColumnStringField[];
  shipAddress2?: PlatformCore.SearchColumnStringField[];
  shipAddress3?: PlatformCore.SearchColumnStringField[];
  shipAddressee?: PlatformCore.SearchColumnStringField[];
  shipAttention?: PlatformCore.SearchColumnStringField[];
  shipCity?: PlatformCore.SearchColumnStringField[];
  shipComplete?: PlatformCore.SearchColumnBooleanField[];
  shipCountry?: PlatformCore.SearchColumnEnumSelectField[];
  shipCountryCode?: PlatformCore.SearchColumnStringField[];
  shipPhone?: PlatformCore.SearchColumnStringField[];
  shippingItem?: PlatformCore.SearchColumnSelectField[];
  shipState?: PlatformCore.SearchColumnStringField[];
  shipZip?: PlatformCore.SearchColumnStringField[];
  sourceSite?: PlatformCore.SearchColumnSelectField[];
  sourceSiteId?: PlatformCore.SearchColumnLongField[];
  stage?: PlatformCore.SearchColumnStringField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  state?: PlatformCore.SearchColumnEnumSelectField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionDate?: PlatformCore.SearchColumnDateField[];
  subscriptionStatus?: PlatformCore.SearchColumnBooleanField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  taxable?: PlatformCore.SearchColumnBooleanField[];
  taxItem?: PlatformCore.SearchColumnSelectField[];
  terms?: PlatformCore.SearchColumnSelectField[];
  territory?: PlatformCore.SearchColumnSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  unbilledOrders?: PlatformCore.SearchColumnDoubleField[];
  url?: PlatformCore.SearchColumnStringField[];
  vatRegNumber?: PlatformCore.SearchColumnStringField[];
  webLead?: PlatformCore.SearchColumnBooleanField[];
  zipCode?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: OriginatingLeadSearchRowBasicProps) {
    super();
    this.accountNumber = props.accountNumber;
    this.address = props.address;
    this.address1 = props.address1;
    this.address2 = props.address2;
    this.address3 = props.address3;
    this.addressee = props.addressee;
    this.addressInternalId = props.addressInternalId;
    this.addressLabel = props.addressLabel;
    this.addressPhone = props.addressPhone;
    this.altContact = props.altContact;
    this.altEmail = props.altEmail;
    this.altName = props.altName;
    this.altPhone = props.altPhone;
    this.assignedSite = props.assignedSite;
    this.assignedSiteId = props.assignedSiteId;
    this.attention = props.attention;
    this.availableOffline = props.availableOffline;
    this.balance = props.balance;
    this.billAddress = props.billAddress;
    this.billAddress1 = props.billAddress1;
    this.billAddress2 = props.billAddress2;
    this.billAddress3 = props.billAddress3;
    this.billAddressee = props.billAddressee;
    this.billAttention = props.billAttention;
    this.billCity = props.billCity;
    this.billCountry = props.billCountry;
    this.billCountryCode = props.billCountryCode;
    this.billPhone = props.billPhone;
    this.billState = props.billState;
    this.billZipCode = props.billZipCode;
    this.buyingReason = props.buyingReason;
    this.buyingTimeFrame = props.buyingTimeFrame;
    this.category = props.category;
    this.ccCustomerCode = props.ccCustomerCode;
    this.ccDefault = props.ccDefault;
    this.ccExpDate = props.ccExpDate;
    this.ccHolderName = props.ccHolderName;
    this.ccInternalId = props.ccInternalId;
    this.ccNumber = props.ccNumber;
    this.ccState = props.ccState;
    this.ccStateFrom = props.ccStateFrom;
    this.ccType = props.ccType;
    this.city = props.city;
    this.comments = props.comments;
    this.companyName = props.companyName;
    this.consolBalance = props.consolBalance;
    this.consolDaysOverdue = props.consolDaysOverdue;
    this.consolDepositBalance = props.consolDepositBalance;
    this.consolOverdueBalance = props.consolOverdueBalance;
    this.consolUnbilledOrders = props.consolUnbilledOrders;
    this.contact = props.contact;
    this.contribution = props.contribution;
    this.contributionPrimary = props.contributionPrimary;
    this.conversionDate = props.conversionDate;
    this.country = props.country;
    this.countryCode = props.countryCode;
    this.creditHold = props.creditHold;
    this.creditHoldOverride = props.creditHoldOverride;
    this.creditLimit = props.creditLimit;
    this.currency = props.currency;
    this.dateClosed = props.dateClosed;
    this.dateCreated = props.dateCreated;
    this.daysOverdue = props.daysOverdue;
    this.defaultOrderPriority = props.defaultOrderPriority;
    this.defaultTaxReg = props.defaultTaxReg;
    this.depositBalance = props.depositBalance;
    this.drAccount = props.drAccount;
    this.email = props.email;
    this.emailPreference = props.emailPreference;
    this.emailTransactions = props.emailTransactions;
    this.endDate = props.endDate;
    this.entityId = props.entityId;
    this.entityNumber = props.entityNumber;
    this.entityStatus = props.entityStatus;
    this.estimatedBudget = props.estimatedBudget;
    this.explicitConversion = props.explicitConversion;
    this.externalId = props.externalId;
    this.fax = props.fax;
    this.faxTransactions = props.faxTransactions;
    this.firstName = props.firstName;
    this.firstOrderDate = props.firstOrderDate;
    this.firstSaleDate = props.firstSaleDate;
    this.fxAccount = props.fxAccount;
    this.fxBalance = props.fxBalance;
    this.fxConsolBalance = props.fxConsolBalance;
    this.fxConsolUnbilledOrders = props.fxConsolUnbilledOrders;
    this.fxUnbilledOrders = props.fxUnbilledOrders;
    this.giveAccess = props.giveAccess;
    this.globalSubscriptionStatus = props.globalSubscriptionStatus;
    this.groupPricingLevel = props.groupPricingLevel;
    this.hasDuplicates = props.hasDuplicates;
    this.homePhone = props.homePhone;
    this.image = props.image;
    this.internalId = props.internalId;
    this.isBudgetApproved = props.isBudgetApproved;
    this.isDefaultBilling = props.isDefaultBilling;
    this.isDefaultShipping = props.isDefaultShipping;
    this.isInactive = props.isInactive;
    this.isPerson = props.isPerson;
    this.isShipAddress = props.isShipAddress;
    this.itemPricingLevel = props.itemPricingLevel;
    this.itemPricingUnitPrice = props.itemPricingUnitPrice;
    this.jobEndDate = props.jobEndDate;
    this.jobProjectedEnd = props.jobProjectedEnd;
    this.jobStartDate = props.jobStartDate;
    this.jobType = props.jobType;
    this.language = props.language;
    this.lastModifiedDate = props.lastModifiedDate;
    this.lastName = props.lastName;
    this.lastOrderDate = props.lastOrderDate;
    this.lastSaleDate = props.lastSaleDate;
    this.leadDate = props.leadDate;
    this.leadSource = props.leadSource;
    this.level = props.level;
    this.manualCreditHold = props.manualCreditHold;
    this.middleName = props.middleName;
    this.mobilePhone = props.mobilePhone;
    this.monthlyClosing = props.monthlyClosing;
    this.onCreditHold = props.onCreditHold;
    this.overdueBalance = props.overdueBalance;
    this.parent = props.parent;
    this.partner = props.partner;
    this.partnerContribution = props.partnerContribution;
    this.partnerRole = props.partnerRole;
    this.partnerTeamMember = props.partnerTeamMember;
    this.pec = props.pec;
    this.permission = props.permission;
    this.phone = props.phone;
    this.phoneticName = props.phoneticName;
    this.prefCCProcessor = props.prefCCProcessor;
    this.priceLevel = props.priceLevel;
    this.pricingGroup = props.pricingGroup;
    this.pricingItem = props.pricingItem;
    this.printTransactions = props.printTransactions;
    this.prospectDate = props.prospectDate;
    this.receivablesAccount = props.receivablesAccount;
    this.reminderDays = props.reminderDays;
    this.resaleNumber = props.resaleNumber;
    this.role = props.role;
    this.salesReadiness = props.salesReadiness;
    this.salesRep = props.salesRep;
    this.salesTeamMember = props.salesTeamMember;
    this.salesTeamRole = props.salesTeamRole;
    this.salutation = props.salutation;
    this.shipAddress = props.shipAddress;
    this.shipAddress1 = props.shipAddress1;
    this.shipAddress2 = props.shipAddress2;
    this.shipAddress3 = props.shipAddress3;
    this.shipAddressee = props.shipAddressee;
    this.shipAttention = props.shipAttention;
    this.shipCity = props.shipCity;
    this.shipComplete = props.shipComplete;
    this.shipCountry = props.shipCountry;
    this.shipCountryCode = props.shipCountryCode;
    this.shipPhone = props.shipPhone;
    this.shippingItem = props.shippingItem;
    this.shipState = props.shipState;
    this.shipZip = props.shipZip;
    this.sourceSite = props.sourceSite;
    this.sourceSiteId = props.sourceSiteId;
    this.stage = props.stage;
    this.startDate = props.startDate;
    this.state = props.state;
    this.subscription = props.subscription;
    this.subscriptionDate = props.subscriptionDate;
    this.subscriptionStatus = props.subscriptionStatus;
    this.subsidiary = props.subsidiary;
    this.taxable = props.taxable;
    this.taxItem = props.taxItem;
    this.terms = props.terms;
    this.territory = props.territory;
    this.title = props.title;
    this.unbilledOrders = props.unbilledOrders;
    this.url = props.url;
    this.vatRegNumber = props.vatRegNumber;
    this.webLead = props.webLead;
    this.zipCode = props.zipCode;
    this.customFieldList = props.customFieldList;
  }
}

export type ProjectTaskAssignmentSearchBasicProps = {
  actualWork?: PlatformCore.SearchDoubleField;
  cost?: PlatformCore.SearchDoubleField;
  costBase?: PlatformCore.SearchDoubleField;
  endDate?: PlatformCore.SearchDateField;
  estimatedWork?: PlatformCore.SearchDoubleField;
  estimatedWorkBaseline?: PlatformCore.SearchDoubleField;
  grossProfit?: PlatformCore.SearchDoubleField;
  grossProfitBase?: PlatformCore.SearchDoubleField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  price?: PlatformCore.SearchDoubleField;
  priceBase?: PlatformCore.SearchDoubleField;
  resource?: PlatformCore.SearchMultiSelectField;
  resourceName?: PlatformCore.SearchStringField;
  serviceItem?: PlatformCore.SearchStringField;
  serviceItemDesc?: PlatformCore.SearchStringField;
  startDate?: PlatformCore.SearchDateField;
  unitCost?: PlatformCore.SearchDoubleField;
  unitCostBase?: PlatformCore.SearchDoubleField;
  unitPrice?: PlatformCore.SearchDoubleField;
  unitPriceBase?: PlatformCore.SearchDoubleField;
  units?: PlatformCore.SearchDoubleField;
  workCalendar?: PlatformCore.SearchMultiSelectField;
};

export class ProjectTaskAssignmentSearchBasic extends PlatformCore.SearchRecordBasic {
  actualWork?: PlatformCore.SearchDoubleField;
  cost?: PlatformCore.SearchDoubleField;
  costBase?: PlatformCore.SearchDoubleField;
  endDate?: PlatformCore.SearchDateField;
  estimatedWork?: PlatformCore.SearchDoubleField;
  estimatedWorkBaseline?: PlatformCore.SearchDoubleField;
  grossProfit?: PlatformCore.SearchDoubleField;
  grossProfitBase?: PlatformCore.SearchDoubleField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  price?: PlatformCore.SearchDoubleField;
  priceBase?: PlatformCore.SearchDoubleField;
  resource?: PlatformCore.SearchMultiSelectField;
  resourceName?: PlatformCore.SearchStringField;
  serviceItem?: PlatformCore.SearchStringField;
  serviceItemDesc?: PlatformCore.SearchStringField;
  startDate?: PlatformCore.SearchDateField;
  unitCost?: PlatformCore.SearchDoubleField;
  unitCostBase?: PlatformCore.SearchDoubleField;
  unitPrice?: PlatformCore.SearchDoubleField;
  unitPriceBase?: PlatformCore.SearchDoubleField;
  units?: PlatformCore.SearchDoubleField;
  workCalendar?: PlatformCore.SearchMultiSelectField;
  constructor(props: ProjectTaskAssignmentSearchBasicProps) {
    super();
    this.actualWork = props.actualWork;
    this.cost = props.cost;
    this.costBase = props.costBase;
    this.endDate = props.endDate;
    this.estimatedWork = props.estimatedWork;
    this.estimatedWorkBaseline = props.estimatedWorkBaseline;
    this.grossProfit = props.grossProfit;
    this.grossProfitBase = props.grossProfitBase;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.price = props.price;
    this.priceBase = props.priceBase;
    this.resource = props.resource;
    this.resourceName = props.resourceName;
    this.serviceItem = props.serviceItem;
    this.serviceItemDesc = props.serviceItemDesc;
    this.startDate = props.startDate;
    this.unitCost = props.unitCost;
    this.unitCostBase = props.unitCostBase;
    this.unitPrice = props.unitPrice;
    this.unitPriceBase = props.unitPriceBase;
    this.units = props.units;
    this.workCalendar = props.workCalendar;
  }
}

export type TimeBillSearchBasicProps = {
  approvalStatus?: PlatformCore.SearchMultiSelectField;
  approved?: PlatformCore.SearchBooleanField;
  billable?: PlatformCore.SearchBooleanField;
  clazz?: PlatformCore.SearchMultiSelectField;
  customer?: PlatformCore.SearchMultiSelectField;
  date?: PlatformCore.SearchDateField;
  dateCreated?: PlatformCore.SearchDateField;
  department?: PlatformCore.SearchMultiSelectField;
  duration?: PlatformCore.SearchDoubleField;
  employee?: PlatformCore.SearchMultiSelectField;
  exempt?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  item?: PlatformCore.SearchMultiSelectField;
  lastModified?: PlatformCore.SearchDateField;
  location?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  paidByPayroll?: PlatformCore.SearchBooleanField;
  paidExternally?: PlatformCore.SearchBooleanField;
  payItem?: PlatformCore.SearchMultiSelectField;
  productive?: PlatformCore.SearchBooleanField;
  rejectionNote?: PlatformCore.SearchStringField;
  status?: PlatformCore.SearchBooleanField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  temporaryLocalJurisdiction?: PlatformCore.SearchMultiSelectField;
  temporaryStateJurisdiction?: PlatformCore.SearchMultiSelectField;
  timeModified?: PlatformCore.SearchBooleanField;
  timeSheet?: PlatformCore.SearchMultiSelectField;
  type?: PlatformCore.SearchEnumMultiSelectField;
  utilized?: PlatformCore.SearchBooleanField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class TimeBillSearchBasic extends PlatformCore.SearchRecordBasic {
  approvalStatus?: PlatformCore.SearchMultiSelectField;
  approved?: PlatformCore.SearchBooleanField;
  billable?: PlatformCore.SearchBooleanField;
  clazz?: PlatformCore.SearchMultiSelectField;
  customer?: PlatformCore.SearchMultiSelectField;
  date?: PlatformCore.SearchDateField;
  dateCreated?: PlatformCore.SearchDateField;
  department?: PlatformCore.SearchMultiSelectField;
  duration?: PlatformCore.SearchDoubleField;
  employee?: PlatformCore.SearchMultiSelectField;
  exempt?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  item?: PlatformCore.SearchMultiSelectField;
  lastModified?: PlatformCore.SearchDateField;
  location?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  paidByPayroll?: PlatformCore.SearchBooleanField;
  paidExternally?: PlatformCore.SearchBooleanField;
  payItem?: PlatformCore.SearchMultiSelectField;
  productive?: PlatformCore.SearchBooleanField;
  rejectionNote?: PlatformCore.SearchStringField;
  status?: PlatformCore.SearchBooleanField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  temporaryLocalJurisdiction?: PlatformCore.SearchMultiSelectField;
  temporaryStateJurisdiction?: PlatformCore.SearchMultiSelectField;
  timeModified?: PlatformCore.SearchBooleanField;
  timeSheet?: PlatformCore.SearchMultiSelectField;
  type?: PlatformCore.SearchEnumMultiSelectField;
  utilized?: PlatformCore.SearchBooleanField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: TimeBillSearchBasicProps) {
    super();
    this.approvalStatus = props.approvalStatus;
    this.approved = props.approved;
    this.billable = props.billable;
    this.clazz = props.clazz;
    this.customer = props.customer;
    this.date = props.date;
    this.dateCreated = props.dateCreated;
    this.department = props.department;
    this.duration = props.duration;
    this.employee = props.employee;
    this.exempt = props.exempt;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.item = props.item;
    this.lastModified = props.lastModified;
    this.location = props.location;
    this.memo = props.memo;
    this.paidByPayroll = props.paidByPayroll;
    this.paidExternally = props.paidExternally;
    this.payItem = props.payItem;
    this.productive = props.productive;
    this.rejectionNote = props.rejectionNote;
    this.status = props.status;
    this.subsidiary = props.subsidiary;
    this.temporaryLocalJurisdiction = props.temporaryLocalJurisdiction;
    this.temporaryStateJurisdiction = props.temporaryStateJurisdiction;
    this.timeModified = props.timeModified;
    this.timeSheet = props.timeSheet;
    this.type = props.type;
    this.utilized = props.utilized;
    this.customFieldList = props.customFieldList;
  }
}

export type ItemBinNumberSearchBasicProps = {
  binNumber?: PlatformCore.SearchMultiSelectField;
  location?: PlatformCore.SearchMultiSelectField;
  quantityAvailable?: PlatformCore.SearchDoubleField;
  quantityOnHand?: PlatformCore.SearchDoubleField;
};

export class ItemBinNumberSearchBasic extends PlatformCore.SearchRecordBasic {
  binNumber?: PlatformCore.SearchMultiSelectField;
  location?: PlatformCore.SearchMultiSelectField;
  quantityAvailable?: PlatformCore.SearchDoubleField;
  quantityOnHand?: PlatformCore.SearchDoubleField;
  constructor(props: ItemBinNumberSearchBasicProps) {
    super();
    this.binNumber = props.binNumber;
    this.location = props.location;
    this.quantityAvailable = props.quantityAvailable;
    this.quantityOnHand = props.quantityOnHand;
  }
}

export type FileSearchBasicProps = {
  availableWithoutLogin?: PlatformCore.SearchBooleanField;
  created?: PlatformCore.SearchDateField;
  dateViewed?: PlatformCore.SearchDateField;
  description?: PlatformCore.SearchStringField;
  documentSize?: PlatformCore.SearchLongField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fileType?: PlatformCore.SearchEnumMultiSelectField;
  folder?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isAvailable?: PlatformCore.SearchBooleanField;
  isLink?: PlatformCore.SearchBooleanField;
  modified?: PlatformCore.SearchDateField;
  name?: PlatformCore.SearchStringField;
  owner?: PlatformCore.SearchMultiSelectField;
  url?: PlatformCore.SearchStringField;
};

export class FileSearchBasic extends PlatformCore.SearchRecordBasic {
  availableWithoutLogin?: PlatformCore.SearchBooleanField;
  created?: PlatformCore.SearchDateField;
  dateViewed?: PlatformCore.SearchDateField;
  description?: PlatformCore.SearchStringField;
  documentSize?: PlatformCore.SearchLongField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fileType?: PlatformCore.SearchEnumMultiSelectField;
  folder?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isAvailable?: PlatformCore.SearchBooleanField;
  isLink?: PlatformCore.SearchBooleanField;
  modified?: PlatformCore.SearchDateField;
  name?: PlatformCore.SearchStringField;
  owner?: PlatformCore.SearchMultiSelectField;
  url?: PlatformCore.SearchStringField;
  constructor(props: FileSearchBasicProps) {
    super();
    this.availableWithoutLogin = props.availableWithoutLogin;
    this.created = props.created;
    this.dateViewed = props.dateViewed;
    this.description = props.description;
    this.documentSize = props.documentSize;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.fileType = props.fileType;
    this.folder = props.folder;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isAvailable = props.isAvailable;
    this.isLink = props.isLink;
    this.modified = props.modified;
    this.name = props.name;
    this.owner = props.owner;
    this.url = props.url;
  }
}

export type WinLossReasonSearchRowBasicProps = {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
};

export class WinLossReasonSearchRowBasic extends PlatformCore.SearchRowBasic {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  constructor(props: WinLossReasonSearchRowBasicProps) {
    super();
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type EmployeeSearchRowBasicProps = {
  accountNumber?: PlatformCore.SearchColumnStringField[];
  address?: PlatformCore.SearchColumnStringField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  addressee?: PlatformCore.SearchColumnStringField[];
  addressInternalId?: PlatformCore.SearchColumnStringField[];
  addressLabel?: PlatformCore.SearchColumnStringField[];
  addressPhone?: PlatformCore.SearchColumnStringField[];
  alienNumber?: PlatformCore.SearchColumnStringField[];
  allocation?: PlatformCore.SearchColumnDoubleField[];
  altEmail?: PlatformCore.SearchColumnStringField[];
  altName?: PlatformCore.SearchColumnStringField[];
  altPhone?: PlatformCore.SearchColumnStringField[];
  approvalLimit?: PlatformCore.SearchColumnDoubleField[];
  approver?: PlatformCore.SearchColumnSelectField[];
  attention?: PlatformCore.SearchColumnStringField[];
  authWorkDate?: PlatformCore.SearchColumnDateField[];
  baseWage?: PlatformCore.SearchColumnDoubleField[];
  baseWageType?: PlatformCore.SearchEnumMultiSelectField[];
  billAddress?: PlatformCore.SearchColumnStringField[];
  billAddress1?: PlatformCore.SearchColumnStringField[];
  billAddress2?: PlatformCore.SearchColumnStringField[];
  billAddress3?: PlatformCore.SearchColumnStringField[];
  billAddressee?: PlatformCore.SearchColumnStringField[];
  billAttention?: PlatformCore.SearchColumnStringField[];
  billCity?: PlatformCore.SearchColumnStringField[];
  billCountry?: PlatformCore.SearchColumnEnumSelectField[];
  billCountryCode?: PlatformCore.SearchColumnStringField[];
  billingClass?: PlatformCore.SearchColumnSelectField[];
  billPhone?: PlatformCore.SearchColumnStringField[];
  billState?: PlatformCore.SearchColumnStringField[];
  billZipCode?: PlatformCore.SearchColumnStringField[];
  birthDate?: PlatformCore.SearchColumnDateField[];
  birthDay?: PlatformCore.SearchColumnDateField[];
  city?: PlatformCore.SearchColumnStringField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  comments?: PlatformCore.SearchColumnStringField[];
  compensationCurrency?: PlatformCore.SearchColumnEnumSelectField[];
  concurrentWebServicesUser?: PlatformCore.SearchColumnBooleanField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  countryCode?: PlatformCore.SearchColumnStringField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  defaultAcctCorpCardExp?: PlatformCore.SearchColumnSelectField[];
  defaultExpenseReportCurrency?: PlatformCore.SearchColumnSelectField[];
  defaultTaxReg?: PlatformCore.SearchColumnStringField[];
  department?: PlatformCore.SearchColumnSelectField[];
  eligibleForCommission?: PlatformCore.SearchColumnBooleanField[];
  email?: PlatformCore.SearchColumnStringField[];
  employeeStatus?: PlatformCore.SearchColumnSelectField[];
  employeeType?: PlatformCore.SearchColumnSelectField[];
  entityId?: PlatformCore.SearchColumnStringField[];
  entityNumber?: PlatformCore.SearchColumnLongField[];
  ethnicity?: PlatformCore.SearchColumnSelectField[];
  expenseLimit?: PlatformCore.SearchColumnDoubleField[];
  expenseReportCurrency?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  firstName?: PlatformCore.SearchColumnStringField[];
  gender?: PlatformCore.SearchColumnEnumSelectField[];
  giveAccess?: PlatformCore.SearchColumnBooleanField[];
  globalSubscriptionStatus?: PlatformCore.SearchColumnEnumSelectField[];
  hireDate?: PlatformCore.SearchColumnDateField[];
  homePhone?: PlatformCore.SearchColumnStringField[];
  i9Verified?: PlatformCore.SearchColumnBooleanField[];
  image?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isDefaultBilling?: PlatformCore.SearchColumnBooleanField[];
  isDefaultShipping?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isJobResource?: PlatformCore.SearchColumnBooleanField[];
  isSalesRep?: PlatformCore.SearchColumnBooleanField[];
  isSupportRep?: PlatformCore.SearchColumnBooleanField[];
  isTemplate?: PlatformCore.SearchColumnBooleanField[];
  job?: PlatformCore.SearchColumnSelectField[];
  laborCost?: PlatformCore.SearchColumnDoubleField[];
  language?: PlatformCore.SearchColumnEnumSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  lastName?: PlatformCore.SearchColumnStringField[];
  lastPaidDate?: PlatformCore.SearchColumnDateField[];
  lastReviewDate?: PlatformCore.SearchColumnDateField[];
  level?: PlatformCore.SearchColumnEnumSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  maritalStatus?: PlatformCore.SearchColumnSelectField[];
  middleName?: PlatformCore.SearchColumnStringField[];
  mobilePhone?: PlatformCore.SearchColumnStringField[];
  nextReviewDate?: PlatformCore.SearchColumnDateField[];
  offlineAccess?: PlatformCore.SearchColumnBooleanField[];
  payFrequency?: PlatformCore.SearchColumnEnumSelectField[];
  permChangeDate?: PlatformCore.SearchColumnDateField[];
  permChangeLevel?: PlatformCore.SearchColumnStringField[];
  permission?: PlatformCore.SearchColumnEnumSelectField[];
  permissionChange?: PlatformCore.SearchColumnEnumSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  phoneticName?: PlatformCore.SearchColumnStringField[];
  positionTitle?: PlatformCore.SearchColumnStringField[];
  primaryEarningAmount?: PlatformCore.SearchColumnDoubleField[];
  primaryEarningItem?: PlatformCore.SearchColumnStringField[];
  primaryEarningType?: PlatformCore.SearchColumnStringField[];
  purchaseOrderApprovalLimit?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrderApprover?: PlatformCore.SearchColumnSelectField[];
  purchaseOrderLimit?: PlatformCore.SearchColumnDoubleField[];
  releaseDate?: PlatformCore.SearchColumnDateField[];
  residentStatus?: PlatformCore.SearchColumnSelectField[];
  role?: PlatformCore.SearchColumnSelectField[];
  roleChange?: PlatformCore.SearchColumnStringField[];
  roleChangeAction?: PlatformCore.SearchColumnStringField[];
  roleChangeDate?: PlatformCore.SearchColumnDateField[];
  salesRole?: PlatformCore.SearchColumnSelectField[];
  salutation?: PlatformCore.SearchColumnStringField[];
  shipAddress1?: PlatformCore.SearchColumnStringField[];
  shipAddress2?: PlatformCore.SearchColumnStringField[];
  shipAddress3?: PlatformCore.SearchColumnStringField[];
  shipAddressee?: PlatformCore.SearchColumnStringField[];
  shipAttention?: PlatformCore.SearchColumnStringField[];
  shipCity?: PlatformCore.SearchColumnStringField[];
  shipCountry?: PlatformCore.SearchColumnEnumSelectField[];
  shipCountryCode?: PlatformCore.SearchColumnStringField[];
  shipPhone?: PlatformCore.SearchColumnStringField[];
  shipState?: PlatformCore.SearchColumnStringField[];
  shipZip?: PlatformCore.SearchColumnStringField[];
  socialSecurityNumber?: PlatformCore.SearchColumnStringField[];
  startDateTimeOffCalc?: PlatformCore.SearchColumnDateField[];
  state?: PlatformCore.SearchColumnEnumSelectField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionDate?: PlatformCore.SearchColumnDateField[];
  subscriptionStatus?: PlatformCore.SearchColumnBooleanField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  supervisor?: PlatformCore.SearchColumnSelectField[];
  terminationCategory?: PlatformCore.SearchColumnEnumSelectField[];
  terminationDetails?: PlatformCore.SearchColumnStringField[];
  terminationReason?: PlatformCore.SearchColumnSelectField[];
  terminationRegretted?: PlatformCore.SearchColumnEnumSelectField[];
  timeApprover?: PlatformCore.SearchColumnSelectField[];
  timeOffPlan?: PlatformCore.SearchColumnStringField[];
  title?: PlatformCore.SearchColumnStringField[];
  usePerquest?: PlatformCore.SearchColumnBooleanField[];
  useTimeData?: PlatformCore.SearchColumnBooleanField[];
  visaExpDate?: PlatformCore.SearchColumnDateField[];
  visaType?: PlatformCore.SearchColumnSelectField[];
  workCalendar?: PlatformCore.SearchColumnStringField[];
  workplace?: PlatformCore.SearchColumnSelectField[];
  zipCode?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class EmployeeSearchRowBasic extends PlatformCore.SearchRowBasic {
  accountNumber?: PlatformCore.SearchColumnStringField[];
  address?: PlatformCore.SearchColumnStringField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  addressee?: PlatformCore.SearchColumnStringField[];
  addressInternalId?: PlatformCore.SearchColumnStringField[];
  addressLabel?: PlatformCore.SearchColumnStringField[];
  addressPhone?: PlatformCore.SearchColumnStringField[];
  alienNumber?: PlatformCore.SearchColumnStringField[];
  allocation?: PlatformCore.SearchColumnDoubleField[];
  altEmail?: PlatformCore.SearchColumnStringField[];
  altName?: PlatformCore.SearchColumnStringField[];
  altPhone?: PlatformCore.SearchColumnStringField[];
  approvalLimit?: PlatformCore.SearchColumnDoubleField[];
  approver?: PlatformCore.SearchColumnSelectField[];
  attention?: PlatformCore.SearchColumnStringField[];
  authWorkDate?: PlatformCore.SearchColumnDateField[];
  baseWage?: PlatformCore.SearchColumnDoubleField[];
  baseWageType?: PlatformCore.SearchEnumMultiSelectField[];
  billAddress?: PlatformCore.SearchColumnStringField[];
  billAddress1?: PlatformCore.SearchColumnStringField[];
  billAddress2?: PlatformCore.SearchColumnStringField[];
  billAddress3?: PlatformCore.SearchColumnStringField[];
  billAddressee?: PlatformCore.SearchColumnStringField[];
  billAttention?: PlatformCore.SearchColumnStringField[];
  billCity?: PlatformCore.SearchColumnStringField[];
  billCountry?: PlatformCore.SearchColumnEnumSelectField[];
  billCountryCode?: PlatformCore.SearchColumnStringField[];
  billingClass?: PlatformCore.SearchColumnSelectField[];
  billPhone?: PlatformCore.SearchColumnStringField[];
  billState?: PlatformCore.SearchColumnStringField[];
  billZipCode?: PlatformCore.SearchColumnStringField[];
  birthDate?: PlatformCore.SearchColumnDateField[];
  birthDay?: PlatformCore.SearchColumnDateField[];
  city?: PlatformCore.SearchColumnStringField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  comments?: PlatformCore.SearchColumnStringField[];
  compensationCurrency?: PlatformCore.SearchColumnEnumSelectField[];
  concurrentWebServicesUser?: PlatformCore.SearchColumnBooleanField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  countryCode?: PlatformCore.SearchColumnStringField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  defaultAcctCorpCardExp?: PlatformCore.SearchColumnSelectField[];
  defaultExpenseReportCurrency?: PlatformCore.SearchColumnSelectField[];
  defaultTaxReg?: PlatformCore.SearchColumnStringField[];
  department?: PlatformCore.SearchColumnSelectField[];
  eligibleForCommission?: PlatformCore.SearchColumnBooleanField[];
  email?: PlatformCore.SearchColumnStringField[];
  employeeStatus?: PlatformCore.SearchColumnSelectField[];
  employeeType?: PlatformCore.SearchColumnSelectField[];
  entityId?: PlatformCore.SearchColumnStringField[];
  entityNumber?: PlatformCore.SearchColumnLongField[];
  ethnicity?: PlatformCore.SearchColumnSelectField[];
  expenseLimit?: PlatformCore.SearchColumnDoubleField[];
  expenseReportCurrency?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  firstName?: PlatformCore.SearchColumnStringField[];
  gender?: PlatformCore.SearchColumnEnumSelectField[];
  giveAccess?: PlatformCore.SearchColumnBooleanField[];
  globalSubscriptionStatus?: PlatformCore.SearchColumnEnumSelectField[];
  hireDate?: PlatformCore.SearchColumnDateField[];
  homePhone?: PlatformCore.SearchColumnStringField[];
  i9Verified?: PlatformCore.SearchColumnBooleanField[];
  image?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isDefaultBilling?: PlatformCore.SearchColumnBooleanField[];
  isDefaultShipping?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isJobResource?: PlatformCore.SearchColumnBooleanField[];
  isSalesRep?: PlatformCore.SearchColumnBooleanField[];
  isSupportRep?: PlatformCore.SearchColumnBooleanField[];
  isTemplate?: PlatformCore.SearchColumnBooleanField[];
  job?: PlatformCore.SearchColumnSelectField[];
  laborCost?: PlatformCore.SearchColumnDoubleField[];
  language?: PlatformCore.SearchColumnEnumSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  lastName?: PlatformCore.SearchColumnStringField[];
  lastPaidDate?: PlatformCore.SearchColumnDateField[];
  lastReviewDate?: PlatformCore.SearchColumnDateField[];
  level?: PlatformCore.SearchColumnEnumSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  maritalStatus?: PlatformCore.SearchColumnSelectField[];
  middleName?: PlatformCore.SearchColumnStringField[];
  mobilePhone?: PlatformCore.SearchColumnStringField[];
  nextReviewDate?: PlatformCore.SearchColumnDateField[];
  offlineAccess?: PlatformCore.SearchColumnBooleanField[];
  payFrequency?: PlatformCore.SearchColumnEnumSelectField[];
  permChangeDate?: PlatformCore.SearchColumnDateField[];
  permChangeLevel?: PlatformCore.SearchColumnStringField[];
  permission?: PlatformCore.SearchColumnEnumSelectField[];
  permissionChange?: PlatformCore.SearchColumnEnumSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  phoneticName?: PlatformCore.SearchColumnStringField[];
  positionTitle?: PlatformCore.SearchColumnStringField[];
  primaryEarningAmount?: PlatformCore.SearchColumnDoubleField[];
  primaryEarningItem?: PlatformCore.SearchColumnStringField[];
  primaryEarningType?: PlatformCore.SearchColumnStringField[];
  purchaseOrderApprovalLimit?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrderApprover?: PlatformCore.SearchColumnSelectField[];
  purchaseOrderLimit?: PlatformCore.SearchColumnDoubleField[];
  releaseDate?: PlatformCore.SearchColumnDateField[];
  residentStatus?: PlatformCore.SearchColumnSelectField[];
  role?: PlatformCore.SearchColumnSelectField[];
  roleChange?: PlatformCore.SearchColumnStringField[];
  roleChangeAction?: PlatformCore.SearchColumnStringField[];
  roleChangeDate?: PlatformCore.SearchColumnDateField[];
  salesRole?: PlatformCore.SearchColumnSelectField[];
  salutation?: PlatformCore.SearchColumnStringField[];
  shipAddress1?: PlatformCore.SearchColumnStringField[];
  shipAddress2?: PlatformCore.SearchColumnStringField[];
  shipAddress3?: PlatformCore.SearchColumnStringField[];
  shipAddressee?: PlatformCore.SearchColumnStringField[];
  shipAttention?: PlatformCore.SearchColumnStringField[];
  shipCity?: PlatformCore.SearchColumnStringField[];
  shipCountry?: PlatformCore.SearchColumnEnumSelectField[];
  shipCountryCode?: PlatformCore.SearchColumnStringField[];
  shipPhone?: PlatformCore.SearchColumnStringField[];
  shipState?: PlatformCore.SearchColumnStringField[];
  shipZip?: PlatformCore.SearchColumnStringField[];
  socialSecurityNumber?: PlatformCore.SearchColumnStringField[];
  startDateTimeOffCalc?: PlatformCore.SearchColumnDateField[];
  state?: PlatformCore.SearchColumnEnumSelectField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionDate?: PlatformCore.SearchColumnDateField[];
  subscriptionStatus?: PlatformCore.SearchColumnBooleanField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  supervisor?: PlatformCore.SearchColumnSelectField[];
  terminationCategory?: PlatformCore.SearchColumnEnumSelectField[];
  terminationDetails?: PlatformCore.SearchColumnStringField[];
  terminationReason?: PlatformCore.SearchColumnSelectField[];
  terminationRegretted?: PlatformCore.SearchColumnEnumSelectField[];
  timeApprover?: PlatformCore.SearchColumnSelectField[];
  timeOffPlan?: PlatformCore.SearchColumnStringField[];
  title?: PlatformCore.SearchColumnStringField[];
  usePerquest?: PlatformCore.SearchColumnBooleanField[];
  useTimeData?: PlatformCore.SearchColumnBooleanField[];
  visaExpDate?: PlatformCore.SearchColumnDateField[];
  visaType?: PlatformCore.SearchColumnSelectField[];
  workCalendar?: PlatformCore.SearchColumnStringField[];
  workplace?: PlatformCore.SearchColumnSelectField[];
  zipCode?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: EmployeeSearchRowBasicProps) {
    super();
    this.accountNumber = props.accountNumber;
    this.address = props.address;
    this.address1 = props.address1;
    this.address2 = props.address2;
    this.address3 = props.address3;
    this.addressee = props.addressee;
    this.addressInternalId = props.addressInternalId;
    this.addressLabel = props.addressLabel;
    this.addressPhone = props.addressPhone;
    this.alienNumber = props.alienNumber;
    this.allocation = props.allocation;
    this.altEmail = props.altEmail;
    this.altName = props.altName;
    this.altPhone = props.altPhone;
    this.approvalLimit = props.approvalLimit;
    this.approver = props.approver;
    this.attention = props.attention;
    this.authWorkDate = props.authWorkDate;
    this.baseWage = props.baseWage;
    this.baseWageType = props.baseWageType;
    this.billAddress = props.billAddress;
    this.billAddress1 = props.billAddress1;
    this.billAddress2 = props.billAddress2;
    this.billAddress3 = props.billAddress3;
    this.billAddressee = props.billAddressee;
    this.billAttention = props.billAttention;
    this.billCity = props.billCity;
    this.billCountry = props.billCountry;
    this.billCountryCode = props.billCountryCode;
    this.billingClass = props.billingClass;
    this.billPhone = props.billPhone;
    this.billState = props.billState;
    this.billZipCode = props.billZipCode;
    this.birthDate = props.birthDate;
    this.birthDay = props.birthDay;
    this.city = props.city;
    this.clazz = props.clazz;
    this.comments = props.comments;
    this.compensationCurrency = props.compensationCurrency;
    this.concurrentWebServicesUser = props.concurrentWebServicesUser;
    this.country = props.country;
    this.countryCode = props.countryCode;
    this.dateCreated = props.dateCreated;
    this.defaultAcctCorpCardExp = props.defaultAcctCorpCardExp;
    this.defaultExpenseReportCurrency = props.defaultExpenseReportCurrency;
    this.defaultTaxReg = props.defaultTaxReg;
    this.department = props.department;
    this.eligibleForCommission = props.eligibleForCommission;
    this.email = props.email;
    this.employeeStatus = props.employeeStatus;
    this.employeeType = props.employeeType;
    this.entityId = props.entityId;
    this.entityNumber = props.entityNumber;
    this.ethnicity = props.ethnicity;
    this.expenseLimit = props.expenseLimit;
    this.expenseReportCurrency = props.expenseReportCurrency;
    this.externalId = props.externalId;
    this.fax = props.fax;
    this.firstName = props.firstName;
    this.gender = props.gender;
    this.giveAccess = props.giveAccess;
    this.globalSubscriptionStatus = props.globalSubscriptionStatus;
    this.hireDate = props.hireDate;
    this.homePhone = props.homePhone;
    this.i9Verified = props.i9Verified;
    this.image = props.image;
    this.internalId = props.internalId;
    this.isDefaultBilling = props.isDefaultBilling;
    this.isDefaultShipping = props.isDefaultShipping;
    this.isInactive = props.isInactive;
    this.isJobResource = props.isJobResource;
    this.isSalesRep = props.isSalesRep;
    this.isSupportRep = props.isSupportRep;
    this.isTemplate = props.isTemplate;
    this.job = props.job;
    this.laborCost = props.laborCost;
    this.language = props.language;
    this.lastModifiedDate = props.lastModifiedDate;
    this.lastName = props.lastName;
    this.lastPaidDate = props.lastPaidDate;
    this.lastReviewDate = props.lastReviewDate;
    this.level = props.level;
    this.location = props.location;
    this.maritalStatus = props.maritalStatus;
    this.middleName = props.middleName;
    this.mobilePhone = props.mobilePhone;
    this.nextReviewDate = props.nextReviewDate;
    this.offlineAccess = props.offlineAccess;
    this.payFrequency = props.payFrequency;
    this.permChangeDate = props.permChangeDate;
    this.permChangeLevel = props.permChangeLevel;
    this.permission = props.permission;
    this.permissionChange = props.permissionChange;
    this.phone = props.phone;
    this.phoneticName = props.phoneticName;
    this.positionTitle = props.positionTitle;
    this.primaryEarningAmount = props.primaryEarningAmount;
    this.primaryEarningItem = props.primaryEarningItem;
    this.primaryEarningType = props.primaryEarningType;
    this.purchaseOrderApprovalLimit = props.purchaseOrderApprovalLimit;
    this.purchaseOrderApprover = props.purchaseOrderApprover;
    this.purchaseOrderLimit = props.purchaseOrderLimit;
    this.releaseDate = props.releaseDate;
    this.residentStatus = props.residentStatus;
    this.role = props.role;
    this.roleChange = props.roleChange;
    this.roleChangeAction = props.roleChangeAction;
    this.roleChangeDate = props.roleChangeDate;
    this.salesRole = props.salesRole;
    this.salutation = props.salutation;
    this.shipAddress1 = props.shipAddress1;
    this.shipAddress2 = props.shipAddress2;
    this.shipAddress3 = props.shipAddress3;
    this.shipAddressee = props.shipAddressee;
    this.shipAttention = props.shipAttention;
    this.shipCity = props.shipCity;
    this.shipCountry = props.shipCountry;
    this.shipCountryCode = props.shipCountryCode;
    this.shipPhone = props.shipPhone;
    this.shipState = props.shipState;
    this.shipZip = props.shipZip;
    this.socialSecurityNumber = props.socialSecurityNumber;
    this.startDateTimeOffCalc = props.startDateTimeOffCalc;
    this.state = props.state;
    this.subscription = props.subscription;
    this.subscriptionDate = props.subscriptionDate;
    this.subscriptionStatus = props.subscriptionStatus;
    this.subsidiary = props.subsidiary;
    this.supervisor = props.supervisor;
    this.terminationCategory = props.terminationCategory;
    this.terminationDetails = props.terminationDetails;
    this.terminationReason = props.terminationReason;
    this.terminationRegretted = props.terminationRegretted;
    this.timeApprover = props.timeApprover;
    this.timeOffPlan = props.timeOffPlan;
    this.title = props.title;
    this.usePerquest = props.usePerquest;
    this.useTimeData = props.useTimeData;
    this.visaExpDate = props.visaExpDate;
    this.visaType = props.visaType;
    this.workCalendar = props.workCalendar;
    this.workplace = props.workplace;
    this.zipCode = props.zipCode;
    this.customFieldList = props.customFieldList;
  }
}

export type GlobalAccountMappingSearchBasicProps = {
  accountingBook?: PlatformCore.SearchMultiSelectField;
  clazz?: PlatformCore.SearchMultiSelectField;
  customDimension?: PlatformCore.SearchMultiSelectCustomField;
  department?: PlatformCore.SearchMultiSelectField;
  destinationAccount?: PlatformCore.SearchMultiSelectField;
  effectiveDate?: PlatformCore.SearchDateField;
  endDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  location?: PlatformCore.SearchMultiSelectField;
  sourceAccount?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class GlobalAccountMappingSearchBasic extends PlatformCore.SearchRecordBasic {
  accountingBook?: PlatformCore.SearchMultiSelectField;
  clazz?: PlatformCore.SearchMultiSelectField;
  customDimension?: PlatformCore.SearchMultiSelectCustomField;
  department?: PlatformCore.SearchMultiSelectField;
  destinationAccount?: PlatformCore.SearchMultiSelectField;
  effectiveDate?: PlatformCore.SearchDateField;
  endDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  location?: PlatformCore.SearchMultiSelectField;
  sourceAccount?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: GlobalAccountMappingSearchBasicProps) {
    super();
    this.accountingBook = props.accountingBook;
    this.clazz = props.clazz;
    this.customDimension = props.customDimension;
    this.department = props.department;
    this.destinationAccount = props.destinationAccount;
    this.effectiveDate = props.effectiveDate;
    this.endDate = props.endDate;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.location = props.location;
    this.sourceAccount = props.sourceAccount;
    this.subsidiary = props.subsidiary;
    this.customFieldList = props.customFieldList;
  }
}

export type NoteTypeSearchRowBasicProps = {
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
};

export class NoteTypeSearchRowBasic extends PlatformCore.SearchRowBasic {
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  constructor(props: NoteTypeSearchRowBasicProps) {
    super();
    this.description = props.description;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type AccountSearchRowBasicProps = {
  accountingContext?: PlatformCore.SearchColumnStringField[];
  balance?: PlatformCore.SearchColumnDoubleField[];
  cashFlowRateType?: PlatformCore.SearchColumnEnumSelectField[];
  category1099Misc?: PlatformCore.SearchColumnSelectField[];
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  generalRateType?: PlatformCore.SearchColumnEnumSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  legalName?: PlatformCore.SearchColumnStringField[];
  locale?: PlatformCore.SearchColumnStringField[];
  localizedLegalName?: PlatformCore.SearchColumnStringField[];
  localizedName?: PlatformCore.SearchColumnStringField[];
  localizedNumber?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  number?: PlatformCore.SearchColumnStringField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  type?: PlatformCore.SearchColumnEnumSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class AccountSearchRowBasic extends PlatformCore.SearchRowBasic {
  accountingContext?: PlatformCore.SearchColumnStringField[];
  balance?: PlatformCore.SearchColumnDoubleField[];
  cashFlowRateType?: PlatformCore.SearchColumnEnumSelectField[];
  category1099Misc?: PlatformCore.SearchColumnSelectField[];
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  generalRateType?: PlatformCore.SearchColumnEnumSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  legalName?: PlatformCore.SearchColumnStringField[];
  locale?: PlatformCore.SearchColumnStringField[];
  localizedLegalName?: PlatformCore.SearchColumnStringField[];
  localizedName?: PlatformCore.SearchColumnStringField[];
  localizedNumber?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  number?: PlatformCore.SearchColumnStringField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  type?: PlatformCore.SearchColumnEnumSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: AccountSearchRowBasicProps) {
    super();
    this.accountingContext = props.accountingContext;
    this.balance = props.balance;
    this.cashFlowRateType = props.cashFlowRateType;
    this.category1099Misc = props.category1099Misc;
    this.description = props.description;
    this.externalId = props.externalId;
    this.generalRateType = props.generalRateType;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.legalName = props.legalName;
    this.locale = props.locale;
    this.localizedLegalName = props.localizedLegalName;
    this.localizedName = props.localizedName;
    this.localizedNumber = props.localizedNumber;
    this.name = props.name;
    this.number = props.number;
    this.subsidiary = props.subsidiary;
    this.type = props.type;
    this.customFieldList = props.customFieldList;
  }
}

export type NexusSearchBasicProps = {
  country?: PlatformCore.SearchEnumMultiSelectField;
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  parentNexus?: PlatformCore.SearchMultiSelectField;
  state?: PlatformCore.SearchMultiSelectField;
  taxAgency?: PlatformCore.SearchMultiSelectField;
  taxDateFromFulfillment?: PlatformCore.SearchBooleanField;
};

export class NexusSearchBasic extends PlatformCore.SearchRecordBasic {
  country?: PlatformCore.SearchEnumMultiSelectField;
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  parentNexus?: PlatformCore.SearchMultiSelectField;
  state?: PlatformCore.SearchMultiSelectField;
  taxAgency?: PlatformCore.SearchMultiSelectField;
  taxDateFromFulfillment?: PlatformCore.SearchBooleanField;
  constructor(props: NexusSearchBasicProps) {
    super();
    this.country = props.country;
    this.description = props.description;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.parentNexus = props.parentNexus;
    this.state = props.state;
    this.taxAgency = props.taxAgency;
    this.taxDateFromFulfillment = props.taxDateFromFulfillment;
  }
}

export type InventoryDetailProps = {
  inventoryAssignmentList?: InventoryAssignmentList;
  customForm?: PlatformCore.RecordRef;
} & PlatformCore.RecordProps;

export class InventoryDetail extends PlatformCore.Record {
  inventoryAssignmentList?: InventoryAssignmentList;
  customForm?: PlatformCore.RecordRef;
  constructor(props: InventoryDetailProps) {
    super(props);
    this.inventoryAssignmentList = props.inventoryAssignmentList;
    this.customForm = props.customForm;
  }
}

export type VendorSearchBasicProps = {
  accountNumber?: PlatformCore.SearchStringField;
  address?: PlatformCore.SearchStringField;
  addressee?: PlatformCore.SearchStringField;
  addressLabel?: PlatformCore.SearchStringField;
  addressPhone?: PlatformCore.SearchStringField;
  attention?: PlatformCore.SearchStringField;
  balance?: PlatformCore.SearchDoubleField;
  billAddress?: PlatformCore.SearchStringField;
  category?: PlatformCore.SearchMultiSelectField;
  city?: PlatformCore.SearchStringField;
  comments?: PlatformCore.SearchStringField;
  contact?: PlatformCore.SearchStringField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  creditLimit?: PlatformCore.SearchDoubleField;
  currency?: PlatformCore.SearchMultiSelectField;
  currentExchangeRate?: PlatformCore.SearchDoubleField;
  dateCreated?: PlatformCore.SearchDateField;
  defaultTaxReg?: PlatformCore.SearchMultiSelectField;
  defaultTaxRegText?: PlatformCore.SearchStringField;
  eligibleForCommission?: PlatformCore.SearchBooleanField;
  email?: PlatformCore.SearchStringField;
  emailPreference?: PlatformCore.SearchEnumMultiSelectField;
  emailTransactions?: PlatformCore.SearchBooleanField;
  entityId?: PlatformCore.SearchStringField;
  expenseAccount?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  faxTransactions?: PlatformCore.SearchBooleanField;
  firstName?: PlatformCore.SearchStringField;
  fxBalance?: PlatformCore.SearchDoubleField;
  fxUnbilledOrders?: PlatformCore.SearchDoubleField;
  giveAccess?: PlatformCore.SearchBooleanField;
  globalSubscriptionStatus?: PlatformCore.SearchEnumMultiSelectField;
  group?: PlatformCore.SearchMultiSelectField;
  hasDuplicates?: PlatformCore.SearchBooleanField;
  image?: PlatformCore.SearchStringField;
  incoterm?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  is1099Eligible?: PlatformCore.SearchBooleanField;
  isDefaultBilling?: PlatformCore.SearchBooleanField;
  isDefaultShipping?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isJobResourceVend?: PlatformCore.SearchBooleanField;
  isPerson?: PlatformCore.SearchBooleanField;
  laborCost?: PlatformCore.SearchDoubleField;
  language?: PlatformCore.SearchEnumMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  lastName?: PlatformCore.SearchStringField;
  level?: PlatformCore.SearchEnumMultiSelectField;
  middleName?: PlatformCore.SearchStringField;
  otherRelationships?: PlatformCore.SearchEnumMultiSelectField;
  payablesAccount?: PlatformCore.SearchMultiSelectField;
  pec?: PlatformCore.SearchStringField;
  permission?: PlatformCore.SearchEnumMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  phoneticName?: PlatformCore.SearchStringField;
  predConfidence?: PlatformCore.SearchDoubleField;
  predictedDays?: PlatformCore.SearchDoubleField;
  printTransactions?: PlatformCore.SearchBooleanField;
  purchaseOrderAmount?: PlatformCore.SearchDoubleField;
  purchaseOrderQuantity?: PlatformCore.SearchDoubleField;
  purchaseOrderQuantityDiff?: PlatformCore.SearchDoubleField;
  receiptAmount?: PlatformCore.SearchDoubleField;
  receiptQuantity?: PlatformCore.SearchDoubleField;
  receiptQuantityDiff?: PlatformCore.SearchDoubleField;
  salutation?: PlatformCore.SearchStringField;
  shipAddress?: PlatformCore.SearchStringField;
  state?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  taxIdNum?: PlatformCore.SearchStringField;
  timeApprover?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  unbilledOrders?: PlatformCore.SearchDoubleField;
  url?: PlatformCore.SearchStringField;
  vatRegNumber?: PlatformCore.SearchStringField;
  workCalendar?: PlatformCore.SearchMultiSelectField;
  zipCode?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class VendorSearchBasic extends PlatformCore.SearchRecordBasic {
  accountNumber?: PlatformCore.SearchStringField;
  address?: PlatformCore.SearchStringField;
  addressee?: PlatformCore.SearchStringField;
  addressLabel?: PlatformCore.SearchStringField;
  addressPhone?: PlatformCore.SearchStringField;
  attention?: PlatformCore.SearchStringField;
  balance?: PlatformCore.SearchDoubleField;
  billAddress?: PlatformCore.SearchStringField;
  category?: PlatformCore.SearchMultiSelectField;
  city?: PlatformCore.SearchStringField;
  comments?: PlatformCore.SearchStringField;
  contact?: PlatformCore.SearchStringField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  creditLimit?: PlatformCore.SearchDoubleField;
  currency?: PlatformCore.SearchMultiSelectField;
  currentExchangeRate?: PlatformCore.SearchDoubleField;
  dateCreated?: PlatformCore.SearchDateField;
  defaultTaxReg?: PlatformCore.SearchMultiSelectField;
  defaultTaxRegText?: PlatformCore.SearchStringField;
  eligibleForCommission?: PlatformCore.SearchBooleanField;
  email?: PlatformCore.SearchStringField;
  emailPreference?: PlatformCore.SearchEnumMultiSelectField;
  emailTransactions?: PlatformCore.SearchBooleanField;
  entityId?: PlatformCore.SearchStringField;
  expenseAccount?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  faxTransactions?: PlatformCore.SearchBooleanField;
  firstName?: PlatformCore.SearchStringField;
  fxBalance?: PlatformCore.SearchDoubleField;
  fxUnbilledOrders?: PlatformCore.SearchDoubleField;
  giveAccess?: PlatformCore.SearchBooleanField;
  globalSubscriptionStatus?: PlatformCore.SearchEnumMultiSelectField;
  group?: PlatformCore.SearchMultiSelectField;
  hasDuplicates?: PlatformCore.SearchBooleanField;
  image?: PlatformCore.SearchStringField;
  incoterm?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  is1099Eligible?: PlatformCore.SearchBooleanField;
  isDefaultBilling?: PlatformCore.SearchBooleanField;
  isDefaultShipping?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isJobResourceVend?: PlatformCore.SearchBooleanField;
  isPerson?: PlatformCore.SearchBooleanField;
  laborCost?: PlatformCore.SearchDoubleField;
  language?: PlatformCore.SearchEnumMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  lastName?: PlatformCore.SearchStringField;
  level?: PlatformCore.SearchEnumMultiSelectField;
  middleName?: PlatformCore.SearchStringField;
  otherRelationships?: PlatformCore.SearchEnumMultiSelectField;
  payablesAccount?: PlatformCore.SearchMultiSelectField;
  pec?: PlatformCore.SearchStringField;
  permission?: PlatformCore.SearchEnumMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  phoneticName?: PlatformCore.SearchStringField;
  predConfidence?: PlatformCore.SearchDoubleField;
  predictedDays?: PlatformCore.SearchDoubleField;
  printTransactions?: PlatformCore.SearchBooleanField;
  purchaseOrderAmount?: PlatformCore.SearchDoubleField;
  purchaseOrderQuantity?: PlatformCore.SearchDoubleField;
  purchaseOrderQuantityDiff?: PlatformCore.SearchDoubleField;
  receiptAmount?: PlatformCore.SearchDoubleField;
  receiptQuantity?: PlatformCore.SearchDoubleField;
  receiptQuantityDiff?: PlatformCore.SearchDoubleField;
  salutation?: PlatformCore.SearchStringField;
  shipAddress?: PlatformCore.SearchStringField;
  state?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  taxIdNum?: PlatformCore.SearchStringField;
  timeApprover?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  unbilledOrders?: PlatformCore.SearchDoubleField;
  url?: PlatformCore.SearchStringField;
  vatRegNumber?: PlatformCore.SearchStringField;
  workCalendar?: PlatformCore.SearchMultiSelectField;
  zipCode?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: VendorSearchBasicProps) {
    super();
    this.accountNumber = props.accountNumber;
    this.address = props.address;
    this.addressee = props.addressee;
    this.addressLabel = props.addressLabel;
    this.addressPhone = props.addressPhone;
    this.attention = props.attention;
    this.balance = props.balance;
    this.billAddress = props.billAddress;
    this.category = props.category;
    this.city = props.city;
    this.comments = props.comments;
    this.contact = props.contact;
    this.country = props.country;
    this.county = props.county;
    this.creditLimit = props.creditLimit;
    this.currency = props.currency;
    this.currentExchangeRate = props.currentExchangeRate;
    this.dateCreated = props.dateCreated;
    this.defaultTaxReg = props.defaultTaxReg;
    this.defaultTaxRegText = props.defaultTaxRegText;
    this.eligibleForCommission = props.eligibleForCommission;
    this.email = props.email;
    this.emailPreference = props.emailPreference;
    this.emailTransactions = props.emailTransactions;
    this.entityId = props.entityId;
    this.expenseAccount = props.expenseAccount;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.fax = props.fax;
    this.faxTransactions = props.faxTransactions;
    this.firstName = props.firstName;
    this.fxBalance = props.fxBalance;
    this.fxUnbilledOrders = props.fxUnbilledOrders;
    this.giveAccess = props.giveAccess;
    this.globalSubscriptionStatus = props.globalSubscriptionStatus;
    this.group = props.group;
    this.hasDuplicates = props.hasDuplicates;
    this.image = props.image;
    this.incoterm = props.incoterm;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.is1099Eligible = props.is1099Eligible;
    this.isDefaultBilling = props.isDefaultBilling;
    this.isDefaultShipping = props.isDefaultShipping;
    this.isInactive = props.isInactive;
    this.isJobResourceVend = props.isJobResourceVend;
    this.isPerson = props.isPerson;
    this.laborCost = props.laborCost;
    this.language = props.language;
    this.lastModifiedDate = props.lastModifiedDate;
    this.lastName = props.lastName;
    this.level = props.level;
    this.middleName = props.middleName;
    this.otherRelationships = props.otherRelationships;
    this.payablesAccount = props.payablesAccount;
    this.pec = props.pec;
    this.permission = props.permission;
    this.phone = props.phone;
    this.phoneticName = props.phoneticName;
    this.predConfidence = props.predConfidence;
    this.predictedDays = props.predictedDays;
    this.printTransactions = props.printTransactions;
    this.purchaseOrderAmount = props.purchaseOrderAmount;
    this.purchaseOrderQuantity = props.purchaseOrderQuantity;
    this.purchaseOrderQuantityDiff = props.purchaseOrderQuantityDiff;
    this.receiptAmount = props.receiptAmount;
    this.receiptQuantity = props.receiptQuantity;
    this.receiptQuantityDiff = props.receiptQuantityDiff;
    this.salutation = props.salutation;
    this.shipAddress = props.shipAddress;
    this.state = props.state;
    this.subsidiary = props.subsidiary;
    this.taxIdNum = props.taxIdNum;
    this.timeApprover = props.timeApprover;
    this.title = props.title;
    this.unbilledOrders = props.unbilledOrders;
    this.url = props.url;
    this.vatRegNumber = props.vatRegNumber;
    this.workCalendar = props.workCalendar;
    this.zipCode = props.zipCode;
    this.customFieldList = props.customFieldList;
  }
}

export type ProjectTaskAssignmentSearchRowBasicProps = {
  actualWork?: PlatformCore.SearchColumnDoubleField[];
  cost?: PlatformCore.SearchColumnDoubleField[];
  costBase?: PlatformCore.SearchColumnDoubleField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  estimatedWork?: PlatformCore.SearchColumnDoubleField[];
  estimatedWorkBaseline?: PlatformCore.SearchColumnDoubleField[];
  grossProfit?: PlatformCore.SearchColumnDoubleField[];
  grossProfitBase?: PlatformCore.SearchColumnDoubleField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  price?: PlatformCore.SearchColumnDoubleField[];
  priceBase?: PlatformCore.SearchColumnDoubleField[];
  resource?: PlatformCore.SearchColumnSelectField[];
  resourceName?: PlatformCore.SearchColumnStringField[];
  serviceItem?: PlatformCore.SearchColumnStringField[];
  serviceItemDesc?: PlatformCore.SearchColumnStringField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  unitCost?: PlatformCore.SearchColumnDoubleField[];
  unitCostBase?: PlatformCore.SearchColumnDoubleField[];
  unitPrice?: PlatformCore.SearchColumnDoubleField[];
  unitPriceBase?: PlatformCore.SearchColumnDoubleField[];
  units?: PlatformCore.SearchColumnDoubleField[];
  workCalendar?: PlatformCore.SearchColumnSelectField[];
};

export class ProjectTaskAssignmentSearchRowBasic extends PlatformCore.SearchRowBasic {
  actualWork?: PlatformCore.SearchColumnDoubleField[];
  cost?: PlatformCore.SearchColumnDoubleField[];
  costBase?: PlatformCore.SearchColumnDoubleField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  estimatedWork?: PlatformCore.SearchColumnDoubleField[];
  estimatedWorkBaseline?: PlatformCore.SearchColumnDoubleField[];
  grossProfit?: PlatformCore.SearchColumnDoubleField[];
  grossProfitBase?: PlatformCore.SearchColumnDoubleField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  price?: PlatformCore.SearchColumnDoubleField[];
  priceBase?: PlatformCore.SearchColumnDoubleField[];
  resource?: PlatformCore.SearchColumnSelectField[];
  resourceName?: PlatformCore.SearchColumnStringField[];
  serviceItem?: PlatformCore.SearchColumnStringField[];
  serviceItemDesc?: PlatformCore.SearchColumnStringField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  unitCost?: PlatformCore.SearchColumnDoubleField[];
  unitCostBase?: PlatformCore.SearchColumnDoubleField[];
  unitPrice?: PlatformCore.SearchColumnDoubleField[];
  unitPriceBase?: PlatformCore.SearchColumnDoubleField[];
  units?: PlatformCore.SearchColumnDoubleField[];
  workCalendar?: PlatformCore.SearchColumnSelectField[];
  constructor(props: ProjectTaskAssignmentSearchRowBasicProps) {
    super();
    this.actualWork = props.actualWork;
    this.cost = props.cost;
    this.costBase = props.costBase;
    this.endDate = props.endDate;
    this.estimatedWork = props.estimatedWork;
    this.estimatedWorkBaseline = props.estimatedWorkBaseline;
    this.grossProfit = props.grossProfit;
    this.grossProfitBase = props.grossProfitBase;
    this.internalId = props.internalId;
    this.price = props.price;
    this.priceBase = props.priceBase;
    this.resource = props.resource;
    this.resourceName = props.resourceName;
    this.serviceItem = props.serviceItem;
    this.serviceItemDesc = props.serviceItemDesc;
    this.startDate = props.startDate;
    this.unitCost = props.unitCost;
    this.unitCostBase = props.unitCostBase;
    this.unitPrice = props.unitPrice;
    this.unitPriceBase = props.unitPriceBase;
    this.units = props.units;
    this.workCalendar = props.workCalendar;
  }
}

export type WinLossReasonSearchBasicProps = {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
};

export class WinLossReasonSearchBasic extends PlatformCore.SearchRecordBasic {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  constructor(props: WinLossReasonSearchBasicProps) {
    super();
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type UsageSearchRowBasicProps = {
  customer?: PlatformCore.SearchColumnSelectField[];
  date?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  item?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  quantity?: PlatformCore.SearchColumnDoubleField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionLine?: PlatformCore.SearchColumnSelectField[];
  subscriptionPlan?: PlatformCore.SearchColumnSelectField[];
};

export class UsageSearchRowBasic extends PlatformCore.SearchRowBasic {
  customer?: PlatformCore.SearchColumnSelectField[];
  date?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  item?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  quantity?: PlatformCore.SearchColumnDoubleField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionLine?: PlatformCore.SearchColumnSelectField[];
  subscriptionPlan?: PlatformCore.SearchColumnSelectField[];
  constructor(props: UsageSearchRowBasicProps) {
    super();
    this.customer = props.customer;
    this.date = props.date;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.item = props.item;
    this.memo = props.memo;
    this.quantity = props.quantity;
    this.subscription = props.subscription;
    this.subscriptionLine = props.subscriptionLine;
    this.subscriptionPlan = props.subscriptionPlan;
  }
}

export type PartnerCategorySearchBasicProps = {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  parent?: PlatformCore.SearchMultiSelectField;
};

export class PartnerCategorySearchBasic extends PlatformCore.SearchRecordBasic {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  parent?: PlatformCore.SearchMultiSelectField;
  constructor(props: PartnerCategorySearchBasicProps) {
    super();
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.parent = props.parent;
  }
}

export type InventoryNumberSearchBasicProps = {
  expirationDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  inventoryNumber?: PlatformCore.SearchStringField;
  isOnHand?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  location?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  quantityAvailable?: PlatformCore.SearchDoubleField;
  quantityInTransit?: PlatformCore.SearchDoubleField;
  quantityOnHand?: PlatformCore.SearchDoubleField;
  quantityOnOrder?: PlatformCore.SearchDoubleField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class InventoryNumberSearchBasic extends PlatformCore.SearchRecordBasic {
  expirationDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  inventoryNumber?: PlatformCore.SearchStringField;
  isOnHand?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  location?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  quantityAvailable?: PlatformCore.SearchDoubleField;
  quantityInTransit?: PlatformCore.SearchDoubleField;
  quantityOnHand?: PlatformCore.SearchDoubleField;
  quantityOnOrder?: PlatformCore.SearchDoubleField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: InventoryNumberSearchBasicProps) {
    super();
    this.expirationDate = props.expirationDate;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.inventoryNumber = props.inventoryNumber;
    this.isOnHand = props.isOnHand;
    this.item = props.item;
    this.location = props.location;
    this.memo = props.memo;
    this.quantityAvailable = props.quantityAvailable;
    this.quantityInTransit = props.quantityInTransit;
    this.quantityOnHand = props.quantityOnHand;
    this.quantityOnOrder = props.quantityOnOrder;
    this.customFieldList = props.customFieldList;
  }
}

export type RevRecScheduleSearchRowBasicProps = {
  accountingBook?: PlatformCore.SearchColumnSelectField[];
  amorStatus?: PlatformCore.SearchColumnEnumSelectField[];
  amorTemplate?: PlatformCore.SearchColumnStringField[];
  amortizedAmount?: PlatformCore.SearchColumnDoubleField[];
  amorType?: PlatformCore.SearchColumnEnumSelectField[];
  amount?: PlatformCore.SearchColumnDoubleField[];
  currency?: PlatformCore.SearchColumnStringField[];
  deferredAmount?: PlatformCore.SearchColumnDoubleField[];
  destAcct?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  initialAmt?: PlatformCore.SearchColumnDoubleField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isRecognized?: PlatformCore.SearchColumnBooleanField[];
  jeDoc?: PlatformCore.SearchColumnStringField[];
  lineSequenceNumber?: PlatformCore.SearchColumnLongField[];
  name?: PlatformCore.SearchColumnStringField[];
  nameUrl?: PlatformCore.SearchColumnStringField[];
  pctComplete?: PlatformCore.SearchColumnDoubleField[];
  pctRecognition?: PlatformCore.SearchColumnDoubleField[];
  periodOffset?: PlatformCore.SearchColumnLongField[];
  recurAmount?: PlatformCore.SearchColumnDoubleField[];
  recurFxAmount?: PlatformCore.SearchColumnDoubleField[];
  schedDate?: PlatformCore.SearchColumnDateField[];
  scheduleNumber?: PlatformCore.SearchColumnStringField[];
  sourceAcct?: PlatformCore.SearchColumnStringField[];
  srcDocLine?: PlatformCore.SearchColumnStringField[];
  srcTran?: PlatformCore.SearchColumnStringField[];
  srcTranPostPeriod?: PlatformCore.SearchColumnStringField[];
  startOffset?: PlatformCore.SearchColumnLongField[];
  useForeignAmounts?: PlatformCore.SearchColumnBooleanField[];
};

export class RevRecScheduleSearchRowBasic extends PlatformCore.SearchRowBasic {
  accountingBook?: PlatformCore.SearchColumnSelectField[];
  amorStatus?: PlatformCore.SearchColumnEnumSelectField[];
  amorTemplate?: PlatformCore.SearchColumnStringField[];
  amortizedAmount?: PlatformCore.SearchColumnDoubleField[];
  amorType?: PlatformCore.SearchColumnEnumSelectField[];
  amount?: PlatformCore.SearchColumnDoubleField[];
  currency?: PlatformCore.SearchColumnStringField[];
  deferredAmount?: PlatformCore.SearchColumnDoubleField[];
  destAcct?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  initialAmt?: PlatformCore.SearchColumnDoubleField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isRecognized?: PlatformCore.SearchColumnBooleanField[];
  jeDoc?: PlatformCore.SearchColumnStringField[];
  lineSequenceNumber?: PlatformCore.SearchColumnLongField[];
  name?: PlatformCore.SearchColumnStringField[];
  nameUrl?: PlatformCore.SearchColumnStringField[];
  pctComplete?: PlatformCore.SearchColumnDoubleField[];
  pctRecognition?: PlatformCore.SearchColumnDoubleField[];
  periodOffset?: PlatformCore.SearchColumnLongField[];
  recurAmount?: PlatformCore.SearchColumnDoubleField[];
  recurFxAmount?: PlatformCore.SearchColumnDoubleField[];
  schedDate?: PlatformCore.SearchColumnDateField[];
  scheduleNumber?: PlatformCore.SearchColumnStringField[];
  sourceAcct?: PlatformCore.SearchColumnStringField[];
  srcDocLine?: PlatformCore.SearchColumnStringField[];
  srcTran?: PlatformCore.SearchColumnStringField[];
  srcTranPostPeriod?: PlatformCore.SearchColumnStringField[];
  startOffset?: PlatformCore.SearchColumnLongField[];
  useForeignAmounts?: PlatformCore.SearchColumnBooleanField[];
  constructor(props: RevRecScheduleSearchRowBasicProps) {
    super();
    this.accountingBook = props.accountingBook;
    this.amorStatus = props.amorStatus;
    this.amorTemplate = props.amorTemplate;
    this.amortizedAmount = props.amortizedAmount;
    this.amorType = props.amorType;
    this.amount = props.amount;
    this.currency = props.currency;
    this.deferredAmount = props.deferredAmount;
    this.destAcct = props.destAcct;
    this.externalId = props.externalId;
    this.initialAmt = props.initialAmt;
    this.internalId = props.internalId;
    this.isRecognized = props.isRecognized;
    this.jeDoc = props.jeDoc;
    this.lineSequenceNumber = props.lineSequenceNumber;
    this.name = props.name;
    this.nameUrl = props.nameUrl;
    this.pctComplete = props.pctComplete;
    this.pctRecognition = props.pctRecognition;
    this.periodOffset = props.periodOffset;
    this.recurAmount = props.recurAmount;
    this.recurFxAmount = props.recurFxAmount;
    this.schedDate = props.schedDate;
    this.scheduleNumber = props.scheduleNumber;
    this.sourceAcct = props.sourceAcct;
    this.srcDocLine = props.srcDocLine;
    this.srcTran = props.srcTran;
    this.srcTranPostPeriod = props.srcTranPostPeriod;
    this.startOffset = props.startOffset;
    this.useForeignAmounts = props.useForeignAmounts;
  }
}

export type LandedCostProps = {
  landedCostDataList?: LandedCostDataList;
} & PlatformCore.RecordProps;

export class LandedCost extends PlatformCore.Record {
  landedCostDataList?: LandedCostDataList;
  constructor(props: LandedCostProps) {
    super(props);
    this.landedCostDataList = props.landedCostDataList;
  }
}

export type CostCategorySearchRowBasicProps = {
  account?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  itemCostType?: PlatformCore.SearchColumnEnumSelectField[];
  name?: PlatformCore.SearchColumnStringField[];
};

export class CostCategorySearchRowBasic extends PlatformCore.SearchRowBasic {
  account?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  itemCostType?: PlatformCore.SearchColumnEnumSelectField[];
  name?: PlatformCore.SearchColumnStringField[];
  constructor(props: CostCategorySearchRowBasicProps) {
    super();
    this.account = props.account;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.itemCostType = props.itemCostType;
    this.name = props.name;
  }
}

export type SiteCategorySearchRowBasicProps = {
  dateViewed?: PlatformCore.SearchColumnDateField[];
  description?: PlatformCore.SearchColumnStringField[];
  excludeFromSitemap?: PlatformCore.SearchColumnBooleanField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fullName?: PlatformCore.SearchColumnStringField[];
  hidden?: PlatformCore.SearchColumnBooleanField[];
  hits?: PlatformCore.SearchColumnLongField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  longDescription?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  pageTitle?: PlatformCore.SearchColumnStringField[];
  sitemapPriority?: PlatformCore.SearchColumnEnumSelectField[];
  urlComponent?: PlatformCore.SearchColumnStringField[];
};

export class SiteCategorySearchRowBasic extends PlatformCore.SearchRowBasic {
  dateViewed?: PlatformCore.SearchColumnDateField[];
  description?: PlatformCore.SearchColumnStringField[];
  excludeFromSitemap?: PlatformCore.SearchColumnBooleanField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fullName?: PlatformCore.SearchColumnStringField[];
  hidden?: PlatformCore.SearchColumnBooleanField[];
  hits?: PlatformCore.SearchColumnLongField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  longDescription?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  pageTitle?: PlatformCore.SearchColumnStringField[];
  sitemapPriority?: PlatformCore.SearchColumnEnumSelectField[];
  urlComponent?: PlatformCore.SearchColumnStringField[];
  constructor(props: SiteCategorySearchRowBasicProps) {
    super();
    this.dateViewed = props.dateViewed;
    this.description = props.description;
    this.excludeFromSitemap = props.excludeFromSitemap;
    this.externalId = props.externalId;
    this.fullName = props.fullName;
    this.hidden = props.hidden;
    this.hits = props.hits;
    this.internalId = props.internalId;
    this.longDescription = props.longDescription;
    this.name = props.name;
    this.pageTitle = props.pageTitle;
    this.sitemapPriority = props.sitemapPriority;
    this.urlComponent = props.urlComponent;
  }
}

export type CustomerCategorySearchBasicProps = {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
};

export class CustomerCategorySearchBasic extends PlatformCore.SearchRecordBasic {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  constructor(props: CustomerCategorySearchBasicProps) {
    super();
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type CampaignSearchRowBasicProps = {
  audience?: PlatformCore.SearchColumnSelectField[];
  baseCost?: PlatformCore.SearchColumnDoubleField[];
  campaignId?: PlatformCore.SearchColumnStringField[];
  category?: PlatformCore.SearchColumnSelectField[];
  channel?: PlatformCore.SearchColumnSelectField[];
  cost?: PlatformCore.SearchColumnDoubleField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  event?: PlatformCore.SearchColumnStringField[];
  executedDate?: PlatformCore.SearchColumnDateField[];
  expectedRevenue?: PlatformCore.SearchColumnDoubleField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  family?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isSalesCampaign?: PlatformCore.SearchColumnBooleanField[];
  item?: PlatformCore.SearchColumnSelectField[];
  keyword?: PlatformCore.SearchColumnStringField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  managerRole?: PlatformCore.SearchColumnSelectField[];
  message?: PlatformCore.SearchColumnStringField[];
  offer?: PlatformCore.SearchColumnSelectField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  promoCode?: PlatformCore.SearchColumnStringField[];
  recipient?: PlatformCore.SearchColumnSelectField[];
  response?: PlatformCore.SearchColumnEnumSelectField[];
  responseCategory?: PlatformCore.SearchColumnEnumSelectField[];
  responseCode?: PlatformCore.SearchColumnLongField[];
  responseDate?: PlatformCore.SearchColumnDateField[];
  responseNotes?: PlatformCore.SearchColumnStringField[];
  revenue?: PlatformCore.SearchColumnDoubleField[];
  roi?: PlatformCore.SearchColumnDoubleField[];
  scheduledDate?: PlatformCore.SearchColumnDateField[];
  searchEngine?: PlatformCore.SearchColumnSelectField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  status?: PlatformCore.SearchColumnEnumSelectField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  url?: PlatformCore.SearchColumnStringField[];
  vertical?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class CampaignSearchRowBasic extends PlatformCore.SearchRowBasic {
  audience?: PlatformCore.SearchColumnSelectField[];
  baseCost?: PlatformCore.SearchColumnDoubleField[];
  campaignId?: PlatformCore.SearchColumnStringField[];
  category?: PlatformCore.SearchColumnSelectField[];
  channel?: PlatformCore.SearchColumnSelectField[];
  cost?: PlatformCore.SearchColumnDoubleField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  event?: PlatformCore.SearchColumnStringField[];
  executedDate?: PlatformCore.SearchColumnDateField[];
  expectedRevenue?: PlatformCore.SearchColumnDoubleField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  family?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isSalesCampaign?: PlatformCore.SearchColumnBooleanField[];
  item?: PlatformCore.SearchColumnSelectField[];
  keyword?: PlatformCore.SearchColumnStringField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  managerRole?: PlatformCore.SearchColumnSelectField[];
  message?: PlatformCore.SearchColumnStringField[];
  offer?: PlatformCore.SearchColumnSelectField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  promoCode?: PlatformCore.SearchColumnStringField[];
  recipient?: PlatformCore.SearchColumnSelectField[];
  response?: PlatformCore.SearchColumnEnumSelectField[];
  responseCategory?: PlatformCore.SearchColumnEnumSelectField[];
  responseCode?: PlatformCore.SearchColumnLongField[];
  responseDate?: PlatformCore.SearchColumnDateField[];
  responseNotes?: PlatformCore.SearchColumnStringField[];
  revenue?: PlatformCore.SearchColumnDoubleField[];
  roi?: PlatformCore.SearchColumnDoubleField[];
  scheduledDate?: PlatformCore.SearchColumnDateField[];
  searchEngine?: PlatformCore.SearchColumnSelectField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  status?: PlatformCore.SearchColumnEnumSelectField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  url?: PlatformCore.SearchColumnStringField[];
  vertical?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: CampaignSearchRowBasicProps) {
    super();
    this.audience = props.audience;
    this.baseCost = props.baseCost;
    this.campaignId = props.campaignId;
    this.category = props.category;
    this.channel = props.channel;
    this.cost = props.cost;
    this.createdDate = props.createdDate;
    this.endDate = props.endDate;
    this.event = props.event;
    this.executedDate = props.executedDate;
    this.expectedRevenue = props.expectedRevenue;
    this.externalId = props.externalId;
    this.family = props.family;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.isSalesCampaign = props.isSalesCampaign;
    this.item = props.item;
    this.keyword = props.keyword;
    this.lastModifiedDate = props.lastModifiedDate;
    this.managerRole = props.managerRole;
    this.message = props.message;
    this.offer = props.offer;
    this.owner = props.owner;
    this.promoCode = props.promoCode;
    this.recipient = props.recipient;
    this.response = props.response;
    this.responseCategory = props.responseCategory;
    this.responseCode = props.responseCode;
    this.responseDate = props.responseDate;
    this.responseNotes = props.responseNotes;
    this.revenue = props.revenue;
    this.roi = props.roi;
    this.scheduledDate = props.scheduledDate;
    this.searchEngine = props.searchEngine;
    this.startDate = props.startDate;
    this.status = props.status;
    this.subscription = props.subscription;
    this.title = props.title;
    this.url = props.url;
    this.vertical = props.vertical;
    this.customFieldList = props.customFieldList;
  }
}

export type PayrollItemSearchRowBasicProps = {
  expenseAccount?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  itemTypeNoHierarchy?: PlatformCore.SearchColumnStringField[];
  liabilityAccount?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  subsidiary?: PlatformCore.SearchColumnStringField[];
  vendor?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class PayrollItemSearchRowBasic extends PlatformCore.SearchRowBasic {
  expenseAccount?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  itemTypeNoHierarchy?: PlatformCore.SearchColumnStringField[];
  liabilityAccount?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  subsidiary?: PlatformCore.SearchColumnStringField[];
  vendor?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: PayrollItemSearchRowBasicProps) {
    super();
    this.expenseAccount = props.expenseAccount;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.itemTypeNoHierarchy = props.itemTypeNoHierarchy;
    this.liabilityAccount = props.liabilityAccount;
    this.name = props.name;
    this.subsidiary = props.subsidiary;
    this.vendor = props.vendor;
    this.customFieldList = props.customFieldList;
  }
}

export type TimeSheetSearchBasicProps = {
  approvalStatus?: PlatformCore.SearchMultiSelectField;
  employee?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  id?: PlatformCore.SearchLongField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  timeSheetDate?: PlatformCore.SearchDateField;
  totalHours?: PlatformCore.SearchDoubleField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class TimeSheetSearchBasic extends PlatformCore.SearchRecordBasic {
  approvalStatus?: PlatformCore.SearchMultiSelectField;
  employee?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  id?: PlatformCore.SearchLongField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  timeSheetDate?: PlatformCore.SearchDateField;
  totalHours?: PlatformCore.SearchDoubleField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: TimeSheetSearchBasicProps) {
    super();
    this.approvalStatus = props.approvalStatus;
    this.employee = props.employee;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.id = props.id;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.timeSheetDate = props.timeSheetDate;
    this.totalHours = props.totalHours;
    this.customFieldList = props.customFieldList;
  }
}

export type TaxDetailsProps = {
  taxDetailsReference?: string;
  lineType?: string;
  lineName?: string;
  netAmount?: number;
  grossAmount?: number;
  taxType?: PlatformCore.RecordRef;
  taxCode?: PlatformCore.RecordRef;
  taxBasis?: number;
  taxRate?: number;
  taxAmount?: number;
  calcDetail?: string;
};

export class TaxDetails {
  taxDetailsReference?: string;
  lineType?: string;
  lineName?: string;
  netAmount?: number;
  grossAmount?: number;
  taxType?: PlatformCore.RecordRef;
  taxCode?: PlatformCore.RecordRef;
  taxBasis?: number;
  taxRate?: number;
  taxAmount?: number;
  calcDetail?: string;
  constructor(props: TaxDetailsProps) {
    this.taxDetailsReference = props.taxDetailsReference;
    this.lineType = props.lineType;
    this.lineName = props.lineName;
    this.netAmount = props.netAmount;
    this.grossAmount = props.grossAmount;
    this.taxType = props.taxType;
    this.taxCode = props.taxCode;
    this.taxBasis = props.taxBasis;
    this.taxRate = props.taxRate;
    this.taxAmount = props.taxAmount;
    this.calcDetail = props.calcDetail;
  }
}

export type RecurrenceDowMaskListProps = {
  recurrenceDowMask: PlatformCommonTypes.RecurrenceDow[];
};

export class RecurrenceDowMaskList {
  recurrenceDowMask: PlatformCommonTypes.RecurrenceDow[];
  constructor(props: RecurrenceDowMaskListProps) {
    this.recurrenceDowMask = props.recurrenceDowMask;
  }
}

export type PriceLevelSearchRowBasicProps = {
  discountPct?: PlatformCore.SearchColumnDoubleField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isOnline?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
};

export class PriceLevelSearchRowBasic extends PlatformCore.SearchRowBasic {
  discountPct?: PlatformCore.SearchColumnDoubleField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isOnline?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  constructor(props: PriceLevelSearchRowBasicProps) {
    super();
    this.discountPct = props.discountPct;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.isOnline = props.isOnline;
    this.name = props.name;
  }
}

export type MseSubsidiarySearchBasicProps = {
  accountingBook?: PlatformCore.SearchMultiSelectField;
  accountingBookCurrency?: PlatformCore.SearchMultiSelectField;
  address?: PlatformCore.SearchStringField;
  city?: PlatformCore.SearchStringField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  currency?: PlatformCore.SearchMultiSelectField;
  effectiveFrom?: PlatformCore.SearchDateField;
  email?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isElimination?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  legalName?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
  nameNoHierarchy?: PlatformCore.SearchStringField;
  nexus?: PlatformCore.SearchMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  primary?: PlatformCore.SearchBooleanField;
  purchaseOrderAmount?: PlatformCore.SearchDoubleField;
  purchaseOrderQuantity?: PlatformCore.SearchDoubleField;
  purchaseOrderQuantityDiff?: PlatformCore.SearchDoubleField;
  receiptAmount?: PlatformCore.SearchDoubleField;
  receiptQuantity?: PlatformCore.SearchDoubleField;
  receiptQuantityDiff?: PlatformCore.SearchDoubleField;
  state?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  taxEngine?: PlatformCore.SearchMultiSelectField;
  taxIdNum?: PlatformCore.SearchStringField;
  taxRegistrationNumber?: PlatformCore.SearchStringField;
  tranPrefix?: PlatformCore.SearchStringField;
  url?: PlatformCore.SearchStringField;
  validUntil?: PlatformCore.SearchDateField;
  zip?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class MseSubsidiarySearchBasic extends PlatformCore.SearchRecordBasic {
  accountingBook?: PlatformCore.SearchMultiSelectField;
  accountingBookCurrency?: PlatformCore.SearchMultiSelectField;
  address?: PlatformCore.SearchStringField;
  city?: PlatformCore.SearchStringField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  currency?: PlatformCore.SearchMultiSelectField;
  effectiveFrom?: PlatformCore.SearchDateField;
  email?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isElimination?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  legalName?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
  nameNoHierarchy?: PlatformCore.SearchStringField;
  nexus?: PlatformCore.SearchMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  primary?: PlatformCore.SearchBooleanField;
  purchaseOrderAmount?: PlatformCore.SearchDoubleField;
  purchaseOrderQuantity?: PlatformCore.SearchDoubleField;
  purchaseOrderQuantityDiff?: PlatformCore.SearchDoubleField;
  receiptAmount?: PlatformCore.SearchDoubleField;
  receiptQuantity?: PlatformCore.SearchDoubleField;
  receiptQuantityDiff?: PlatformCore.SearchDoubleField;
  state?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  taxEngine?: PlatformCore.SearchMultiSelectField;
  taxIdNum?: PlatformCore.SearchStringField;
  taxRegistrationNumber?: PlatformCore.SearchStringField;
  tranPrefix?: PlatformCore.SearchStringField;
  url?: PlatformCore.SearchStringField;
  validUntil?: PlatformCore.SearchDateField;
  zip?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: MseSubsidiarySearchBasicProps) {
    super();
    this.accountingBook = props.accountingBook;
    this.accountingBookCurrency = props.accountingBookCurrency;
    this.address = props.address;
    this.city = props.city;
    this.country = props.country;
    this.currency = props.currency;
    this.effectiveFrom = props.effectiveFrom;
    this.email = props.email;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.fax = props.fax;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isElimination = props.isElimination;
    this.isInactive = props.isInactive;
    this.legalName = props.legalName;
    this.name = props.name;
    this.nameNoHierarchy = props.nameNoHierarchy;
    this.nexus = props.nexus;
    this.phone = props.phone;
    this.primary = props.primary;
    this.purchaseOrderAmount = props.purchaseOrderAmount;
    this.purchaseOrderQuantity = props.purchaseOrderQuantity;
    this.purchaseOrderQuantityDiff = props.purchaseOrderQuantityDiff;
    this.receiptAmount = props.receiptAmount;
    this.receiptQuantity = props.receiptQuantity;
    this.receiptQuantityDiff = props.receiptQuantityDiff;
    this.state = props.state;
    this.subsidiary = props.subsidiary;
    this.taxEngine = props.taxEngine;
    this.taxIdNum = props.taxIdNum;
    this.taxRegistrationNumber = props.taxRegistrationNumber;
    this.tranPrefix = props.tranPrefix;
    this.url = props.url;
    this.validUntil = props.validUntil;
    this.zip = props.zip;
    this.customFieldList = props.customFieldList;
  }
}

export type FairValuePriceSearchBasicProps = {
  currency?: PlatformCore.SearchMultiSelectField;
  endDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fairValue?: PlatformCore.SearchDoubleField;
  fairValueFormula?: PlatformCore.SearchMultiSelectField;
  fairValueRangePolicy?: PlatformCore.SearchEnumMultiSelectField;
  highValue?: PlatformCore.SearchDoubleField;
  highValuePercent?: PlatformCore.SearchDoubleField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isVsoePrice?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  itemRevenueCategory?: PlatformCore.SearchMultiSelectField;
  lowValue?: PlatformCore.SearchDoubleField;
  lowValuePercent?: PlatformCore.SearchDoubleField;
  startDate?: PlatformCore.SearchDateField;
  unitsType?: PlatformCore.SearchMultiSelectField;
};

export class FairValuePriceSearchBasic extends PlatformCore.SearchRecordBasic {
  currency?: PlatformCore.SearchMultiSelectField;
  endDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fairValue?: PlatformCore.SearchDoubleField;
  fairValueFormula?: PlatformCore.SearchMultiSelectField;
  fairValueRangePolicy?: PlatformCore.SearchEnumMultiSelectField;
  highValue?: PlatformCore.SearchDoubleField;
  highValuePercent?: PlatformCore.SearchDoubleField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isVsoePrice?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  itemRevenueCategory?: PlatformCore.SearchMultiSelectField;
  lowValue?: PlatformCore.SearchDoubleField;
  lowValuePercent?: PlatformCore.SearchDoubleField;
  startDate?: PlatformCore.SearchDateField;
  unitsType?: PlatformCore.SearchMultiSelectField;
  constructor(props: FairValuePriceSearchBasicProps) {
    super();
    this.currency = props.currency;
    this.endDate = props.endDate;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.fairValue = props.fairValue;
    this.fairValueFormula = props.fairValueFormula;
    this.fairValueRangePolicy = props.fairValueRangePolicy;
    this.highValue = props.highValue;
    this.highValuePercent = props.highValuePercent;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isVsoePrice = props.isVsoePrice;
    this.item = props.item;
    this.itemRevenueCategory = props.itemRevenueCategory;
    this.lowValue = props.lowValue;
    this.lowValuePercent = props.lowValuePercent;
    this.startDate = props.startDate;
    this.unitsType = props.unitsType;
  }
}

export type EntityGroupSearchRowBasicProps = {
  email?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  groupName?: PlatformCore.SearchColumnStringField[];
  groupType?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isDynamic?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isManufacturingWorkCenter?: PlatformCore.SearchColumnBooleanField[];
  isPrivate?: PlatformCore.SearchColumnBooleanField[];
  laborResources?: PlatformCore.SearchColumnDoubleField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  machineResources?: PlatformCore.SearchColumnDoubleField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  savedSearch?: PlatformCore.SearchColumnStringField[];
  size?: PlatformCore.SearchColumnLongField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  workCalendar?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class EntityGroupSearchRowBasic extends PlatformCore.SearchRowBasic {
  email?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  groupName?: PlatformCore.SearchColumnStringField[];
  groupType?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isDynamic?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isManufacturingWorkCenter?: PlatformCore.SearchColumnBooleanField[];
  isPrivate?: PlatformCore.SearchColumnBooleanField[];
  laborResources?: PlatformCore.SearchColumnDoubleField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  machineResources?: PlatformCore.SearchColumnDoubleField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  savedSearch?: PlatformCore.SearchColumnStringField[];
  size?: PlatformCore.SearchColumnLongField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  workCalendar?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: EntityGroupSearchRowBasicProps) {
    super();
    this.email = props.email;
    this.externalId = props.externalId;
    this.groupName = props.groupName;
    this.groupType = props.groupType;
    this.internalId = props.internalId;
    this.isDynamic = props.isDynamic;
    this.isInactive = props.isInactive;
    this.isManufacturingWorkCenter = props.isManufacturingWorkCenter;
    this.isPrivate = props.isPrivate;
    this.laborResources = props.laborResources;
    this.lastModifiedDate = props.lastModifiedDate;
    this.machineResources = props.machineResources;
    this.owner = props.owner;
    this.savedSearch = props.savedSearch;
    this.size = props.size;
    this.subsidiary = props.subsidiary;
    this.workCalendar = props.workCalendar;
    this.customFieldList = props.customFieldList;
  }
}

export type SalesTaxItemSearchRowBasicProps = {
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  itemId?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  taxType?: PlatformCore.SearchColumnSelectField[];
};

export class SalesTaxItemSearchRowBasic extends PlatformCore.SearchRowBasic {
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  itemId?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  taxType?: PlatformCore.SearchColumnSelectField[];
  constructor(props: SalesTaxItemSearchRowBasicProps) {
    super();
    this.description = props.description;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.itemId = props.itemId;
    this.name = props.name;
    this.taxType = props.taxType;
  }
}

export type PricingGroupSearchRowBasicProps = {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
};

export class PricingGroupSearchRowBasic extends PlatformCore.SearchRowBasic {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  constructor(props: PricingGroupSearchRowBasicProps) {
    super();
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type IssueSearchBasicProps = {
  ageInMonths?: PlatformCore.SearchLongField;
  assigned?: PlatformCore.SearchMultiSelectField;
  buildBroken?: PlatformCore.SearchMultiSelectField;
  buildBrokenName?: PlatformCore.SearchStringField;
  buildFixed?: PlatformCore.SearchMultiSelectField;
  buildFixedName?: PlatformCore.SearchStringField;
  buildTarget?: PlatformCore.SearchMultiSelectField;
  buildTargetName?: PlatformCore.SearchStringField;
  caseCount?: PlatformCore.SearchLongField;
  caseNumber?: PlatformCore.SearchStringField;
  closedDate?: PlatformCore.SearchDateField;
  createdDate?: PlatformCore.SearchDateField;
  dateReleased?: PlatformCore.SearchDateField;
  details?: PlatformCore.SearchStringField;
  duplicateOf?: PlatformCore.SearchMultiSelectField;
  eFix?: PlatformCore.SearchBooleanField;
  employeeOrTeam?: PlatformCore.SearchMultiSelectField;
  eventStatus?: PlatformCore.SearchEnumMultiSelectField;
  externalAbstract?: PlatformCore.SearchStringField;
  externalDetails?: PlatformCore.SearchStringField;
  externalFixedIn?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  externalStatus?: PlatformCore.SearchMultiSelectField;
  fixed?: PlatformCore.SearchDateField;
  fixedBy?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isOwner?: PlatformCore.SearchBooleanField;
  isReviewed?: PlatformCore.SearchBooleanField;
  isShowStopper?: PlatformCore.SearchBooleanField;
  issueAbstract?: PlatformCore.SearchStringField;
  issueNumber?: PlatformCore.SearchStringField;
  item?: PlatformCore.SearchMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  module?: PlatformCore.SearchMultiSelectField;
  number?: PlatformCore.SearchLongField;
  originalFixedIn?: PlatformCore.SearchStringField;
  priority?: PlatformCore.SearchMultiSelectField;
  product?: PlatformCore.SearchMultiSelectField;
  productTeam?: PlatformCore.SearchMultiSelectField;
  relatedIssue?: PlatformCore.SearchMultiSelectField;
  relationship?: PlatformCore.SearchEnumMultiSelectField;
  relationshipComment?: PlatformCore.SearchStringField;
  reportedBy?: PlatformCore.SearchMultiSelectField;
  reproduce?: PlatformCore.SearchMultiSelectField;
  resolved?: PlatformCore.SearchDateField;
  resolvedBy?: PlatformCore.SearchMultiSelectField;
  reviewer?: PlatformCore.SearchMultiSelectField;
  severity?: PlatformCore.SearchMultiSelectField;
  source?: PlatformCore.SearchEnumMultiSelectField;
  status?: PlatformCore.SearchMultiSelectField;
  tags?: PlatformCore.SearchMultiSelectField;
  tracking?: PlatformCore.SearchBooleanField;
  type?: PlatformCore.SearchMultiSelectField;
  userType?: PlatformCore.SearchMultiSelectField;
  versionBroken?: PlatformCore.SearchMultiSelectField;
  versionFixed?: PlatformCore.SearchMultiSelectField;
  versionTarget?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class IssueSearchBasic extends PlatformCore.SearchRecordBasic {
  ageInMonths?: PlatformCore.SearchLongField;
  assigned?: PlatformCore.SearchMultiSelectField;
  buildBroken?: PlatformCore.SearchMultiSelectField;
  buildBrokenName?: PlatformCore.SearchStringField;
  buildFixed?: PlatformCore.SearchMultiSelectField;
  buildFixedName?: PlatformCore.SearchStringField;
  buildTarget?: PlatformCore.SearchMultiSelectField;
  buildTargetName?: PlatformCore.SearchStringField;
  caseCount?: PlatformCore.SearchLongField;
  caseNumber?: PlatformCore.SearchStringField;
  closedDate?: PlatformCore.SearchDateField;
  createdDate?: PlatformCore.SearchDateField;
  dateReleased?: PlatformCore.SearchDateField;
  details?: PlatformCore.SearchStringField;
  duplicateOf?: PlatformCore.SearchMultiSelectField;
  eFix?: PlatformCore.SearchBooleanField;
  employeeOrTeam?: PlatformCore.SearchMultiSelectField;
  eventStatus?: PlatformCore.SearchEnumMultiSelectField;
  externalAbstract?: PlatformCore.SearchStringField;
  externalDetails?: PlatformCore.SearchStringField;
  externalFixedIn?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  externalStatus?: PlatformCore.SearchMultiSelectField;
  fixed?: PlatformCore.SearchDateField;
  fixedBy?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isOwner?: PlatformCore.SearchBooleanField;
  isReviewed?: PlatformCore.SearchBooleanField;
  isShowStopper?: PlatformCore.SearchBooleanField;
  issueAbstract?: PlatformCore.SearchStringField;
  issueNumber?: PlatformCore.SearchStringField;
  item?: PlatformCore.SearchMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  module?: PlatformCore.SearchMultiSelectField;
  number?: PlatformCore.SearchLongField;
  originalFixedIn?: PlatformCore.SearchStringField;
  priority?: PlatformCore.SearchMultiSelectField;
  product?: PlatformCore.SearchMultiSelectField;
  productTeam?: PlatformCore.SearchMultiSelectField;
  relatedIssue?: PlatformCore.SearchMultiSelectField;
  relationship?: PlatformCore.SearchEnumMultiSelectField;
  relationshipComment?: PlatformCore.SearchStringField;
  reportedBy?: PlatformCore.SearchMultiSelectField;
  reproduce?: PlatformCore.SearchMultiSelectField;
  resolved?: PlatformCore.SearchDateField;
  resolvedBy?: PlatformCore.SearchMultiSelectField;
  reviewer?: PlatformCore.SearchMultiSelectField;
  severity?: PlatformCore.SearchMultiSelectField;
  source?: PlatformCore.SearchEnumMultiSelectField;
  status?: PlatformCore.SearchMultiSelectField;
  tags?: PlatformCore.SearchMultiSelectField;
  tracking?: PlatformCore.SearchBooleanField;
  type?: PlatformCore.SearchMultiSelectField;
  userType?: PlatformCore.SearchMultiSelectField;
  versionBroken?: PlatformCore.SearchMultiSelectField;
  versionFixed?: PlatformCore.SearchMultiSelectField;
  versionTarget?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: IssueSearchBasicProps) {
    super();
    this.ageInMonths = props.ageInMonths;
    this.assigned = props.assigned;
    this.buildBroken = props.buildBroken;
    this.buildBrokenName = props.buildBrokenName;
    this.buildFixed = props.buildFixed;
    this.buildFixedName = props.buildFixedName;
    this.buildTarget = props.buildTarget;
    this.buildTargetName = props.buildTargetName;
    this.caseCount = props.caseCount;
    this.caseNumber = props.caseNumber;
    this.closedDate = props.closedDate;
    this.createdDate = props.createdDate;
    this.dateReleased = props.dateReleased;
    this.details = props.details;
    this.duplicateOf = props.duplicateOf;
    this.eFix = props.eFix;
    this.employeeOrTeam = props.employeeOrTeam;
    this.eventStatus = props.eventStatus;
    this.externalAbstract = props.externalAbstract;
    this.externalDetails = props.externalDetails;
    this.externalFixedIn = props.externalFixedIn;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.externalStatus = props.externalStatus;
    this.fixed = props.fixed;
    this.fixedBy = props.fixedBy;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isOwner = props.isOwner;
    this.isReviewed = props.isReviewed;
    this.isShowStopper = props.isShowStopper;
    this.issueAbstract = props.issueAbstract;
    this.issueNumber = props.issueNumber;
    this.item = props.item;
    this.lastModifiedDate = props.lastModifiedDate;
    this.module = props.module;
    this.number = props.number;
    this.originalFixedIn = props.originalFixedIn;
    this.priority = props.priority;
    this.product = props.product;
    this.productTeam = props.productTeam;
    this.relatedIssue = props.relatedIssue;
    this.relationship = props.relationship;
    this.relationshipComment = props.relationshipComment;
    this.reportedBy = props.reportedBy;
    this.reproduce = props.reproduce;
    this.resolved = props.resolved;
    this.resolvedBy = props.resolvedBy;
    this.reviewer = props.reviewer;
    this.severity = props.severity;
    this.source = props.source;
    this.status = props.status;
    this.tags = props.tags;
    this.tracking = props.tracking;
    this.type = props.type;
    this.userType = props.userType;
    this.versionBroken = props.versionBroken;
    this.versionFixed = props.versionFixed;
    this.versionTarget = props.versionTarget;
    this.customFieldList = props.customFieldList;
  }
}

export type CustomerStatusSearchBasicProps = {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  includeInLeadReports?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  probability?: PlatformCore.SearchDoubleField;
};

export class CustomerStatusSearchBasic extends PlatformCore.SearchRecordBasic {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  includeInLeadReports?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  probability?: PlatformCore.SearchDoubleField;
  constructor(props: CustomerStatusSearchBasicProps) {
    super();
    this.description = props.description;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.includeInLeadReports = props.includeInLeadReports;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.probability = props.probability;
  }
}

export type EmployeeSearchBasicProps = {
  address?: PlatformCore.SearchStringField;
  addressee?: PlatformCore.SearchStringField;
  addressLabel?: PlatformCore.SearchStringField;
  addressPhone?: PlatformCore.SearchStringField;
  alienNumber?: PlatformCore.SearchStringField;
  allocation?: PlatformCore.SearchDoubleField;
  anniversary?: PlatformCore.SearchDateField;
  approvalLimit?: PlatformCore.SearchDoubleField;
  approver?: PlatformCore.SearchMultiSelectField;
  attention?: PlatformCore.SearchStringField;
  authWorkDate?: PlatformCore.SearchDateField;
  baseWage?: PlatformCore.SearchDoubleField;
  baseWageType?: PlatformCore.SearchEnumMultiSelectField;
  billAddress?: PlatformCore.SearchStringField;
  billingClass?: PlatformCore.SearchMultiSelectField;
  birthDate?: PlatformCore.SearchDateField;
  birthDay?: PlatformCore.SearchDateField;
  cContribution?: PlatformCore.SearchMultiSelectField;
  city?: PlatformCore.SearchStringField;
  clazz?: PlatformCore.SearchMultiSelectField;
  comments?: PlatformCore.SearchStringField;
  commissionPlan?: PlatformCore.SearchMultiSelectField;
  compensationCurrency?: PlatformCore.SearchEnumMultiSelectField;
  concurrentWebServicesUser?: PlatformCore.SearchBooleanField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  dateCreated?: PlatformCore.SearchDateField;
  deduction?: PlatformCore.SearchMultiSelectField;
  defaultAcctCorpCardExp?: PlatformCore.SearchMultiSelectField;
  defaultExpenseReportCurrency?: PlatformCore.SearchMultiSelectField;
  defaultTaxReg?: PlatformCore.SearchMultiSelectField;
  defaultTaxRegText?: PlatformCore.SearchStringField;
  department?: PlatformCore.SearchMultiSelectField;
  earning?: PlatformCore.SearchMultiSelectField;
  education?: PlatformCore.SearchMultiSelectField;
  eligibleForCommission?: PlatformCore.SearchBooleanField;
  email?: PlatformCore.SearchStringField;
  employeeStatus?: PlatformCore.SearchMultiSelectField;
  employeeType?: PlatformCore.SearchMultiSelectField;
  employeeTypeKpi?: PlatformCore.SearchBooleanField;
  entityId?: PlatformCore.SearchStringField;
  ethnicity?: PlatformCore.SearchMultiSelectField;
  expenseLimit?: PlatformCore.SearchDoubleField;
  expenseReportCurrency?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  firstName?: PlatformCore.SearchStringField;
  gender?: PlatformCore.SearchEnumMultiSelectField;
  giveAccess?: PlatformCore.SearchBooleanField;
  globalSubscriptionStatus?: PlatformCore.SearchEnumMultiSelectField;
  group?: PlatformCore.SearchMultiSelectField;
  hireDate?: PlatformCore.SearchDateField;
  i9Verified?: PlatformCore.SearchBooleanField;
  image?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDefaultBilling?: PlatformCore.SearchBooleanField;
  isDefaultShipping?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isJobResource?: PlatformCore.SearchBooleanField;
  isTemplate?: PlatformCore.SearchBooleanField;
  job?: PlatformCore.SearchMultiSelectField;
  jobDescription?: PlatformCore.SearchStringField;
  laborCost?: PlatformCore.SearchDoubleField;
  language?: PlatformCore.SearchEnumMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  lastName?: PlatformCore.SearchStringField;
  lastPaidDate?: PlatformCore.SearchDateField;
  lastReviewDate?: PlatformCore.SearchDateField;
  level?: PlatformCore.SearchEnumMultiSelectField;
  location?: PlatformCore.SearchMultiSelectField;
  maritalStatus?: PlatformCore.SearchMultiSelectField;
  middleName?: PlatformCore.SearchStringField;
  nextReviewDate?: PlatformCore.SearchDateField;
  offlineAccess?: PlatformCore.SearchBooleanField;
  payFrequency?: PlatformCore.SearchEnumMultiSelectField;
  permChangeDate?: PlatformCore.SearchDateField;
  permission?: PlatformCore.SearchEnumMultiSelectField;
  permissionChange?: PlatformCore.SearchEnumMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  phoneticName?: PlatformCore.SearchStringField;
  positionTitle?: PlatformCore.SearchMultiSelectField;
  primaryEarningAmount?: PlatformCore.SearchDoubleField;
  primaryEarningItem?: PlatformCore.SearchStringField;
  primaryEarningType?: PlatformCore.SearchStringField;
  purchaseOrderApprovalLimit?: PlatformCore.SearchDoubleField;
  purchaseOrderApprover?: PlatformCore.SearchMultiSelectField;
  purchaseOrderLimit?: PlatformCore.SearchDoubleField;
  releaseDate?: PlatformCore.SearchDateField;
  residentStatus?: PlatformCore.SearchMultiSelectField;
  role?: PlatformCore.SearchMultiSelectField;
  roleChange?: PlatformCore.SearchMultiSelectField;
  roleChangeDate?: PlatformCore.SearchDateField;
  salesRep?: PlatformCore.SearchBooleanField;
  salesRole?: PlatformCore.SearchMultiSelectField;
  salutation?: PlatformCore.SearchStringField;
  socialSecurityNumber?: PlatformCore.SearchStringField;
  startDateTimeOffCalc?: PlatformCore.SearchDateField;
  state?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  supervisor?: PlatformCore.SearchMultiSelectField;
  supportRep?: PlatformCore.SearchBooleanField;
  terminationCategory?: PlatformCore.SearchEnumMultiSelectField;
  terminationDetails?: PlatformCore.SearchStringField;
  terminationReason?: PlatformCore.SearchMultiSelectField;
  terminationRegretted?: PlatformCore.SearchEnumMultiSelectField;
  timeApprover?: PlatformCore.SearchMultiSelectField;
  timeOffPlan?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  usePerquest?: PlatformCore.SearchBooleanField;
  useTimeData?: PlatformCore.SearchBooleanField;
  visaExpDate?: PlatformCore.SearchDateField;
  visaType?: PlatformCore.SearchMultiSelectField;
  withholding?: PlatformCore.SearchMultiSelectField;
  workCalendar?: PlatformCore.SearchMultiSelectField;
  workplace?: PlatformCore.SearchMultiSelectField;
  zipCode?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class EmployeeSearchBasic extends PlatformCore.SearchRecordBasic {
  address?: PlatformCore.SearchStringField;
  addressee?: PlatformCore.SearchStringField;
  addressLabel?: PlatformCore.SearchStringField;
  addressPhone?: PlatformCore.SearchStringField;
  alienNumber?: PlatformCore.SearchStringField;
  allocation?: PlatformCore.SearchDoubleField;
  anniversary?: PlatformCore.SearchDateField;
  approvalLimit?: PlatformCore.SearchDoubleField;
  approver?: PlatformCore.SearchMultiSelectField;
  attention?: PlatformCore.SearchStringField;
  authWorkDate?: PlatformCore.SearchDateField;
  baseWage?: PlatformCore.SearchDoubleField;
  baseWageType?: PlatformCore.SearchEnumMultiSelectField;
  billAddress?: PlatformCore.SearchStringField;
  billingClass?: PlatformCore.SearchMultiSelectField;
  birthDate?: PlatformCore.SearchDateField;
  birthDay?: PlatformCore.SearchDateField;
  cContribution?: PlatformCore.SearchMultiSelectField;
  city?: PlatformCore.SearchStringField;
  clazz?: PlatformCore.SearchMultiSelectField;
  comments?: PlatformCore.SearchStringField;
  commissionPlan?: PlatformCore.SearchMultiSelectField;
  compensationCurrency?: PlatformCore.SearchEnumMultiSelectField;
  concurrentWebServicesUser?: PlatformCore.SearchBooleanField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  dateCreated?: PlatformCore.SearchDateField;
  deduction?: PlatformCore.SearchMultiSelectField;
  defaultAcctCorpCardExp?: PlatformCore.SearchMultiSelectField;
  defaultExpenseReportCurrency?: PlatformCore.SearchMultiSelectField;
  defaultTaxReg?: PlatformCore.SearchMultiSelectField;
  defaultTaxRegText?: PlatformCore.SearchStringField;
  department?: PlatformCore.SearchMultiSelectField;
  earning?: PlatformCore.SearchMultiSelectField;
  education?: PlatformCore.SearchMultiSelectField;
  eligibleForCommission?: PlatformCore.SearchBooleanField;
  email?: PlatformCore.SearchStringField;
  employeeStatus?: PlatformCore.SearchMultiSelectField;
  employeeType?: PlatformCore.SearchMultiSelectField;
  employeeTypeKpi?: PlatformCore.SearchBooleanField;
  entityId?: PlatformCore.SearchStringField;
  ethnicity?: PlatformCore.SearchMultiSelectField;
  expenseLimit?: PlatformCore.SearchDoubleField;
  expenseReportCurrency?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  firstName?: PlatformCore.SearchStringField;
  gender?: PlatformCore.SearchEnumMultiSelectField;
  giveAccess?: PlatformCore.SearchBooleanField;
  globalSubscriptionStatus?: PlatformCore.SearchEnumMultiSelectField;
  group?: PlatformCore.SearchMultiSelectField;
  hireDate?: PlatformCore.SearchDateField;
  i9Verified?: PlatformCore.SearchBooleanField;
  image?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDefaultBilling?: PlatformCore.SearchBooleanField;
  isDefaultShipping?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isJobResource?: PlatformCore.SearchBooleanField;
  isTemplate?: PlatformCore.SearchBooleanField;
  job?: PlatformCore.SearchMultiSelectField;
  jobDescription?: PlatformCore.SearchStringField;
  laborCost?: PlatformCore.SearchDoubleField;
  language?: PlatformCore.SearchEnumMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  lastName?: PlatformCore.SearchStringField;
  lastPaidDate?: PlatformCore.SearchDateField;
  lastReviewDate?: PlatformCore.SearchDateField;
  level?: PlatformCore.SearchEnumMultiSelectField;
  location?: PlatformCore.SearchMultiSelectField;
  maritalStatus?: PlatformCore.SearchMultiSelectField;
  middleName?: PlatformCore.SearchStringField;
  nextReviewDate?: PlatformCore.SearchDateField;
  offlineAccess?: PlatformCore.SearchBooleanField;
  payFrequency?: PlatformCore.SearchEnumMultiSelectField;
  permChangeDate?: PlatformCore.SearchDateField;
  permission?: PlatformCore.SearchEnumMultiSelectField;
  permissionChange?: PlatformCore.SearchEnumMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  phoneticName?: PlatformCore.SearchStringField;
  positionTitle?: PlatformCore.SearchMultiSelectField;
  primaryEarningAmount?: PlatformCore.SearchDoubleField;
  primaryEarningItem?: PlatformCore.SearchStringField;
  primaryEarningType?: PlatformCore.SearchStringField;
  purchaseOrderApprovalLimit?: PlatformCore.SearchDoubleField;
  purchaseOrderApprover?: PlatformCore.SearchMultiSelectField;
  purchaseOrderLimit?: PlatformCore.SearchDoubleField;
  releaseDate?: PlatformCore.SearchDateField;
  residentStatus?: PlatformCore.SearchMultiSelectField;
  role?: PlatformCore.SearchMultiSelectField;
  roleChange?: PlatformCore.SearchMultiSelectField;
  roleChangeDate?: PlatformCore.SearchDateField;
  salesRep?: PlatformCore.SearchBooleanField;
  salesRole?: PlatformCore.SearchMultiSelectField;
  salutation?: PlatformCore.SearchStringField;
  socialSecurityNumber?: PlatformCore.SearchStringField;
  startDateTimeOffCalc?: PlatformCore.SearchDateField;
  state?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  supervisor?: PlatformCore.SearchMultiSelectField;
  supportRep?: PlatformCore.SearchBooleanField;
  terminationCategory?: PlatformCore.SearchEnumMultiSelectField;
  terminationDetails?: PlatformCore.SearchStringField;
  terminationReason?: PlatformCore.SearchMultiSelectField;
  terminationRegretted?: PlatformCore.SearchEnumMultiSelectField;
  timeApprover?: PlatformCore.SearchMultiSelectField;
  timeOffPlan?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  usePerquest?: PlatformCore.SearchBooleanField;
  useTimeData?: PlatformCore.SearchBooleanField;
  visaExpDate?: PlatformCore.SearchDateField;
  visaType?: PlatformCore.SearchMultiSelectField;
  withholding?: PlatformCore.SearchMultiSelectField;
  workCalendar?: PlatformCore.SearchMultiSelectField;
  workplace?: PlatformCore.SearchMultiSelectField;
  zipCode?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: EmployeeSearchBasicProps) {
    super();
    this.address = props.address;
    this.addressee = props.addressee;
    this.addressLabel = props.addressLabel;
    this.addressPhone = props.addressPhone;
    this.alienNumber = props.alienNumber;
    this.allocation = props.allocation;
    this.anniversary = props.anniversary;
    this.approvalLimit = props.approvalLimit;
    this.approver = props.approver;
    this.attention = props.attention;
    this.authWorkDate = props.authWorkDate;
    this.baseWage = props.baseWage;
    this.baseWageType = props.baseWageType;
    this.billAddress = props.billAddress;
    this.billingClass = props.billingClass;
    this.birthDate = props.birthDate;
    this.birthDay = props.birthDay;
    this.cContribution = props.cContribution;
    this.city = props.city;
    this.clazz = props.clazz;
    this.comments = props.comments;
    this.commissionPlan = props.commissionPlan;
    this.compensationCurrency = props.compensationCurrency;
    this.concurrentWebServicesUser = props.concurrentWebServicesUser;
    this.country = props.country;
    this.county = props.county;
    this.dateCreated = props.dateCreated;
    this.deduction = props.deduction;
    this.defaultAcctCorpCardExp = props.defaultAcctCorpCardExp;
    this.defaultExpenseReportCurrency = props.defaultExpenseReportCurrency;
    this.defaultTaxReg = props.defaultTaxReg;
    this.defaultTaxRegText = props.defaultTaxRegText;
    this.department = props.department;
    this.earning = props.earning;
    this.education = props.education;
    this.eligibleForCommission = props.eligibleForCommission;
    this.email = props.email;
    this.employeeStatus = props.employeeStatus;
    this.employeeType = props.employeeType;
    this.employeeTypeKpi = props.employeeTypeKpi;
    this.entityId = props.entityId;
    this.ethnicity = props.ethnicity;
    this.expenseLimit = props.expenseLimit;
    this.expenseReportCurrency = props.expenseReportCurrency;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.fax = props.fax;
    this.firstName = props.firstName;
    this.gender = props.gender;
    this.giveAccess = props.giveAccess;
    this.globalSubscriptionStatus = props.globalSubscriptionStatus;
    this.group = props.group;
    this.hireDate = props.hireDate;
    this.i9Verified = props.i9Verified;
    this.image = props.image;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isDefaultBilling = props.isDefaultBilling;
    this.isDefaultShipping = props.isDefaultShipping;
    this.isInactive = props.isInactive;
    this.isJobResource = props.isJobResource;
    this.isTemplate = props.isTemplate;
    this.job = props.job;
    this.jobDescription = props.jobDescription;
    this.laborCost = props.laborCost;
    this.language = props.language;
    this.lastModifiedDate = props.lastModifiedDate;
    this.lastName = props.lastName;
    this.lastPaidDate = props.lastPaidDate;
    this.lastReviewDate = props.lastReviewDate;
    this.level = props.level;
    this.location = props.location;
    this.maritalStatus = props.maritalStatus;
    this.middleName = props.middleName;
    this.nextReviewDate = props.nextReviewDate;
    this.offlineAccess = props.offlineAccess;
    this.payFrequency = props.payFrequency;
    this.permChangeDate = props.permChangeDate;
    this.permission = props.permission;
    this.permissionChange = props.permissionChange;
    this.phone = props.phone;
    this.phoneticName = props.phoneticName;
    this.positionTitle = props.positionTitle;
    this.primaryEarningAmount = props.primaryEarningAmount;
    this.primaryEarningItem = props.primaryEarningItem;
    this.primaryEarningType = props.primaryEarningType;
    this.purchaseOrderApprovalLimit = props.purchaseOrderApprovalLimit;
    this.purchaseOrderApprover = props.purchaseOrderApprover;
    this.purchaseOrderLimit = props.purchaseOrderLimit;
    this.releaseDate = props.releaseDate;
    this.residentStatus = props.residentStatus;
    this.role = props.role;
    this.roleChange = props.roleChange;
    this.roleChangeDate = props.roleChangeDate;
    this.salesRep = props.salesRep;
    this.salesRole = props.salesRole;
    this.salutation = props.salutation;
    this.socialSecurityNumber = props.socialSecurityNumber;
    this.startDateTimeOffCalc = props.startDateTimeOffCalc;
    this.state = props.state;
    this.subsidiary = props.subsidiary;
    this.supervisor = props.supervisor;
    this.supportRep = props.supportRep;
    this.terminationCategory = props.terminationCategory;
    this.terminationDetails = props.terminationDetails;
    this.terminationReason = props.terminationReason;
    this.terminationRegretted = props.terminationRegretted;
    this.timeApprover = props.timeApprover;
    this.timeOffPlan = props.timeOffPlan;
    this.title = props.title;
    this.usePerquest = props.usePerquest;
    this.useTimeData = props.useTimeData;
    this.visaExpDate = props.visaExpDate;
    this.visaType = props.visaType;
    this.withholding = props.withholding;
    this.workCalendar = props.workCalendar;
    this.workplace = props.workplace;
    this.zipCode = props.zipCode;
    this.customFieldList = props.customFieldList;
  }
}

export type PartnersProps = {
  partner?: PlatformCore.RecordRef;
  partnerRole?: PlatformCore.RecordRef;
  isPrimary?: boolean;
  contribution?: number;
};

export class Partners {
  partner?: PlatformCore.RecordRef;
  partnerRole?: PlatformCore.RecordRef;
  isPrimary?: boolean;
  contribution?: number;
  constructor(props: PartnersProps) {
    this.partner = props.partner;
    this.partnerRole = props.partnerRole;
    this.isPrimary = props.isPrimary;
    this.contribution = props.contribution;
  }
}

export type TaxGroupSearchBasicProps = {
  city?: PlatformCore.SearchStringField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  includeChildren?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDefault?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  itemId?: PlatformCore.SearchStringField;
  piggyBack?: PlatformCore.SearchBooleanField;
  rate?: PlatformCore.SearchDoubleField;
  state?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  taxItem1?: PlatformCore.SearchMultiSelectField;
  taxItem2?: PlatformCore.SearchMultiSelectField;
  taxType?: PlatformCore.SearchMultiSelectField;
  unitPrice1?: PlatformCore.SearchDoubleField;
  unitPrice2?: PlatformCore.SearchDoubleField;
  zip?: PlatformCore.SearchStringField;
};

export class TaxGroupSearchBasic extends PlatformCore.SearchRecordBasic {
  city?: PlatformCore.SearchStringField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  includeChildren?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDefault?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  itemId?: PlatformCore.SearchStringField;
  piggyBack?: PlatformCore.SearchBooleanField;
  rate?: PlatformCore.SearchDoubleField;
  state?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  taxItem1?: PlatformCore.SearchMultiSelectField;
  taxItem2?: PlatformCore.SearchMultiSelectField;
  taxType?: PlatformCore.SearchMultiSelectField;
  unitPrice1?: PlatformCore.SearchDoubleField;
  unitPrice2?: PlatformCore.SearchDoubleField;
  zip?: PlatformCore.SearchStringField;
  constructor(props: TaxGroupSearchBasicProps) {
    super();
    this.city = props.city;
    this.country = props.country;
    this.county = props.county;
    this.description = props.description;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.includeChildren = props.includeChildren;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isDefault = props.isDefault;
    this.isInactive = props.isInactive;
    this.itemId = props.itemId;
    this.piggyBack = props.piggyBack;
    this.rate = props.rate;
    this.state = props.state;
    this.subsidiary = props.subsidiary;
    this.taxItem1 = props.taxItem1;
    this.taxItem2 = props.taxItem2;
    this.taxType = props.taxType;
    this.unitPrice1 = props.unitPrice1;
    this.unitPrice2 = props.unitPrice2;
    this.zip = props.zip;
  }
}

export type SupportCaseSearchRowBasicProps = {
  assigned?: PlatformCore.SearchColumnSelectField[];
  awaitingReply?: PlatformCore.SearchColumnBooleanField[];
  caseNumber?: PlatformCore.SearchColumnStringField[];
  category?: PlatformCore.SearchColumnSelectField[];
  company?: PlatformCore.SearchColumnSelectField[];
  contact?: PlatformCore.SearchColumnSelectField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  customerStage?: PlatformCore.SearchColumnEnumSelectField[];
  email?: PlatformCore.SearchColumnStringField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  escalatee?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  helpDesk?: PlatformCore.SearchColumnBooleanField[];
  inboundEmail?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  issue?: PlatformCore.SearchColumnSelectField[];
  issueNumber?: PlatformCore.SearchColumnStringField[];
  item?: PlatformCore.SearchColumnSelectField[];
  lastMessageDate?: PlatformCore.SearchColumnDateField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  lastReopenedDate?: PlatformCore.SearchColumnDateField[];
  locked?: PlatformCore.SearchColumnBooleanField[];
  module?: PlatformCore.SearchColumnSelectField[];
  origin?: PlatformCore.SearchColumnSelectField[];
  priority?: PlatformCore.SearchColumnSelectField[];
  product?: PlatformCore.SearchColumnSelectField[];
  profile?: PlatformCore.SearchColumnSelectField[];
  serialNumber?: PlatformCore.SearchColumnStringField[];
  stage?: PlatformCore.SearchColumnEnumSelectField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  status?: PlatformCore.SearchColumnSelectField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class SupportCaseSearchRowBasic extends PlatformCore.SearchRowBasic {
  assigned?: PlatformCore.SearchColumnSelectField[];
  awaitingReply?: PlatformCore.SearchColumnBooleanField[];
  caseNumber?: PlatformCore.SearchColumnStringField[];
  category?: PlatformCore.SearchColumnSelectField[];
  company?: PlatformCore.SearchColumnSelectField[];
  contact?: PlatformCore.SearchColumnSelectField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  customerStage?: PlatformCore.SearchColumnEnumSelectField[];
  email?: PlatformCore.SearchColumnStringField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  escalatee?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  helpDesk?: PlatformCore.SearchColumnBooleanField[];
  inboundEmail?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  issue?: PlatformCore.SearchColumnSelectField[];
  issueNumber?: PlatformCore.SearchColumnStringField[];
  item?: PlatformCore.SearchColumnSelectField[];
  lastMessageDate?: PlatformCore.SearchColumnDateField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  lastReopenedDate?: PlatformCore.SearchColumnDateField[];
  locked?: PlatformCore.SearchColumnBooleanField[];
  module?: PlatformCore.SearchColumnSelectField[];
  origin?: PlatformCore.SearchColumnSelectField[];
  priority?: PlatformCore.SearchColumnSelectField[];
  product?: PlatformCore.SearchColumnSelectField[];
  profile?: PlatformCore.SearchColumnSelectField[];
  serialNumber?: PlatformCore.SearchColumnStringField[];
  stage?: PlatformCore.SearchColumnEnumSelectField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  status?: PlatformCore.SearchColumnSelectField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: SupportCaseSearchRowBasicProps) {
    super();
    this.assigned = props.assigned;
    this.awaitingReply = props.awaitingReply;
    this.caseNumber = props.caseNumber;
    this.category = props.category;
    this.company = props.company;
    this.contact = props.contact;
    this.createdDate = props.createdDate;
    this.customerStage = props.customerStage;
    this.email = props.email;
    this.endDate = props.endDate;
    this.escalatee = props.escalatee;
    this.externalId = props.externalId;
    this.helpDesk = props.helpDesk;
    this.inboundEmail = props.inboundEmail;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.issue = props.issue;
    this.issueNumber = props.issueNumber;
    this.item = props.item;
    this.lastMessageDate = props.lastMessageDate;
    this.lastModifiedDate = props.lastModifiedDate;
    this.lastReopenedDate = props.lastReopenedDate;
    this.locked = props.locked;
    this.module = props.module;
    this.origin = props.origin;
    this.priority = props.priority;
    this.product = props.product;
    this.profile = props.profile;
    this.serialNumber = props.serialNumber;
    this.stage = props.stage;
    this.startDate = props.startDate;
    this.status = props.status;
    this.subsidiary = props.subsidiary;
    this.title = props.title;
    this.customFieldList = props.customFieldList;
  }
}

export type FolderSearchBasicProps = {
  clazz?: PlatformCore.SearchMultiSelectField;
  department?: PlatformCore.SearchMultiSelectField;
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  group?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  isTopLevel?: PlatformCore.SearchBooleanField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  location?: PlatformCore.SearchMultiSelectField;
  name?: PlatformCore.SearchStringField;
  numFiles?: PlatformCore.SearchLongField;
  owner?: PlatformCore.SearchMultiSelectField;
  parent?: PlatformCore.SearchMultiSelectField;
  predecessor?: PlatformCore.SearchMultiSelectField;
  _private?: PlatformCore.SearchBooleanField;
  size?: PlatformCore.SearchLongField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
};

export class FolderSearchBasic extends PlatformCore.SearchRecordBasic {
  clazz?: PlatformCore.SearchMultiSelectField;
  department?: PlatformCore.SearchMultiSelectField;
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  group?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  isTopLevel?: PlatformCore.SearchBooleanField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  location?: PlatformCore.SearchMultiSelectField;
  name?: PlatformCore.SearchStringField;
  numFiles?: PlatformCore.SearchLongField;
  owner?: PlatformCore.SearchMultiSelectField;
  parent?: PlatformCore.SearchMultiSelectField;
  predecessor?: PlatformCore.SearchMultiSelectField;
  _private?: PlatformCore.SearchBooleanField;
  size?: PlatformCore.SearchLongField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  constructor(props: FolderSearchBasicProps) {
    super();
    this.clazz = props.clazz;
    this.department = props.department;
    this.description = props.description;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.group = props.group;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.isTopLevel = props.isTopLevel;
    this.lastModifiedDate = props.lastModifiedDate;
    this.location = props.location;
    this.name = props.name;
    this.numFiles = props.numFiles;
    this.owner = props.owner;
    this.parent = props.parent;
    this.predecessor = props.predecessor;
    this._private = props._private;
    this.size = props.size;
    this.subsidiary = props.subsidiary;
  }
}

export type JobSearchRowBasicProps = {
  accountNumber?: PlatformCore.SearchColumnStringField[];
  actualTime?: PlatformCore.SearchColumnDoubleField[];
  address?: PlatformCore.SearchColumnStringField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  addressee?: PlatformCore.SearchColumnStringField[];
  addressInternalId?: PlatformCore.SearchColumnStringField[];
  addressLabel?: PlatformCore.SearchColumnStringField[];
  addressPhone?: PlatformCore.SearchColumnStringField[];
  allocatePayrollExpenses?: PlatformCore.SearchColumnBooleanField[];
  allowAllResourcesForTasks?: PlatformCore.SearchColumnBooleanField[];
  allowExpenses?: PlatformCore.SearchColumnBooleanField[];
  allowTime?: PlatformCore.SearchColumnBooleanField[];
  altContact?: PlatformCore.SearchColumnStringField[];
  altEmail?: PlatformCore.SearchColumnStringField[];
  altName?: PlatformCore.SearchColumnStringField[];
  altPhone?: PlatformCore.SearchColumnStringField[];
  attention?: PlatformCore.SearchColumnStringField[];
  billAddress1?: PlatformCore.SearchColumnStringField[];
  billAddress2?: PlatformCore.SearchColumnStringField[];
  billAddress3?: PlatformCore.SearchColumnStringField[];
  billAddressee?: PlatformCore.SearchColumnStringField[];
  billAttention?: PlatformCore.SearchColumnStringField[];
  billCity?: PlatformCore.SearchColumnStringField[];
  billCountry?: PlatformCore.SearchColumnEnumSelectField[];
  billCountryCode?: PlatformCore.SearchColumnStringField[];
  billingSchedule?: PlatformCore.SearchColumnSelectField[];
  billPhone?: PlatformCore.SearchColumnStringField[];
  billState?: PlatformCore.SearchColumnStringField[];
  billZipCode?: PlatformCore.SearchColumnStringField[];
  calculatedEndDate?: PlatformCore.SearchColumnDateField[];
  calculatedEndDateBaseline?: PlatformCore.SearchColumnDateField[];
  category?: PlatformCore.SearchColumnSelectField[];
  city?: PlatformCore.SearchColumnStringField[];
  comments?: PlatformCore.SearchColumnStringField[];
  companyName?: PlatformCore.SearchColumnStringField[];
  contact?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  countryCode?: PlatformCore.SearchColumnStringField[];
  customer?: PlatformCore.SearchColumnSelectField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  defaultTaxReg?: PlatformCore.SearchColumnStringField[];
  email?: PlatformCore.SearchColumnStringField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  entityId?: PlatformCore.SearchColumnStringField[];
  entityNumber?: PlatformCore.SearchColumnLongField[];
  entityStatus?: PlatformCore.SearchColumnSelectField[];
  estimatedCost?: PlatformCore.SearchColumnDoubleField[];
  estimatedGrossProfit?: PlatformCore.SearchColumnDoubleField[];
  estimatedGrossProfitPercent?: PlatformCore.SearchColumnDoubleField[];
  estimatedLaborCost?: PlatformCore.SearchColumnDoubleField[];
  estimatedLaborCostBaseline?: PlatformCore.SearchColumnDoubleField[];
  estimatedLaborRevenue?: PlatformCore.SearchColumnDoubleField[];
  estimatedRevenue?: PlatformCore.SearchColumnDoubleField[];
  estimatedTime?: PlatformCore.SearchColumnDoubleField[];
  estimatedTimeOverride?: PlatformCore.SearchColumnDoubleField[];
  estimatedTimeOverrideBaseline?: PlatformCore.SearchColumnDoubleField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  globalSubscriptionStatus?: PlatformCore.SearchColumnEnumSelectField[];
  image?: PlatformCore.SearchColumnSelectField[];
  includeCrmTasksInTotals?: PlatformCore.SearchColumnBooleanField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isDefaultBilling?: PlatformCore.SearchColumnBooleanField[];
  isDefaultShipping?: PlatformCore.SearchColumnBooleanField[];
  isExemptTime?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isProductiveTime?: PlatformCore.SearchColumnBooleanField[];
  isUtilizedTime?: PlatformCore.SearchColumnBooleanField[];
  jobBillingType?: PlatformCore.SearchColumnEnumSelectField[];
  jobItem?: PlatformCore.SearchColumnSelectField[];
  jobPrice?: PlatformCore.SearchColumnDoubleField[];
  jobResource?: PlatformCore.SearchColumnSelectField[];
  jobResourceRole?: PlatformCore.SearchColumnSelectField[];
  language?: PlatformCore.SearchColumnEnumSelectField[];
  lastBaselineDate?: PlatformCore.SearchColumnDateField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  level?: PlatformCore.SearchColumnEnumSelectField[];
  limitTimeToAssignees?: PlatformCore.SearchColumnBooleanField[];
  materializeTime?: PlatformCore.SearchColumnBooleanField[];
  percentComplete?: PlatformCore.SearchColumnDoubleField[];
  percentTimeComplete?: PlatformCore.SearchColumnDoubleField[];
  permission?: PlatformCore.SearchColumnEnumSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  phoneticName?: PlatformCore.SearchColumnStringField[];
  projectedEndDate?: PlatformCore.SearchColumnDateField[];
  projectedEndDateBaseline?: PlatformCore.SearchColumnDateField[];
  projectExpenseType?: PlatformCore.SearchColumnSelectField[];
  revRecForecastRule?: PlatformCore.SearchColumnSelectField[];
  shipAddress1?: PlatformCore.SearchColumnStringField[];
  shipAddress2?: PlatformCore.SearchColumnStringField[];
  shipAddress3?: PlatformCore.SearchColumnStringField[];
  shipAddressee?: PlatformCore.SearchColumnStringField[];
  shipAttention?: PlatformCore.SearchColumnStringField[];
  shipCity?: PlatformCore.SearchColumnStringField[];
  shipCountry?: PlatformCore.SearchColumnEnumSelectField[];
  shipCountryCode?: PlatformCore.SearchColumnStringField[];
  shipPhone?: PlatformCore.SearchColumnStringField[];
  shipState?: PlatformCore.SearchColumnStringField[];
  shipZip?: PlatformCore.SearchColumnStringField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  startDateBaseline?: PlatformCore.SearchColumnDateField[];
  state?: PlatformCore.SearchColumnStringField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionDate?: PlatformCore.SearchColumnDateField[];
  subscriptionStatus?: PlatformCore.SearchColumnBooleanField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  timeApproval?: PlatformCore.SearchColumnSelectField[];
  timeRemaining?: PlatformCore.SearchColumnDoubleField[];
  usePercentCompleteOverride?: PlatformCore.SearchColumnBooleanField[];
  zipCode?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class JobSearchRowBasic extends PlatformCore.SearchRowBasic {
  accountNumber?: PlatformCore.SearchColumnStringField[];
  actualTime?: PlatformCore.SearchColumnDoubleField[];
  address?: PlatformCore.SearchColumnStringField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  addressee?: PlatformCore.SearchColumnStringField[];
  addressInternalId?: PlatformCore.SearchColumnStringField[];
  addressLabel?: PlatformCore.SearchColumnStringField[];
  addressPhone?: PlatformCore.SearchColumnStringField[];
  allocatePayrollExpenses?: PlatformCore.SearchColumnBooleanField[];
  allowAllResourcesForTasks?: PlatformCore.SearchColumnBooleanField[];
  allowExpenses?: PlatformCore.SearchColumnBooleanField[];
  allowTime?: PlatformCore.SearchColumnBooleanField[];
  altContact?: PlatformCore.SearchColumnStringField[];
  altEmail?: PlatformCore.SearchColumnStringField[];
  altName?: PlatformCore.SearchColumnStringField[];
  altPhone?: PlatformCore.SearchColumnStringField[];
  attention?: PlatformCore.SearchColumnStringField[];
  billAddress1?: PlatformCore.SearchColumnStringField[];
  billAddress2?: PlatformCore.SearchColumnStringField[];
  billAddress3?: PlatformCore.SearchColumnStringField[];
  billAddressee?: PlatformCore.SearchColumnStringField[];
  billAttention?: PlatformCore.SearchColumnStringField[];
  billCity?: PlatformCore.SearchColumnStringField[];
  billCountry?: PlatformCore.SearchColumnEnumSelectField[];
  billCountryCode?: PlatformCore.SearchColumnStringField[];
  billingSchedule?: PlatformCore.SearchColumnSelectField[];
  billPhone?: PlatformCore.SearchColumnStringField[];
  billState?: PlatformCore.SearchColumnStringField[];
  billZipCode?: PlatformCore.SearchColumnStringField[];
  calculatedEndDate?: PlatformCore.SearchColumnDateField[];
  calculatedEndDateBaseline?: PlatformCore.SearchColumnDateField[];
  category?: PlatformCore.SearchColumnSelectField[];
  city?: PlatformCore.SearchColumnStringField[];
  comments?: PlatformCore.SearchColumnStringField[];
  companyName?: PlatformCore.SearchColumnStringField[];
  contact?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  countryCode?: PlatformCore.SearchColumnStringField[];
  customer?: PlatformCore.SearchColumnSelectField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  defaultTaxReg?: PlatformCore.SearchColumnStringField[];
  email?: PlatformCore.SearchColumnStringField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  entityId?: PlatformCore.SearchColumnStringField[];
  entityNumber?: PlatformCore.SearchColumnLongField[];
  entityStatus?: PlatformCore.SearchColumnSelectField[];
  estimatedCost?: PlatformCore.SearchColumnDoubleField[];
  estimatedGrossProfit?: PlatformCore.SearchColumnDoubleField[];
  estimatedGrossProfitPercent?: PlatformCore.SearchColumnDoubleField[];
  estimatedLaborCost?: PlatformCore.SearchColumnDoubleField[];
  estimatedLaborCostBaseline?: PlatformCore.SearchColumnDoubleField[];
  estimatedLaborRevenue?: PlatformCore.SearchColumnDoubleField[];
  estimatedRevenue?: PlatformCore.SearchColumnDoubleField[];
  estimatedTime?: PlatformCore.SearchColumnDoubleField[];
  estimatedTimeOverride?: PlatformCore.SearchColumnDoubleField[];
  estimatedTimeOverrideBaseline?: PlatformCore.SearchColumnDoubleField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  globalSubscriptionStatus?: PlatformCore.SearchColumnEnumSelectField[];
  image?: PlatformCore.SearchColumnSelectField[];
  includeCrmTasksInTotals?: PlatformCore.SearchColumnBooleanField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isDefaultBilling?: PlatformCore.SearchColumnBooleanField[];
  isDefaultShipping?: PlatformCore.SearchColumnBooleanField[];
  isExemptTime?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isProductiveTime?: PlatformCore.SearchColumnBooleanField[];
  isUtilizedTime?: PlatformCore.SearchColumnBooleanField[];
  jobBillingType?: PlatformCore.SearchColumnEnumSelectField[];
  jobItem?: PlatformCore.SearchColumnSelectField[];
  jobPrice?: PlatformCore.SearchColumnDoubleField[];
  jobResource?: PlatformCore.SearchColumnSelectField[];
  jobResourceRole?: PlatformCore.SearchColumnSelectField[];
  language?: PlatformCore.SearchColumnEnumSelectField[];
  lastBaselineDate?: PlatformCore.SearchColumnDateField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  level?: PlatformCore.SearchColumnEnumSelectField[];
  limitTimeToAssignees?: PlatformCore.SearchColumnBooleanField[];
  materializeTime?: PlatformCore.SearchColumnBooleanField[];
  percentComplete?: PlatformCore.SearchColumnDoubleField[];
  percentTimeComplete?: PlatformCore.SearchColumnDoubleField[];
  permission?: PlatformCore.SearchColumnEnumSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  phoneticName?: PlatformCore.SearchColumnStringField[];
  projectedEndDate?: PlatformCore.SearchColumnDateField[];
  projectedEndDateBaseline?: PlatformCore.SearchColumnDateField[];
  projectExpenseType?: PlatformCore.SearchColumnSelectField[];
  revRecForecastRule?: PlatformCore.SearchColumnSelectField[];
  shipAddress1?: PlatformCore.SearchColumnStringField[];
  shipAddress2?: PlatformCore.SearchColumnStringField[];
  shipAddress3?: PlatformCore.SearchColumnStringField[];
  shipAddressee?: PlatformCore.SearchColumnStringField[];
  shipAttention?: PlatformCore.SearchColumnStringField[];
  shipCity?: PlatformCore.SearchColumnStringField[];
  shipCountry?: PlatformCore.SearchColumnEnumSelectField[];
  shipCountryCode?: PlatformCore.SearchColumnStringField[];
  shipPhone?: PlatformCore.SearchColumnStringField[];
  shipState?: PlatformCore.SearchColumnStringField[];
  shipZip?: PlatformCore.SearchColumnStringField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  startDateBaseline?: PlatformCore.SearchColumnDateField[];
  state?: PlatformCore.SearchColumnStringField[];
  subscription?: PlatformCore.SearchColumnSelectField[];
  subscriptionDate?: PlatformCore.SearchColumnDateField[];
  subscriptionStatus?: PlatformCore.SearchColumnBooleanField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  timeApproval?: PlatformCore.SearchColumnSelectField[];
  timeRemaining?: PlatformCore.SearchColumnDoubleField[];
  usePercentCompleteOverride?: PlatformCore.SearchColumnBooleanField[];
  zipCode?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: JobSearchRowBasicProps) {
    super();
    this.accountNumber = props.accountNumber;
    this.actualTime = props.actualTime;
    this.address = props.address;
    this.address1 = props.address1;
    this.address2 = props.address2;
    this.address3 = props.address3;
    this.addressee = props.addressee;
    this.addressInternalId = props.addressInternalId;
    this.addressLabel = props.addressLabel;
    this.addressPhone = props.addressPhone;
    this.allocatePayrollExpenses = props.allocatePayrollExpenses;
    this.allowAllResourcesForTasks = props.allowAllResourcesForTasks;
    this.allowExpenses = props.allowExpenses;
    this.allowTime = props.allowTime;
    this.altContact = props.altContact;
    this.altEmail = props.altEmail;
    this.altName = props.altName;
    this.altPhone = props.altPhone;
    this.attention = props.attention;
    this.billAddress1 = props.billAddress1;
    this.billAddress2 = props.billAddress2;
    this.billAddress3 = props.billAddress3;
    this.billAddressee = props.billAddressee;
    this.billAttention = props.billAttention;
    this.billCity = props.billCity;
    this.billCountry = props.billCountry;
    this.billCountryCode = props.billCountryCode;
    this.billingSchedule = props.billingSchedule;
    this.billPhone = props.billPhone;
    this.billState = props.billState;
    this.billZipCode = props.billZipCode;
    this.calculatedEndDate = props.calculatedEndDate;
    this.calculatedEndDateBaseline = props.calculatedEndDateBaseline;
    this.category = props.category;
    this.city = props.city;
    this.comments = props.comments;
    this.companyName = props.companyName;
    this.contact = props.contact;
    this.country = props.country;
    this.countryCode = props.countryCode;
    this.customer = props.customer;
    this.dateCreated = props.dateCreated;
    this.defaultTaxReg = props.defaultTaxReg;
    this.email = props.email;
    this.endDate = props.endDate;
    this.entityId = props.entityId;
    this.entityNumber = props.entityNumber;
    this.entityStatus = props.entityStatus;
    this.estimatedCost = props.estimatedCost;
    this.estimatedGrossProfit = props.estimatedGrossProfit;
    this.estimatedGrossProfitPercent = props.estimatedGrossProfitPercent;
    this.estimatedLaborCost = props.estimatedLaborCost;
    this.estimatedLaborCostBaseline = props.estimatedLaborCostBaseline;
    this.estimatedLaborRevenue = props.estimatedLaborRevenue;
    this.estimatedRevenue = props.estimatedRevenue;
    this.estimatedTime = props.estimatedTime;
    this.estimatedTimeOverride = props.estimatedTimeOverride;
    this.estimatedTimeOverrideBaseline = props.estimatedTimeOverrideBaseline;
    this.externalId = props.externalId;
    this.fax = props.fax;
    this.globalSubscriptionStatus = props.globalSubscriptionStatus;
    this.image = props.image;
    this.includeCrmTasksInTotals = props.includeCrmTasksInTotals;
    this.internalId = props.internalId;
    this.isDefaultBilling = props.isDefaultBilling;
    this.isDefaultShipping = props.isDefaultShipping;
    this.isExemptTime = props.isExemptTime;
    this.isInactive = props.isInactive;
    this.isProductiveTime = props.isProductiveTime;
    this.isUtilizedTime = props.isUtilizedTime;
    this.jobBillingType = props.jobBillingType;
    this.jobItem = props.jobItem;
    this.jobPrice = props.jobPrice;
    this.jobResource = props.jobResource;
    this.jobResourceRole = props.jobResourceRole;
    this.language = props.language;
    this.lastBaselineDate = props.lastBaselineDate;
    this.lastModifiedDate = props.lastModifiedDate;
    this.level = props.level;
    this.limitTimeToAssignees = props.limitTimeToAssignees;
    this.materializeTime = props.materializeTime;
    this.percentComplete = props.percentComplete;
    this.percentTimeComplete = props.percentTimeComplete;
    this.permission = props.permission;
    this.phone = props.phone;
    this.phoneticName = props.phoneticName;
    this.projectedEndDate = props.projectedEndDate;
    this.projectedEndDateBaseline = props.projectedEndDateBaseline;
    this.projectExpenseType = props.projectExpenseType;
    this.revRecForecastRule = props.revRecForecastRule;
    this.shipAddress1 = props.shipAddress1;
    this.shipAddress2 = props.shipAddress2;
    this.shipAddress3 = props.shipAddress3;
    this.shipAddressee = props.shipAddressee;
    this.shipAttention = props.shipAttention;
    this.shipCity = props.shipCity;
    this.shipCountry = props.shipCountry;
    this.shipCountryCode = props.shipCountryCode;
    this.shipPhone = props.shipPhone;
    this.shipState = props.shipState;
    this.shipZip = props.shipZip;
    this.startDate = props.startDate;
    this.startDateBaseline = props.startDateBaseline;
    this.state = props.state;
    this.subscription = props.subscription;
    this.subscriptionDate = props.subscriptionDate;
    this.subscriptionStatus = props.subscriptionStatus;
    this.subsidiary = props.subsidiary;
    this.timeApproval = props.timeApproval;
    this.timeRemaining = props.timeRemaining;
    this.usePercentCompleteOverride = props.usePercentCompleteOverride;
    this.zipCode = props.zipCode;
    this.customFieldList = props.customFieldList;
  }
}

export type InboundShipmentSearchBasicProps = {
  actualDeliveryDate?: PlatformCore.SearchDateField;
  actualShippingDate?: PlatformCore.SearchDateField;
  billOfLading?: PlatformCore.SearchStringField;
  createdDate?: PlatformCore.SearchDateField;
  currency?: PlatformCore.SearchMultiSelectField;
  description?: PlatformCore.SearchStringField;
  expectedDeliveryDate?: PlatformCore.SearchDateField;
  expectedRate?: PlatformCore.SearchDoubleField;
  expectedShippingDate?: PlatformCore.SearchDateField;
  externalDocumentNumber?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  incoterm?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  item?: PlatformCore.SearchMultiSelectField;
  itemEffectiveDate?: PlatformCore.SearchDateField;
  itemExchangeRate?: PlatformCore.SearchDoubleField;
  landedCostAllocationMethod?: PlatformCore.SearchEnumMultiSelectField;
  landedCostAmount?: PlatformCore.SearchDoubleField;
  landedCostCostCategory?: PlatformCore.SearchMultiSelectField;
  landedCostCurrency?: PlatformCore.SearchMultiSelectField;
  landedCostEffectiveDate?: PlatformCore.SearchDateField;
  landedCostExchangeRate?: PlatformCore.SearchDoubleField;
  memo?: PlatformCore.SearchStringField;
  poAmount?: PlatformCore.SearchDoubleField;
  poRate?: PlatformCore.SearchDoubleField;
  purchaseOrder?: PlatformCore.SearchMultiSelectField;
  quantityBilled?: PlatformCore.SearchDoubleField;
  quantityExpected?: PlatformCore.SearchDoubleField;
  quantityReceived?: PlatformCore.SearchDoubleField;
  quantityRemaining?: PlatformCore.SearchDoubleField;
  receivingLocation?: PlatformCore.SearchMultiSelectField;
  shipmentBaseCurrency?: PlatformCore.SearchMultiSelectField;
  shipmentNumber?: PlatformCore.SearchMultiSelectField;
  status?: PlatformCore.SearchEnumMultiSelectField;
  totalUnitCost?: PlatformCore.SearchDoubleField;
  unit?: PlatformCore.SearchMultiSelectField;
  unitLandedCost?: PlatformCore.SearchDoubleField;
  vendor?: PlatformCore.SearchMultiSelectField;
  vesselNumber?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class InboundShipmentSearchBasic extends PlatformCore.SearchRecordBasic {
  actualDeliveryDate?: PlatformCore.SearchDateField;
  actualShippingDate?: PlatformCore.SearchDateField;
  billOfLading?: PlatformCore.SearchStringField;
  createdDate?: PlatformCore.SearchDateField;
  currency?: PlatformCore.SearchMultiSelectField;
  description?: PlatformCore.SearchStringField;
  expectedDeliveryDate?: PlatformCore.SearchDateField;
  expectedRate?: PlatformCore.SearchDoubleField;
  expectedShippingDate?: PlatformCore.SearchDateField;
  externalDocumentNumber?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  incoterm?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  item?: PlatformCore.SearchMultiSelectField;
  itemEffectiveDate?: PlatformCore.SearchDateField;
  itemExchangeRate?: PlatformCore.SearchDoubleField;
  landedCostAllocationMethod?: PlatformCore.SearchEnumMultiSelectField;
  landedCostAmount?: PlatformCore.SearchDoubleField;
  landedCostCostCategory?: PlatformCore.SearchMultiSelectField;
  landedCostCurrency?: PlatformCore.SearchMultiSelectField;
  landedCostEffectiveDate?: PlatformCore.SearchDateField;
  landedCostExchangeRate?: PlatformCore.SearchDoubleField;
  memo?: PlatformCore.SearchStringField;
  poAmount?: PlatformCore.SearchDoubleField;
  poRate?: PlatformCore.SearchDoubleField;
  purchaseOrder?: PlatformCore.SearchMultiSelectField;
  quantityBilled?: PlatformCore.SearchDoubleField;
  quantityExpected?: PlatformCore.SearchDoubleField;
  quantityReceived?: PlatformCore.SearchDoubleField;
  quantityRemaining?: PlatformCore.SearchDoubleField;
  receivingLocation?: PlatformCore.SearchMultiSelectField;
  shipmentBaseCurrency?: PlatformCore.SearchMultiSelectField;
  shipmentNumber?: PlatformCore.SearchMultiSelectField;
  status?: PlatformCore.SearchEnumMultiSelectField;
  totalUnitCost?: PlatformCore.SearchDoubleField;
  unit?: PlatformCore.SearchMultiSelectField;
  unitLandedCost?: PlatformCore.SearchDoubleField;
  vendor?: PlatformCore.SearchMultiSelectField;
  vesselNumber?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: InboundShipmentSearchBasicProps) {
    super();
    this.actualDeliveryDate = props.actualDeliveryDate;
    this.actualShippingDate = props.actualShippingDate;
    this.billOfLading = props.billOfLading;
    this.createdDate = props.createdDate;
    this.currency = props.currency;
    this.description = props.description;
    this.expectedDeliveryDate = props.expectedDeliveryDate;
    this.expectedRate = props.expectedRate;
    this.expectedShippingDate = props.expectedShippingDate;
    this.externalDocumentNumber = props.externalDocumentNumber;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.incoterm = props.incoterm;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.item = props.item;
    this.itemEffectiveDate = props.itemEffectiveDate;
    this.itemExchangeRate = props.itemExchangeRate;
    this.landedCostAllocationMethod = props.landedCostAllocationMethod;
    this.landedCostAmount = props.landedCostAmount;
    this.landedCostCostCategory = props.landedCostCostCategory;
    this.landedCostCurrency = props.landedCostCurrency;
    this.landedCostEffectiveDate = props.landedCostEffectiveDate;
    this.landedCostExchangeRate = props.landedCostExchangeRate;
    this.memo = props.memo;
    this.poAmount = props.poAmount;
    this.poRate = props.poRate;
    this.purchaseOrder = props.purchaseOrder;
    this.quantityBilled = props.quantityBilled;
    this.quantityExpected = props.quantityExpected;
    this.quantityReceived = props.quantityReceived;
    this.quantityRemaining = props.quantityRemaining;
    this.receivingLocation = props.receivingLocation;
    this.shipmentBaseCurrency = props.shipmentBaseCurrency;
    this.shipmentNumber = props.shipmentNumber;
    this.status = props.status;
    this.totalUnitCost = props.totalUnitCost;
    this.unit = props.unit;
    this.unitLandedCost = props.unitLandedCost;
    this.vendor = props.vendor;
    this.vesselNumber = props.vesselNumber;
    this.customFieldList = props.customFieldList;
  }
}

export type ChargeSearchBasicProps = {
  amount?: PlatformCore.SearchDoubleField;
  billingAccount?: PlatformCore.SearchMultiSelectField;
  billingItem?: PlatformCore.SearchMultiSelectField;
  billTo?: PlatformCore.SearchMultiSelectField;
  chargeDate?: PlatformCore.SearchDateField;
  chargeType?: PlatformCore.SearchMultiSelectField;
  clazz?: PlatformCore.SearchMultiSelectField;
  createdDate?: PlatformCore.SearchDateField;
  currency?: PlatformCore.SearchMultiSelectField;
  department?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  location?: PlatformCore.SearchMultiSelectField;
  modifiedDate?: PlatformCore.SearchDateField;
  postingPeriod?: PlatformCore.RecordRef;
  postingPeriodRelative?: PlatformCommonTypes.PostingPeriodDate;
  quantity?: PlatformCore.SearchDoubleField;
  rate?: PlatformCore.SearchDoubleField;
  rule?: PlatformCore.SearchMultiSelectField;
  runId?: PlatformCore.SearchStringField;
  salesOrder?: PlatformCore.SearchLongField;
  stage?: PlatformCore.SearchEnumMultiSelectField;
  subscriptionLine?: PlatformCore.SearchMultiSelectField;
  use?: PlatformCore.SearchEnumMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class ChargeSearchBasic extends PlatformCore.SearchRecordBasic {
  amount?: PlatformCore.SearchDoubleField;
  billingAccount?: PlatformCore.SearchMultiSelectField;
  billingItem?: PlatformCore.SearchMultiSelectField;
  billTo?: PlatformCore.SearchMultiSelectField;
  chargeDate?: PlatformCore.SearchDateField;
  chargeType?: PlatformCore.SearchMultiSelectField;
  clazz?: PlatformCore.SearchMultiSelectField;
  createdDate?: PlatformCore.SearchDateField;
  currency?: PlatformCore.SearchMultiSelectField;
  department?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  location?: PlatformCore.SearchMultiSelectField;
  modifiedDate?: PlatformCore.SearchDateField;
  postingPeriod?: PlatformCore.RecordRef;
  postingPeriodRelative?: PlatformCommonTypes.PostingPeriodDate;
  quantity?: PlatformCore.SearchDoubleField;
  rate?: PlatformCore.SearchDoubleField;
  rule?: PlatformCore.SearchMultiSelectField;
  runId?: PlatformCore.SearchStringField;
  salesOrder?: PlatformCore.SearchLongField;
  stage?: PlatformCore.SearchEnumMultiSelectField;
  subscriptionLine?: PlatformCore.SearchMultiSelectField;
  use?: PlatformCore.SearchEnumMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: ChargeSearchBasicProps) {
    super();
    this.amount = props.amount;
    this.billingAccount = props.billingAccount;
    this.billingItem = props.billingItem;
    this.billTo = props.billTo;
    this.chargeDate = props.chargeDate;
    this.chargeType = props.chargeType;
    this.clazz = props.clazz;
    this.createdDate = props.createdDate;
    this.currency = props.currency;
    this.department = props.department;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.location = props.location;
    this.modifiedDate = props.modifiedDate;
    this.postingPeriod = props.postingPeriod;
    this.postingPeriodRelative = props.postingPeriodRelative;
    this.quantity = props.quantity;
    this.rate = props.rate;
    this.rule = props.rule;
    this.runId = props.runId;
    this.salesOrder = props.salesOrder;
    this.stage = props.stage;
    this.subscriptionLine = props.subscriptionLine;
    this.use = props.use;
    this.customFieldList = props.customFieldList;
  }
}

export type MessageSearchBasicProps = {
  author?: PlatformCore.SearchMultiSelectField;
  authorEmail?: PlatformCore.SearchStringField;
  bcc?: PlatformCore.SearchStringField;
  cc?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  hasAttachment?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  internalOnly?: PlatformCore.SearchBooleanField;
  message?: PlatformCore.SearchStringField;
  messageDate?: PlatformCore.SearchDateField;
  messageType?: PlatformCore.SearchEnumMultiSelectField;
  recipient?: PlatformCore.SearchMultiSelectField;
  recipientEmail?: PlatformCore.SearchStringField;
  subject?: PlatformCore.SearchStringField;
};

export class MessageSearchBasic extends PlatformCore.SearchRecordBasic {
  author?: PlatformCore.SearchMultiSelectField;
  authorEmail?: PlatformCore.SearchStringField;
  bcc?: PlatformCore.SearchStringField;
  cc?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  hasAttachment?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  internalOnly?: PlatformCore.SearchBooleanField;
  message?: PlatformCore.SearchStringField;
  messageDate?: PlatformCore.SearchDateField;
  messageType?: PlatformCore.SearchEnumMultiSelectField;
  recipient?: PlatformCore.SearchMultiSelectField;
  recipientEmail?: PlatformCore.SearchStringField;
  subject?: PlatformCore.SearchStringField;
  constructor(props: MessageSearchBasicProps) {
    super();
    this.author = props.author;
    this.authorEmail = props.authorEmail;
    this.bcc = props.bcc;
    this.cc = props.cc;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.hasAttachment = props.hasAttachment;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.internalOnly = props.internalOnly;
    this.message = props.message;
    this.messageDate = props.messageDate;
    this.messageType = props.messageType;
    this.recipient = props.recipient;
    this.recipientEmail = props.recipientEmail;
    this.subject = props.subject;
  }
}

export type PaymentMethodSearchRowBasicProps = {
  account?: PlatformCore.SearchColumnSelectField[];
  creditCard?: PlatformCore.SearchColumnBooleanField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isDebitCard?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
};

export class PaymentMethodSearchRowBasic extends PlatformCore.SearchRowBasic {
  account?: PlatformCore.SearchColumnSelectField[];
  creditCard?: PlatformCore.SearchColumnBooleanField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isDebitCard?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  constructor(props: PaymentMethodSearchRowBasicProps) {
    super();
    this.account = props.account;
    this.creditCard = props.creditCard;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isDebitCard = props.isDebitCard;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type TopicSearchBasicProps = {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
};

export class TopicSearchBasic extends PlatformCore.SearchRecordBasic {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  constructor(props: TopicSearchBasicProps) {
    super();
    this.description = props.description;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type JobStatusSearchRowBasicProps = {
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
};

export class JobStatusSearchRowBasic extends PlatformCore.SearchRowBasic {
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  constructor(props: JobStatusSearchRowBasicProps) {
    super();
    this.description = props.description;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type CurrencyRateSearchBasicProps = {
  baseCurrency?: PlatformCore.SearchMultiSelectField;
  effectiveDate?: PlatformCore.SearchDateField;
  exchangeRate?: PlatformCore.SearchDoubleField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  transactionCurrency?: PlatformCore.SearchMultiSelectField;
};

export class CurrencyRateSearchBasic extends PlatformCore.SearchRecordBasic {
  baseCurrency?: PlatformCore.SearchMultiSelectField;
  effectiveDate?: PlatformCore.SearchDateField;
  exchangeRate?: PlatformCore.SearchDoubleField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  transactionCurrency?: PlatformCore.SearchMultiSelectField;
  constructor(props: CurrencyRateSearchBasicProps) {
    super();
    this.baseCurrency = props.baseCurrency;
    this.effectiveDate = props.effectiveDate;
    this.exchangeRate = props.exchangeRate;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.transactionCurrency = props.transactionCurrency;
  }
}

export type LandedCostDataProps = {
  costCategory?: PlatformCore.RecordRef;
  amount?: number;
};

export class LandedCostData {
  costCategory?: PlatformCore.RecordRef;
  amount?: number;
  constructor(props: LandedCostDataProps) {
    this.costCategory = props.costCategory;
    this.amount = props.amount;
  }
}

export type ChargeSearchRowBasicProps = {
  amount?: PlatformCore.SearchColumnDoubleField[];
  billingAccount?: PlatformCore.SearchColumnSelectField[];
  billingItem?: PlatformCore.SearchColumnSelectField[];
  billTo?: PlatformCore.SearchColumnSelectField[];
  chargeDate?: PlatformCore.SearchColumnDateField[];
  chargeType?: PlatformCore.SearchColumnSelectField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  department?: PlatformCore.SearchColumnSelectField[];
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  modifiedDate?: PlatformCore.SearchColumnDateField[];
  postingPeriod?: PlatformCore.SearchColumnStringField[];
  quantity?: PlatformCore.SearchColumnStringField[];
  rate?: PlatformCore.SearchColumnStringField[];
  rule?: PlatformCore.SearchColumnSelectField[];
  runId?: PlatformCore.SearchColumnStringField[];
  salesOrder?: PlatformCore.SearchColumnStringField[];
  stage?: PlatformCore.SearchColumnEnumSelectField[];
  subscriptionLine?: PlatformCore.SearchColumnSelectField[];
  use?: PlatformCore.SearchColumnEnumSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class ChargeSearchRowBasic extends PlatformCore.SearchRowBasic {
  amount?: PlatformCore.SearchColumnDoubleField[];
  billingAccount?: PlatformCore.SearchColumnSelectField[];
  billingItem?: PlatformCore.SearchColumnSelectField[];
  billTo?: PlatformCore.SearchColumnSelectField[];
  chargeDate?: PlatformCore.SearchColumnDateField[];
  chargeType?: PlatformCore.SearchColumnSelectField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  department?: PlatformCore.SearchColumnSelectField[];
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  modifiedDate?: PlatformCore.SearchColumnDateField[];
  postingPeriod?: PlatformCore.SearchColumnStringField[];
  quantity?: PlatformCore.SearchColumnStringField[];
  rate?: PlatformCore.SearchColumnStringField[];
  rule?: PlatformCore.SearchColumnSelectField[];
  runId?: PlatformCore.SearchColumnStringField[];
  salesOrder?: PlatformCore.SearchColumnStringField[];
  stage?: PlatformCore.SearchColumnEnumSelectField[];
  subscriptionLine?: PlatformCore.SearchColumnSelectField[];
  use?: PlatformCore.SearchColumnEnumSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: ChargeSearchRowBasicProps) {
    super();
    this.amount = props.amount;
    this.billingAccount = props.billingAccount;
    this.billingItem = props.billingItem;
    this.billTo = props.billTo;
    this.chargeDate = props.chargeDate;
    this.chargeType = props.chargeType;
    this.clazz = props.clazz;
    this.createdDate = props.createdDate;
    this.currency = props.currency;
    this.department = props.department;
    this.description = props.description;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.location = props.location;
    this.modifiedDate = props.modifiedDate;
    this.postingPeriod = props.postingPeriod;
    this.quantity = props.quantity;
    this.rate = props.rate;
    this.rule = props.rule;
    this.runId = props.runId;
    this.salesOrder = props.salesOrder;
    this.stage = props.stage;
    this.subscriptionLine = props.subscriptionLine;
    this.use = props.use;
    this.customFieldList = props.customFieldList;
  }
}

export type ManufacturingRoutingSearchBasicProps = {
  autoCalculateLag?: PlatformCore.SearchBooleanField;
  billOfMaterials?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDefault?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  lagAmount?: PlatformCore.SearchDoubleField;
  lagType?: PlatformCore.SearchEnumMultiSelectField;
  lagUnits?: PlatformCore.SearchStringField;
  location?: PlatformCore.SearchMultiSelectField;
  manufacturingCostTemplate?: PlatformCore.SearchMultiSelectField;
  manufacturingWorkCenter?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
  operationName?: PlatformCore.SearchStringField;
  operationYield?: PlatformCore.SearchDoubleField;
  runRate?: PlatformCore.SearchDoubleField;
  sequence?: PlatformCore.SearchLongField;
  setupTime?: PlatformCore.SearchDoubleField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class ManufacturingRoutingSearchBasic extends PlatformCore.SearchRecordBasic {
  autoCalculateLag?: PlatformCore.SearchBooleanField;
  billOfMaterials?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDefault?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  lagAmount?: PlatformCore.SearchDoubleField;
  lagType?: PlatformCore.SearchEnumMultiSelectField;
  lagUnits?: PlatformCore.SearchStringField;
  location?: PlatformCore.SearchMultiSelectField;
  manufacturingCostTemplate?: PlatformCore.SearchMultiSelectField;
  manufacturingWorkCenter?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
  operationName?: PlatformCore.SearchStringField;
  operationYield?: PlatformCore.SearchDoubleField;
  runRate?: PlatformCore.SearchDoubleField;
  sequence?: PlatformCore.SearchLongField;
  setupTime?: PlatformCore.SearchDoubleField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: ManufacturingRoutingSearchBasicProps) {
    super();
    this.autoCalculateLag = props.autoCalculateLag;
    this.billOfMaterials = props.billOfMaterials;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isDefault = props.isDefault;
    this.isInactive = props.isInactive;
    this.item = props.item;
    this.lagAmount = props.lagAmount;
    this.lagType = props.lagType;
    this.lagUnits = props.lagUnits;
    this.location = props.location;
    this.manufacturingCostTemplate = props.manufacturingCostTemplate;
    this.manufacturingWorkCenter = props.manufacturingWorkCenter;
    this.memo = props.memo;
    this.name = props.name;
    this.operationName = props.operationName;
    this.operationYield = props.operationYield;
    this.runRate = props.runRate;
    this.sequence = props.sequence;
    this.setupTime = props.setupTime;
    this.subsidiary = props.subsidiary;
    this.customFieldList = props.customFieldList;
  }
}

export type OpportunitySearchBasicProps = {
  amount?: PlatformCore.SearchDoubleField;
  availableOffline?: PlatformCore.SearchBooleanField;
  buyingReason?: PlatformCore.SearchMultiSelectField;
  buyingTimeFrame?: PlatformCore.SearchMultiSelectField;
  clazz?: PlatformCore.SearchMultiSelectField;
  closeDate?: PlatformCore.SearchDateField;
  competitor?: PlatformCore.SearchMultiSelectField;
  contribution?: PlatformCore.SearchLongField;
  currency?: PlatformCore.SearchMultiSelectField;
  custType?: PlatformCore.SearchMultiSelectField;
  dateCreated?: PlatformCore.SearchDateField;
  daysOpen?: PlatformCore.SearchLongField;
  daysToClose?: PlatformCore.SearchLongField;
  department?: PlatformCore.SearchMultiSelectField;
  entity?: PlatformCore.SearchMultiSelectField;
  entityStatus?: PlatformCore.SearchMultiSelectField;
  estimatedBudget?: PlatformCore.SearchDoubleField;
  expectedCloseDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  forecastType?: PlatformCore.SearchEnumMultiSelectField;
  foreignProjectedAmount?: PlatformCore.SearchDoubleField;
  foreignRangeHigh?: PlatformCore.SearchDoubleField;
  foreignRangeLow?: PlatformCore.SearchDoubleField;
  fxTranCostEstimate?: PlatformCore.SearchDoubleField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isBudgetApproved?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  leadSource?: PlatformCore.SearchMultiSelectField;
  location?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  number?: PlatformCore.SearchLongField;
  partner?: PlatformCore.SearchMultiSelectField;
  partnerContribution?: PlatformCore.SearchLongField;
  partnerRole?: PlatformCore.SearchMultiSelectField;
  partnerTeamMember?: PlatformCore.SearchMultiSelectField;
  postingPeriod?: PlatformCore.RecordRef;
  postingPeriodRelative?: PlatformCommonTypes.PostingPeriodDate;
  probability?: PlatformCore.SearchLongField;
  projAltSalesAmt?: PlatformCore.SearchDoubleField;
  projectedTotal?: PlatformCore.SearchDoubleField;
  rangeHigh?: PlatformCore.SearchDoubleField;
  rangeHighAlt?: PlatformCore.SearchDoubleField;
  rangeLow?: PlatformCore.SearchDoubleField;
  rangeLowAlt?: PlatformCore.SearchDoubleField;
  salesReadiness?: PlatformCore.SearchMultiSelectField;
  salesRep?: PlatformCore.SearchMultiSelectField;
  salesTeamMember?: PlatformCore.SearchMultiSelectField;
  salesTeamRole?: PlatformCore.SearchMultiSelectField;
  status?: PlatformCore.SearchEnumMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  taxPeriod?: PlatformCore.RecordRef;
  taxPeriodRelative?: PlatformCommonTypes.PostingPeriodDate;
  title?: PlatformCore.SearchStringField;
  tranCostEstimate?: PlatformCore.SearchDoubleField;
  tranDate?: PlatformCore.SearchDateField;
  tranEstGrossProfit?: PlatformCore.SearchDoubleField;
  tranEstGrossProfitPct?: PlatformCore.SearchDoubleField;
  tranFxEstGrossProfit?: PlatformCore.SearchDoubleField;
  tranId?: PlatformCore.SearchStringField;
  winLossReason?: PlatformCore.SearchMultiSelectField;
  wonBy?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class OpportunitySearchBasic extends PlatformCore.SearchRecordBasic {
  amount?: PlatformCore.SearchDoubleField;
  availableOffline?: PlatformCore.SearchBooleanField;
  buyingReason?: PlatformCore.SearchMultiSelectField;
  buyingTimeFrame?: PlatformCore.SearchMultiSelectField;
  clazz?: PlatformCore.SearchMultiSelectField;
  closeDate?: PlatformCore.SearchDateField;
  competitor?: PlatformCore.SearchMultiSelectField;
  contribution?: PlatformCore.SearchLongField;
  currency?: PlatformCore.SearchMultiSelectField;
  custType?: PlatformCore.SearchMultiSelectField;
  dateCreated?: PlatformCore.SearchDateField;
  daysOpen?: PlatformCore.SearchLongField;
  daysToClose?: PlatformCore.SearchLongField;
  department?: PlatformCore.SearchMultiSelectField;
  entity?: PlatformCore.SearchMultiSelectField;
  entityStatus?: PlatformCore.SearchMultiSelectField;
  estimatedBudget?: PlatformCore.SearchDoubleField;
  expectedCloseDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  forecastType?: PlatformCore.SearchEnumMultiSelectField;
  foreignProjectedAmount?: PlatformCore.SearchDoubleField;
  foreignRangeHigh?: PlatformCore.SearchDoubleField;
  foreignRangeLow?: PlatformCore.SearchDoubleField;
  fxTranCostEstimate?: PlatformCore.SearchDoubleField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isBudgetApproved?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  leadSource?: PlatformCore.SearchMultiSelectField;
  location?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  number?: PlatformCore.SearchLongField;
  partner?: PlatformCore.SearchMultiSelectField;
  partnerContribution?: PlatformCore.SearchLongField;
  partnerRole?: PlatformCore.SearchMultiSelectField;
  partnerTeamMember?: PlatformCore.SearchMultiSelectField;
  postingPeriod?: PlatformCore.RecordRef;
  postingPeriodRelative?: PlatformCommonTypes.PostingPeriodDate;
  probability?: PlatformCore.SearchLongField;
  projAltSalesAmt?: PlatformCore.SearchDoubleField;
  projectedTotal?: PlatformCore.SearchDoubleField;
  rangeHigh?: PlatformCore.SearchDoubleField;
  rangeHighAlt?: PlatformCore.SearchDoubleField;
  rangeLow?: PlatformCore.SearchDoubleField;
  rangeLowAlt?: PlatformCore.SearchDoubleField;
  salesReadiness?: PlatformCore.SearchMultiSelectField;
  salesRep?: PlatformCore.SearchMultiSelectField;
  salesTeamMember?: PlatformCore.SearchMultiSelectField;
  salesTeamRole?: PlatformCore.SearchMultiSelectField;
  status?: PlatformCore.SearchEnumMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  taxPeriod?: PlatformCore.RecordRef;
  taxPeriodRelative?: PlatformCommonTypes.PostingPeriodDate;
  title?: PlatformCore.SearchStringField;
  tranCostEstimate?: PlatformCore.SearchDoubleField;
  tranDate?: PlatformCore.SearchDateField;
  tranEstGrossProfit?: PlatformCore.SearchDoubleField;
  tranEstGrossProfitPct?: PlatformCore.SearchDoubleField;
  tranFxEstGrossProfit?: PlatformCore.SearchDoubleField;
  tranId?: PlatformCore.SearchStringField;
  winLossReason?: PlatformCore.SearchMultiSelectField;
  wonBy?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: OpportunitySearchBasicProps) {
    super();
    this.amount = props.amount;
    this.availableOffline = props.availableOffline;
    this.buyingReason = props.buyingReason;
    this.buyingTimeFrame = props.buyingTimeFrame;
    this.clazz = props.clazz;
    this.closeDate = props.closeDate;
    this.competitor = props.competitor;
    this.contribution = props.contribution;
    this.currency = props.currency;
    this.custType = props.custType;
    this.dateCreated = props.dateCreated;
    this.daysOpen = props.daysOpen;
    this.daysToClose = props.daysToClose;
    this.department = props.department;
    this.entity = props.entity;
    this.entityStatus = props.entityStatus;
    this.estimatedBudget = props.estimatedBudget;
    this.expectedCloseDate = props.expectedCloseDate;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.forecastType = props.forecastType;
    this.foreignProjectedAmount = props.foreignProjectedAmount;
    this.foreignRangeHigh = props.foreignRangeHigh;
    this.foreignRangeLow = props.foreignRangeLow;
    this.fxTranCostEstimate = props.fxTranCostEstimate;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isBudgetApproved = props.isBudgetApproved;
    this.item = props.item;
    this.lastModifiedDate = props.lastModifiedDate;
    this.leadSource = props.leadSource;
    this.location = props.location;
    this.memo = props.memo;
    this.number = props.number;
    this.partner = props.partner;
    this.partnerContribution = props.partnerContribution;
    this.partnerRole = props.partnerRole;
    this.partnerTeamMember = props.partnerTeamMember;
    this.postingPeriod = props.postingPeriod;
    this.postingPeriodRelative = props.postingPeriodRelative;
    this.probability = props.probability;
    this.projAltSalesAmt = props.projAltSalesAmt;
    this.projectedTotal = props.projectedTotal;
    this.rangeHigh = props.rangeHigh;
    this.rangeHighAlt = props.rangeHighAlt;
    this.rangeLow = props.rangeLow;
    this.rangeLowAlt = props.rangeLowAlt;
    this.salesReadiness = props.salesReadiness;
    this.salesRep = props.salesRep;
    this.salesTeamMember = props.salesTeamMember;
    this.salesTeamRole = props.salesTeamRole;
    this.status = props.status;
    this.subsidiary = props.subsidiary;
    this.taxPeriod = props.taxPeriod;
    this.taxPeriodRelative = props.taxPeriodRelative;
    this.title = props.title;
    this.tranCostEstimate = props.tranCostEstimate;
    this.tranDate = props.tranDate;
    this.tranEstGrossProfit = props.tranEstGrossProfit;
    this.tranEstGrossProfitPct = props.tranEstGrossProfitPct;
    this.tranFxEstGrossProfit = props.tranFxEstGrossProfit;
    this.tranId = props.tranId;
    this.winLossReason = props.winLossReason;
    this.wonBy = props.wonBy;
    this.customFieldList = props.customFieldList;
  }
}

export type GroupMemberSearchBasicProps = {
  groupId: PlatformCore.RecordRef;
};

export class GroupMemberSearchBasic extends PlatformCore.SearchRecordBasic {
  groupId: PlatformCore.RecordRef;
  constructor(props: GroupMemberSearchBasicProps) {
    super();
    this.groupId = props.groupId;
  }
}

export type EntitySearchBasicProps = {
  address?: PlatformCore.SearchStringField;
  addressee?: PlatformCore.SearchStringField;
  addressLabel?: PlatformCore.SearchStringField;
  addressPhone?: PlatformCore.SearchStringField;
  attention?: PlatformCore.SearchStringField;
  city?: PlatformCore.SearchStringField;
  comments?: PlatformCore.SearchStringField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  dateCreated?: PlatformCore.SearchDateField;
  defaultTaxReg?: PlatformCore.SearchMultiSelectField;
  defaultTaxRegText?: PlatformCore.SearchStringField;
  email?: PlatformCore.SearchStringField;
  entityId?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  giveAccess?: PlatformCore.SearchBooleanField;
  globalSubscriptionStatus?: PlatformCore.SearchEnumMultiSelectField;
  image?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDefaultBilling?: PlatformCore.SearchBooleanField;
  isDefaultShipping?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  language?: PlatformCore.SearchEnumMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  level?: PlatformCore.SearchEnumMultiSelectField;
  permission?: PlatformCore.SearchEnumMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  phoneticName?: PlatformCore.SearchStringField;
  state?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  type?: PlatformCore.SearchEnumMultiSelectField;
  zipCode?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class EntitySearchBasic extends PlatformCore.SearchRecordBasic {
  address?: PlatformCore.SearchStringField;
  addressee?: PlatformCore.SearchStringField;
  addressLabel?: PlatformCore.SearchStringField;
  addressPhone?: PlatformCore.SearchStringField;
  attention?: PlatformCore.SearchStringField;
  city?: PlatformCore.SearchStringField;
  comments?: PlatformCore.SearchStringField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  dateCreated?: PlatformCore.SearchDateField;
  defaultTaxReg?: PlatformCore.SearchMultiSelectField;
  defaultTaxRegText?: PlatformCore.SearchStringField;
  email?: PlatformCore.SearchStringField;
  entityId?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  giveAccess?: PlatformCore.SearchBooleanField;
  globalSubscriptionStatus?: PlatformCore.SearchEnumMultiSelectField;
  image?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDefaultBilling?: PlatformCore.SearchBooleanField;
  isDefaultShipping?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  language?: PlatformCore.SearchEnumMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  level?: PlatformCore.SearchEnumMultiSelectField;
  permission?: PlatformCore.SearchEnumMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  phoneticName?: PlatformCore.SearchStringField;
  state?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  type?: PlatformCore.SearchEnumMultiSelectField;
  zipCode?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: EntitySearchBasicProps) {
    super();
    this.address = props.address;
    this.addressee = props.addressee;
    this.addressLabel = props.addressLabel;
    this.addressPhone = props.addressPhone;
    this.attention = props.attention;
    this.city = props.city;
    this.comments = props.comments;
    this.country = props.country;
    this.county = props.county;
    this.dateCreated = props.dateCreated;
    this.defaultTaxReg = props.defaultTaxReg;
    this.defaultTaxRegText = props.defaultTaxRegText;
    this.email = props.email;
    this.entityId = props.entityId;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.fax = props.fax;
    this.giveAccess = props.giveAccess;
    this.globalSubscriptionStatus = props.globalSubscriptionStatus;
    this.image = props.image;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isDefaultBilling = props.isDefaultBilling;
    this.isDefaultShipping = props.isDefaultShipping;
    this.isInactive = props.isInactive;
    this.language = props.language;
    this.lastModifiedDate = props.lastModifiedDate;
    this.level = props.level;
    this.permission = props.permission;
    this.phone = props.phone;
    this.phoneticName = props.phoneticName;
    this.state = props.state;
    this.subsidiary = props.subsidiary;
    this.type = props.type;
    this.zipCode = props.zipCode;
    this.customFieldList = props.customFieldList;
  }
}

export type VendorCategorySearchBasicProps = {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  isTaxAgency?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
};

export class VendorCategorySearchBasic extends PlatformCore.SearchRecordBasic {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  isTaxAgency?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  constructor(props: VendorCategorySearchBasicProps) {
    super();
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.isTaxAgency = props.isTaxAgency;
    this.name = props.name;
  }
}

export type EntityTaxRegistrationSearchBasicProps = {
  address?: PlatformCore.SearchMultiSelectField;
  id?: PlatformCore.SearchLongField;
  nexusCountry?: PlatformCore.SearchEnumMultiSelectField;
  taxRegistrationNumber?: PlatformCore.SearchStringField;
};

export class EntityTaxRegistrationSearchBasic extends PlatformCore.SearchRecordBasic {
  address?: PlatformCore.SearchMultiSelectField;
  id?: PlatformCore.SearchLongField;
  nexusCountry?: PlatformCore.SearchEnumMultiSelectField;
  taxRegistrationNumber?: PlatformCore.SearchStringField;
  constructor(props: EntityTaxRegistrationSearchBasicProps) {
    super();
    this.address = props.address;
    this.id = props.id;
    this.nexusCountry = props.nexusCountry;
    this.taxRegistrationNumber = props.taxRegistrationNumber;
  }
}

export type PhoneCallSearchBasicProps = {
  assigned?: PlatformCore.SearchMultiSelectField;
  company?: PlatformCore.SearchMultiSelectField;
  completedDate?: PlatformCore.SearchDateField;
  contact?: PlatformCore.SearchMultiSelectField;
  createdBy?: PlatformCore.SearchMultiSelectField;
  createdDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isPrivate?: PlatformCore.SearchBooleanField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  owner?: PlatformCore.SearchBooleanField;
  phone?: PlatformCore.SearchStringField;
  priority?: PlatformCore.SearchEnumMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  status?: PlatformCore.SearchEnumMultiSelectField;
  title?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class PhoneCallSearchBasic extends PlatformCore.SearchRecordBasic {
  assigned?: PlatformCore.SearchMultiSelectField;
  company?: PlatformCore.SearchMultiSelectField;
  completedDate?: PlatformCore.SearchDateField;
  contact?: PlatformCore.SearchMultiSelectField;
  createdBy?: PlatformCore.SearchMultiSelectField;
  createdDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isPrivate?: PlatformCore.SearchBooleanField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  owner?: PlatformCore.SearchBooleanField;
  phone?: PlatformCore.SearchStringField;
  priority?: PlatformCore.SearchEnumMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  status?: PlatformCore.SearchEnumMultiSelectField;
  title?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: PhoneCallSearchBasicProps) {
    super();
    this.assigned = props.assigned;
    this.company = props.company;
    this.completedDate = props.completedDate;
    this.contact = props.contact;
    this.createdBy = props.createdBy;
    this.createdDate = props.createdDate;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isPrivate = props.isPrivate;
    this.lastModifiedDate = props.lastModifiedDate;
    this.owner = props.owner;
    this.phone = props.phone;
    this.priority = props.priority;
    this.startDate = props.startDate;
    this.status = props.status;
    this.title = props.title;
    this.customFieldList = props.customFieldList;
  }
}

export type AssemblyItemBomSearchBasicProps = {
  assembly?: PlatformCore.SearchMultiSelectField;
  billOfMaterials?: PlatformCore.SearchMultiSelectField;
  _default?: PlatformCore.SearchBooleanField;
  locations?: PlatformCore.SearchMultiSelectField;
};

export class AssemblyItemBomSearchBasic extends PlatformCore.SearchRecordBasic {
  assembly?: PlatformCore.SearchMultiSelectField;
  billOfMaterials?: PlatformCore.SearchMultiSelectField;
  _default?: PlatformCore.SearchBooleanField;
  locations?: PlatformCore.SearchMultiSelectField;
  constructor(props: AssemblyItemBomSearchBasicProps) {
    super();
    this.assembly = props.assembly;
    this.billOfMaterials = props.billOfMaterials;
    this._default = props._default;
    this.locations = props.locations;
  }
}

export type ProjectTaskSearchBasicProps = {
  actualWork?: PlatformCore.SearchDoubleField;
  assignee?: PlatformCore.SearchMultiSelectField;
  company?: PlatformCore.SearchMultiSelectField;
  constraintType?: PlatformCore.SearchEnumMultiSelectField;
  contact?: PlatformCore.SearchMultiSelectField;
  cost?: PlatformCore.SearchDoubleField;
  costBase?: PlatformCore.SearchDoubleField;
  costBaseBaseline?: PlatformCore.SearchDoubleField;
  costBaseline?: PlatformCore.SearchDoubleField;
  costBaseVariance?: PlatformCore.SearchDoubleField;
  costVariance?: PlatformCore.SearchDoubleField;
  costVariancePercent?: PlatformCore.SearchDoubleField;
  createdDate?: PlatformCore.SearchDateField;
  endDate?: PlatformCore.SearchDateField;
  endDateBaseline?: PlatformCore.SearchDateField;
  endDateVariance?: PlatformCore.SearchDoubleField;
  estimatedWork?: PlatformCore.SearchDoubleField;
  estimatedWorkBaseline?: PlatformCore.SearchDoubleField;
  estimatedWorkVariance?: PlatformCore.SearchDoubleField;
  estimatedWorkVariancePercent?: PlatformCore.SearchDoubleField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  finishByDate?: PlatformCore.SearchDateField;
  id?: PlatformCore.SearchLongField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isMilestone?: PlatformCore.SearchBooleanField;
  isSummaryTask?: PlatformCore.SearchBooleanField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  nonBillableTask?: PlatformCore.SearchBooleanField;
  owner?: PlatformCore.SearchMultiSelectField;
  parent?: PlatformCore.SearchMultiSelectField;
  percentWorkComplete?: PlatformCore.SearchDoubleField;
  predecessor?: PlatformCore.SearchMultiSelectField;
  predecessors?: PlatformCore.SearchStringField;
  priority?: PlatformCore.SearchEnumMultiSelectField;
  remainingWork?: PlatformCore.SearchDoubleField;
  startDate?: PlatformCore.SearchDateField;
  startDateBaseline?: PlatformCore.SearchDateField;
  startDateVariance?: PlatformCore.SearchDoubleField;
  status?: PlatformCore.SearchEnumMultiSelectField;
  successor?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class ProjectTaskSearchBasic extends PlatformCore.SearchRecordBasic {
  actualWork?: PlatformCore.SearchDoubleField;
  assignee?: PlatformCore.SearchMultiSelectField;
  company?: PlatformCore.SearchMultiSelectField;
  constraintType?: PlatformCore.SearchEnumMultiSelectField;
  contact?: PlatformCore.SearchMultiSelectField;
  cost?: PlatformCore.SearchDoubleField;
  costBase?: PlatformCore.SearchDoubleField;
  costBaseBaseline?: PlatformCore.SearchDoubleField;
  costBaseline?: PlatformCore.SearchDoubleField;
  costBaseVariance?: PlatformCore.SearchDoubleField;
  costVariance?: PlatformCore.SearchDoubleField;
  costVariancePercent?: PlatformCore.SearchDoubleField;
  createdDate?: PlatformCore.SearchDateField;
  endDate?: PlatformCore.SearchDateField;
  endDateBaseline?: PlatformCore.SearchDateField;
  endDateVariance?: PlatformCore.SearchDoubleField;
  estimatedWork?: PlatformCore.SearchDoubleField;
  estimatedWorkBaseline?: PlatformCore.SearchDoubleField;
  estimatedWorkVariance?: PlatformCore.SearchDoubleField;
  estimatedWorkVariancePercent?: PlatformCore.SearchDoubleField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  finishByDate?: PlatformCore.SearchDateField;
  id?: PlatformCore.SearchLongField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isMilestone?: PlatformCore.SearchBooleanField;
  isSummaryTask?: PlatformCore.SearchBooleanField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  nonBillableTask?: PlatformCore.SearchBooleanField;
  owner?: PlatformCore.SearchMultiSelectField;
  parent?: PlatformCore.SearchMultiSelectField;
  percentWorkComplete?: PlatformCore.SearchDoubleField;
  predecessor?: PlatformCore.SearchMultiSelectField;
  predecessors?: PlatformCore.SearchStringField;
  priority?: PlatformCore.SearchEnumMultiSelectField;
  remainingWork?: PlatformCore.SearchDoubleField;
  startDate?: PlatformCore.SearchDateField;
  startDateBaseline?: PlatformCore.SearchDateField;
  startDateVariance?: PlatformCore.SearchDoubleField;
  status?: PlatformCore.SearchEnumMultiSelectField;
  successor?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: ProjectTaskSearchBasicProps) {
    super();
    this.actualWork = props.actualWork;
    this.assignee = props.assignee;
    this.company = props.company;
    this.constraintType = props.constraintType;
    this.contact = props.contact;
    this.cost = props.cost;
    this.costBase = props.costBase;
    this.costBaseBaseline = props.costBaseBaseline;
    this.costBaseline = props.costBaseline;
    this.costBaseVariance = props.costBaseVariance;
    this.costVariance = props.costVariance;
    this.costVariancePercent = props.costVariancePercent;
    this.createdDate = props.createdDate;
    this.endDate = props.endDate;
    this.endDateBaseline = props.endDateBaseline;
    this.endDateVariance = props.endDateVariance;
    this.estimatedWork = props.estimatedWork;
    this.estimatedWorkBaseline = props.estimatedWorkBaseline;
    this.estimatedWorkVariance = props.estimatedWorkVariance;
    this.estimatedWorkVariancePercent = props.estimatedWorkVariancePercent;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.finishByDate = props.finishByDate;
    this.id = props.id;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isMilestone = props.isMilestone;
    this.isSummaryTask = props.isSummaryTask;
    this.lastModifiedDate = props.lastModifiedDate;
    this.nonBillableTask = props.nonBillableTask;
    this.owner = props.owner;
    this.parent = props.parent;
    this.percentWorkComplete = props.percentWorkComplete;
    this.predecessor = props.predecessor;
    this.predecessors = props.predecessors;
    this.priority = props.priority;
    this.remainingWork = props.remainingWork;
    this.startDate = props.startDate;
    this.startDateBaseline = props.startDateBaseline;
    this.startDateVariance = props.startDateVariance;
    this.status = props.status;
    this.successor = props.successor;
    this.title = props.title;
    this.customFieldList = props.customFieldList;
  }
}

export type AddressSearchRowBasicProps = {
  address?: PlatformCore.SearchColumnStringField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  addressee?: PlatformCore.SearchColumnStringField[];
  attention?: PlatformCore.SearchColumnStringField[];
  city?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  countryCode?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  override?: PlatformCore.SearchColumnBooleanField[];
  phone?: PlatformCore.SearchColumnStringField[];
  state?: PlatformCore.SearchColumnStringField[];
  zip?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class AddressSearchRowBasic extends PlatformCore.SearchRowBasic {
  address?: PlatformCore.SearchColumnStringField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  addressee?: PlatformCore.SearchColumnStringField[];
  attention?: PlatformCore.SearchColumnStringField[];
  city?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  countryCode?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  override?: PlatformCore.SearchColumnBooleanField[];
  phone?: PlatformCore.SearchColumnStringField[];
  state?: PlatformCore.SearchColumnStringField[];
  zip?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: AddressSearchRowBasicProps) {
    super();
    this.address = props.address;
    this.address1 = props.address1;
    this.address2 = props.address2;
    this.address3 = props.address3;
    this.addressee = props.addressee;
    this.attention = props.attention;
    this.city = props.city;
    this.country = props.country;
    this.countryCode = props.countryCode;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.override = props.override;
    this.phone = props.phone;
    this.state = props.state;
    this.zip = props.zip;
    this.customFieldList = props.customFieldList;
  }
}

export type CustomerSubsidiaryRelationshipSearchBasicProps = {
  balance?: PlatformCore.SearchDoubleField;
  depositBalance?: PlatformCore.SearchDoubleField;
  entity?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isPrimarySub?: PlatformCore.SearchBooleanField;
  primaryCurrency?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  unbilledOrders?: PlatformCore.SearchDoubleField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class CustomerSubsidiaryRelationshipSearchBasic extends PlatformCore.SearchRecordBasic {
  balance?: PlatformCore.SearchDoubleField;
  depositBalance?: PlatformCore.SearchDoubleField;
  entity?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isPrimarySub?: PlatformCore.SearchBooleanField;
  primaryCurrency?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  unbilledOrders?: PlatformCore.SearchDoubleField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: CustomerSubsidiaryRelationshipSearchBasicProps) {
    super();
    this.balance = props.balance;
    this.depositBalance = props.depositBalance;
    this.entity = props.entity;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isPrimarySub = props.isPrimarySub;
    this.primaryCurrency = props.primaryCurrency;
    this.subsidiary = props.subsidiary;
    this.unbilledOrders = props.unbilledOrders;
    this.customFieldList = props.customFieldList;
  }
}

export type PricingGroupSearchBasicProps = {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
};

export class PricingGroupSearchBasic extends PlatformCore.SearchRecordBasic {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  constructor(props: PricingGroupSearchBasicProps) {
    super();
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type BillingAccountSearchBasicProps = {
  billingSchedule?: PlatformCore.SearchMultiSelectField;
  cashSaleForm?: PlatformCore.SearchMultiSelectField;
  clazz?: PlatformCore.SearchMultiSelectField;
  currency?: PlatformCore.SearchMultiSelectField;
  customer?: PlatformCore.SearchMultiSelectField;
  customerDefault?: PlatformCore.SearchBooleanField;
  dateCreated?: PlatformCore.SearchDateField;
  department?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  frequency?: PlatformCore.SearchEnumMultiSelectField;
  idNumber?: PlatformCore.SearchStringField;
  inactive?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  invoiceForm?: PlatformCore.SearchMultiSelectField;
  lastBillCycleDate?: PlatformCore.SearchDateField;
  lastBillDate?: PlatformCore.SearchDateField;
  location?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
  nextBillCycleDate?: PlatformCore.SearchDateField;
  startDate?: PlatformCore.SearchDateField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class BillingAccountSearchBasic extends PlatformCore.SearchRecordBasic {
  billingSchedule?: PlatformCore.SearchMultiSelectField;
  cashSaleForm?: PlatformCore.SearchMultiSelectField;
  clazz?: PlatformCore.SearchMultiSelectField;
  currency?: PlatformCore.SearchMultiSelectField;
  customer?: PlatformCore.SearchMultiSelectField;
  customerDefault?: PlatformCore.SearchBooleanField;
  dateCreated?: PlatformCore.SearchDateField;
  department?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  frequency?: PlatformCore.SearchEnumMultiSelectField;
  idNumber?: PlatformCore.SearchStringField;
  inactive?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  invoiceForm?: PlatformCore.SearchMultiSelectField;
  lastBillCycleDate?: PlatformCore.SearchDateField;
  lastBillDate?: PlatformCore.SearchDateField;
  location?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
  nextBillCycleDate?: PlatformCore.SearchDateField;
  startDate?: PlatformCore.SearchDateField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: BillingAccountSearchBasicProps) {
    super();
    this.billingSchedule = props.billingSchedule;
    this.cashSaleForm = props.cashSaleForm;
    this.clazz = props.clazz;
    this.currency = props.currency;
    this.customer = props.customer;
    this.customerDefault = props.customerDefault;
    this.dateCreated = props.dateCreated;
    this.department = props.department;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.frequency = props.frequency;
    this.idNumber = props.idNumber;
    this.inactive = props.inactive;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.invoiceForm = props.invoiceForm;
    this.lastBillCycleDate = props.lastBillCycleDate;
    this.lastBillDate = props.lastBillDate;
    this.location = props.location;
    this.memo = props.memo;
    this.name = props.name;
    this.nextBillCycleDate = props.nextBillCycleDate;
    this.startDate = props.startDate;
    this.subsidiary = props.subsidiary;
    this.customFieldList = props.customFieldList;
  }
}

export type PresentationItemProps = {
  item?: PlatformCore.RecordRef;
  itemType?: PlatformCommonTypes.PresentationItemType;
  description?: string;
  onlinePrice?: number;
  basePrice?: number;
};

export class PresentationItem {
  item?: PlatformCore.RecordRef;
  itemType?: PlatformCommonTypes.PresentationItemType;
  description?: string;
  onlinePrice?: number;
  basePrice?: number;
  constructor(props: PresentationItemProps) {
    this.item = props.item;
    this.itemType = props.itemType;
    this.description = props.description;
    this.onlinePrice = props.onlinePrice;
    this.basePrice = props.basePrice;
  }
}

export type PayrollItemSearchBasicProps = {
  expenseAccount?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  itemTypeNoHierarchy?: PlatformCore.SearchEnumMultiSelectField;
  liabilityAccount?: PlatformCore.SearchMultiSelectField;
  name?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  vendor?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class PayrollItemSearchBasic extends PlatformCore.SearchRecordBasic {
  expenseAccount?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  itemTypeNoHierarchy?: PlatformCore.SearchEnumMultiSelectField;
  liabilityAccount?: PlatformCore.SearchMultiSelectField;
  name?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  vendor?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: PayrollItemSearchBasicProps) {
    super();
    this.expenseAccount = props.expenseAccount;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.itemTypeNoHierarchy = props.itemTypeNoHierarchy;
    this.liabilityAccount = props.liabilityAccount;
    this.name = props.name;
    this.subsidiary = props.subsidiary;
    this.vendor = props.vendor;
    this.customFieldList = props.customFieldList;
  }
}

export type ManufacturingCostTemplateSearchBasicProps = {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class ManufacturingCostTemplateSearchBasic extends PlatformCore.SearchRecordBasic {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: ManufacturingCostTemplateSearchBasicProps) {
    super();
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.item = props.item;
    this.memo = props.memo;
    this.name = props.name;
    this.subsidiary = props.subsidiary;
    this.customFieldList = props.customFieldList;
  }
}

export type NoteSearchRowBasicProps = {
  author?: PlatformCore.SearchColumnSelectField[];
  direction?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  note?: PlatformCore.SearchColumnStringField[];
  noteDate?: PlatformCore.SearchColumnDateField[];
  noteType?: PlatformCore.SearchColumnStringField[];
  title?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class NoteSearchRowBasic extends PlatformCore.SearchRowBasic {
  author?: PlatformCore.SearchColumnSelectField[];
  direction?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  note?: PlatformCore.SearchColumnStringField[];
  noteDate?: PlatformCore.SearchColumnDateField[];
  noteType?: PlatformCore.SearchColumnStringField[];
  title?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: NoteSearchRowBasicProps) {
    super();
    this.author = props.author;
    this.direction = props.direction;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.note = props.note;
    this.noteDate = props.noteDate;
    this.noteType = props.noteType;
    this.title = props.title;
    this.customFieldList = props.customFieldList;
  }
}

export type GiftCertificateSearchBasicProps = {
  amountAvailableBilled?: PlatformCore.SearchDoubleField;
  amountRemaining?: PlatformCore.SearchDoubleField;
  createdDate?: PlatformCore.SearchDateField;
  email?: PlatformCore.SearchStringField;
  expirationDate?: PlatformCore.SearchDateField;
  giftCertCode?: PlatformCore.SearchStringField;
  incomeAccount?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isActive?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  liabilityAccount?: PlatformCore.SearchMultiSelectField;
  message?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
  originalAmount?: PlatformCore.SearchDoubleField;
  purchaseDate?: PlatformCore.SearchDateField;
  sender?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class GiftCertificateSearchBasic extends PlatformCore.SearchRecordBasic {
  amountAvailableBilled?: PlatformCore.SearchDoubleField;
  amountRemaining?: PlatformCore.SearchDoubleField;
  createdDate?: PlatformCore.SearchDateField;
  email?: PlatformCore.SearchStringField;
  expirationDate?: PlatformCore.SearchDateField;
  giftCertCode?: PlatformCore.SearchStringField;
  incomeAccount?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isActive?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  liabilityAccount?: PlatformCore.SearchMultiSelectField;
  message?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
  originalAmount?: PlatformCore.SearchDoubleField;
  purchaseDate?: PlatformCore.SearchDateField;
  sender?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: GiftCertificateSearchBasicProps) {
    super();
    this.amountAvailableBilled = props.amountAvailableBilled;
    this.amountRemaining = props.amountRemaining;
    this.createdDate = props.createdDate;
    this.email = props.email;
    this.expirationDate = props.expirationDate;
    this.giftCertCode = props.giftCertCode;
    this.incomeAccount = props.incomeAccount;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isActive = props.isActive;
    this.item = props.item;
    this.liabilityAccount = props.liabilityAccount;
    this.message = props.message;
    this.name = props.name;
    this.originalAmount = props.originalAmount;
    this.purchaseDate = props.purchaseDate;
    this.sender = props.sender;
    this.customFieldList = props.customFieldList;
  }
}

export type AddressProps = {
  internalId?: string;
  country?: PlatformCommonTypes.Country;
  attention?: string;
  addressee?: string;
  addrPhone?: string;
  addr1?: string;
  addr2?: string;
  addr3?: string;
  city?: string;
  state?: string;
  zip?: string;
  addrText?: string;
  override?: boolean;
  customFieldList?: PlatformCore.CustomFieldList;
} & PlatformCore.RecordProps;

export class Address extends PlatformCore.Record {
  internalId?: string;
  country?: PlatformCommonTypes.Country;
  attention?: string;
  addressee?: string;
  addrPhone?: string;
  addr1?: string;
  addr2?: string;
  addr3?: string;
  city?: string;
  state?: string;
  zip?: string;
  addrText?: string;
  override?: boolean;
  customFieldList?: PlatformCore.CustomFieldList;
  constructor(props: AddressProps) {
    super(props);
    this.internalId = props.internalId;
    this.country = props.country;
    this.attention = props.attention;
    this.addressee = props.addressee;
    this.addrPhone = props.addrPhone;
    this.addr1 = props.addr1;
    this.addr2 = props.addr2;
    this.addr3 = props.addr3;
    this.city = props.city;
    this.state = props.state;
    this.zip = props.zip;
    this.addrText = props.addrText;
    this.override = props.override;
    this.customFieldList = props.customFieldList;
  }
}

export type CalendarEventSearchRowBasicProps = {
  accessLevel?: PlatformCore.SearchColumnEnumSelectField[];
  attendee?: PlatformCore.SearchColumnSelectField[];
  company?: PlatformCore.SearchColumnSelectField[];
  completedDate?: PlatformCore.SearchColumnDateField[];
  contact?: PlatformCore.SearchColumnSelectField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  endTime?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  instanceEnd?: PlatformCore.SearchColumnDateField[];
  instanceStart?: PlatformCore.SearchColumnDateField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  location?: PlatformCore.SearchColumnStringField[];
  markdone?: PlatformCore.SearchColumnStringField[];
  message?: PlatformCore.SearchColumnStringField[];
  organizer?: PlatformCore.SearchColumnSelectField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  recurrence?: PlatformCore.SearchColumnStringField[];
  resource?: PlatformCore.SearchColumnSelectField[];
  response?: PlatformCore.SearchColumnEnumSelectField[];
  startDate?: PlatformCore.SearchColumnStringField[];
  startTime?: PlatformCore.SearchColumnStringField[];
  status?: PlatformCore.SearchColumnEnumSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  transaction?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class CalendarEventSearchRowBasic extends PlatformCore.SearchRowBasic {
  accessLevel?: PlatformCore.SearchColumnEnumSelectField[];
  attendee?: PlatformCore.SearchColumnSelectField[];
  company?: PlatformCore.SearchColumnSelectField[];
  completedDate?: PlatformCore.SearchColumnDateField[];
  contact?: PlatformCore.SearchColumnSelectField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  endTime?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  instanceEnd?: PlatformCore.SearchColumnDateField[];
  instanceStart?: PlatformCore.SearchColumnDateField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  location?: PlatformCore.SearchColumnStringField[];
  markdone?: PlatformCore.SearchColumnStringField[];
  message?: PlatformCore.SearchColumnStringField[];
  organizer?: PlatformCore.SearchColumnSelectField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  recurrence?: PlatformCore.SearchColumnStringField[];
  resource?: PlatformCore.SearchColumnSelectField[];
  response?: PlatformCore.SearchColumnEnumSelectField[];
  startDate?: PlatformCore.SearchColumnStringField[];
  startTime?: PlatformCore.SearchColumnStringField[];
  status?: PlatformCore.SearchColumnEnumSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  transaction?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: CalendarEventSearchRowBasicProps) {
    super();
    this.accessLevel = props.accessLevel;
    this.attendee = props.attendee;
    this.company = props.company;
    this.completedDate = props.completedDate;
    this.contact = props.contact;
    this.createdDate = props.createdDate;
    this.endTime = props.endTime;
    this.externalId = props.externalId;
    this.instanceEnd = props.instanceEnd;
    this.instanceStart = props.instanceStart;
    this.internalId = props.internalId;
    this.lastModifiedDate = props.lastModifiedDate;
    this.location = props.location;
    this.markdone = props.markdone;
    this.message = props.message;
    this.organizer = props.organizer;
    this.owner = props.owner;
    this.recurrence = props.recurrence;
    this.resource = props.resource;
    this.response = props.response;
    this.startDate = props.startDate;
    this.startTime = props.startTime;
    this.status = props.status;
    this.title = props.title;
    this.transaction = props.transaction;
    this.customFieldList = props.customFieldList;
  }
}

export type CustomerCategorySearchRowBasicProps = {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
};

export class CustomerCategorySearchRowBasic extends PlatformCore.SearchRowBasic {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  constructor(props: CustomerCategorySearchRowBasicProps) {
    super();
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type AccountSearchBasicProps = {
  accountingContext?: PlatformCore.SearchMultiSelectField;
  balance?: PlatformCore.SearchDoubleField;
  cashFlowRateType?: PlatformCore.SearchEnumMultiSelectField;
  category1099Misc?: PlatformCore.SearchMultiSelectField;
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  generalRateType?: PlatformCore.SearchEnumMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  legalName?: PlatformCore.SearchStringField;
  locale?: PlatformCore.SearchEnumMultiSelectField;
  localizedLegalName?: PlatformCore.SearchStringField;
  localizedName?: PlatformCore.SearchStringField;
  localizedNumber?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
  number?: PlatformCore.SearchStringField;
  parent?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  type?: PlatformCore.SearchEnumMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class AccountSearchBasic extends PlatformCore.SearchRecordBasic {
  accountingContext?: PlatformCore.SearchMultiSelectField;
  balance?: PlatformCore.SearchDoubleField;
  cashFlowRateType?: PlatformCore.SearchEnumMultiSelectField;
  category1099Misc?: PlatformCore.SearchMultiSelectField;
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  generalRateType?: PlatformCore.SearchEnumMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  legalName?: PlatformCore.SearchStringField;
  locale?: PlatformCore.SearchEnumMultiSelectField;
  localizedLegalName?: PlatformCore.SearchStringField;
  localizedName?: PlatformCore.SearchStringField;
  localizedNumber?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
  number?: PlatformCore.SearchStringField;
  parent?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  type?: PlatformCore.SearchEnumMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: AccountSearchBasicProps) {
    super();
    this.accountingContext = props.accountingContext;
    this.balance = props.balance;
    this.cashFlowRateType = props.cashFlowRateType;
    this.category1099Misc = props.category1099Misc;
    this.description = props.description;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.generalRateType = props.generalRateType;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.legalName = props.legalName;
    this.locale = props.locale;
    this.localizedLegalName = props.localizedLegalName;
    this.localizedName = props.localizedName;
    this.localizedNumber = props.localizedNumber;
    this.name = props.name;
    this.number = props.number;
    this.parent = props.parent;
    this.subsidiary = props.subsidiary;
    this.type = props.type;
    this.customFieldList = props.customFieldList;
  }
}

export type TimeBillSearchRowBasicProps = {
  approvalStatus?: PlatformCore.SearchColumnSelectField[];
  _break?: PlatformCore.SearchColumnStringField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  customer?: PlatformCore.SearchColumnSelectField[];
  date?: PlatformCore.SearchColumnDateField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  department?: PlatformCore.SearchColumnSelectField[];
  durationDecimal?: PlatformCore.SearchColumnDoubleField[];
  employee?: PlatformCore.SearchColumnSelectField[];
  endTime?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  hours?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isBillable?: PlatformCore.SearchColumnBooleanField[];
  isExempt?: PlatformCore.SearchColumnBooleanField[];
  isProductive?: PlatformCore.SearchColumnBooleanField[];
  isUtilized?: PlatformCore.SearchColumnBooleanField[];
  item?: PlatformCore.SearchColumnStringField[];
  lastModified?: PlatformCore.SearchColumnDateField[];
  location?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  paidExternally?: PlatformCore.SearchColumnBooleanField[];
  payItem?: PlatformCore.SearchColumnSelectField[];
  payrollDate?: PlatformCore.SearchColumnDateField[];
  rate?: PlatformCore.SearchColumnDoubleField[];
  rejectionNote?: PlatformCore.SearchColumnStringField[];
  startTime?: PlatformCore.SearchColumnDateField[];
  status?: PlatformCore.SearchColumnStringField[];
  subsidiary?: PlatformCore.SearchColumnStringField[];
  supervisorApproval?: PlatformCore.SearchColumnBooleanField[];
  temporaryLocalJurisdiction?: PlatformCore.SearchColumnStringField[];
  temporaryStateJurisdiction?: PlatformCore.SearchColumnStringField[];
  timeModified?: PlatformCore.SearchColumnBooleanField[];
  timeSheet?: PlatformCore.SearchColumnSelectField[];
  type?: PlatformCore.SearchColumnEnumSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class TimeBillSearchRowBasic extends PlatformCore.SearchRowBasic {
  approvalStatus?: PlatformCore.SearchColumnSelectField[];
  _break?: PlatformCore.SearchColumnStringField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  customer?: PlatformCore.SearchColumnSelectField[];
  date?: PlatformCore.SearchColumnDateField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  department?: PlatformCore.SearchColumnSelectField[];
  durationDecimal?: PlatformCore.SearchColumnDoubleField[];
  employee?: PlatformCore.SearchColumnSelectField[];
  endTime?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  hours?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isBillable?: PlatformCore.SearchColumnBooleanField[];
  isExempt?: PlatformCore.SearchColumnBooleanField[];
  isProductive?: PlatformCore.SearchColumnBooleanField[];
  isUtilized?: PlatformCore.SearchColumnBooleanField[];
  item?: PlatformCore.SearchColumnStringField[];
  lastModified?: PlatformCore.SearchColumnDateField[];
  location?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  paidExternally?: PlatformCore.SearchColumnBooleanField[];
  payItem?: PlatformCore.SearchColumnSelectField[];
  payrollDate?: PlatformCore.SearchColumnDateField[];
  rate?: PlatformCore.SearchColumnDoubleField[];
  rejectionNote?: PlatformCore.SearchColumnStringField[];
  startTime?: PlatformCore.SearchColumnDateField[];
  status?: PlatformCore.SearchColumnStringField[];
  subsidiary?: PlatformCore.SearchColumnStringField[];
  supervisorApproval?: PlatformCore.SearchColumnBooleanField[];
  temporaryLocalJurisdiction?: PlatformCore.SearchColumnStringField[];
  temporaryStateJurisdiction?: PlatformCore.SearchColumnStringField[];
  timeModified?: PlatformCore.SearchColumnBooleanField[];
  timeSheet?: PlatformCore.SearchColumnSelectField[];
  type?: PlatformCore.SearchColumnEnumSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: TimeBillSearchRowBasicProps) {
    super();
    this.approvalStatus = props.approvalStatus;
    this._break = props._break;
    this.clazz = props.clazz;
    this.customer = props.customer;
    this.date = props.date;
    this.dateCreated = props.dateCreated;
    this.department = props.department;
    this.durationDecimal = props.durationDecimal;
    this.employee = props.employee;
    this.endTime = props.endTime;
    this.externalId = props.externalId;
    this.hours = props.hours;
    this.internalId = props.internalId;
    this.isBillable = props.isBillable;
    this.isExempt = props.isExempt;
    this.isProductive = props.isProductive;
    this.isUtilized = props.isUtilized;
    this.item = props.item;
    this.lastModified = props.lastModified;
    this.location = props.location;
    this.memo = props.memo;
    this.paidExternally = props.paidExternally;
    this.payItem = props.payItem;
    this.payrollDate = props.payrollDate;
    this.rate = props.rate;
    this.rejectionNote = props.rejectionNote;
    this.startTime = props.startTime;
    this.status = props.status;
    this.subsidiary = props.subsidiary;
    this.supervisorApproval = props.supervisorApproval;
    this.temporaryLocalJurisdiction = props.temporaryLocalJurisdiction;
    this.temporaryStateJurisdiction = props.temporaryStateJurisdiction;
    this.timeModified = props.timeModified;
    this.timeSheet = props.timeSheet;
    this.type = props.type;
    this.customFieldList = props.customFieldList;
  }
}

export type OtherNameCategorySearchRowBasicProps = {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
};

export class OtherNameCategorySearchRowBasic extends PlatformCore.SearchRowBasic {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  constructor(props: OtherNameCategorySearchRowBasicProps) {
    super();
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type SalesTaxItemSearchBasicProps = {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  itemId?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
  taxType?: PlatformCore.SearchMultiSelectField;
};

export class SalesTaxItemSearchBasic extends PlatformCore.SearchRecordBasic {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  itemId?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
  taxType?: PlatformCore.SearchMultiSelectField;
  constructor(props: SalesTaxItemSearchBasicProps) {
    super();
    this.description = props.description;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.itemId = props.itemId;
    this.name = props.name;
    this.taxType = props.taxType;
  }
}

export type ItemAccountMappingSearchBasicProps = {
  accountingBook?: PlatformCore.SearchMultiSelectField;
  clazz?: PlatformCore.SearchMultiSelectField;
  customDimension?: PlatformCore.SearchMultiSelectCustomField;
  department?: PlatformCore.SearchMultiSelectField;
  destinationAccount?: PlatformCore.SearchMultiSelectField;
  effectiveDate?: PlatformCore.SearchDateField;
  endDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  itemAccount?: PlatformCore.SearchEnumMultiSelectField;
  location?: PlatformCore.SearchMultiSelectField;
  sourceAccount?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class ItemAccountMappingSearchBasic extends PlatformCore.SearchRecordBasic {
  accountingBook?: PlatformCore.SearchMultiSelectField;
  clazz?: PlatformCore.SearchMultiSelectField;
  customDimension?: PlatformCore.SearchMultiSelectCustomField;
  department?: PlatformCore.SearchMultiSelectField;
  destinationAccount?: PlatformCore.SearchMultiSelectField;
  effectiveDate?: PlatformCore.SearchDateField;
  endDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  itemAccount?: PlatformCore.SearchEnumMultiSelectField;
  location?: PlatformCore.SearchMultiSelectField;
  sourceAccount?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: ItemAccountMappingSearchBasicProps) {
    super();
    this.accountingBook = props.accountingBook;
    this.clazz = props.clazz;
    this.customDimension = props.customDimension;
    this.department = props.department;
    this.destinationAccount = props.destinationAccount;
    this.effectiveDate = props.effectiveDate;
    this.endDate = props.endDate;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.itemAccount = props.itemAccount;
    this.location = props.location;
    this.sourceAccount = props.sourceAccount;
    this.subsidiary = props.subsidiary;
    this.customFieldList = props.customFieldList;
  }
}

export type InstallmentSearchRowBasicProps = {
  amount?: PlatformCore.SearchColumnDoubleField[];
  amountPaid?: PlatformCore.SearchColumnDoubleField[];
  amountRemaining?: PlatformCore.SearchColumnDoubleField[];
  daysOverdue?: PlatformCore.SearchColumnLongField[];
  dueDate?: PlatformCore.SearchColumnDateField[];
  fxAmount?: PlatformCore.SearchColumnDoubleField[];
  fxAmountPaid?: PlatformCore.SearchColumnDoubleField[];
  fxAmountRemaining?: PlatformCore.SearchColumnDoubleField[];
  installmentNumber?: PlatformCore.SearchColumnLongField[];
  status?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class InstallmentSearchRowBasic extends PlatformCore.SearchRowBasic {
  amount?: PlatformCore.SearchColumnDoubleField[];
  amountPaid?: PlatformCore.SearchColumnDoubleField[];
  amountRemaining?: PlatformCore.SearchColumnDoubleField[];
  daysOverdue?: PlatformCore.SearchColumnLongField[];
  dueDate?: PlatformCore.SearchColumnDateField[];
  fxAmount?: PlatformCore.SearchColumnDoubleField[];
  fxAmountPaid?: PlatformCore.SearchColumnDoubleField[];
  fxAmountRemaining?: PlatformCore.SearchColumnDoubleField[];
  installmentNumber?: PlatformCore.SearchColumnLongField[];
  status?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: InstallmentSearchRowBasicProps) {
    super();
    this.amount = props.amount;
    this.amountPaid = props.amountPaid;
    this.amountRemaining = props.amountRemaining;
    this.daysOverdue = props.daysOverdue;
    this.dueDate = props.dueDate;
    this.fxAmount = props.fxAmount;
    this.fxAmountPaid = props.fxAmountPaid;
    this.fxAmountRemaining = props.fxAmountRemaining;
    this.installmentNumber = props.installmentNumber;
    this.status = props.status;
    this.customFieldList = props.customFieldList;
  }
}

export type TimeItemProps = {
  id?: number;
  employee?: PlatformCore.RecordRef;
  timeType?: PlatformCommonTypes.TimeItemTimeType;
  tranDate?: string;
  customer?: PlatformCore.RecordRef;
  isBillable?: boolean;
  payrollItem?: PlatformCore.RecordRef;
  item?: PlatformCore.RecordRef;
  temporaryLocalJurisdiction?: PlatformCore.RecordRef;
  temporaryStateJurisdiction?: PlatformCore.RecordRef;
  department?: PlatformCore.RecordRef;
  clazz?: PlatformCore.RecordRef;
  location?: PlatformCore.RecordRef;
  hours?: PlatformCore.Duration;
  price?: PlatformCore.RecordRef;
  rate?: number;
  overrideRate?: boolean;
  hoursTotal?: PlatformCore.Duration;
  caseTaskEvent?: PlatformCore.RecordRef;
  memo?: string;
  isUtilized?: boolean;
  isProductive?: boolean;
  isExempt?: boolean;
};

export class TimeItem {
  id?: number;
  employee?: PlatformCore.RecordRef;
  timeType?: PlatformCommonTypes.TimeItemTimeType;
  tranDate?: string;
  customer?: PlatformCore.RecordRef;
  isBillable?: boolean;
  payrollItem?: PlatformCore.RecordRef;
  item?: PlatformCore.RecordRef;
  temporaryLocalJurisdiction?: PlatformCore.RecordRef;
  temporaryStateJurisdiction?: PlatformCore.RecordRef;
  department?: PlatformCore.RecordRef;
  clazz?: PlatformCore.RecordRef;
  location?: PlatformCore.RecordRef;
  hours?: PlatformCore.Duration;
  price?: PlatformCore.RecordRef;
  rate?: number;
  overrideRate?: boolean;
  hoursTotal?: PlatformCore.Duration;
  caseTaskEvent?: PlatformCore.RecordRef;
  memo?: string;
  isUtilized?: boolean;
  isProductive?: boolean;
  isExempt?: boolean;
  constructor(props: TimeItemProps) {
    this.id = props.id;
    this.employee = props.employee;
    this.timeType = props.timeType;
    this.tranDate = props.tranDate;
    this.customer = props.customer;
    this.isBillable = props.isBillable;
    this.payrollItem = props.payrollItem;
    this.item = props.item;
    this.temporaryLocalJurisdiction = props.temporaryLocalJurisdiction;
    this.temporaryStateJurisdiction = props.temporaryStateJurisdiction;
    this.department = props.department;
    this.clazz = props.clazz;
    this.location = props.location;
    this.hours = props.hours;
    this.price = props.price;
    this.rate = props.rate;
    this.overrideRate = props.overrideRate;
    this.hoursTotal = props.hoursTotal;
    this.caseTaskEvent = props.caseTaskEvent;
    this.memo = props.memo;
    this.isUtilized = props.isUtilized;
    this.isProductive = props.isProductive;
    this.isExempt = props.isExempt;
  }
}

export type TermSearchBasicProps = {
  dateDriven?: PlatformCore.SearchBooleanField;
  dayDiscountExpires?: PlatformCore.SearchLongField;
  dayOfMonthNetDue?: PlatformCore.SearchLongField;
  daysUntilExpiry?: PlatformCore.SearchLongField;
  daysUntilNetDue?: PlatformCore.SearchLongField;
  discountPercent?: PlatformCore.SearchDoubleField;
  discountPercentDateDriven?: PlatformCore.SearchDoubleField;
  dueNextMonthIfWithinDays?: PlatformCore.SearchLongField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  installment?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  preferred?: PlatformCore.SearchBooleanField;
  recurrenceCount?: PlatformCore.SearchLongField;
  recurrenceFrequency?: PlatformCore.SearchEnumMultiSelectField;
  repeatEvery?: PlatformCore.SearchLongField;
  splitEvenly?: PlatformCore.SearchBooleanField;
};

export class TermSearchBasic extends PlatformCore.SearchRecordBasic {
  dateDriven?: PlatformCore.SearchBooleanField;
  dayDiscountExpires?: PlatformCore.SearchLongField;
  dayOfMonthNetDue?: PlatformCore.SearchLongField;
  daysUntilExpiry?: PlatformCore.SearchLongField;
  daysUntilNetDue?: PlatformCore.SearchLongField;
  discountPercent?: PlatformCore.SearchDoubleField;
  discountPercentDateDriven?: PlatformCore.SearchDoubleField;
  dueNextMonthIfWithinDays?: PlatformCore.SearchLongField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  installment?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  preferred?: PlatformCore.SearchBooleanField;
  recurrenceCount?: PlatformCore.SearchLongField;
  recurrenceFrequency?: PlatformCore.SearchEnumMultiSelectField;
  repeatEvery?: PlatformCore.SearchLongField;
  splitEvenly?: PlatformCore.SearchBooleanField;
  constructor(props: TermSearchBasicProps) {
    super();
    this.dateDriven = props.dateDriven;
    this.dayDiscountExpires = props.dayDiscountExpires;
    this.dayOfMonthNetDue = props.dayOfMonthNetDue;
    this.daysUntilExpiry = props.daysUntilExpiry;
    this.daysUntilNetDue = props.daysUntilNetDue;
    this.discountPercent = props.discountPercent;
    this.discountPercentDateDriven = props.discountPercentDateDriven;
    this.dueNextMonthIfWithinDays = props.dueNextMonthIfWithinDays;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.installment = props.installment;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.preferred = props.preferred;
    this.recurrenceCount = props.recurrenceCount;
    this.recurrenceFrequency = props.recurrenceFrequency;
    this.repeatEvery = props.repeatEvery;
    this.splitEvenly = props.splitEvenly;
  }
}

export type TransactionSearchBasicProps = {
  account?: PlatformCore.SearchMultiSelectField;
  accountType?: PlatformCore.SearchEnumMultiSelectField;
  acctCorpCardExp?: PlatformCore.SearchMultiSelectField;
  actualShipDate?: PlatformCore.SearchDateField;
  altSalesAmount?: PlatformCore.SearchDoubleField;
  altSalesNetAmount?: PlatformCore.SearchDoubleField;
  amount?: PlatformCore.SearchDoubleField;
  amountPaid?: PlatformCore.SearchDoubleField;
  amountRemaining?: PlatformCore.SearchDoubleField;
  amountUnbilled?: PlatformCore.SearchDoubleField;
  anyLineItem?: PlatformCore.SearchMultiSelectField;
  appliedToForeignAmount?: PlatformCore.SearchDoubleField;
  appliedToIsFxVariance?: PlatformCore.SearchBooleanField;
  appliedToLinkAmount?: PlatformCore.SearchDoubleField;
  appliedToLinkType?: PlatformCore.SearchEnumMultiSelectField;
  appliedToTransaction?: PlatformCore.SearchMultiSelectField;
  applyingForeignAmount?: PlatformCore.SearchDoubleField;
  applyingIsFxVariance?: PlatformCore.SearchBooleanField;
  applyingLinkAmount?: PlatformCore.SearchDoubleField;
  applyingLinkType?: PlatformCore.SearchEnumMultiSelectField;
  applyingTransaction?: PlatformCore.SearchMultiSelectField;
  approvalStatus?: PlatformCore.SearchEnumMultiSelectField;
  authCode?: PlatformCore.SearchStringField;
  autoCalculateLag?: PlatformCore.SearchBooleanField;
  avsStreetMatch?: PlatformCore.SearchEnumMultiSelectField;
  avsZipMatch?: PlatformCore.SearchEnumMultiSelectField;
  billable?: PlatformCore.SearchBooleanField;
  billAddress?: PlatformCore.SearchStringField;
  billAddressee?: PlatformCore.SearchStringField;
  billAttention?: PlatformCore.SearchStringField;
  billCity?: PlatformCore.SearchStringField;
  billCountry?: PlatformCore.SearchEnumMultiSelectField;
  billCounty?: PlatformCore.SearchStringField;
  billedDate?: PlatformCore.SearchDateField;
  billingAccount?: PlatformCore.SearchMultiSelectField;
  billingSchedule?: PlatformCore.SearchMultiSelectField;
  billingStatus?: PlatformCore.SearchBooleanField;
  billingTransaction?: PlatformCore.SearchMultiSelectField;
  billPhone?: PlatformCore.SearchStringField;
  billState?: PlatformCore.SearchStringField;
  billVarianceStatus?: PlatformCore.SearchEnumMultiSelectField;
  billZip?: PlatformCore.SearchStringField;
  binNumber?: PlatformCore.SearchStringField;
  binNumberQuantity?: PlatformCore.SearchDoubleField;
  bomQuantity?: PlatformCore.SearchDoubleField;
  bookSpecificTransaction?: PlatformCore.SearchBooleanField;
  buildEntireAssembly?: PlatformCore.SearchBooleanField;
  buildVariance?: PlatformCore.SearchDoubleField;
  built?: PlatformCore.SearchDoubleField;
  canHaveStackablePromotions?: PlatformCore.SearchBooleanField;
  catchUpPeriod?: PlatformCore.SearchMultiSelectField;
  ccCustomerCode?: PlatformCore.SearchStringField;
  ccExpireDate?: PlatformCore.SearchDateField;
  ccName?: PlatformCore.SearchStringField;
  ccNumber?: PlatformCore.SearchStringField;
  chargeType?: PlatformCore.SearchEnumMultiSelectField;
  clazz?: PlatformCore.SearchMultiSelectField;
  cleared?: PlatformCore.SearchBooleanField;
  closed?: PlatformCore.SearchBooleanField;
  closeDate?: PlatformCore.SearchDateField;
  cogs?: PlatformCore.SearchBooleanField;
  commissionEffectiveDate?: PlatformCore.SearchDateField;
  commit?: PlatformCore.SearchEnumMultiSelectField;
  componentYield?: PlatformCore.SearchDoubleField;
  confirmationNumber?: PlatformCore.SearchStringField;
  contribution?: PlatformCore.SearchLongField;
  costComponentAmount?: PlatformCore.SearchDoubleField;
  costComponentCategory?: PlatformCore.SearchMultiSelectField;
  costComponentItem?: PlatformCore.SearchMultiSelectField;
  costComponentQuantity?: PlatformCore.SearchDoubleField;
  costComponentStandardCost?: PlatformCore.SearchDoubleField;
  costEstimate?: PlatformCore.SearchDoubleField;
  costEstimateRate?: PlatformCore.SearchDoubleField;
  costEstimateType?: PlatformCore.SearchEnumMultiSelectField;
  createdBy?: PlatformCore.SearchMultiSelectField;
  createdFrom?: PlatformCore.SearchMultiSelectField;
  creditAmount?: PlatformCore.SearchDoubleField;
  cscMatch?: PlatformCore.SearchEnumMultiSelectField;
  currency?: PlatformCore.SearchMultiSelectField;
  customerSubOf?: PlatformCore.SearchMultiSelectField;
  customForm?: PlatformCore.SearchMultiSelectField;
  customGL?: PlatformCore.SearchBooleanField;
  custType?: PlatformCore.SearchMultiSelectField;
  dateCreated?: PlatformCore.SearchDateField;
  daysOpen?: PlatformCore.SearchLongField;
  daysOverdue?: PlatformCore.SearchLongField;
  debitAmount?: PlatformCore.SearchDoubleField;
  deferredRevenue?: PlatformCore.SearchDoubleField;
  deferRevRec?: PlatformCore.SearchBooleanField;
  department?: PlatformCore.SearchMultiSelectField;
  depositDate?: PlatformCore.SearchDateField;
  depositTransaction?: PlatformCore.SearchMultiSelectField;
  drAccount?: PlatformCore.SearchMultiSelectField;
  dueDate?: PlatformCore.SearchDateField;
  email?: PlatformCore.SearchStringField;
  employee?: PlatformCore.SearchMultiSelectField;
  endDate?: PlatformCore.SearchDateField;
  entity?: PlatformCore.SearchMultiSelectField;
  entityStatus?: PlatformCore.SearchMultiSelectField;
  estGrossProfit?: PlatformCore.SearchDoubleField;
  estGrossProfitPct?: PlatformCore.SearchDoubleField;
  exchangeRate?: PlatformCore.SearchDoubleField;
  excludeCommission?: PlatformCore.SearchBooleanField;
  excludeFromRateRequest?: PlatformCore.SearchBooleanField;
  expectedCloseDate?: PlatformCore.SearchDateField;
  expectedReceiptDate?: PlatformCore.SearchDateField;
  expenseCategory?: PlatformCore.SearchMultiSelectField;
  expenseDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  finChrg?: PlatformCore.SearchBooleanField;
  firmed?: PlatformCore.SearchBooleanField;
  forecastType?: PlatformCore.SearchEnumMultiSelectField;
  fulfillingTransaction?: PlatformCore.SearchMultiSelectField;
  fxAccount?: PlatformCore.SearchMultiSelectField;
  fxAmount?: PlatformCore.SearchDoubleField;
  fxCostEstimate?: PlatformCore.SearchDoubleField;
  fxCostEstimateRate?: PlatformCore.SearchDoubleField;
  fxEstGrossProfit?: PlatformCore.SearchDoubleField;
  fxTranCostEstimate?: PlatformCore.SearchDoubleField;
  fxVsoeAllocation?: PlatformCore.SearchDoubleField;
  fxVsoeAmount?: PlatformCore.SearchDoubleField;
  fxVsoePrice?: PlatformCore.SearchDoubleField;
  gcoAvailabelToCharge?: PlatformCore.SearchBooleanField;
  gcoAvailableToRefund?: PlatformCore.SearchBooleanField;
  gcoAvsStreetMatch?: PlatformCore.SearchEnumMultiSelectField;
  gcoAvsZipMatch?: PlatformCore.SearchEnumMultiSelectField;
  gcoBuyerAccountAge?: PlatformCore.SearchLongField;
  gcoBuyerIp?: PlatformCore.SearchStringField;
  gcoChargeAmount?: PlatformCore.SearchDoubleField;
  gcoChargebackAmount?: PlatformCore.SearchDoubleField;
  gcoConfirmedChargedTotal?: PlatformCore.SearchDoubleField;
  gcoConfirmedRefundedTotal?: PlatformCore.SearchDoubleField;
  gcoCreditcardNumber?: PlatformCore.SearchStringField;
  gcoCscMatch?: PlatformCore.SearchEnumMultiSelectField;
  gcoFinancialState?: PlatformCore.SearchStringField;
  gcoFulfillmentState?: PlatformCore.SearchStringField;
  gcoOrderId?: PlatformCore.SearchStringField;
  gcoOrderTotal?: PlatformCore.SearchDoubleField;
  gcoPromotionAmount?: PlatformCore.SearchDoubleField;
  gcoPromotionName?: PlatformCore.SearchStringField;
  gcoRefundAmount?: PlatformCore.SearchDoubleField;
  gcoShippingTotal?: PlatformCore.SearchDoubleField;
  gcoStateChangedDetail?: PlatformCore.SearchStringField;
  giftCertificate?: PlatformCore.SearchStringField;
  grossAmount?: PlatformCore.SearchDoubleField;
  includeInForecast?: PlatformCore.SearchBooleanField;
  incoterm?: PlatformCore.SearchMultiSelectField;
  intercoStatus?: PlatformCore.SearchEnumMultiSelectField;
  intercoTransaction?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  inventoryLocation?: PlatformCore.SearchMultiSelectField;
  inventorySubsidiary?: PlatformCore.SearchMultiSelectField;
  inVsoeBundle?: PlatformCore.SearchBooleanField;
  isAllocation?: PlatformCore.SearchBooleanField;
  isBackflush?: PlatformCore.SearchBooleanField;
  isGcoChargeback?: PlatformCore.SearchBooleanField;
  isGcoChargeConfirmed?: PlatformCore.SearchBooleanField;
  isGcoPaymentGuaranteed?: PlatformCore.SearchBooleanField;
  isGcoRefundConfirmed?: PlatformCore.SearchBooleanField;
  isInsideDelivery?: PlatformCore.SearchBooleanField;
  isInsidePickup?: PlatformCore.SearchBooleanField;
  isIntercompanyAdjustment?: PlatformCore.SearchBooleanField;
  isInTransitPayment?: PlatformCore.SearchBooleanField;
  isMultiShipTo?: PlatformCore.SearchBooleanField;
  isPayPalMeth?: PlatformCore.SearchBooleanField;
  isReversal?: PlatformCore.SearchBooleanField;
  isRevRecTransaction?: PlatformCore.SearchBooleanField;
  isScrap?: PlatformCore.SearchBooleanField;
  isShipAddress?: PlatformCore.SearchBooleanField;
  isTransferPriceCosting?: PlatformCore.SearchBooleanField;
  isVsoeAlloc?: PlatformCore.SearchBooleanField;
  isWip?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  itemFulfillmentChoice?: PlatformCore.SearchEnumMultiSelectField;
  itemRevision?: PlatformCore.SearchMultiSelectField;
  itemSubOf?: PlatformCore.SearchMultiSelectField;
  landedCostPerLine?: PlatformCore.SearchBooleanField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  leadSource?: PlatformCore.SearchMultiSelectField;
  lineUniqueKey?: PlatformCore.SearchLongField;
  location?: PlatformCore.SearchMultiSelectField;
  locationAutoAssigned?: PlatformCore.SearchBooleanField;
  mainLine?: PlatformCore.SearchBooleanField;
  mainName?: PlatformCore.SearchMultiSelectField;
  manufacturingRouting?: PlatformCore.SearchMultiSelectField;
  matchBillToReceipt?: PlatformCore.SearchBooleanField;
  memo?: PlatformCore.SearchStringField;
  memoMain?: PlatformCore.SearchStringField;
  memorized?: PlatformCore.SearchBooleanField;
  merchantAccount?: PlatformCore.SearchStringField;
  message?: PlatformCore.SearchStringField;
  multiSubsidiary?: PlatformCore.SearchBooleanField;
  nameText?: PlatformCore.SearchStringField;
  netAmount?: PlatformCore.SearchDoubleField;
  nextApprover?: PlatformCore.SearchMultiSelectField;
  nextBillDate?: PlatformCore.SearchDateField;
  nexus?: PlatformCore.SearchMultiSelectField;
  noAutoAssignLocation?: PlatformCore.SearchBooleanField;
  nonReimbursable?: PlatformCore.SearchBooleanField;
  number?: PlatformCore.SearchLongField;
  oneTimeTotal?: PlatformCore.SearchDoubleField;
  opportunity?: PlatformCore.SearchMultiSelectField;
  orderPriority?: PlatformCore.SearchDoubleField;
  otherRefNum?: PlatformCore.SearchTextNumberField;
  otherRefNumNonDeposit?: PlatformCore.SearchTextNumberField;
  overheadParentItem?: PlatformCore.SearchMultiSelectField;
  overrideInstallments?: PlatformCore.SearchBooleanField;
  packageCount?: PlatformCore.SearchLongField;
  paidTransaction?: PlatformCore.SearchMultiSelectField;
  parent?: PlatformCore.SearchLongField;
  partner?: PlatformCore.SearchMultiSelectField;
  partnerContribution?: PlatformCore.SearchLongField;
  partnerRole?: PlatformCore.SearchMultiSelectField;
  partnerTeamMember?: PlatformCore.SearchMultiSelectField;
  payingTransaction?: PlatformCore.SearchMultiSelectField;
  paymentApproved?: PlatformCore.SearchBooleanField;
  paymentEventDate?: PlatformCore.SearchDateField;
  paymentEventHoldReason?: PlatformCore.SearchEnumMultiSelectField;
  paymentEventPurchaseCardUsed?: PlatformCore.SearchBooleanField;
  paymentEventPurchaseDataSent?: PlatformCore.SearchBooleanField;
  paymentEventResult?: PlatformCore.SearchEnumMultiSelectField;
  paymentEventType?: PlatformCore.SearchEnumMultiSelectField;
  paymentHold?: PlatformCore.SearchBooleanField;
  paymentMethod?: PlatformCore.SearchMultiSelectField;
  paymentOption?: PlatformCore.SearchStringField;
  payPalPending?: PlatformCore.SearchBooleanField;
  payPalStatus?: PlatformCore.SearchStringField;
  payPalTranId?: PlatformCore.SearchStringField;
  pnRefNum?: PlatformCore.SearchStringField;
  poAsText?: PlatformCore.SearchStringField;
  posting?: PlatformCore.SearchBooleanField;
  postingPeriod?: PlatformCore.RecordRef;
  postingPeriodRelative?: PlatformCommonTypes.PostingPeriodDate;
  priceLevel?: PlatformCore.SearchMultiSelectField;
  printedPickingTicket?: PlatformCore.SearchBooleanField;
  probability?: PlatformCore.SearchLongField;
  projectedAmount?: PlatformCore.SearchDoubleField;
  projectTask?: PlatformCore.SearchMultiSelectField;
  promoCode?: PlatformCore.SearchMultiSelectField;
  purchaseOrder?: PlatformCore.SearchMultiSelectField;
  quantity?: PlatformCore.SearchDoubleField;
  quantityBilled?: PlatformCore.SearchDoubleField;
  quantityCommitted?: PlatformCore.SearchDoubleField;
  quantityPacked?: PlatformCore.SearchDoubleField;
  quantityPicked?: PlatformCore.SearchDoubleField;
  quantityRevCommitted?: PlatformCore.SearchDoubleField;
  quantityShipRecv?: PlatformCore.SearchDoubleField;
  recognizedRevenue?: PlatformCore.SearchDoubleField;
  recordType?: PlatformCore.SearchStringField;
  recurAnnuallyTotal?: PlatformCore.SearchDoubleField;
  recurMonthlyTotal?: PlatformCore.SearchDoubleField;
  recurQuarterlyTotal?: PlatformCore.SearchDoubleField;
  recurringBill?: PlatformCore.SearchBooleanField;
  recurWeeklyTotal?: PlatformCore.SearchDoubleField;
  refNumber?: PlatformCore.SearchLongField;
  revCommitStatus?: PlatformCore.SearchEnumMultiSelectField;
  revCommittingStatus?: PlatformCore.SearchBooleanField;
  revCommittingTransaction?: PlatformCore.SearchMultiSelectField;
  revenueStatus?: PlatformCore.SearchEnumMultiSelectField;
  reversalDate?: PlatformCore.SearchDateField;
  reversalNumber?: PlatformCore.SearchStringField;
  revRecEndDate?: PlatformCore.SearchDateField;
  revRecOnRevCommitment?: PlatformCore.SearchBooleanField;
  revRecStartDate?: PlatformCore.SearchDateField;
  revRecTermInMonths?: PlatformCore.SearchLongField;
  salesEffectiveDate?: PlatformCore.SearchDateField;
  salesOrder?: PlatformCore.SearchMultiSelectField;
  salesRep?: PlatformCore.SearchMultiSelectField;
  salesTeamMember?: PlatformCore.SearchMultiSelectField;
  salesTeamRole?: PlatformCore.SearchMultiSelectField;
  schedulingMethod?: PlatformCore.SearchEnumMultiSelectField;
  serialNumber?: PlatformCore.SearchStringField;
  serialNumberCost?: PlatformCore.SearchDoubleField;
  serialNumberCostAdjustment?: PlatformCore.SearchDoubleField;
  serialNumberQuantity?: PlatformCore.SearchDoubleField;
  serialNumbers?: PlatformCore.SearchStringField;
  shipAddress?: PlatformCore.SearchStringField;
  shipAddressee?: PlatformCore.SearchStringField;
  shipAttention?: PlatformCore.SearchStringField;
  shipCarrier?: PlatformCore.SearchEnumMultiSelectField;
  shipCity?: PlatformCore.SearchStringField;
  shipComplete?: PlatformCore.SearchBooleanField;
  shipCountry?: PlatformCore.SearchEnumMultiSelectField;
  shipCounty?: PlatformCore.SearchStringField;
  shipDate?: PlatformCore.SearchDateField;
  shipGroup?: PlatformCore.SearchLongField;
  shipMethod?: PlatformCore.SearchMultiSelectField;
  shipPhone?: PlatformCore.SearchStringField;
  shipping?: PlatformCore.SearchBooleanField;
  shipRecvStatus?: PlatformCore.SearchBooleanField;
  shipRecvStatusLine?: PlatformCore.SearchBooleanField;
  shipState?: PlatformCore.SearchMultiSelectField;
  shipTo?: PlatformCore.SearchMultiSelectField;
  shipZip?: PlatformCore.SearchStringField;
  source?: PlatformCore.SearchEnumMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  statistical?: PlatformCore.SearchBooleanField;
  status?: PlatformCore.SearchEnumMultiSelectField;
  subscription?: PlatformCore.SearchMultiSelectField;
  subsidiaryTaxRegNum?: PlatformCore.SearchMultiSelectField;
  subscriptionLine?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  taxItem?: PlatformCore.SearchMultiSelectField;
  taxLine?: PlatformCore.SearchBooleanField;
  taxPeriod?: PlatformCore.RecordRef;
  taxPeriodRelative?: PlatformCommonTypes.PostingPeriodDate;
  taxPointDate?: PlatformCore.SearchDateField;
  taxRate?: PlatformCore.SearchDoubleField;
  terms?: PlatformCore.SearchMultiSelectField;
  termsOfSale?: PlatformCore.SearchEnumMultiSelectField;
  title?: PlatformCore.SearchStringField;
  toBeEmailed?: PlatformCore.SearchBooleanField;
  toBePrinted?: PlatformCore.SearchBooleanField;
  toSubsidiary?: PlatformCore.SearchMultiSelectField;
  totalAmount?: PlatformCore.SearchDoubleField;
  trackingNumbers?: PlatformCore.SearchStringField;
  tranCostEstimate?: PlatformCore.SearchDoubleField;
  tranDate?: PlatformCore.SearchDateField;
  tranEstGrossProfit?: PlatformCore.SearchDoubleField;
  tranEstGrossProfitPct?: PlatformCore.SearchDoubleField;
  tranFxEstGrossProfit?: PlatformCore.SearchDoubleField;
  tranId?: PlatformCore.SearchStringField;
  tranIsVsoeBundle?: PlatformCore.SearchBooleanField;
  transactionDiscount?: PlatformCore.SearchBooleanField;
  transactionLineType?: PlatformCore.SearchEnumMultiSelectField;
  transactionNumber?: PlatformCore.SearchStringField;
  transferLocation?: PlatformCore.SearchMultiSelectField;
  transferOrderQuantityCommitted?: PlatformCore.SearchDoubleField;
  transferOrderQuantityPacked?: PlatformCore.SearchDoubleField;
  transferOrderQuantityPicked?: PlatformCore.SearchDoubleField;
  transferOrderQuantityReceived?: PlatformCore.SearchDoubleField;
  transferOrderQuantityShipped?: PlatformCore.SearchDoubleField;
  type?: PlatformCore.SearchEnumMultiSelectField;
  unit?: PlatformCore.SearchMultiSelectField;
  unitCostOverride?: PlatformCore.SearchDoubleField;
  unitsType?: PlatformCore.SearchMultiSelectField;
  vendType?: PlatformCore.SearchMultiSelectField;
  visibleToCustomer?: PlatformCore.SearchBooleanField;
  voided?: PlatformCore.SearchBooleanField;
  vsoeAllocation?: PlatformCore.SearchDoubleField;
  vsoeAmount?: PlatformCore.SearchDoubleField;
  vsoeDeferral?: PlatformCore.SearchEnumMultiSelectField;
  vsoeDelivered?: PlatformCore.SearchBooleanField;
  vsoePermitDiscount?: PlatformCore.SearchEnumMultiSelectField;
  vsoePrice?: PlatformCore.SearchDoubleField;
  webSite?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class TransactionSearchBasic extends PlatformCore.SearchRecordBasic {
  account?: PlatformCore.SearchMultiSelectField;
  accountType?: PlatformCore.SearchEnumMultiSelectField;
  acctCorpCardExp?: PlatformCore.SearchMultiSelectField;
  actualShipDate?: PlatformCore.SearchDateField;
  altSalesAmount?: PlatformCore.SearchDoubleField;
  altSalesNetAmount?: PlatformCore.SearchDoubleField;
  amount?: PlatformCore.SearchDoubleField;
  amountPaid?: PlatformCore.SearchDoubleField;
  amountRemaining?: PlatformCore.SearchDoubleField;
  amountUnbilled?: PlatformCore.SearchDoubleField;
  anyLineItem?: PlatformCore.SearchMultiSelectField;
  appliedToForeignAmount?: PlatformCore.SearchDoubleField;
  appliedToIsFxVariance?: PlatformCore.SearchBooleanField;
  appliedToLinkAmount?: PlatformCore.SearchDoubleField;
  appliedToLinkType?: PlatformCore.SearchEnumMultiSelectField;
  appliedToTransaction?: PlatformCore.SearchMultiSelectField;
  applyingForeignAmount?: PlatformCore.SearchDoubleField;
  applyingIsFxVariance?: PlatformCore.SearchBooleanField;
  applyingLinkAmount?: PlatformCore.SearchDoubleField;
  applyingLinkType?: PlatformCore.SearchEnumMultiSelectField;
  applyingTransaction?: PlatformCore.SearchMultiSelectField;
  approvalStatus?: PlatformCore.SearchEnumMultiSelectField;
  authCode?: PlatformCore.SearchStringField;
  autoCalculateLag?: PlatformCore.SearchBooleanField;
  avsStreetMatch?: PlatformCore.SearchEnumMultiSelectField;
  avsZipMatch?: PlatformCore.SearchEnumMultiSelectField;
  billable?: PlatformCore.SearchBooleanField;
  billAddress?: PlatformCore.SearchStringField;
  billAddressee?: PlatformCore.SearchStringField;
  billAttention?: PlatformCore.SearchStringField;
  billCity?: PlatformCore.SearchStringField;
  billCountry?: PlatformCore.SearchEnumMultiSelectField;
  billCounty?: PlatformCore.SearchStringField;
  billedDate?: PlatformCore.SearchDateField;
  billingAccount?: PlatformCore.SearchMultiSelectField;
  billingSchedule?: PlatformCore.SearchMultiSelectField;
  billingStatus?: PlatformCore.SearchBooleanField;
  billingTransaction?: PlatformCore.SearchMultiSelectField;
  billPhone?: PlatformCore.SearchStringField;
  billState?: PlatformCore.SearchStringField;
  billVarianceStatus?: PlatformCore.SearchEnumMultiSelectField;
  billZip?: PlatformCore.SearchStringField;
  binNumber?: PlatformCore.SearchStringField;
  binNumberQuantity?: PlatformCore.SearchDoubleField;
  bomQuantity?: PlatformCore.SearchDoubleField;
  bookSpecificTransaction?: PlatformCore.SearchBooleanField;
  buildEntireAssembly?: PlatformCore.SearchBooleanField;
  buildVariance?: PlatformCore.SearchDoubleField;
  built?: PlatformCore.SearchDoubleField;
  canHaveStackablePromotions?: PlatformCore.SearchBooleanField;
  catchUpPeriod?: PlatformCore.SearchMultiSelectField;
  ccCustomerCode?: PlatformCore.SearchStringField;
  ccExpireDate?: PlatformCore.SearchDateField;
  ccName?: PlatformCore.SearchStringField;
  ccNumber?: PlatformCore.SearchStringField;
  chargeType?: PlatformCore.SearchEnumMultiSelectField;
  clazz?: PlatformCore.SearchMultiSelectField;
  cleared?: PlatformCore.SearchBooleanField;
  closed?: PlatformCore.SearchBooleanField;
  closeDate?: PlatformCore.SearchDateField;
  cogs?: PlatformCore.SearchBooleanField;
  commissionEffectiveDate?: PlatformCore.SearchDateField;
  commit?: PlatformCore.SearchEnumMultiSelectField;
  componentYield?: PlatformCore.SearchDoubleField;
  confirmationNumber?: PlatformCore.SearchStringField;
  contribution?: PlatformCore.SearchLongField;
  costComponentAmount?: PlatformCore.SearchDoubleField;
  costComponentCategory?: PlatformCore.SearchMultiSelectField;
  costComponentItem?: PlatformCore.SearchMultiSelectField;
  costComponentQuantity?: PlatformCore.SearchDoubleField;
  costComponentStandardCost?: PlatformCore.SearchDoubleField;
  costEstimate?: PlatformCore.SearchDoubleField;
  costEstimateRate?: PlatformCore.SearchDoubleField;
  costEstimateType?: PlatformCore.SearchEnumMultiSelectField;
  createdBy?: PlatformCore.SearchMultiSelectField;
  createdFrom?: PlatformCore.SearchMultiSelectField;
  creditAmount?: PlatformCore.SearchDoubleField;
  cscMatch?: PlatformCore.SearchEnumMultiSelectField;
  currency?: PlatformCore.SearchMultiSelectField;
  customerSubOf?: PlatformCore.SearchMultiSelectField;
  customForm?: PlatformCore.SearchMultiSelectField;
  customGL?: PlatformCore.SearchBooleanField;
  custType?: PlatformCore.SearchMultiSelectField;
  dateCreated?: PlatformCore.SearchDateField;
  daysOpen?: PlatformCore.SearchLongField;
  daysOverdue?: PlatformCore.SearchLongField;
  debitAmount?: PlatformCore.SearchDoubleField;
  deferredRevenue?: PlatformCore.SearchDoubleField;
  deferRevRec?: PlatformCore.SearchBooleanField;
  department?: PlatformCore.SearchMultiSelectField;
  depositDate?: PlatformCore.SearchDateField;
  depositTransaction?: PlatformCore.SearchMultiSelectField;
  drAccount?: PlatformCore.SearchMultiSelectField;
  dueDate?: PlatformCore.SearchDateField;
  email?: PlatformCore.SearchStringField;
  employee?: PlatformCore.SearchMultiSelectField;
  endDate?: PlatformCore.SearchDateField;
  entity?: PlatformCore.SearchMultiSelectField;
  entityStatus?: PlatformCore.SearchMultiSelectField;
  estGrossProfit?: PlatformCore.SearchDoubleField;
  estGrossProfitPct?: PlatformCore.SearchDoubleField;
  exchangeRate?: PlatformCore.SearchDoubleField;
  excludeCommission?: PlatformCore.SearchBooleanField;
  excludeFromRateRequest?: PlatformCore.SearchBooleanField;
  expectedCloseDate?: PlatformCore.SearchDateField;
  expectedReceiptDate?: PlatformCore.SearchDateField;
  expenseCategory?: PlatformCore.SearchMultiSelectField;
  expenseDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  finChrg?: PlatformCore.SearchBooleanField;
  firmed?: PlatformCore.SearchBooleanField;
  forecastType?: PlatformCore.SearchEnumMultiSelectField;
  fulfillingTransaction?: PlatformCore.SearchMultiSelectField;
  fxAccount?: PlatformCore.SearchMultiSelectField;
  fxAmount?: PlatformCore.SearchDoubleField;
  fxCostEstimate?: PlatformCore.SearchDoubleField;
  fxCostEstimateRate?: PlatformCore.SearchDoubleField;
  fxEstGrossProfit?: PlatformCore.SearchDoubleField;
  fxTranCostEstimate?: PlatformCore.SearchDoubleField;
  fxVsoeAllocation?: PlatformCore.SearchDoubleField;
  fxVsoeAmount?: PlatformCore.SearchDoubleField;
  fxVsoePrice?: PlatformCore.SearchDoubleField;
  gcoAvailabelToCharge?: PlatformCore.SearchBooleanField;
  gcoAvailableToRefund?: PlatformCore.SearchBooleanField;
  gcoAvsStreetMatch?: PlatformCore.SearchEnumMultiSelectField;
  gcoAvsZipMatch?: PlatformCore.SearchEnumMultiSelectField;
  gcoBuyerAccountAge?: PlatformCore.SearchLongField;
  gcoBuyerIp?: PlatformCore.SearchStringField;
  gcoChargeAmount?: PlatformCore.SearchDoubleField;
  gcoChargebackAmount?: PlatformCore.SearchDoubleField;
  gcoConfirmedChargedTotal?: PlatformCore.SearchDoubleField;
  gcoConfirmedRefundedTotal?: PlatformCore.SearchDoubleField;
  gcoCreditcardNumber?: PlatformCore.SearchStringField;
  gcoCscMatch?: PlatformCore.SearchEnumMultiSelectField;
  gcoFinancialState?: PlatformCore.SearchStringField;
  gcoFulfillmentState?: PlatformCore.SearchStringField;
  gcoOrderId?: PlatformCore.SearchStringField;
  gcoOrderTotal?: PlatformCore.SearchDoubleField;
  gcoPromotionAmount?: PlatformCore.SearchDoubleField;
  gcoPromotionName?: PlatformCore.SearchStringField;
  gcoRefundAmount?: PlatformCore.SearchDoubleField;
  gcoShippingTotal?: PlatformCore.SearchDoubleField;
  gcoStateChangedDetail?: PlatformCore.SearchStringField;
  giftCertificate?: PlatformCore.SearchStringField;
  grossAmount?: PlatformCore.SearchDoubleField;
  includeInForecast?: PlatformCore.SearchBooleanField;
  incoterm?: PlatformCore.SearchMultiSelectField;
  intercoStatus?: PlatformCore.SearchEnumMultiSelectField;
  intercoTransaction?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  inventoryLocation?: PlatformCore.SearchMultiSelectField;
  inventorySubsidiary?: PlatformCore.SearchMultiSelectField;
  inVsoeBundle?: PlatformCore.SearchBooleanField;
  isAllocation?: PlatformCore.SearchBooleanField;
  isBackflush?: PlatformCore.SearchBooleanField;
  isGcoChargeback?: PlatformCore.SearchBooleanField;
  isGcoChargeConfirmed?: PlatformCore.SearchBooleanField;
  isGcoPaymentGuaranteed?: PlatformCore.SearchBooleanField;
  isGcoRefundConfirmed?: PlatformCore.SearchBooleanField;
  isInsideDelivery?: PlatformCore.SearchBooleanField;
  isInsidePickup?: PlatformCore.SearchBooleanField;
  isIntercompanyAdjustment?: PlatformCore.SearchBooleanField;
  isInTransitPayment?: PlatformCore.SearchBooleanField;
  isMultiShipTo?: PlatformCore.SearchBooleanField;
  isPayPalMeth?: PlatformCore.SearchBooleanField;
  isReversal?: PlatformCore.SearchBooleanField;
  isRevRecTransaction?: PlatformCore.SearchBooleanField;
  isScrap?: PlatformCore.SearchBooleanField;
  isShipAddress?: PlatformCore.SearchBooleanField;
  isTransferPriceCosting?: PlatformCore.SearchBooleanField;
  isVsoeAlloc?: PlatformCore.SearchBooleanField;
  isWip?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  itemFulfillmentChoice?: PlatformCore.SearchEnumMultiSelectField;
  itemRevision?: PlatformCore.SearchMultiSelectField;
  itemSubOf?: PlatformCore.SearchMultiSelectField;
  landedCostPerLine?: PlatformCore.SearchBooleanField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  leadSource?: PlatformCore.SearchMultiSelectField;
  lineUniqueKey?: PlatformCore.SearchLongField;
  location?: PlatformCore.SearchMultiSelectField;
  locationAutoAssigned?: PlatformCore.SearchBooleanField;
  mainLine?: PlatformCore.SearchBooleanField;
  mainName?: PlatformCore.SearchMultiSelectField;
  manufacturingRouting?: PlatformCore.SearchMultiSelectField;
  matchBillToReceipt?: PlatformCore.SearchBooleanField;
  memo?: PlatformCore.SearchStringField;
  memoMain?: PlatformCore.SearchStringField;
  memorized?: PlatformCore.SearchBooleanField;
  merchantAccount?: PlatformCore.SearchStringField;
  message?: PlatformCore.SearchStringField;
  multiSubsidiary?: PlatformCore.SearchBooleanField;
  nameText?: PlatformCore.SearchStringField;
  netAmount?: PlatformCore.SearchDoubleField;
  nextApprover?: PlatformCore.SearchMultiSelectField;
  nextBillDate?: PlatformCore.SearchDateField;
  nexus?: PlatformCore.SearchMultiSelectField;
  noAutoAssignLocation?: PlatformCore.SearchBooleanField;
  nonReimbursable?: PlatformCore.SearchBooleanField;
  number?: PlatformCore.SearchLongField;
  oneTimeTotal?: PlatformCore.SearchDoubleField;
  opportunity?: PlatformCore.SearchMultiSelectField;
  orderPriority?: PlatformCore.SearchDoubleField;
  otherRefNum?: PlatformCore.SearchTextNumberField;
  otherRefNumNonDeposit?: PlatformCore.SearchTextNumberField;
  overheadParentItem?: PlatformCore.SearchMultiSelectField;
  overrideInstallments?: PlatformCore.SearchBooleanField;
  packageCount?: PlatformCore.SearchLongField;
  paidTransaction?: PlatformCore.SearchMultiSelectField;
  parent?: PlatformCore.SearchLongField;
  partner?: PlatformCore.SearchMultiSelectField;
  partnerContribution?: PlatformCore.SearchLongField;
  partnerRole?: PlatformCore.SearchMultiSelectField;
  partnerTeamMember?: PlatformCore.SearchMultiSelectField;
  payingTransaction?: PlatformCore.SearchMultiSelectField;
  paymentApproved?: PlatformCore.SearchBooleanField;
  paymentEventDate?: PlatformCore.SearchDateField;
  paymentEventHoldReason?: PlatformCore.SearchEnumMultiSelectField;
  paymentEventPurchaseCardUsed?: PlatformCore.SearchBooleanField;
  paymentEventPurchaseDataSent?: PlatformCore.SearchBooleanField;
  paymentEventResult?: PlatformCore.SearchEnumMultiSelectField;
  paymentEventType?: PlatformCore.SearchEnumMultiSelectField;
  paymentHold?: PlatformCore.SearchBooleanField;
  paymentMethod?: PlatformCore.SearchMultiSelectField;
  paymentOption?: PlatformCore.SearchStringField;
  payPalPending?: PlatformCore.SearchBooleanField;
  payPalStatus?: PlatformCore.SearchStringField;
  payPalTranId?: PlatformCore.SearchStringField;
  pnRefNum?: PlatformCore.SearchStringField;
  poAsText?: PlatformCore.SearchStringField;
  posting?: PlatformCore.SearchBooleanField;
  postingPeriod?: PlatformCore.RecordRef;
  postingPeriodRelative?: PlatformCommonTypes.PostingPeriodDate;
  priceLevel?: PlatformCore.SearchMultiSelectField;
  printedPickingTicket?: PlatformCore.SearchBooleanField;
  probability?: PlatformCore.SearchLongField;
  projectedAmount?: PlatformCore.SearchDoubleField;
  projectTask?: PlatformCore.SearchMultiSelectField;
  promoCode?: PlatformCore.SearchMultiSelectField;
  purchaseOrder?: PlatformCore.SearchMultiSelectField;
  quantity?: PlatformCore.SearchDoubleField;
  quantityBilled?: PlatformCore.SearchDoubleField;
  quantityCommitted?: PlatformCore.SearchDoubleField;
  quantityPacked?: PlatformCore.SearchDoubleField;
  quantityPicked?: PlatformCore.SearchDoubleField;
  quantityRevCommitted?: PlatformCore.SearchDoubleField;
  quantityShipRecv?: PlatformCore.SearchDoubleField;
  recognizedRevenue?: PlatformCore.SearchDoubleField;
  recordType?: PlatformCore.SearchStringField;
  recurAnnuallyTotal?: PlatformCore.SearchDoubleField;
  recurMonthlyTotal?: PlatformCore.SearchDoubleField;
  recurQuarterlyTotal?: PlatformCore.SearchDoubleField;
  recurringBill?: PlatformCore.SearchBooleanField;
  recurWeeklyTotal?: PlatformCore.SearchDoubleField;
  refNumber?: PlatformCore.SearchLongField;
  revCommitStatus?: PlatformCore.SearchEnumMultiSelectField;
  revCommittingStatus?: PlatformCore.SearchBooleanField;
  revCommittingTransaction?: PlatformCore.SearchMultiSelectField;
  revenueStatus?: PlatformCore.SearchEnumMultiSelectField;
  reversalDate?: PlatformCore.SearchDateField;
  reversalNumber?: PlatformCore.SearchStringField;
  revRecEndDate?: PlatformCore.SearchDateField;
  revRecOnRevCommitment?: PlatformCore.SearchBooleanField;
  revRecStartDate?: PlatformCore.SearchDateField;
  revRecTermInMonths?: PlatformCore.SearchLongField;
  salesEffectiveDate?: PlatformCore.SearchDateField;
  salesOrder?: PlatformCore.SearchMultiSelectField;
  salesRep?: PlatformCore.SearchMultiSelectField;
  salesTeamMember?: PlatformCore.SearchMultiSelectField;
  salesTeamRole?: PlatformCore.SearchMultiSelectField;
  schedulingMethod?: PlatformCore.SearchEnumMultiSelectField;
  serialNumber?: PlatformCore.SearchStringField;
  serialNumberCost?: PlatformCore.SearchDoubleField;
  serialNumberCostAdjustment?: PlatformCore.SearchDoubleField;
  serialNumberQuantity?: PlatformCore.SearchDoubleField;
  serialNumbers?: PlatformCore.SearchStringField;
  shipAddress?: PlatformCore.SearchStringField;
  shipAddressee?: PlatformCore.SearchStringField;
  shipAttention?: PlatformCore.SearchStringField;
  shipCarrier?: PlatformCore.SearchEnumMultiSelectField;
  shipCity?: PlatformCore.SearchStringField;
  shipComplete?: PlatformCore.SearchBooleanField;
  shipCountry?: PlatformCore.SearchEnumMultiSelectField;
  shipCounty?: PlatformCore.SearchStringField;
  shipDate?: PlatformCore.SearchDateField;
  shipGroup?: PlatformCore.SearchLongField;
  shipMethod?: PlatformCore.SearchMultiSelectField;
  shipPhone?: PlatformCore.SearchStringField;
  shipping?: PlatformCore.SearchBooleanField;
  shipRecvStatus?: PlatformCore.SearchBooleanField;
  shipRecvStatusLine?: PlatformCore.SearchBooleanField;
  shipState?: PlatformCore.SearchMultiSelectField;
  shipTo?: PlatformCore.SearchMultiSelectField;
  shipZip?: PlatformCore.SearchStringField;
  source?: PlatformCore.SearchEnumMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  statistical?: PlatformCore.SearchBooleanField;
  status?: PlatformCore.SearchEnumMultiSelectField;
  subscription?: PlatformCore.SearchMultiSelectField;
  subsidiaryTaxRegNum?: PlatformCore.SearchMultiSelectField;
  subscriptionLine?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  taxItem?: PlatformCore.SearchMultiSelectField;
  taxLine?: PlatformCore.SearchBooleanField;
  taxPeriod?: PlatformCore.RecordRef;
  taxPeriodRelative?: PlatformCommonTypes.PostingPeriodDate;
  taxPointDate?: PlatformCore.SearchDateField;
  taxRate?: PlatformCore.SearchDoubleField;
  terms?: PlatformCore.SearchMultiSelectField;
  termsOfSale?: PlatformCore.SearchEnumMultiSelectField;
  title?: PlatformCore.SearchStringField;
  toBeEmailed?: PlatformCore.SearchBooleanField;
  toBePrinted?: PlatformCore.SearchBooleanField;
  toSubsidiary?: PlatformCore.SearchMultiSelectField;
  totalAmount?: PlatformCore.SearchDoubleField;
  trackingNumbers?: PlatformCore.SearchStringField;
  tranCostEstimate?: PlatformCore.SearchDoubleField;
  tranDate?: PlatformCore.SearchDateField;
  tranEstGrossProfit?: PlatformCore.SearchDoubleField;
  tranEstGrossProfitPct?: PlatformCore.SearchDoubleField;
  tranFxEstGrossProfit?: PlatformCore.SearchDoubleField;
  tranId?: PlatformCore.SearchStringField;
  tranIsVsoeBundle?: PlatformCore.SearchBooleanField;
  transactionDiscount?: PlatformCore.SearchBooleanField;
  transactionLineType?: PlatformCore.SearchEnumMultiSelectField;
  transactionNumber?: PlatformCore.SearchStringField;
  transferLocation?: PlatformCore.SearchMultiSelectField;
  transferOrderQuantityCommitted?: PlatformCore.SearchDoubleField;
  transferOrderQuantityPacked?: PlatformCore.SearchDoubleField;
  transferOrderQuantityPicked?: PlatformCore.SearchDoubleField;
  transferOrderQuantityReceived?: PlatformCore.SearchDoubleField;
  transferOrderQuantityShipped?: PlatformCore.SearchDoubleField;
  type?: PlatformCore.SearchEnumMultiSelectField;
  unit?: PlatformCore.SearchMultiSelectField;
  unitCostOverride?: PlatformCore.SearchDoubleField;
  unitsType?: PlatformCore.SearchMultiSelectField;
  vendType?: PlatformCore.SearchMultiSelectField;
  visibleToCustomer?: PlatformCore.SearchBooleanField;
  voided?: PlatformCore.SearchBooleanField;
  vsoeAllocation?: PlatformCore.SearchDoubleField;
  vsoeAmount?: PlatformCore.SearchDoubleField;
  vsoeDeferral?: PlatformCore.SearchEnumMultiSelectField;
  vsoeDelivered?: PlatformCore.SearchBooleanField;
  vsoePermitDiscount?: PlatformCore.SearchEnumMultiSelectField;
  vsoePrice?: PlatformCore.SearchDoubleField;
  webSite?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: TransactionSearchBasicProps) {
    super();
    this.account = props.account;
    this.accountType = props.accountType;
    this.acctCorpCardExp = props.acctCorpCardExp;
    this.actualShipDate = props.actualShipDate;
    this.altSalesAmount = props.altSalesAmount;
    this.altSalesNetAmount = props.altSalesNetAmount;
    this.amount = props.amount;
    this.amountPaid = props.amountPaid;
    this.amountRemaining = props.amountRemaining;
    this.amountUnbilled = props.amountUnbilled;
    this.anyLineItem = props.anyLineItem;
    this.appliedToForeignAmount = props.appliedToForeignAmount;
    this.appliedToIsFxVariance = props.appliedToIsFxVariance;
    this.appliedToLinkAmount = props.appliedToLinkAmount;
    this.appliedToLinkType = props.appliedToLinkType;
    this.appliedToTransaction = props.appliedToTransaction;
    this.applyingForeignAmount = props.applyingForeignAmount;
    this.applyingIsFxVariance = props.applyingIsFxVariance;
    this.applyingLinkAmount = props.applyingLinkAmount;
    this.applyingLinkType = props.applyingLinkType;
    this.applyingTransaction = props.applyingTransaction;
    this.approvalStatus = props.approvalStatus;
    this.authCode = props.authCode;
    this.autoCalculateLag = props.autoCalculateLag;
    this.avsStreetMatch = props.avsStreetMatch;
    this.avsZipMatch = props.avsZipMatch;
    this.billable = props.billable;
    this.billAddress = props.billAddress;
    this.billAddressee = props.billAddressee;
    this.billAttention = props.billAttention;
    this.billCity = props.billCity;
    this.billCountry = props.billCountry;
    this.billCounty = props.billCounty;
    this.billedDate = props.billedDate;
    this.billingAccount = props.billingAccount;
    this.billingSchedule = props.billingSchedule;
    this.billingStatus = props.billingStatus;
    this.billingTransaction = props.billingTransaction;
    this.billPhone = props.billPhone;
    this.billState = props.billState;
    this.billVarianceStatus = props.billVarianceStatus;
    this.billZip = props.billZip;
    this.binNumber = props.binNumber;
    this.binNumberQuantity = props.binNumberQuantity;
    this.bomQuantity = props.bomQuantity;
    this.bookSpecificTransaction = props.bookSpecificTransaction;
    this.buildEntireAssembly = props.buildEntireAssembly;
    this.buildVariance = props.buildVariance;
    this.built = props.built;
    this.canHaveStackablePromotions = props.canHaveStackablePromotions;
    this.catchUpPeriod = props.catchUpPeriod;
    this.ccCustomerCode = props.ccCustomerCode;
    this.ccExpireDate = props.ccExpireDate;
    this.ccName = props.ccName;
    this.ccNumber = props.ccNumber;
    this.chargeType = props.chargeType;
    this.clazz = props.clazz;
    this.cleared = props.cleared;
    this.closed = props.closed;
    this.closeDate = props.closeDate;
    this.cogs = props.cogs;
    this.commissionEffectiveDate = props.commissionEffectiveDate;
    this.commit = props.commit;
    this.componentYield = props.componentYield;
    this.confirmationNumber = props.confirmationNumber;
    this.contribution = props.contribution;
    this.costComponentAmount = props.costComponentAmount;
    this.costComponentCategory = props.costComponentCategory;
    this.costComponentItem = props.costComponentItem;
    this.costComponentQuantity = props.costComponentQuantity;
    this.costComponentStandardCost = props.costComponentStandardCost;
    this.costEstimate = props.costEstimate;
    this.costEstimateRate = props.costEstimateRate;
    this.costEstimateType = props.costEstimateType;
    this.createdBy = props.createdBy;
    this.createdFrom = props.createdFrom;
    this.creditAmount = props.creditAmount;
    this.cscMatch = props.cscMatch;
    this.currency = props.currency;
    this.customerSubOf = props.customerSubOf;
    this.customForm = props.customForm;
    this.customGL = props.customGL;
    this.custType = props.custType;
    this.dateCreated = props.dateCreated;
    this.daysOpen = props.daysOpen;
    this.daysOverdue = props.daysOverdue;
    this.debitAmount = props.debitAmount;
    this.deferredRevenue = props.deferredRevenue;
    this.deferRevRec = props.deferRevRec;
    this.department = props.department;
    this.depositDate = props.depositDate;
    this.depositTransaction = props.depositTransaction;
    this.drAccount = props.drAccount;
    this.dueDate = props.dueDate;
    this.email = props.email;
    this.employee = props.employee;
    this.endDate = props.endDate;
    this.entity = props.entity;
    this.entityStatus = props.entityStatus;
    this.estGrossProfit = props.estGrossProfit;
    this.estGrossProfitPct = props.estGrossProfitPct;
    this.exchangeRate = props.exchangeRate;
    this.excludeCommission = props.excludeCommission;
    this.excludeFromRateRequest = props.excludeFromRateRequest;
    this.expectedCloseDate = props.expectedCloseDate;
    this.expectedReceiptDate = props.expectedReceiptDate;
    this.expenseCategory = props.expenseCategory;
    this.expenseDate = props.expenseDate;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.finChrg = props.finChrg;
    this.firmed = props.firmed;
    this.forecastType = props.forecastType;
    this.fulfillingTransaction = props.fulfillingTransaction;
    this.fxAccount = props.fxAccount;
    this.fxAmount = props.fxAmount;
    this.fxCostEstimate = props.fxCostEstimate;
    this.fxCostEstimateRate = props.fxCostEstimateRate;
    this.fxEstGrossProfit = props.fxEstGrossProfit;
    this.fxTranCostEstimate = props.fxTranCostEstimate;
    this.fxVsoeAllocation = props.fxVsoeAllocation;
    this.fxVsoeAmount = props.fxVsoeAmount;
    this.fxVsoePrice = props.fxVsoePrice;
    this.gcoAvailabelToCharge = props.gcoAvailabelToCharge;
    this.gcoAvailableToRefund = props.gcoAvailableToRefund;
    this.gcoAvsStreetMatch = props.gcoAvsStreetMatch;
    this.gcoAvsZipMatch = props.gcoAvsZipMatch;
    this.gcoBuyerAccountAge = props.gcoBuyerAccountAge;
    this.gcoBuyerIp = props.gcoBuyerIp;
    this.gcoChargeAmount = props.gcoChargeAmount;
    this.gcoChargebackAmount = props.gcoChargebackAmount;
    this.gcoConfirmedChargedTotal = props.gcoConfirmedChargedTotal;
    this.gcoConfirmedRefundedTotal = props.gcoConfirmedRefundedTotal;
    this.gcoCreditcardNumber = props.gcoCreditcardNumber;
    this.gcoCscMatch = props.gcoCscMatch;
    this.gcoFinancialState = props.gcoFinancialState;
    this.gcoFulfillmentState = props.gcoFulfillmentState;
    this.gcoOrderId = props.gcoOrderId;
    this.gcoOrderTotal = props.gcoOrderTotal;
    this.gcoPromotionAmount = props.gcoPromotionAmount;
    this.gcoPromotionName = props.gcoPromotionName;
    this.gcoRefundAmount = props.gcoRefundAmount;
    this.gcoShippingTotal = props.gcoShippingTotal;
    this.gcoStateChangedDetail = props.gcoStateChangedDetail;
    this.giftCertificate = props.giftCertificate;
    this.grossAmount = props.grossAmount;
    this.includeInForecast = props.includeInForecast;
    this.incoterm = props.incoterm;
    this.intercoStatus = props.intercoStatus;
    this.intercoTransaction = props.intercoTransaction;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.inventoryLocation = props.inventoryLocation;
    this.inventorySubsidiary = props.inventorySubsidiary;
    this.inVsoeBundle = props.inVsoeBundle;
    this.isAllocation = props.isAllocation;
    this.isBackflush = props.isBackflush;
    this.isGcoChargeback = props.isGcoChargeback;
    this.isGcoChargeConfirmed = props.isGcoChargeConfirmed;
    this.isGcoPaymentGuaranteed = props.isGcoPaymentGuaranteed;
    this.isGcoRefundConfirmed = props.isGcoRefundConfirmed;
    this.isInsideDelivery = props.isInsideDelivery;
    this.isInsidePickup = props.isInsidePickup;
    this.isIntercompanyAdjustment = props.isIntercompanyAdjustment;
    this.isInTransitPayment = props.isInTransitPayment;
    this.isMultiShipTo = props.isMultiShipTo;
    this.isPayPalMeth = props.isPayPalMeth;
    this.isReversal = props.isReversal;
    this.isRevRecTransaction = props.isRevRecTransaction;
    this.isScrap = props.isScrap;
    this.isShipAddress = props.isShipAddress;
    this.isTransferPriceCosting = props.isTransferPriceCosting;
    this.isVsoeAlloc = props.isVsoeAlloc;
    this.isWip = props.isWip;
    this.item = props.item;
    this.itemFulfillmentChoice = props.itemFulfillmentChoice;
    this.itemRevision = props.itemRevision;
    this.itemSubOf = props.itemSubOf;
    this.landedCostPerLine = props.landedCostPerLine;
    this.lastModifiedDate = props.lastModifiedDate;
    this.leadSource = props.leadSource;
    this.lineUniqueKey = props.lineUniqueKey;
    this.location = props.location;
    this.locationAutoAssigned = props.locationAutoAssigned;
    this.mainLine = props.mainLine;
    this.mainName = props.mainName;
    this.manufacturingRouting = props.manufacturingRouting;
    this.matchBillToReceipt = props.matchBillToReceipt;
    this.memo = props.memo;
    this.memoMain = props.memoMain;
    this.memorized = props.memorized;
    this.merchantAccount = props.merchantAccount;
    this.message = props.message;
    this.multiSubsidiary = props.multiSubsidiary;
    this.nameText = props.nameText;
    this.netAmount = props.netAmount;
    this.nextApprover = props.nextApprover;
    this.nextBillDate = props.nextBillDate;
    this.nexus = props.nexus;
    this.noAutoAssignLocation = props.noAutoAssignLocation;
    this.nonReimbursable = props.nonReimbursable;
    this.number = props.number;
    this.oneTimeTotal = props.oneTimeTotal;
    this.opportunity = props.opportunity;
    this.orderPriority = props.orderPriority;
    this.otherRefNum = props.otherRefNum;
    this.otherRefNumNonDeposit = props.otherRefNumNonDeposit;
    this.overheadParentItem = props.overheadParentItem;
    this.overrideInstallments = props.overrideInstallments;
    this.packageCount = props.packageCount;
    this.paidTransaction = props.paidTransaction;
    this.parent = props.parent;
    this.partner = props.partner;
    this.partnerContribution = props.partnerContribution;
    this.partnerRole = props.partnerRole;
    this.partnerTeamMember = props.partnerTeamMember;
    this.payingTransaction = props.payingTransaction;
    this.paymentApproved = props.paymentApproved;
    this.paymentEventDate = props.paymentEventDate;
    this.paymentEventHoldReason = props.paymentEventHoldReason;
    this.paymentEventPurchaseCardUsed = props.paymentEventPurchaseCardUsed;
    this.paymentEventPurchaseDataSent = props.paymentEventPurchaseDataSent;
    this.paymentEventResult = props.paymentEventResult;
    this.paymentEventType = props.paymentEventType;
    this.paymentHold = props.paymentHold;
    this.paymentMethod = props.paymentMethod;
    this.paymentOption = props.paymentOption;
    this.payPalPending = props.payPalPending;
    this.payPalStatus = props.payPalStatus;
    this.payPalTranId = props.payPalTranId;
    this.pnRefNum = props.pnRefNum;
    this.poAsText = props.poAsText;
    this.posting = props.posting;
    this.postingPeriod = props.postingPeriod;
    this.postingPeriodRelative = props.postingPeriodRelative;
    this.priceLevel = props.priceLevel;
    this.printedPickingTicket = props.printedPickingTicket;
    this.probability = props.probability;
    this.projectedAmount = props.projectedAmount;
    this.projectTask = props.projectTask;
    this.promoCode = props.promoCode;
    this.purchaseOrder = props.purchaseOrder;
    this.quantity = props.quantity;
    this.quantityBilled = props.quantityBilled;
    this.quantityCommitted = props.quantityCommitted;
    this.quantityPacked = props.quantityPacked;
    this.quantityPicked = props.quantityPicked;
    this.quantityRevCommitted = props.quantityRevCommitted;
    this.quantityShipRecv = props.quantityShipRecv;
    this.recognizedRevenue = props.recognizedRevenue;
    this.recordType = props.recordType;
    this.recurAnnuallyTotal = props.recurAnnuallyTotal;
    this.recurMonthlyTotal = props.recurMonthlyTotal;
    this.recurQuarterlyTotal = props.recurQuarterlyTotal;
    this.recurringBill = props.recurringBill;
    this.recurWeeklyTotal = props.recurWeeklyTotal;
    this.refNumber = props.refNumber;
    this.revCommitStatus = props.revCommitStatus;
    this.revCommittingStatus = props.revCommittingStatus;
    this.revCommittingTransaction = props.revCommittingTransaction;
    this.revenueStatus = props.revenueStatus;
    this.reversalDate = props.reversalDate;
    this.reversalNumber = props.reversalNumber;
    this.revRecEndDate = props.revRecEndDate;
    this.revRecOnRevCommitment = props.revRecOnRevCommitment;
    this.revRecStartDate = props.revRecStartDate;
    this.revRecTermInMonths = props.revRecTermInMonths;
    this.salesEffectiveDate = props.salesEffectiveDate;
    this.salesOrder = props.salesOrder;
    this.salesRep = props.salesRep;
    this.salesTeamMember = props.salesTeamMember;
    this.salesTeamRole = props.salesTeamRole;
    this.schedulingMethod = props.schedulingMethod;
    this.serialNumber = props.serialNumber;
    this.serialNumberCost = props.serialNumberCost;
    this.serialNumberCostAdjustment = props.serialNumberCostAdjustment;
    this.serialNumberQuantity = props.serialNumberQuantity;
    this.serialNumbers = props.serialNumbers;
    this.shipAddress = props.shipAddress;
    this.shipAddressee = props.shipAddressee;
    this.shipAttention = props.shipAttention;
    this.shipCarrier = props.shipCarrier;
    this.shipCity = props.shipCity;
    this.shipComplete = props.shipComplete;
    this.shipCountry = props.shipCountry;
    this.shipCounty = props.shipCounty;
    this.shipDate = props.shipDate;
    this.shipGroup = props.shipGroup;
    this.shipMethod = props.shipMethod;
    this.shipPhone = props.shipPhone;
    this.shipping = props.shipping;
    this.shipRecvStatus = props.shipRecvStatus;
    this.shipRecvStatusLine = props.shipRecvStatusLine;
    this.shipState = props.shipState;
    this.shipTo = props.shipTo;
    this.shipZip = props.shipZip;
    this.source = props.source;
    this.startDate = props.startDate;
    this.statistical = props.statistical;
    this.status = props.status;
    this.subscription = props.subscription;
    this.subsidiaryTaxRegNum = props.subsidiaryTaxRegNum;
    this.subscriptionLine = props.subscriptionLine;
    this.subsidiary = props.subsidiary;
    this.taxItem = props.taxItem;
    this.taxLine = props.taxLine;
    this.taxPeriod = props.taxPeriod;
    this.taxPeriodRelative = props.taxPeriodRelative;
    this.taxPointDate = props.taxPointDate;
    this.taxRate = props.taxRate;
    this.terms = props.terms;
    this.termsOfSale = props.termsOfSale;
    this.title = props.title;
    this.toBeEmailed = props.toBeEmailed;
    this.toBePrinted = props.toBePrinted;
    this.toSubsidiary = props.toSubsidiary;
    this.totalAmount = props.totalAmount;
    this.trackingNumbers = props.trackingNumbers;
    this.tranCostEstimate = props.tranCostEstimate;
    this.tranDate = props.tranDate;
    this.tranEstGrossProfit = props.tranEstGrossProfit;
    this.tranEstGrossProfitPct = props.tranEstGrossProfitPct;
    this.tranFxEstGrossProfit = props.tranFxEstGrossProfit;
    this.tranId = props.tranId;
    this.tranIsVsoeBundle = props.tranIsVsoeBundle;
    this.transactionDiscount = props.transactionDiscount;
    this.transactionLineType = props.transactionLineType;
    this.transactionNumber = props.transactionNumber;
    this.transferLocation = props.transferLocation;
    this.transferOrderQuantityCommitted = props.transferOrderQuantityCommitted;
    this.transferOrderQuantityPacked = props.transferOrderQuantityPacked;
    this.transferOrderQuantityPicked = props.transferOrderQuantityPicked;
    this.transferOrderQuantityReceived = props.transferOrderQuantityReceived;
    this.transferOrderQuantityShipped = props.transferOrderQuantityShipped;
    this.type = props.type;
    this.unit = props.unit;
    this.unitCostOverride = props.unitCostOverride;
    this.unitsType = props.unitsType;
    this.vendType = props.vendType;
    this.visibleToCustomer = props.visibleToCustomer;
    this.voided = props.voided;
    this.vsoeAllocation = props.vsoeAllocation;
    this.vsoeAmount = props.vsoeAmount;
    this.vsoeDeferral = props.vsoeDeferral;
    this.vsoeDelivered = props.vsoeDelivered;
    this.vsoePermitDiscount = props.vsoePermitDiscount;
    this.vsoePrice = props.vsoePrice;
    this.webSite = props.webSite;
    this.customFieldList = props.customFieldList;
  }
}

export type NoteTypeSearchBasicProps = {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
};

export class NoteTypeSearchBasic extends PlatformCore.SearchRecordBasic {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  constructor(props: NoteTypeSearchBasicProps) {
    super();
    this.description = props.description;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type GlobalAccountMappingSearchRowBasicProps = {
  accountingBook?: PlatformCore.SearchColumnSelectField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  customDimension?: PlatformCore.SearchColumnSelectCustomField[];
  department?: PlatformCore.SearchColumnSelectField[];
  destinationAccount?: PlatformCore.SearchColumnSelectField[];
  effectiveDate?: PlatformCore.SearchColumnDateField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  sourceAccount?: PlatformCore.SearchColumnSelectField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class GlobalAccountMappingSearchRowBasic extends PlatformCore.SearchRowBasic {
  accountingBook?: PlatformCore.SearchColumnSelectField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  customDimension?: PlatformCore.SearchColumnSelectCustomField[];
  department?: PlatformCore.SearchColumnSelectField[];
  destinationAccount?: PlatformCore.SearchColumnSelectField[];
  effectiveDate?: PlatformCore.SearchColumnDateField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  sourceAccount?: PlatformCore.SearchColumnSelectField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: GlobalAccountMappingSearchRowBasicProps) {
    super();
    this.accountingBook = props.accountingBook;
    this.clazz = props.clazz;
    this.customDimension = props.customDimension;
    this.department = props.department;
    this.destinationAccount = props.destinationAccount;
    this.effectiveDate = props.effectiveDate;
    this.endDate = props.endDate;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.location = props.location;
    this.sourceAccount = props.sourceAccount;
    this.subsidiary = props.subsidiary;
    this.customFieldList = props.customFieldList;
  }
}

export type TimeEntrySearchRowBasicProps = {
  approvalStatus?: PlatformCore.SearchColumnSelectField[];
  billingClass?: PlatformCore.SearchColumnSelectField[];
  billingStatus?: PlatformCore.SearchColumnStringField[];
  _break?: PlatformCore.SearchColumnStringField[];
  caseTaskEvent?: PlatformCore.SearchColumnSelectField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  classNoHierarchy?: PlatformCore.SearchColumnSelectField[];
  customer?: PlatformCore.SearchColumnSelectField[];
  date?: PlatformCore.SearchColumnDateField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  department?: PlatformCore.SearchColumnSelectField[];
  departmentNoHierarchy?: PlatformCore.SearchColumnSelectField[];
  durationDecimal?: PlatformCore.SearchColumnDoubleField[];
  employee?: PlatformCore.SearchColumnSelectField[];
  endTime?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  hours?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isBillable?: PlatformCore.SearchColumnBooleanField[];
  isExempt?: PlatformCore.SearchColumnBooleanField[];
  isProductive?: PlatformCore.SearchColumnBooleanField[];
  isUtilized?: PlatformCore.SearchColumnBooleanField[];
  item?: PlatformCore.SearchColumnStringField[];
  lastModified?: PlatformCore.SearchColumnDateField[];
  location?: PlatformCore.SearchColumnSelectField[];
  locationNoHierarchy?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  nextApprover?: PlatformCore.SearchColumnSelectField[];
  paidExternally?: PlatformCore.SearchColumnBooleanField[];
  payItem?: PlatformCore.SearchColumnSelectField[];
  payrollDate?: PlatformCore.SearchColumnDateField[];
  rate?: PlatformCore.SearchColumnDoubleField[];
  startTime?: PlatformCore.SearchColumnDateField[];
  subsidiary?: PlatformCore.SearchColumnStringField[];
  subsidiaryNoHierarchy?: PlatformCore.SearchColumnStringField[];
  timeSheet?: PlatformCore.SearchColumnStringField[];
  type?: PlatformCore.SearchColumnEnumSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class TimeEntrySearchRowBasic extends PlatformCore.SearchRowBasic {
  approvalStatus?: PlatformCore.SearchColumnSelectField[];
  billingClass?: PlatformCore.SearchColumnSelectField[];
  billingStatus?: PlatformCore.SearchColumnStringField[];
  _break?: PlatformCore.SearchColumnStringField[];
  caseTaskEvent?: PlatformCore.SearchColumnSelectField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  classNoHierarchy?: PlatformCore.SearchColumnSelectField[];
  customer?: PlatformCore.SearchColumnSelectField[];
  date?: PlatformCore.SearchColumnDateField[];
  dateCreated?: PlatformCore.SearchColumnDateField[];
  department?: PlatformCore.SearchColumnSelectField[];
  departmentNoHierarchy?: PlatformCore.SearchColumnSelectField[];
  durationDecimal?: PlatformCore.SearchColumnDoubleField[];
  employee?: PlatformCore.SearchColumnSelectField[];
  endTime?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  hours?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isBillable?: PlatformCore.SearchColumnBooleanField[];
  isExempt?: PlatformCore.SearchColumnBooleanField[];
  isProductive?: PlatformCore.SearchColumnBooleanField[];
  isUtilized?: PlatformCore.SearchColumnBooleanField[];
  item?: PlatformCore.SearchColumnStringField[];
  lastModified?: PlatformCore.SearchColumnDateField[];
  location?: PlatformCore.SearchColumnSelectField[];
  locationNoHierarchy?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  nextApprover?: PlatformCore.SearchColumnSelectField[];
  paidExternally?: PlatformCore.SearchColumnBooleanField[];
  payItem?: PlatformCore.SearchColumnSelectField[];
  payrollDate?: PlatformCore.SearchColumnDateField[];
  rate?: PlatformCore.SearchColumnDoubleField[];
  startTime?: PlatformCore.SearchColumnDateField[];
  subsidiary?: PlatformCore.SearchColumnStringField[];
  subsidiaryNoHierarchy?: PlatformCore.SearchColumnStringField[];
  timeSheet?: PlatformCore.SearchColumnStringField[];
  type?: PlatformCore.SearchColumnEnumSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: TimeEntrySearchRowBasicProps) {
    super();
    this.approvalStatus = props.approvalStatus;
    this.billingClass = props.billingClass;
    this.billingStatus = props.billingStatus;
    this._break = props._break;
    this.caseTaskEvent = props.caseTaskEvent;
    this.clazz = props.clazz;
    this.classNoHierarchy = props.classNoHierarchy;
    this.customer = props.customer;
    this.date = props.date;
    this.dateCreated = props.dateCreated;
    this.department = props.department;
    this.departmentNoHierarchy = props.departmentNoHierarchy;
    this.durationDecimal = props.durationDecimal;
    this.employee = props.employee;
    this.endTime = props.endTime;
    this.externalId = props.externalId;
    this.hours = props.hours;
    this.internalId = props.internalId;
    this.isBillable = props.isBillable;
    this.isExempt = props.isExempt;
    this.isProductive = props.isProductive;
    this.isUtilized = props.isUtilized;
    this.item = props.item;
    this.lastModified = props.lastModified;
    this.location = props.location;
    this.locationNoHierarchy = props.locationNoHierarchy;
    this.memo = props.memo;
    this.nextApprover = props.nextApprover;
    this.paidExternally = props.paidExternally;
    this.payItem = props.payItem;
    this.payrollDate = props.payrollDate;
    this.rate = props.rate;
    this.startTime = props.startTime;
    this.subsidiary = props.subsidiary;
    this.subsidiaryNoHierarchy = props.subsidiaryNoHierarchy;
    this.timeSheet = props.timeSheet;
    this.type = props.type;
    this.customFieldList = props.customFieldList;
  }
}

export type TermSearchRowBasicProps = {
  dateDriven?: PlatformCore.SearchColumnBooleanField[];
  dayDiscountExpires?: PlatformCore.SearchColumnLongField[];
  dayOfMonthNetDue?: PlatformCore.SearchColumnLongField[];
  daysUntilExpiry?: PlatformCore.SearchColumnLongField[];
  daysUntilNetDue?: PlatformCore.SearchColumnLongField[];
  discountPercent?: PlatformCore.SearchColumnDoubleField[];
  discountPercentDateDriven?: PlatformCore.SearchColumnDoubleField[];
  dueNextMonthIfWithinDays?: PlatformCore.SearchColumnLongField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  installment?: PlatformCore.SearchColumnBooleanField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  preferred?: PlatformCore.SearchColumnBooleanField[];
  recurrenceCount?: PlatformCore.SearchColumnLongField[];
  recurrenceFrequency?: PlatformCore.SearchColumnStringField[];
  repeatEvery?: PlatformCore.SearchColumnLongField[];
  splitEvenly?: PlatformCore.SearchColumnBooleanField[];
};

export class TermSearchRowBasic extends PlatformCore.SearchRowBasic {
  dateDriven?: PlatformCore.SearchColumnBooleanField[];
  dayDiscountExpires?: PlatformCore.SearchColumnLongField[];
  dayOfMonthNetDue?: PlatformCore.SearchColumnLongField[];
  daysUntilExpiry?: PlatformCore.SearchColumnLongField[];
  daysUntilNetDue?: PlatformCore.SearchColumnLongField[];
  discountPercent?: PlatformCore.SearchColumnDoubleField[];
  discountPercentDateDriven?: PlatformCore.SearchColumnDoubleField[];
  dueNextMonthIfWithinDays?: PlatformCore.SearchColumnLongField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  installment?: PlatformCore.SearchColumnBooleanField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  preferred?: PlatformCore.SearchColumnBooleanField[];
  recurrenceCount?: PlatformCore.SearchColumnLongField[];
  recurrenceFrequency?: PlatformCore.SearchColumnStringField[];
  repeatEvery?: PlatformCore.SearchColumnLongField[];
  splitEvenly?: PlatformCore.SearchColumnBooleanField[];
  constructor(props: TermSearchRowBasicProps) {
    super();
    this.dateDriven = props.dateDriven;
    this.dayDiscountExpires = props.dayDiscountExpires;
    this.dayOfMonthNetDue = props.dayOfMonthNetDue;
    this.daysUntilExpiry = props.daysUntilExpiry;
    this.daysUntilNetDue = props.daysUntilNetDue;
    this.discountPercent = props.discountPercent;
    this.discountPercentDateDriven = props.discountPercentDateDriven;
    this.dueNextMonthIfWithinDays = props.dueNextMonthIfWithinDays;
    this.externalId = props.externalId;
    this.installment = props.installment;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.preferred = props.preferred;
    this.recurrenceCount = props.recurrenceCount;
    this.recurrenceFrequency = props.recurrenceFrequency;
    this.repeatEvery = props.repeatEvery;
    this.splitEvenly = props.splitEvenly;
  }
}

export type InventoryDetailSearchRowBasicProps = {
  binNumber?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  inventoryNumber?: PlatformCore.SearchColumnSelectField[];
  quantity?: PlatformCore.SearchColumnDoubleField[];
};

export class InventoryDetailSearchRowBasic extends PlatformCore.SearchRowBasic {
  binNumber?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  inventoryNumber?: PlatformCore.SearchColumnSelectField[];
  quantity?: PlatformCore.SearchColumnDoubleField[];
  constructor(props: InventoryDetailSearchRowBasicProps) {
    super();
    this.binNumber = props.binNumber;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.inventoryNumber = props.inventoryNumber;
    this.quantity = props.quantity;
  }
}

export type PaycheckSearchRowBasicProps = {
  account?: PlatformCore.SearchColumnSelectField[];
  amendedDate?: PlatformCore.SearchColumnDateField[];
  amount?: PlatformCore.SearchColumnDoubleField[];
  batchNumber?: PlatformCore.SearchColumnLongField[];
  checkDate?: PlatformCore.SearchColumnDateField[];
  employee?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  hasGLImpact?: PlatformCore.SearchColumnBooleanField[];
  hours?: PlatformCore.SearchColumnDoubleField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  payrollItem?: PlatformCore.SearchColumnSelectField[];
  payrollItemType?: PlatformCore.SearchColumnSelectField[];
  subjectWages?: PlatformCore.SearchColumnDoubleField[];
  taxableWages?: PlatformCore.SearchColumnDoubleField[];
};

export class PaycheckSearchRowBasic extends PlatformCore.SearchRowBasic {
  account?: PlatformCore.SearchColumnSelectField[];
  amendedDate?: PlatformCore.SearchColumnDateField[];
  amount?: PlatformCore.SearchColumnDoubleField[];
  batchNumber?: PlatformCore.SearchColumnLongField[];
  checkDate?: PlatformCore.SearchColumnDateField[];
  employee?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  hasGLImpact?: PlatformCore.SearchColumnBooleanField[];
  hours?: PlatformCore.SearchColumnDoubleField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  payrollItem?: PlatformCore.SearchColumnSelectField[];
  payrollItemType?: PlatformCore.SearchColumnSelectField[];
  subjectWages?: PlatformCore.SearchColumnDoubleField[];
  taxableWages?: PlatformCore.SearchColumnDoubleField[];
  constructor(props: PaycheckSearchRowBasicProps) {
    super();
    this.account = props.account;
    this.amendedDate = props.amendedDate;
    this.amount = props.amount;
    this.batchNumber = props.batchNumber;
    this.checkDate = props.checkDate;
    this.employee = props.employee;
    this.externalId = props.externalId;
    this.hasGLImpact = props.hasGLImpact;
    this.hours = props.hours;
    this.internalId = props.internalId;
    this.payrollItem = props.payrollItem;
    this.payrollItemType = props.payrollItemType;
    this.subjectWages = props.subjectWages;
    this.taxableWages = props.taxableWages;
  }
}

export type HcmJobSearchRowBasicProps = {
  description?: PlatformCore.SearchColumnStringField[];
  employmentCategory?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  jobId?: PlatformCore.SearchColumnStringField[];
  title?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class HcmJobSearchRowBasic extends PlatformCore.SearchRowBasic {
  description?: PlatformCore.SearchColumnStringField[];
  employmentCategory?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  jobId?: PlatformCore.SearchColumnStringField[];
  title?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: HcmJobSearchRowBasicProps) {
    super();
    this.description = props.description;
    this.employmentCategory = props.employmentCategory;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.jobId = props.jobId;
    this.title = props.title;
    this.customFieldList = props.customFieldList;
  }
}

export type CustomerSalesTeamProps = {
  employee?: PlatformCore.RecordRef;
  salesRole?: PlatformCore.RecordRef;
  isPrimary?: boolean;
  contribution?: number;
};

export class CustomerSalesTeam {
  employee?: PlatformCore.RecordRef;
  salesRole?: PlatformCore.RecordRef;
  isPrimary?: boolean;
  contribution?: number;
  constructor(props: CustomerSalesTeamProps) {
    this.employee = props.employee;
    this.salesRole = props.salesRole;
    this.isPrimary = props.isPrimary;
    this.contribution = props.contribution;
  }
}

export type OtherNameCategorySearchBasicProps = {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
};

export class OtherNameCategorySearchBasic extends PlatformCore.SearchRecordBasic {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  constructor(props: OtherNameCategorySearchBasicProps) {
    super();
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type PricingSearchRowBasicProps = {
  currency?: PlatformCore.SearchColumnSelectField[];
  customer?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  item?: PlatformCore.SearchColumnSelectField[];
  maximumQuantity?: PlatformCore.SearchColumnDoubleField[];
  minimumQuantity?: PlatformCore.SearchColumnDoubleField[];
  priceLevel?: PlatformCore.SearchColumnSelectField[];
  quantityRange?: PlatformCore.SearchColumnStringField[];
  saleUnit?: PlatformCore.SearchColumnSelectField[];
  unitPrice?: PlatformCore.SearchColumnDoubleField[];
};

export class PricingSearchRowBasic extends PlatformCore.SearchRowBasic {
  currency?: PlatformCore.SearchColumnSelectField[];
  customer?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  item?: PlatformCore.SearchColumnSelectField[];
  maximumQuantity?: PlatformCore.SearchColumnDoubleField[];
  minimumQuantity?: PlatformCore.SearchColumnDoubleField[];
  priceLevel?: PlatformCore.SearchColumnSelectField[];
  quantityRange?: PlatformCore.SearchColumnStringField[];
  saleUnit?: PlatformCore.SearchColumnSelectField[];
  unitPrice?: PlatformCore.SearchColumnDoubleField[];
  constructor(props: PricingSearchRowBasicProps) {
    super();
    this.currency = props.currency;
    this.customer = props.customer;
    this.internalId = props.internalId;
    this.item = props.item;
    this.maximumQuantity = props.maximumQuantity;
    this.minimumQuantity = props.minimumQuantity;
    this.priceLevel = props.priceLevel;
    this.quantityRange = props.quantityRange;
    this.saleUnit = props.saleUnit;
    this.unitPrice = props.unitPrice;
  }
}

export type LandedCostDataListProps = {
  landedCostData?: LandedCostData[];
  replaceAll?: boolean;
};

export class LandedCostDataList {
  landedCostData?: LandedCostData[];
  replaceAll?: boolean;
  constructor(props: LandedCostDataListProps) {
    this.landedCostData = props.landedCostData;
    this.replaceAll = props.replaceAll;
  }
}

export type BomSearchRowBasicProps = {
  availableForAllAssemblies?: PlatformCore.SearchColumnBooleanField[];
  availableForAllLocations?: PlatformCore.SearchColumnBooleanField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  includeChildren?: PlatformCore.SearchColumnBooleanField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  legacyBomForAssembly?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  restrictToAssemblies?: PlatformCore.SearchColumnSelectField[];
  restrictToLocations?: PlatformCore.SearchColumnSelectField[];
  revisionName?: PlatformCore.SearchColumnStringField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  subsidiaryNoHierarchy?: PlatformCore.SearchColumnSelectField[];
  useComponentYield?: PlatformCore.SearchColumnBooleanField[];
  usedOnAssembly?: PlatformCore.SearchColumnBooleanField[];
};

export class BomSearchRowBasic extends PlatformCore.SearchRowBasic {
  availableForAllAssemblies?: PlatformCore.SearchColumnBooleanField[];
  availableForAllLocations?: PlatformCore.SearchColumnBooleanField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  includeChildren?: PlatformCore.SearchColumnBooleanField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  legacyBomForAssembly?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  restrictToAssemblies?: PlatformCore.SearchColumnSelectField[];
  restrictToLocations?: PlatformCore.SearchColumnSelectField[];
  revisionName?: PlatformCore.SearchColumnStringField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  subsidiaryNoHierarchy?: PlatformCore.SearchColumnSelectField[];
  useComponentYield?: PlatformCore.SearchColumnBooleanField[];
  usedOnAssembly?: PlatformCore.SearchColumnBooleanField[];
  constructor(props: BomSearchRowBasicProps) {
    super();
    this.availableForAllAssemblies = props.availableForAllAssemblies;
    this.availableForAllLocations = props.availableForAllLocations;
    this.createdDate = props.createdDate;
    this.externalId = props.externalId;
    this.includeChildren = props.includeChildren;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.legacyBomForAssembly = props.legacyBomForAssembly;
    this.memo = props.memo;
    this.name = props.name;
    this.restrictToAssemblies = props.restrictToAssemblies;
    this.restrictToLocations = props.restrictToLocations;
    this.revisionName = props.revisionName;
    this.subsidiary = props.subsidiary;
    this.subsidiaryNoHierarchy = props.subsidiaryNoHierarchy;
    this.useComponentYield = props.useComponentYield;
    this.usedOnAssembly = props.usedOnAssembly;
  }
}

export type SolutionSearchRowBasicProps = {
  assigned?: PlatformCore.SearchColumnSelectField[];
  caseCount?: PlatformCore.SearchColumnLongField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  description?: PlatformCore.SearchColumnStringField[];
  displayOnline?: PlatformCore.SearchColumnBooleanField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  message?: PlatformCore.SearchColumnStringField[];
  previewref?: PlatformCore.SearchColumnStringField[];
  solutionCode?: PlatformCore.SearchColumnStringField[];
  status?: PlatformCore.SearchColumnEnumSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class SolutionSearchRowBasic extends PlatformCore.SearchRowBasic {
  assigned?: PlatformCore.SearchColumnSelectField[];
  caseCount?: PlatformCore.SearchColumnLongField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  description?: PlatformCore.SearchColumnStringField[];
  displayOnline?: PlatformCore.SearchColumnBooleanField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  message?: PlatformCore.SearchColumnStringField[];
  previewref?: PlatformCore.SearchColumnStringField[];
  solutionCode?: PlatformCore.SearchColumnStringField[];
  status?: PlatformCore.SearchColumnEnumSelectField[];
  title?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: SolutionSearchRowBasicProps) {
    super();
    this.assigned = props.assigned;
    this.caseCount = props.caseCount;
    this.createdDate = props.createdDate;
    this.description = props.description;
    this.displayOnline = props.displayOnline;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.lastModifiedDate = props.lastModifiedDate;
    this.message = props.message;
    this.previewref = props.previewref;
    this.solutionCode = props.solutionCode;
    this.status = props.status;
    this.title = props.title;
    this.customFieldList = props.customFieldList;
  }
}

export type OriginatingLeadSearchBasicProps = {
  accountNumber?: PlatformCore.SearchStringField;
  address?: PlatformCore.SearchStringField;
  addressee?: PlatformCore.SearchStringField;
  addressLabel?: PlatformCore.SearchStringField;
  addressPhone?: PlatformCore.SearchStringField;
  assignedSite?: PlatformCore.SearchMultiSelectField;
  assignedSiteId?: PlatformCore.SearchMultiSelectField;
  attention?: PlatformCore.SearchStringField;
  availableOffline?: PlatformCore.SearchBooleanField;
  balance?: PlatformCore.SearchDoubleField;
  billAddress?: PlatformCore.SearchStringField;
  boughtAmount?: PlatformCore.SearchDoubleField;
  boughtDate?: PlatformCore.SearchDateField;
  buyingReason?: PlatformCore.SearchMultiSelectField;
  buyingTimeFrame?: PlatformCore.SearchMultiSelectField;
  category?: PlatformCore.SearchMultiSelectField;
  ccCustomerCode?: PlatformCore.SearchStringField;
  ccDefault?: PlatformCore.SearchBooleanField;
  ccExpDate?: PlatformCore.SearchDateField;
  ccHolderName?: PlatformCore.SearchStringField;
  ccNumber?: PlatformCore.SearchStringField;
  ccState?: PlatformCore.SearchMultiSelectField;
  ccStateFrom?: PlatformCore.SearchDateField;
  ccType?: PlatformCore.SearchMultiSelectField;
  city?: PlatformCore.SearchStringField;
  classBought?: PlatformCore.SearchMultiSelectField;
  comments?: PlatformCore.SearchStringField;
  companyName?: PlatformCore.SearchStringField;
  consolBalance?: PlatformCore.SearchDoubleField;
  consolDaysOverdue?: PlatformCore.SearchLongField;
  consolDepositBalance?: PlatformCore.SearchDoubleField;
  consolOverdueBalance?: PlatformCore.SearchDoubleField;
  consolUnbilledOrders?: PlatformCore.SearchDoubleField;
  contact?: PlatformCore.SearchStringField;
  contribution?: PlatformCore.SearchLongField;
  conversionDate?: PlatformCore.SearchDateField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  creditHold?: PlatformCore.SearchEnumMultiSelectField;
  creditHoldOverride?: PlatformCore.SearchBooleanField;
  creditLimit?: PlatformCore.SearchDoubleField;
  currency?: PlatformCore.SearchMultiSelectField;
  custStage?: PlatformCore.SearchMultiSelectField;
  custStatus?: PlatformCore.SearchMultiSelectField;
  dateClosed?: PlatformCore.SearchDateField;
  dateCreated?: PlatformCore.SearchDateField;
  daysOverdue?: PlatformCore.SearchLongField;
  defaultOrderPriority?: PlatformCore.SearchDoubleField;
  defaultTaxReg?: PlatformCore.SearchMultiSelectField;
  defaultTaxRegText?: PlatformCore.SearchStringField;
  depositBalance?: PlatformCore.SearchDoubleField;
  deptBought?: PlatformCore.SearchMultiSelectField;
  drAccount?: PlatformCore.SearchMultiSelectField;
  email?: PlatformCore.SearchStringField;
  emailPreference?: PlatformCore.SearchEnumMultiSelectField;
  emailTransactions?: PlatformCore.SearchBooleanField;
  endDate?: PlatformCore.SearchDateField;
  entityId?: PlatformCore.SearchStringField;
  entityStatus?: PlatformCore.SearchMultiSelectField;
  estimatedBudget?: PlatformCore.SearchDoubleField;
  explicitConversion?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  faxTransactions?: PlatformCore.SearchBooleanField;
  firstName?: PlatformCore.SearchStringField;
  firstOrderDate?: PlatformCore.SearchDateField;
  firstSaleDate?: PlatformCore.SearchDateField;
  fxAccount?: PlatformCore.SearchMultiSelectField;
  fxBalance?: PlatformCore.SearchDoubleField;
  fxConsolBalance?: PlatformCore.SearchDoubleField;
  fxConsolUnbilledOrders?: PlatformCore.SearchDoubleField;
  fxUnbilledOrders?: PlatformCore.SearchDoubleField;
  giveAccess?: PlatformCore.SearchBooleanField;
  globalSubscriptionStatus?: PlatformCore.SearchEnumMultiSelectField;
  group?: PlatformCore.SearchMultiSelectField;
  groupPricingLevel?: PlatformCore.SearchMultiSelectField;
  hasDuplicates?: PlatformCore.SearchBooleanField;
  image?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isBudgetApproved?: PlatformCore.SearchBooleanField;
  isDefaultBilling?: PlatformCore.SearchBooleanField;
  isDefaultShipping?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isPerson?: PlatformCore.SearchBooleanField;
  isReportedLead?: PlatformCore.SearchBooleanField;
  isShipAddress?: PlatformCore.SearchBooleanField;
  itemPricingLevel?: PlatformCore.SearchMultiSelectField;
  itemPricingUnitPrice?: PlatformCore.SearchDoubleField;
  itemsBought?: PlatformCore.SearchMultiSelectField;
  itemsOrdered?: PlatformCore.SearchMultiSelectField;
  language?: PlatformCore.SearchEnumMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  lastName?: PlatformCore.SearchStringField;
  lastOrderDate?: PlatformCore.SearchDateField;
  lastSaleDate?: PlatformCore.SearchDateField;
  leadDate?: PlatformCore.SearchDateField;
  leadSource?: PlatformCore.SearchMultiSelectField;
  level?: PlatformCore.SearchEnumMultiSelectField;
  locationBought?: PlatformCore.SearchMultiSelectField;
  manualCreditHold?: PlatformCore.SearchBooleanField;
  merchantAccount?: PlatformCore.SearchMultiSelectField;
  middleName?: PlatformCore.SearchStringField;
  monthlyClosing?: PlatformCore.SearchEnumMultiSelectField;
  onCreditHold?: PlatformCore.SearchBooleanField;
  orderedAmount?: PlatformCore.SearchDoubleField;
  orderedDate?: PlatformCore.SearchDateField;
  otherRelationships?: PlatformCore.SearchEnumMultiSelectField;
  overdueBalance?: PlatformCore.SearchDoubleField;
  parent?: PlatformCore.SearchMultiSelectField;
  parentItemsBought?: PlatformCore.SearchMultiSelectField;
  parentItemsOrdered?: PlatformCore.SearchMultiSelectField;
  partner?: PlatformCore.SearchMultiSelectField;
  partnerContribution?: PlatformCore.SearchLongField;
  partnerRole?: PlatformCore.SearchMultiSelectField;
  partnerTeamMember?: PlatformCore.SearchMultiSelectField;
  pec?: PlatformCore.SearchStringField;
  permission?: PlatformCore.SearchEnumMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  phoneticName?: PlatformCore.SearchStringField;
  priceLevel?: PlatformCore.SearchMultiSelectField;
  pricingGroup?: PlatformCore.SearchMultiSelectField;
  pricingItem?: PlatformCore.SearchMultiSelectField;
  printTransactions?: PlatformCore.SearchBooleanField;
  prospectDate?: PlatformCore.SearchDateField;
  pstExempt?: PlatformCore.SearchBooleanField;
  receivablesAccount?: PlatformCore.SearchMultiSelectField;
  reminderDate?: PlatformCore.SearchDateField;
  resaleNumber?: PlatformCore.SearchStringField;
  role?: PlatformCore.SearchMultiSelectField;
  salesReadiness?: PlatformCore.SearchMultiSelectField;
  salesRep?: PlatformCore.SearchMultiSelectField;
  salesTeamMember?: PlatformCore.SearchMultiSelectField;
  salesTeamRole?: PlatformCore.SearchMultiSelectField;
  salutation?: PlatformCore.SearchStringField;
  shipAddress?: PlatformCore.SearchStringField;
  shipComplete?: PlatformCore.SearchBooleanField;
  shippingItem?: PlatformCore.SearchMultiSelectField;
  sourceSite?: PlatformCore.SearchMultiSelectField;
  sourceSiteId?: PlatformCore.SearchMultiSelectField;
  stage?: PlatformCore.SearchMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  state?: PlatformCore.SearchStringField;
  subsidBought?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  taxable?: PlatformCore.SearchBooleanField;
  terms?: PlatformCore.SearchMultiSelectField;
  territory?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  unbilledOrders?: PlatformCore.SearchDoubleField;
  url?: PlatformCore.SearchStringField;
  vatRegNumber?: PlatformCore.SearchStringField;
  webLead?: PlatformCore.SearchBooleanField;
  zipCode?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class OriginatingLeadSearchBasic extends PlatformCore.SearchRecordBasic {
  accountNumber?: PlatformCore.SearchStringField;
  address?: PlatformCore.SearchStringField;
  addressee?: PlatformCore.SearchStringField;
  addressLabel?: PlatformCore.SearchStringField;
  addressPhone?: PlatformCore.SearchStringField;
  assignedSite?: PlatformCore.SearchMultiSelectField;
  assignedSiteId?: PlatformCore.SearchMultiSelectField;
  attention?: PlatformCore.SearchStringField;
  availableOffline?: PlatformCore.SearchBooleanField;
  balance?: PlatformCore.SearchDoubleField;
  billAddress?: PlatformCore.SearchStringField;
  boughtAmount?: PlatformCore.SearchDoubleField;
  boughtDate?: PlatformCore.SearchDateField;
  buyingReason?: PlatformCore.SearchMultiSelectField;
  buyingTimeFrame?: PlatformCore.SearchMultiSelectField;
  category?: PlatformCore.SearchMultiSelectField;
  ccCustomerCode?: PlatformCore.SearchStringField;
  ccDefault?: PlatformCore.SearchBooleanField;
  ccExpDate?: PlatformCore.SearchDateField;
  ccHolderName?: PlatformCore.SearchStringField;
  ccNumber?: PlatformCore.SearchStringField;
  ccState?: PlatformCore.SearchMultiSelectField;
  ccStateFrom?: PlatformCore.SearchDateField;
  ccType?: PlatformCore.SearchMultiSelectField;
  city?: PlatformCore.SearchStringField;
  classBought?: PlatformCore.SearchMultiSelectField;
  comments?: PlatformCore.SearchStringField;
  companyName?: PlatformCore.SearchStringField;
  consolBalance?: PlatformCore.SearchDoubleField;
  consolDaysOverdue?: PlatformCore.SearchLongField;
  consolDepositBalance?: PlatformCore.SearchDoubleField;
  consolOverdueBalance?: PlatformCore.SearchDoubleField;
  consolUnbilledOrders?: PlatformCore.SearchDoubleField;
  contact?: PlatformCore.SearchStringField;
  contribution?: PlatformCore.SearchLongField;
  conversionDate?: PlatformCore.SearchDateField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  creditHold?: PlatformCore.SearchEnumMultiSelectField;
  creditHoldOverride?: PlatformCore.SearchBooleanField;
  creditLimit?: PlatformCore.SearchDoubleField;
  currency?: PlatformCore.SearchMultiSelectField;
  custStage?: PlatformCore.SearchMultiSelectField;
  custStatus?: PlatformCore.SearchMultiSelectField;
  dateClosed?: PlatformCore.SearchDateField;
  dateCreated?: PlatformCore.SearchDateField;
  daysOverdue?: PlatformCore.SearchLongField;
  defaultOrderPriority?: PlatformCore.SearchDoubleField;
  defaultTaxReg?: PlatformCore.SearchMultiSelectField;
  defaultTaxRegText?: PlatformCore.SearchStringField;
  depositBalance?: PlatformCore.SearchDoubleField;
  deptBought?: PlatformCore.SearchMultiSelectField;
  drAccount?: PlatformCore.SearchMultiSelectField;
  email?: PlatformCore.SearchStringField;
  emailPreference?: PlatformCore.SearchEnumMultiSelectField;
  emailTransactions?: PlatformCore.SearchBooleanField;
  endDate?: PlatformCore.SearchDateField;
  entityId?: PlatformCore.SearchStringField;
  entityStatus?: PlatformCore.SearchMultiSelectField;
  estimatedBudget?: PlatformCore.SearchDoubleField;
  explicitConversion?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  faxTransactions?: PlatformCore.SearchBooleanField;
  firstName?: PlatformCore.SearchStringField;
  firstOrderDate?: PlatformCore.SearchDateField;
  firstSaleDate?: PlatformCore.SearchDateField;
  fxAccount?: PlatformCore.SearchMultiSelectField;
  fxBalance?: PlatformCore.SearchDoubleField;
  fxConsolBalance?: PlatformCore.SearchDoubleField;
  fxConsolUnbilledOrders?: PlatformCore.SearchDoubleField;
  fxUnbilledOrders?: PlatformCore.SearchDoubleField;
  giveAccess?: PlatformCore.SearchBooleanField;
  globalSubscriptionStatus?: PlatformCore.SearchEnumMultiSelectField;
  group?: PlatformCore.SearchMultiSelectField;
  groupPricingLevel?: PlatformCore.SearchMultiSelectField;
  hasDuplicates?: PlatformCore.SearchBooleanField;
  image?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isBudgetApproved?: PlatformCore.SearchBooleanField;
  isDefaultBilling?: PlatformCore.SearchBooleanField;
  isDefaultShipping?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isPerson?: PlatformCore.SearchBooleanField;
  isReportedLead?: PlatformCore.SearchBooleanField;
  isShipAddress?: PlatformCore.SearchBooleanField;
  itemPricingLevel?: PlatformCore.SearchMultiSelectField;
  itemPricingUnitPrice?: PlatformCore.SearchDoubleField;
  itemsBought?: PlatformCore.SearchMultiSelectField;
  itemsOrdered?: PlatformCore.SearchMultiSelectField;
  language?: PlatformCore.SearchEnumMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  lastName?: PlatformCore.SearchStringField;
  lastOrderDate?: PlatformCore.SearchDateField;
  lastSaleDate?: PlatformCore.SearchDateField;
  leadDate?: PlatformCore.SearchDateField;
  leadSource?: PlatformCore.SearchMultiSelectField;
  level?: PlatformCore.SearchEnumMultiSelectField;
  locationBought?: PlatformCore.SearchMultiSelectField;
  manualCreditHold?: PlatformCore.SearchBooleanField;
  merchantAccount?: PlatformCore.SearchMultiSelectField;
  middleName?: PlatformCore.SearchStringField;
  monthlyClosing?: PlatformCore.SearchEnumMultiSelectField;
  onCreditHold?: PlatformCore.SearchBooleanField;
  orderedAmount?: PlatformCore.SearchDoubleField;
  orderedDate?: PlatformCore.SearchDateField;
  otherRelationships?: PlatformCore.SearchEnumMultiSelectField;
  overdueBalance?: PlatformCore.SearchDoubleField;
  parent?: PlatformCore.SearchMultiSelectField;
  parentItemsBought?: PlatformCore.SearchMultiSelectField;
  parentItemsOrdered?: PlatformCore.SearchMultiSelectField;
  partner?: PlatformCore.SearchMultiSelectField;
  partnerContribution?: PlatformCore.SearchLongField;
  partnerRole?: PlatformCore.SearchMultiSelectField;
  partnerTeamMember?: PlatformCore.SearchMultiSelectField;
  pec?: PlatformCore.SearchStringField;
  permission?: PlatformCore.SearchEnumMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  phoneticName?: PlatformCore.SearchStringField;
  priceLevel?: PlatformCore.SearchMultiSelectField;
  pricingGroup?: PlatformCore.SearchMultiSelectField;
  pricingItem?: PlatformCore.SearchMultiSelectField;
  printTransactions?: PlatformCore.SearchBooleanField;
  prospectDate?: PlatformCore.SearchDateField;
  pstExempt?: PlatformCore.SearchBooleanField;
  receivablesAccount?: PlatformCore.SearchMultiSelectField;
  reminderDate?: PlatformCore.SearchDateField;
  resaleNumber?: PlatformCore.SearchStringField;
  role?: PlatformCore.SearchMultiSelectField;
  salesReadiness?: PlatformCore.SearchMultiSelectField;
  salesRep?: PlatformCore.SearchMultiSelectField;
  salesTeamMember?: PlatformCore.SearchMultiSelectField;
  salesTeamRole?: PlatformCore.SearchMultiSelectField;
  salutation?: PlatformCore.SearchStringField;
  shipAddress?: PlatformCore.SearchStringField;
  shipComplete?: PlatformCore.SearchBooleanField;
  shippingItem?: PlatformCore.SearchMultiSelectField;
  sourceSite?: PlatformCore.SearchMultiSelectField;
  sourceSiteId?: PlatformCore.SearchMultiSelectField;
  stage?: PlatformCore.SearchMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  state?: PlatformCore.SearchStringField;
  subsidBought?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  taxable?: PlatformCore.SearchBooleanField;
  terms?: PlatformCore.SearchMultiSelectField;
  territory?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  unbilledOrders?: PlatformCore.SearchDoubleField;
  url?: PlatformCore.SearchStringField;
  vatRegNumber?: PlatformCore.SearchStringField;
  webLead?: PlatformCore.SearchBooleanField;
  zipCode?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: OriginatingLeadSearchBasicProps) {
    super();
    this.accountNumber = props.accountNumber;
    this.address = props.address;
    this.addressee = props.addressee;
    this.addressLabel = props.addressLabel;
    this.addressPhone = props.addressPhone;
    this.assignedSite = props.assignedSite;
    this.assignedSiteId = props.assignedSiteId;
    this.attention = props.attention;
    this.availableOffline = props.availableOffline;
    this.balance = props.balance;
    this.billAddress = props.billAddress;
    this.boughtAmount = props.boughtAmount;
    this.boughtDate = props.boughtDate;
    this.buyingReason = props.buyingReason;
    this.buyingTimeFrame = props.buyingTimeFrame;
    this.category = props.category;
    this.ccCustomerCode = props.ccCustomerCode;
    this.ccDefault = props.ccDefault;
    this.ccExpDate = props.ccExpDate;
    this.ccHolderName = props.ccHolderName;
    this.ccNumber = props.ccNumber;
    this.ccState = props.ccState;
    this.ccStateFrom = props.ccStateFrom;
    this.ccType = props.ccType;
    this.city = props.city;
    this.classBought = props.classBought;
    this.comments = props.comments;
    this.companyName = props.companyName;
    this.consolBalance = props.consolBalance;
    this.consolDaysOverdue = props.consolDaysOverdue;
    this.consolDepositBalance = props.consolDepositBalance;
    this.consolOverdueBalance = props.consolOverdueBalance;
    this.consolUnbilledOrders = props.consolUnbilledOrders;
    this.contact = props.contact;
    this.contribution = props.contribution;
    this.conversionDate = props.conversionDate;
    this.country = props.country;
    this.county = props.county;
    this.creditHold = props.creditHold;
    this.creditHoldOverride = props.creditHoldOverride;
    this.creditLimit = props.creditLimit;
    this.currency = props.currency;
    this.custStage = props.custStage;
    this.custStatus = props.custStatus;
    this.dateClosed = props.dateClosed;
    this.dateCreated = props.dateCreated;
    this.daysOverdue = props.daysOverdue;
    this.defaultOrderPriority = props.defaultOrderPriority;
    this.defaultTaxReg = props.defaultTaxReg;
    this.defaultTaxRegText = props.defaultTaxRegText;
    this.depositBalance = props.depositBalance;
    this.deptBought = props.deptBought;
    this.drAccount = props.drAccount;
    this.email = props.email;
    this.emailPreference = props.emailPreference;
    this.emailTransactions = props.emailTransactions;
    this.endDate = props.endDate;
    this.entityId = props.entityId;
    this.entityStatus = props.entityStatus;
    this.estimatedBudget = props.estimatedBudget;
    this.explicitConversion = props.explicitConversion;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.fax = props.fax;
    this.faxTransactions = props.faxTransactions;
    this.firstName = props.firstName;
    this.firstOrderDate = props.firstOrderDate;
    this.firstSaleDate = props.firstSaleDate;
    this.fxAccount = props.fxAccount;
    this.fxBalance = props.fxBalance;
    this.fxConsolBalance = props.fxConsolBalance;
    this.fxConsolUnbilledOrders = props.fxConsolUnbilledOrders;
    this.fxUnbilledOrders = props.fxUnbilledOrders;
    this.giveAccess = props.giveAccess;
    this.globalSubscriptionStatus = props.globalSubscriptionStatus;
    this.group = props.group;
    this.groupPricingLevel = props.groupPricingLevel;
    this.hasDuplicates = props.hasDuplicates;
    this.image = props.image;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isBudgetApproved = props.isBudgetApproved;
    this.isDefaultBilling = props.isDefaultBilling;
    this.isDefaultShipping = props.isDefaultShipping;
    this.isInactive = props.isInactive;
    this.isPerson = props.isPerson;
    this.isReportedLead = props.isReportedLead;
    this.isShipAddress = props.isShipAddress;
    this.itemPricingLevel = props.itemPricingLevel;
    this.itemPricingUnitPrice = props.itemPricingUnitPrice;
    this.itemsBought = props.itemsBought;
    this.itemsOrdered = props.itemsOrdered;
    this.language = props.language;
    this.lastModifiedDate = props.lastModifiedDate;
    this.lastName = props.lastName;
    this.lastOrderDate = props.lastOrderDate;
    this.lastSaleDate = props.lastSaleDate;
    this.leadDate = props.leadDate;
    this.leadSource = props.leadSource;
    this.level = props.level;
    this.locationBought = props.locationBought;
    this.manualCreditHold = props.manualCreditHold;
    this.merchantAccount = props.merchantAccount;
    this.middleName = props.middleName;
    this.monthlyClosing = props.monthlyClosing;
    this.onCreditHold = props.onCreditHold;
    this.orderedAmount = props.orderedAmount;
    this.orderedDate = props.orderedDate;
    this.otherRelationships = props.otherRelationships;
    this.overdueBalance = props.overdueBalance;
    this.parent = props.parent;
    this.parentItemsBought = props.parentItemsBought;
    this.parentItemsOrdered = props.parentItemsOrdered;
    this.partner = props.partner;
    this.partnerContribution = props.partnerContribution;
    this.partnerRole = props.partnerRole;
    this.partnerTeamMember = props.partnerTeamMember;
    this.pec = props.pec;
    this.permission = props.permission;
    this.phone = props.phone;
    this.phoneticName = props.phoneticName;
    this.priceLevel = props.priceLevel;
    this.pricingGroup = props.pricingGroup;
    this.pricingItem = props.pricingItem;
    this.printTransactions = props.printTransactions;
    this.prospectDate = props.prospectDate;
    this.pstExempt = props.pstExempt;
    this.receivablesAccount = props.receivablesAccount;
    this.reminderDate = props.reminderDate;
    this.resaleNumber = props.resaleNumber;
    this.role = props.role;
    this.salesReadiness = props.salesReadiness;
    this.salesRep = props.salesRep;
    this.salesTeamMember = props.salesTeamMember;
    this.salesTeamRole = props.salesTeamRole;
    this.salutation = props.salutation;
    this.shipAddress = props.shipAddress;
    this.shipComplete = props.shipComplete;
    this.shippingItem = props.shippingItem;
    this.sourceSite = props.sourceSite;
    this.sourceSiteId = props.sourceSiteId;
    this.stage = props.stage;
    this.startDate = props.startDate;
    this.state = props.state;
    this.subsidBought = props.subsidBought;
    this.subsidiary = props.subsidiary;
    this.taxable = props.taxable;
    this.terms = props.terms;
    this.territory = props.territory;
    this.title = props.title;
    this.unbilledOrders = props.unbilledOrders;
    this.url = props.url;
    this.vatRegNumber = props.vatRegNumber;
    this.webLead = props.webLead;
    this.zipCode = props.zipCode;
    this.customFieldList = props.customFieldList;
  }
}

export type AccountingBookDetailProps = {
  accountingBook?: PlatformCore.RecordRef;
  currency?: PlatformCore.RecordRef;
  exchangeRate?: number;
};

export class AccountingBookDetail {
  accountingBook?: PlatformCore.RecordRef;
  currency?: PlatformCore.RecordRef;
  exchangeRate?: number;
  constructor(props: AccountingBookDetailProps) {
    this.accountingBook = props.accountingBook;
    this.currency = props.currency;
    this.exchangeRate = props.exchangeRate;
  }
}

export type InventoryNumberBinSearchRowBasicProps = {
  binNumber?: PlatformCore.SearchColumnSelectField[];
  inventoryNumber?: PlatformCore.SearchColumnSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  quantityAvailable?: PlatformCore.SearchColumnDoubleField[];
  quantityOnHand?: PlatformCore.SearchColumnDoubleField[];
};

export class InventoryNumberBinSearchRowBasic extends PlatformCore.SearchRowBasic {
  binNumber?: PlatformCore.SearchColumnSelectField[];
  inventoryNumber?: PlatformCore.SearchColumnSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  quantityAvailable?: PlatformCore.SearchColumnDoubleField[];
  quantityOnHand?: PlatformCore.SearchColumnDoubleField[];
  constructor(props: InventoryNumberBinSearchRowBasicProps) {
    super();
    this.binNumber = props.binNumber;
    this.inventoryNumber = props.inventoryNumber;
    this.location = props.location;
    this.quantityAvailable = props.quantityAvailable;
    this.quantityOnHand = props.quantityOnHand;
  }
}

export type AccountingBookDetailListProps = {
  accountingBookDetail?: AccountingBookDetail[];
  replaceAll?: boolean;
};

export class AccountingBookDetailList {
  accountingBookDetail?: AccountingBookDetail[];
  replaceAll?: boolean;
  constructor(props: AccountingBookDetailListProps) {
    this.accountingBookDetail = props.accountingBookDetail;
    this.replaceAll = props.replaceAll;
  }
}

export type GiftCertRedemptionListProps = {
  giftCertRedemption?: GiftCertRedemption[];
  replaceAll?: boolean;
};

export class GiftCertRedemptionList {
  giftCertRedemption?: GiftCertRedemption[];
  replaceAll?: boolean;
  constructor(props: GiftCertRedemptionListProps) {
    this.giftCertRedemption = props.giftCertRedemption;
    this.replaceAll = props.replaceAll;
  }
}

export type UnitsTypeSearchBasicProps = {
  abbreviation?: PlatformCore.SearchStringField;
  baseUnit?: PlatformCore.SearchBooleanField;
  conversionRate?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInActive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  pluralAbbreviation?: PlatformCore.SearchStringField;
  pluralName?: PlatformCore.SearchStringField;
  unitName?: PlatformCore.SearchStringField;
};

export class UnitsTypeSearchBasic extends PlatformCore.SearchRecordBasic {
  abbreviation?: PlatformCore.SearchStringField;
  baseUnit?: PlatformCore.SearchBooleanField;
  conversionRate?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInActive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  pluralAbbreviation?: PlatformCore.SearchStringField;
  pluralName?: PlatformCore.SearchStringField;
  unitName?: PlatformCore.SearchStringField;
  constructor(props: UnitsTypeSearchBasicProps) {
    super();
    this.abbreviation = props.abbreviation;
    this.baseUnit = props.baseUnit;
    this.conversionRate = props.conversionRate;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInActive = props.isInActive;
    this.name = props.name;
    this.pluralAbbreviation = props.pluralAbbreviation;
    this.pluralName = props.pluralName;
    this.unitName = props.unitName;
  }
}

export type TaxTypeSearchRowBasicProps = {
  country?: PlatformCore.SearchColumnEnumSelectField[];
  description?: PlatformCore.SearchColumnStringField[];
  doesNotAddToTotal?: PlatformCore.SearchColumnBooleanField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  nexus?: PlatformCore.SearchColumnSelectField[];
  payablesAccount?: PlatformCore.SearchColumnSelectField[];
  postToItemCost?: PlatformCore.SearchColumnBooleanField[];
  receivablesAccount?: PlatformCore.SearchColumnSelectField[];
  reverseCharge?: PlatformCore.SearchColumnBooleanField[];
  taxInNetAmount?: PlatformCore.SearchColumnBooleanField[];
};

export class TaxTypeSearchRowBasic extends PlatformCore.SearchRowBasic {
  country?: PlatformCore.SearchColumnEnumSelectField[];
  description?: PlatformCore.SearchColumnStringField[];
  doesNotAddToTotal?: PlatformCore.SearchColumnBooleanField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  nexus?: PlatformCore.SearchColumnSelectField[];
  payablesAccount?: PlatformCore.SearchColumnSelectField[];
  postToItemCost?: PlatformCore.SearchColumnBooleanField[];
  receivablesAccount?: PlatformCore.SearchColumnSelectField[];
  reverseCharge?: PlatformCore.SearchColumnBooleanField[];
  taxInNetAmount?: PlatformCore.SearchColumnBooleanField[];
  constructor(props: TaxTypeSearchRowBasicProps) {
    super();
    this.country = props.country;
    this.description = props.description;
    this.doesNotAddToTotal = props.doesNotAddToTotal;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.nexus = props.nexus;
    this.payablesAccount = props.payablesAccount;
    this.postToItemCost = props.postToItemCost;
    this.receivablesAccount = props.receivablesAccount;
    this.reverseCharge = props.reverseCharge;
    this.taxInNetAmount = props.taxInNetAmount;
  }
}

export type CustomerSubsidiaryRelationshipSearchRowBasicProps = {
  balance?: PlatformCore.SearchColumnDoubleField[];
  depositbalance?: PlatformCore.SearchColumnDoubleField[];
  entity?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isprimarysub?: PlatformCore.SearchColumnBooleanField[];
  primaryCurrency?: PlatformCore.SearchColumnSelectField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  unbilledorders?: PlatformCore.SearchColumnDoubleField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class CustomerSubsidiaryRelationshipSearchRowBasic extends PlatformCore.SearchRowBasic {
  balance?: PlatformCore.SearchColumnDoubleField[];
  depositbalance?: PlatformCore.SearchColumnDoubleField[];
  entity?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isprimarysub?: PlatformCore.SearchColumnBooleanField[];
  primaryCurrency?: PlatformCore.SearchColumnSelectField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  unbilledorders?: PlatformCore.SearchColumnDoubleField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: CustomerSubsidiaryRelationshipSearchRowBasicProps) {
    super();
    this.balance = props.balance;
    this.depositbalance = props.depositbalance;
    this.entity = props.entity;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isprimarysub = props.isprimarysub;
    this.primaryCurrency = props.primaryCurrency;
    this.subsidiary = props.subsidiary;
    this.unbilledorders = props.unbilledorders;
    this.customFieldList = props.customFieldList;
  }
}

export type TimeSheetSearchRowBasicProps = {
  approvalStatus?: PlatformCore.SearchColumnSelectField[];
  employee?: PlatformCore.SearchColumnSelectField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  id?: PlatformCore.SearchColumnLongField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  totalHours?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class TimeSheetSearchRowBasic extends PlatformCore.SearchRowBasic {
  approvalStatus?: PlatformCore.SearchColumnSelectField[];
  employee?: PlatformCore.SearchColumnSelectField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  id?: PlatformCore.SearchColumnLongField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  totalHours?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: TimeSheetSearchRowBasicProps) {
    super();
    this.approvalStatus = props.approvalStatus;
    this.employee = props.employee;
    this.endDate = props.endDate;
    this.externalId = props.externalId;
    this.id = props.id;
    this.internalId = props.internalId;
    this.startDate = props.startDate;
    this.totalHours = props.totalHours;
    this.customFieldList = props.customFieldList;
  }
}

export type DepartmentSearchBasicProps = {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  nameNoHierarchy?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class DepartmentSearchBasic extends PlatformCore.SearchRecordBasic {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  nameNoHierarchy?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: DepartmentSearchBasicProps) {
    super();
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.nameNoHierarchy = props.nameNoHierarchy;
    this.subsidiary = props.subsidiary;
    this.customFieldList = props.customFieldList;
  }
}

export type CustomSearchJoinProps = {
  customizationRef: PlatformCore.CustomizationRef;
  searchRecordBasic: PlatformCore.SearchRecordBasic;
};

export class CustomSearchJoin {
  customizationRef: PlatformCore.CustomizationRef;
  searchRecordBasic: PlatformCore.SearchRecordBasic;
  constructor(props: CustomSearchJoinProps) {
    this.customizationRef = props.customizationRef;
    this.searchRecordBasic = props.searchRecordBasic;
  }
}

export type AddressSearchBasicProps = {
  address?: PlatformCore.SearchStringField;
  address1?: PlatformCore.SearchStringField;
  address2?: PlatformCore.SearchStringField;
  address3?: PlatformCore.SearchStringField;
  addressee?: PlatformCore.SearchStringField;
  attention?: PlatformCore.SearchStringField;
  city?: PlatformCore.SearchStringField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  countryCode?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  override?: PlatformCore.SearchBooleanField;
  phone?: PlatformCore.SearchStringField;
  state?: PlatformCore.SearchStringField;
  zip?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class AddressSearchBasic extends PlatformCore.SearchRecordBasic {
  address?: PlatformCore.SearchStringField;
  address1?: PlatformCore.SearchStringField;
  address2?: PlatformCore.SearchStringField;
  address3?: PlatformCore.SearchStringField;
  addressee?: PlatformCore.SearchStringField;
  attention?: PlatformCore.SearchStringField;
  city?: PlatformCore.SearchStringField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  countryCode?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  override?: PlatformCore.SearchBooleanField;
  phone?: PlatformCore.SearchStringField;
  state?: PlatformCore.SearchStringField;
  zip?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: AddressSearchBasicProps) {
    super();
    this.address = props.address;
    this.address1 = props.address1;
    this.address2 = props.address2;
    this.address3 = props.address3;
    this.addressee = props.addressee;
    this.attention = props.attention;
    this.city = props.city;
    this.country = props.country;
    this.countryCode = props.countryCode;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.override = props.override;
    this.phone = props.phone;
    this.state = props.state;
    this.zip = props.zip;
    this.customFieldList = props.customFieldList;
  }
}

export type UnitsTypeSearchRowBasicProps = {
  abbreviation?: PlatformCore.SearchColumnStringField[];
  baseUnit?: PlatformCore.SearchColumnBooleanField[];
  conversionRate?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInActive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  pluralAbbreviation?: PlatformCore.SearchColumnStringField[];
  pluralName?: PlatformCore.SearchColumnStringField[];
  unitName?: PlatformCore.SearchColumnStringField[];
};

export class UnitsTypeSearchRowBasic extends PlatformCore.SearchRowBasic {
  abbreviation?: PlatformCore.SearchColumnStringField[];
  baseUnit?: PlatformCore.SearchColumnBooleanField[];
  conversionRate?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInActive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  pluralAbbreviation?: PlatformCore.SearchColumnStringField[];
  pluralName?: PlatformCore.SearchColumnStringField[];
  unitName?: PlatformCore.SearchColumnStringField[];
  constructor(props: UnitsTypeSearchRowBasicProps) {
    super();
    this.abbreviation = props.abbreviation;
    this.baseUnit = props.baseUnit;
    this.conversionRate = props.conversionRate;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInActive = props.isInActive;
    this.name = props.name;
    this.pluralAbbreviation = props.pluralAbbreviation;
    this.pluralName = props.pluralName;
    this.unitName = props.unitName;
  }
}

export type FairValuePriceSearchRowBasicProps = {
  currency?: PlatformCore.SearchColumnSelectField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fairValue?: PlatformCore.SearchColumnDoubleField[];
  fairValueFormula?: PlatformCore.SearchColumnSelectField[];
  fairValueRangePolicy?: PlatformCore.SearchColumnEnumSelectField[];
  highValue?: PlatformCore.SearchColumnDoubleField[];
  highValuePercent?: PlatformCore.SearchColumnDoubleField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isVsoePrice?: PlatformCore.SearchColumnBooleanField[];
  item?: PlatformCore.SearchColumnSelectField[];
  itemRevenueCategory?: PlatformCore.SearchColumnSelectField[];
  lowValue?: PlatformCore.SearchColumnDoubleField[];
  lowValuePercent?: PlatformCore.SearchColumnDoubleField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  units?: PlatformCore.SearchColumnSelectField[];
  unitsType?: PlatformCore.SearchColumnSelectField[];
};

export class FairValuePriceSearchRowBasic extends PlatformCore.SearchRowBasic {
  currency?: PlatformCore.SearchColumnSelectField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fairValue?: PlatformCore.SearchColumnDoubleField[];
  fairValueFormula?: PlatformCore.SearchColumnSelectField[];
  fairValueRangePolicy?: PlatformCore.SearchColumnEnumSelectField[];
  highValue?: PlatformCore.SearchColumnDoubleField[];
  highValuePercent?: PlatformCore.SearchColumnDoubleField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isVsoePrice?: PlatformCore.SearchColumnBooleanField[];
  item?: PlatformCore.SearchColumnSelectField[];
  itemRevenueCategory?: PlatformCore.SearchColumnSelectField[];
  lowValue?: PlatformCore.SearchColumnDoubleField[];
  lowValuePercent?: PlatformCore.SearchColumnDoubleField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  units?: PlatformCore.SearchColumnSelectField[];
  unitsType?: PlatformCore.SearchColumnSelectField[];
  constructor(props: FairValuePriceSearchRowBasicProps) {
    super();
    this.currency = props.currency;
    this.endDate = props.endDate;
    this.externalId = props.externalId;
    this.fairValue = props.fairValue;
    this.fairValueFormula = props.fairValueFormula;
    this.fairValueRangePolicy = props.fairValueRangePolicy;
    this.highValue = props.highValue;
    this.highValuePercent = props.highValuePercent;
    this.internalId = props.internalId;
    this.isVsoePrice = props.isVsoePrice;
    this.item = props.item;
    this.itemRevenueCategory = props.itemRevenueCategory;
    this.lowValue = props.lowValue;
    this.lowValuePercent = props.lowValuePercent;
    this.startDate = props.startDate;
    this.units = props.units;
    this.unitsType = props.unitsType;
  }
}

export type JobStatusSearchBasicProps = {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
};

export class JobStatusSearchBasic extends PlatformCore.SearchRecordBasic {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  constructor(props: JobStatusSearchBasicProps) {
    super();
    this.description = props.description;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type TaxGroupSearchRowBasicProps = {
  city?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  county?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  includeChildren?: PlatformCore.SearchColumnBooleanField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isDefault?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  itemId?: PlatformCore.SearchColumnStringField[];
  piggyBack?: PlatformCore.SearchColumnBooleanField[];
  rate?: PlatformCore.SearchColumnDoubleField[];
  state?: PlatformCore.SearchColumnSelectField[];
  stateDisplayName?: PlatformCore.SearchColumnStringField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  subsidiaryNoHierarchy?: PlatformCore.SearchColumnSelectField[];
  taxItem1?: PlatformCore.SearchColumnSelectField[];
  taxItem2?: PlatformCore.SearchColumnSelectField[];
  taxType?: PlatformCore.SearchColumnSelectField[];
  unitPrice1?: PlatformCore.SearchColumnDoubleField[];
  unitPrice2?: PlatformCore.SearchColumnDoubleField[];
  zip?: PlatformCore.SearchColumnStringField[];
};

export class TaxGroupSearchRowBasic extends PlatformCore.SearchRowBasic {
  city?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  county?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  includeChildren?: PlatformCore.SearchColumnBooleanField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isDefault?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  itemId?: PlatformCore.SearchColumnStringField[];
  piggyBack?: PlatformCore.SearchColumnBooleanField[];
  rate?: PlatformCore.SearchColumnDoubleField[];
  state?: PlatformCore.SearchColumnSelectField[];
  stateDisplayName?: PlatformCore.SearchColumnStringField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  subsidiaryNoHierarchy?: PlatformCore.SearchColumnSelectField[];
  taxItem1?: PlatformCore.SearchColumnSelectField[];
  taxItem2?: PlatformCore.SearchColumnSelectField[];
  taxType?: PlatformCore.SearchColumnSelectField[];
  unitPrice1?: PlatformCore.SearchColumnDoubleField[];
  unitPrice2?: PlatformCore.SearchColumnDoubleField[];
  zip?: PlatformCore.SearchColumnStringField[];
  constructor(props: TaxGroupSearchRowBasicProps) {
    super();
    this.city = props.city;
    this.country = props.country;
    this.county = props.county;
    this.externalId = props.externalId;
    this.includeChildren = props.includeChildren;
    this.internalId = props.internalId;
    this.isDefault = props.isDefault;
    this.isInactive = props.isInactive;
    this.itemId = props.itemId;
    this.piggyBack = props.piggyBack;
    this.rate = props.rate;
    this.state = props.state;
    this.stateDisplayName = props.stateDisplayName;
    this.subsidiary = props.subsidiary;
    this.subsidiaryNoHierarchy = props.subsidiaryNoHierarchy;
    this.taxItem1 = props.taxItem1;
    this.taxItem2 = props.taxItem2;
    this.taxType = props.taxType;
    this.unitPrice1 = props.unitPrice1;
    this.unitPrice2 = props.unitPrice2;
    this.zip = props.zip;
  }
}

export type ItemSearchRowBasicProps = {
  accBookRevRecForecastRule?: PlatformCore.SearchColumnSelectField[];
  accountingBook?: PlatformCore.SearchColumnSelectField[];
  accountingBookAmortization?: PlatformCore.SearchColumnSelectField[];
  accountingBookCreatePlansOn?: PlatformCore.SearchColumnSelectField[];
  accountingBookRevRecRule?: PlatformCore.SearchColumnSelectField[];
  accountingBookRevRecSchedule?: PlatformCore.SearchColumnSelectField[];
  allowedShippingMethod?: PlatformCore.SearchColumnSelectField[];
  alternateDemandSourceItem?: PlatformCore.SearchColumnStringField[];
  assetAccount?: PlatformCore.SearchColumnSelectField[];
  atpLeadTime?: PlatformCore.SearchColumnDoubleField[];
  atpMethod?: PlatformCore.SearchColumnEnumSelectField[];
  autoLeadTime?: PlatformCore.SearchColumnBooleanField[];
  autoPreferredStockLevel?: PlatformCore.SearchColumnBooleanField[];
  autoReorderPoint?: PlatformCore.SearchColumnBooleanField[];
  availableToPartners?: PlatformCore.SearchColumnBooleanField[];
  averageCost?: PlatformCore.SearchColumnDoubleField[];
  backwardConsumptionDays?: PlatformCore.SearchColumnLongField[];
  basePrice?: PlatformCore.SearchColumnDoubleField[];
  billExchRateVarianceAcct?: PlatformCore.SearchColumnSelectField[];
  billPriceVarianceAcct?: PlatformCore.SearchColumnSelectField[];
  billQtyVarianceAcct?: PlatformCore.SearchColumnSelectField[];
  binNumber?: PlatformCore.SearchColumnStringField[];
  binOnHandAvail?: PlatformCore.SearchColumnDoubleField[];
  binOnHandCount?: PlatformCore.SearchColumnDoubleField[];
  bomQuantity?: PlatformCore.SearchColumnDoubleField[];
  buildEntireAssembly?: PlatformCore.SearchColumnBooleanField[];
  buildTime?: PlatformCore.SearchColumnDoubleField[];
  buyItNowPrice?: PlatformCore.SearchColumnDoubleField[];
  category?: PlatformCore.SearchColumnStringField[];
  categoryPreferred?: PlatformCore.SearchColumnStringField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  componentYield?: PlatformCore.SearchColumnDoubleField[];
  consumptionUnit?: PlatformCore.SearchColumnSelectField[];
  contingentRevenueHandling?: PlatformCore.SearchColumnBooleanField[];
  copyDescription?: PlatformCore.SearchColumnBooleanField[];
  correlatedItem?: PlatformCore.SearchColumnSelectField[];
  correlatedItemCorrelation?: PlatformCore.SearchColumnDoubleField[];
  correlatedItemCount?: PlatformCore.SearchColumnLongField[];
  correlatedItemLift?: PlatformCore.SearchColumnDoubleField[];
  correlatedItemPurchaseRate?: PlatformCore.SearchColumnDoubleField[];
  cost?: PlatformCore.SearchColumnDoubleField[];
  costAccountingStatus?: PlatformCore.SearchColumnEnumSelectField[];
  costCategory?: PlatformCore.SearchColumnStringField[];
  costEstimate?: PlatformCore.SearchColumnDoubleField[];
  costEstimateType?: PlatformCore.SearchColumnEnumSelectField[];
  costingMethod?: PlatformCore.SearchColumnEnumSelectField[];
  countryOfManufacture?: PlatformCore.SearchColumnEnumSelectField[];
  created?: PlatformCore.SearchColumnDateField[];
  createJob?: PlatformCore.SearchColumnBooleanField[];
  createRevenuePlansOn?: PlatformCore.SearchColumnSelectField[];
  custReturnVarianceAccount?: PlatformCore.SearchColumnSelectField[];
  dateViewed?: PlatformCore.SearchColumnDateField[];
  daysBeforeExpiration?: PlatformCore.SearchColumnStringField[];
  defaultReturnCost?: PlatformCore.SearchColumnDoubleField[];
  defaultShippingMethod?: PlatformCore.SearchColumnStringField[];
  deferredExpenseAccount?: PlatformCore.SearchColumnSelectField[];
  deferredRevenueAccount?: PlatformCore.SearchColumnSelectField[];
  deferRevRec?: PlatformCore.SearchColumnBooleanField[];
  demandModifier?: PlatformCore.SearchColumnDoubleField[];
  demandSource?: PlatformCore.SearchColumnEnumSelectField[];
  demandTimeFence?: PlatformCore.SearchColumnLongField[];
  department?: PlatformCore.SearchColumnSelectField[];
  departmentnohierarchy?: PlatformCore.SearchColumnSelectField[];
  directRevenuePosting?: PlatformCore.SearchColumnBooleanField[];
  displayIneBayStore?: PlatformCore.SearchColumnBooleanField[];
  displayName?: PlatformCore.SearchColumnStringField[];
  distributionCategory?: PlatformCore.SearchColumnSelectField[];
  distributionNetwork?: PlatformCore.SearchColumnSelectField[];
  dontShowPrice?: PlatformCore.SearchColumnBooleanField[];
  eBayItemDescription?: PlatformCore.SearchColumnStringField[];
  eBayItemSubtitle?: PlatformCore.SearchColumnStringField[];
  eBayItemTitle?: PlatformCore.SearchColumnStringField[];
  ebayRelistingOption?: PlatformCore.SearchColumnEnumSelectField[];
  effectiveBomControl?: PlatformCore.SearchColumnEnumSelectField[];
  effectiveDate?: PlatformCore.SearchColumnDateField[];
  effectiveRevision?: PlatformCore.SearchColumnSelectField[];
  endAuctionsWhenOutOfStock?: PlatformCore.SearchColumnBooleanField[];
  excludeFromSitemap?: PlatformCore.SearchColumnBooleanField[];
  expenseAccount?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  featuredDescription?: PlatformCore.SearchColumnStringField[];
  feedDescription?: PlatformCore.SearchColumnStringField[];
  feedName?: PlatformCore.SearchColumnStringField[];
  fixedLotSize?: PlatformCore.SearchColumnDoubleField[];
  forwardConsumptionDays?: PlatformCore.SearchColumnLongField[];
  fraudRisk?: PlatformCore.SearchColumnEnumSelectField[];
  froogleProductFeed?: PlatformCore.SearchColumnBooleanField[];
  futureHorizon?: PlatformCore.SearchColumnLongField[];
  fxCost?: PlatformCore.SearchColumnDoubleField[];
  gainLossAccount?: PlatformCore.SearchColumnSelectField[];
  generateAccruals?: PlatformCore.SearchColumnBooleanField[];
  giftCertAuthCode?: PlatformCore.SearchColumnStringField[];
  giftCertEmail?: PlatformCore.SearchColumnStringField[];
  giftCertExpirationDate?: PlatformCore.SearchColumnStringField[];
  giftCertFrom?: PlatformCore.SearchColumnStringField[];
  giftCertMessage?: PlatformCore.SearchColumnStringField[];
  giftCertOriginalAmount?: PlatformCore.SearchColumnStringField[];
  giftCertRecipient?: PlatformCore.SearchColumnStringField[];
  hierarchyNode?: PlatformCore.SearchColumnStringField[];
  hierarchyVersion?: PlatformCore.SearchColumnStringField[];
  hits?: PlatformCore.SearchColumnLongField[];
  imageUrl?: PlatformCore.SearchColumnStringField[];
  includeChildren?: PlatformCore.SearchColumnBooleanField[];
  incomeAccount?: PlatformCore.SearchColumnSelectField[];
  intercoDefRevAccount?: PlatformCore.SearchColumnSelectField[];
  intercoExpenseAccount?: PlatformCore.SearchColumnSelectField[];
  intercoIncomeAccount?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  inventoryLocation?: PlatformCore.SearchColumnSelectField[];
  invtClassification?: PlatformCore.SearchColumnEnumSelectField[];
  invtCountInterval?: PlatformCore.SearchColumnLongField[];
  isAvailable?: PlatformCore.SearchColumnBooleanField[];
  isDropShipItem?: PlatformCore.SearchColumnBooleanField[];
  isFulfillable?: PlatformCore.SearchColumnBooleanField[];
  isGcoCompliant?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isLotItem?: PlatformCore.SearchColumnBooleanField[];
  isOnline?: PlatformCore.SearchColumnBooleanField[];
  isSerialItem?: PlatformCore.SearchColumnBooleanField[];
  isSpecialOrderItem?: PlatformCore.SearchColumnBooleanField[];
  isSpecialWorkOrderItem?: PlatformCore.SearchColumnBooleanField[];
  isStorePickupAllowed?: PlatformCore.SearchColumnBooleanField[];
  issueProduct?: PlatformCore.SearchColumnSelectField[];
  isTaxable?: PlatformCore.SearchColumnBooleanField[];
  isVsoeBundle?: PlatformCore.SearchColumnBooleanField[];
  isWip?: PlatformCore.SearchColumnBooleanField[];
  itemId?: PlatformCore.SearchColumnStringField[];
  itemRevenueCategory?: PlatformCore.SearchColumnSelectField[];
  itemUrl?: PlatformCore.SearchColumnStringField[];
  lastInvtCountDate?: PlatformCore.SearchColumnDateField[];
  lastPurchasePrice?: PlatformCore.SearchColumnDoubleField[];
  lastQuantityAvailableChange?: PlatformCore.SearchColumnDateField[];
  leadTime?: PlatformCore.SearchColumnLongField[];
  liabilityAccount?: PlatformCore.SearchColumnSelectField[];
  listingDuration?: PlatformCore.SearchColumnEnumSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  locationAllowStorePickup?: PlatformCore.SearchColumnBooleanField[];
  locationAtpLeadTime?: PlatformCore.SearchColumnDoubleField[];
  locationAverageCost?: PlatformCore.SearchColumnDoubleField[];
  locationBinQuantityAvailable?: PlatformCore.SearchColumnStringField[];
  locationBuildTime?: PlatformCore.SearchColumnDoubleField[];
  locationCost?: PlatformCore.SearchColumnDoubleField[];
  locationCostAccountingStatus?: PlatformCore.SearchColumnEnumSelectField[];
  locationDefaultReturnCost?: PlatformCore.SearchColumnDoubleField[];
  locationDemandSource?: PlatformCore.SearchColumnEnumSelectField[];
  locationDemandTimeFence?: PlatformCore.SearchColumnLongField[];
  locationFixedLotSize?: PlatformCore.SearchColumnDoubleField[];
  locationInventoryCostTemplate?: PlatformCore.SearchColumnStringField[];
  locationInvtClassification?: PlatformCore.SearchColumnEnumSelectField[];
  locationInvtCountInterval?: PlatformCore.SearchColumnLongField[];
  locationLastInvtCountDate?: PlatformCore.SearchColumnDateField[];
  locationLeadTime?: PlatformCore.SearchColumnLongField[];
  locationNextInvtCountDate?: PlatformCore.SearchColumnDateField[];
  locationPeriodicLotSizeDays?: PlatformCore.SearchColumnLongField[];
  locationPeriodicLotSizeType?: PlatformCore.SearchColumnEnumSelectField[];
  locationPreferredStockLevel?: PlatformCore.SearchColumnDoubleField[];
  locationQtyAvailForStorePickup?: PlatformCore.SearchColumnDoubleField[];
  locationQuantityAvailable?: PlatformCore.SearchColumnDoubleField[];
  locationQuantityBackOrdered?: PlatformCore.SearchColumnDoubleField[];
  locationQuantityCommitted?: PlatformCore.SearchColumnDoubleField[];
  locationQuantityInTransit?: PlatformCore.SearchColumnDoubleField[];
  locationQuantityOnHand?: PlatformCore.SearchColumnDoubleField[];
  locationQuantityOnOrder?: PlatformCore.SearchColumnDoubleField[];
  locationReOrderPoint?: PlatformCore.SearchColumnDoubleField[];
  locationRescheduleInDays?: PlatformCore.SearchColumnLongField[];
  locationRescheduleOutDays?: PlatformCore.SearchColumnLongField[];
  locationSafetyStockLevel?: PlatformCore.SearchColumnDoubleField[];
  locationStorePickupBufferStock?: PlatformCore.SearchColumnDoubleField[];
  locationSupplyLotSizingMethod?: PlatformCore.SearchColumnEnumSelectField[];
  locationSupplyTimeFence?: PlatformCore.SearchColumnLongField[];
  locationSupplyType?: PlatformCore.SearchColumnEnumSelectField[];
  locationTotalValue?: PlatformCore.SearchColumnDoubleField[];
  locBackwardConsumptionDays?: PlatformCore.SearchColumnLongField[];
  locForwardConsumptionDays?: PlatformCore.SearchColumnLongField[];
  manufacturer?: PlatformCore.SearchColumnStringField[];
  manufacturerAddr1?: PlatformCore.SearchColumnStringField[];
  manufacturerCity?: PlatformCore.SearchColumnStringField[];
  manufacturerState?: PlatformCore.SearchColumnStringField[];
  manufacturerTariff?: PlatformCore.SearchColumnStringField[];
  manufacturerTaxId?: PlatformCore.SearchColumnStringField[];
  manufacturerZip?: PlatformCore.SearchColumnStringField[];
  manufacturingChargeItem?: PlatformCore.SearchColumnBooleanField[];
  matchBillToReceipt?: PlatformCore.SearchColumnBooleanField[];
  maximumQuantity?: PlatformCore.SearchColumnStringField[];
  memberItem?: PlatformCore.SearchColumnSelectField[];
  memberQuantity?: PlatformCore.SearchColumnDoubleField[];
  metaTagHtml?: PlatformCore.SearchColumnStringField[];
  minimumQuantity?: PlatformCore.SearchColumnStringField[];
  modified?: PlatformCore.SearchColumnDateField[];
  mossApplies?: PlatformCore.SearchColumnBooleanField[];
  mpn?: PlatformCore.SearchColumnStringField[];
  multManufactureAddr?: PlatformCore.SearchColumnBooleanField[];
  nextagCategory?: PlatformCore.SearchColumnStringField[];
  nextagProductFeed?: PlatformCore.SearchColumnBooleanField[];
  nextInvtCountDate?: PlatformCore.SearchColumnDateField[];
  noPriceMessage?: PlatformCore.SearchColumnStringField[];
  numActiveListings?: PlatformCore.SearchColumnLongField[];
  numberAllowedDownloads?: PlatformCore.SearchColumnStringField[];
  numCurrentlyListed?: PlatformCore.SearchColumnLongField[];
  obsoleteDate?: PlatformCore.SearchColumnDateField[];
  obsoleteRevision?: PlatformCore.SearchColumnSelectField[];
  offerSupport?: PlatformCore.SearchColumnBooleanField[];
  onlineCustomerPrice?: PlatformCore.SearchColumnDoubleField[];
  onlinePrice?: PlatformCore.SearchColumnDoubleField[];
  onSpecial?: PlatformCore.SearchColumnBooleanField[];
  otherPrices?: PlatformCore.SearchColumnDoubleField[];
  otherVendor?: PlatformCore.SearchColumnSelectField[];
  outOfStockBehavior?: PlatformCore.SearchColumnStringField[];
  outOfStockMessage?: PlatformCore.SearchColumnStringField[];
  overallQuantityPricingType?: PlatformCore.SearchColumnEnumSelectField[];
  overheadType?: PlatformCore.SearchColumnEnumSelectField[];
  pageTitle?: PlatformCore.SearchColumnStringField[];
  parent?: PlatformCore.SearchColumnSelectField[];
  periodicLotSizeDays?: PlatformCore.SearchColumnLongField[];
  periodicLotSizeType?: PlatformCore.SearchColumnEnumSelectField[];
  preferenceCriterion?: PlatformCore.SearchColumnStringField[];
  preferredBin?: PlatformCore.SearchColumnBooleanField[];
  preferredLocation?: PlatformCore.SearchColumnSelectField[];
  preferredStockLevel?: PlatformCore.SearchColumnDoubleField[];
  preferredStockLevelDays?: PlatformCore.SearchColumnLongField[];
  pricesIncludeTax?: PlatformCore.SearchColumnBooleanField[];
  pricingGroup?: PlatformCore.SearchColumnSelectField[];
  primaryCategory?: PlatformCore.SearchColumnStringField[];
  prodPriceVarianceAcct?: PlatformCore.SearchColumnSelectField[];
  prodQtyVarianceAcct?: PlatformCore.SearchColumnSelectField[];
  purchaseDescription?: PlatformCore.SearchColumnStringField[];
  purchaseOrderAmount?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrderQuantity?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrderQuantityDiff?: PlatformCore.SearchColumnDoubleField[];
  purchasePriceVarianceAcct?: PlatformCore.SearchColumnSelectField[];
  purchaseUnit?: PlatformCore.SearchColumnSelectField[];
  quantityAvailable?: PlatformCore.SearchColumnDoubleField[];
  quantityBackOrdered?: PlatformCore.SearchColumnDoubleField[];
  quantityCommitted?: PlatformCore.SearchColumnDoubleField[];
  quantityOnHand?: PlatformCore.SearchColumnDoubleField[];
  quantityOnOrder?: PlatformCore.SearchColumnDoubleField[];
  quantityPricingSchedule?: PlatformCore.SearchColumnSelectField[];
  receiptAmount?: PlatformCore.SearchColumnDoubleField[];
  receiptQuantity?: PlatformCore.SearchColumnDoubleField[];
  receiptQuantityDiff?: PlatformCore.SearchColumnDoubleField[];
  reorderMultiple?: PlatformCore.SearchColumnLongField[];
  reOrderPoint?: PlatformCore.SearchColumnDoubleField[];
  rescheduleInDays?: PlatformCore.SearchColumnLongField[];
  rescheduleOutDays?: PlatformCore.SearchColumnLongField[];
  reservePrice?: PlatformCore.SearchColumnDoubleField[];
  revenueAllocationGroup?: PlatformCore.SearchColumnSelectField[];
  revenueRecognitionRule?: PlatformCore.SearchColumnSelectField[];
  revRecForecastRule?: PlatformCore.SearchColumnSelectField[];
  revReclassFXAccount?: PlatformCore.SearchColumnSelectField[];
  revRecSchedule?: PlatformCore.SearchColumnSelectField[];
  roundUpAsComponent?: PlatformCore.SearchColumnBooleanField[];
  safetyStockLevel?: PlatformCore.SearchColumnDoubleField[];
  safetyStockLevelDays?: PlatformCore.SearchColumnLongField[];
  salesDescription?: PlatformCore.SearchColumnStringField[];
  salesTaxCode?: PlatformCore.SearchColumnSelectField[];
  saleUnit?: PlatformCore.SearchColumnSelectField[];
  sameAsPrimaryBookAmortization?: PlatformCore.SearchColumnBooleanField[];
  sameAsPrimaryBookRevRec?: PlatformCore.SearchColumnBooleanField[];
  scheduleBCode?: PlatformCore.SearchColumnEnumSelectField[];
  scheduleBNumber?: PlatformCore.SearchColumnStringField[];
  scheduleBQuantity?: PlatformCore.SearchColumnStringField[];
  scrapAcct?: PlatformCore.SearchColumnSelectField[];
  searchKeywords?: PlatformCore.SearchColumnStringField[];
  seasonalDemand?: PlatformCore.SearchColumnBooleanField[];
  sellOnEBay?: PlatformCore.SearchColumnBooleanField[];
  serialNumber?: PlatformCore.SearchColumnStringField[];
  serialNumberLocation?: PlatformCore.SearchColumnStringField[];
  shipIndividually?: PlatformCore.SearchColumnBooleanField[];
  shipPackage?: PlatformCore.SearchColumnSelectField[];
  shippingCarrier?: PlatformCore.SearchColumnEnumSelectField[];
  shippingRate?: PlatformCore.SearchColumnDoubleField[];
  shoppingDotComCategory?: PlatformCore.SearchColumnStringField[];
  shoppingProductFeed?: PlatformCore.SearchColumnBooleanField[];
  shopzillaCategoryId?: PlatformCore.SearchColumnLongField[];
  shopzillaProductFeed?: PlatformCore.SearchColumnBooleanField[];
  sitemapPriority?: PlatformCore.SearchColumnEnumSelectField[];
  softDescriptor?: PlatformCore.SearchColumnSelectField[];
  startingPrice?: PlatformCore.SearchColumnDoubleField[];
  stockDescription?: PlatformCore.SearchColumnStringField[];
  stockUnit?: PlatformCore.SearchColumnSelectField[];
  storeDescription?: PlatformCore.SearchColumnStringField[];
  storeDetailedDescription?: PlatformCore.SearchColumnStringField[];
  storeDisplayImage?: PlatformCore.SearchColumnSelectField[];
  storeDisplayName?: PlatformCore.SearchColumnStringField[];
  storeDisplayThumbnail?: PlatformCore.SearchColumnSelectField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  subType?: PlatformCore.SearchColumnEnumSelectField[];
  supplyLotSizingMethod?: PlatformCore.SearchColumnEnumSelectField[];
  supplyReplenishmentMethod?: PlatformCore.SearchColumnEnumSelectField[];
  supplyTimeFence?: PlatformCore.SearchColumnLongField[];
  supplyType?: PlatformCore.SearchColumnEnumSelectField[];
  taxSchedule?: PlatformCore.SearchColumnSelectField[];
  thumbNailUrl?: PlatformCore.SearchColumnStringField[];
  totalValue?: PlatformCore.SearchColumnDoubleField[];
  trackLandedCost?: PlatformCore.SearchColumnBooleanField[];
  transferPrice?: PlatformCore.SearchColumnDoubleField[];
  type?: PlatformCore.SearchColumnEnumSelectField[];
  unbuildVarianceAccount?: PlatformCore.SearchColumnSelectField[];
  unitsType?: PlatformCore.SearchColumnSelectField[];
  upcCode?: PlatformCore.SearchColumnStringField[];
  urlComponent?: PlatformCore.SearchColumnStringField[];
  useBins?: PlatformCore.SearchColumnBooleanField[];
  useComponentYield?: PlatformCore.SearchColumnBooleanField[];
  useMarginalRates?: PlatformCore.SearchColumnBooleanField[];
  vendor?: PlatformCore.SearchColumnSelectField[];
  vendorCode?: PlatformCore.SearchColumnStringField[];
  vendorCost?: PlatformCore.SearchColumnDoubleField[];
  vendorCostEntered?: PlatformCore.SearchColumnDoubleField[];
  vendorName?: PlatformCore.SearchColumnStringField[];
  vendorPriceCurrency?: PlatformCore.SearchColumnStringField[];
  vendorSchedule?: PlatformCore.SearchColumnSelectField[];
  vendReturnVarianceAccount?: PlatformCore.SearchColumnSelectField[];
  vsoeDeferral?: PlatformCore.SearchColumnEnumSelectField[];
  vsoeDelivered?: PlatformCore.SearchColumnBooleanField[];
  vsoePermitDiscount?: PlatformCore.SearchColumnEnumSelectField[];
  vsoePrice?: PlatformCore.SearchColumnDoubleField[];
  vsoeSopGroup?: PlatformCore.SearchColumnEnumSelectField[];
  webSite?: PlatformCore.SearchColumnSelectField[];
  weight?: PlatformCore.SearchColumnDoubleField[];
  weightUnit?: PlatformCore.SearchColumnEnumSelectField[];
  wipAcct?: PlatformCore.SearchColumnSelectField[];
  wipVarianceAcct?: PlatformCore.SearchColumnSelectField[];
  yahooProductFeed?: PlatformCore.SearchColumnBooleanField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class ItemSearchRowBasic extends PlatformCore.SearchRowBasic {
  accBookRevRecForecastRule?: PlatformCore.SearchColumnSelectField[];
  accountingBook?: PlatformCore.SearchColumnSelectField[];
  accountingBookAmortization?: PlatformCore.SearchColumnSelectField[];
  accountingBookCreatePlansOn?: PlatformCore.SearchColumnSelectField[];
  accountingBookRevRecRule?: PlatformCore.SearchColumnSelectField[];
  accountingBookRevRecSchedule?: PlatformCore.SearchColumnSelectField[];
  allowedShippingMethod?: PlatformCore.SearchColumnSelectField[];
  alternateDemandSourceItem?: PlatformCore.SearchColumnStringField[];
  assetAccount?: PlatformCore.SearchColumnSelectField[];
  atpLeadTime?: PlatformCore.SearchColumnDoubleField[];
  atpMethod?: PlatformCore.SearchColumnEnumSelectField[];
  autoLeadTime?: PlatformCore.SearchColumnBooleanField[];
  autoPreferredStockLevel?: PlatformCore.SearchColumnBooleanField[];
  autoReorderPoint?: PlatformCore.SearchColumnBooleanField[];
  availableToPartners?: PlatformCore.SearchColumnBooleanField[];
  averageCost?: PlatformCore.SearchColumnDoubleField[];
  backwardConsumptionDays?: PlatformCore.SearchColumnLongField[];
  basePrice?: PlatformCore.SearchColumnDoubleField[];
  billExchRateVarianceAcct?: PlatformCore.SearchColumnSelectField[];
  billPriceVarianceAcct?: PlatformCore.SearchColumnSelectField[];
  billQtyVarianceAcct?: PlatformCore.SearchColumnSelectField[];
  binNumber?: PlatformCore.SearchColumnStringField[];
  binOnHandAvail?: PlatformCore.SearchColumnDoubleField[];
  binOnHandCount?: PlatformCore.SearchColumnDoubleField[];
  bomQuantity?: PlatformCore.SearchColumnDoubleField[];
  buildEntireAssembly?: PlatformCore.SearchColumnBooleanField[];
  buildTime?: PlatformCore.SearchColumnDoubleField[];
  buyItNowPrice?: PlatformCore.SearchColumnDoubleField[];
  category?: PlatformCore.SearchColumnStringField[];
  categoryPreferred?: PlatformCore.SearchColumnStringField[];
  clazz?: PlatformCore.SearchColumnSelectField[];
  componentYield?: PlatformCore.SearchColumnDoubleField[];
  consumptionUnit?: PlatformCore.SearchColumnSelectField[];
  contingentRevenueHandling?: PlatformCore.SearchColumnBooleanField[];
  copyDescription?: PlatformCore.SearchColumnBooleanField[];
  correlatedItem?: PlatformCore.SearchColumnSelectField[];
  correlatedItemCorrelation?: PlatformCore.SearchColumnDoubleField[];
  correlatedItemCount?: PlatformCore.SearchColumnLongField[];
  correlatedItemLift?: PlatformCore.SearchColumnDoubleField[];
  correlatedItemPurchaseRate?: PlatformCore.SearchColumnDoubleField[];
  cost?: PlatformCore.SearchColumnDoubleField[];
  costAccountingStatus?: PlatformCore.SearchColumnEnumSelectField[];
  costCategory?: PlatformCore.SearchColumnStringField[];
  costEstimate?: PlatformCore.SearchColumnDoubleField[];
  costEstimateType?: PlatformCore.SearchColumnEnumSelectField[];
  costingMethod?: PlatformCore.SearchColumnEnumSelectField[];
  countryOfManufacture?: PlatformCore.SearchColumnEnumSelectField[];
  created?: PlatformCore.SearchColumnDateField[];
  createJob?: PlatformCore.SearchColumnBooleanField[];
  createRevenuePlansOn?: PlatformCore.SearchColumnSelectField[];
  custReturnVarianceAccount?: PlatformCore.SearchColumnSelectField[];
  dateViewed?: PlatformCore.SearchColumnDateField[];
  daysBeforeExpiration?: PlatformCore.SearchColumnStringField[];
  defaultReturnCost?: PlatformCore.SearchColumnDoubleField[];
  defaultShippingMethod?: PlatformCore.SearchColumnStringField[];
  deferredExpenseAccount?: PlatformCore.SearchColumnSelectField[];
  deferredRevenueAccount?: PlatformCore.SearchColumnSelectField[];
  deferRevRec?: PlatformCore.SearchColumnBooleanField[];
  demandModifier?: PlatformCore.SearchColumnDoubleField[];
  demandSource?: PlatformCore.SearchColumnEnumSelectField[];
  demandTimeFence?: PlatformCore.SearchColumnLongField[];
  department?: PlatformCore.SearchColumnSelectField[];
  departmentnohierarchy?: PlatformCore.SearchColumnSelectField[];
  directRevenuePosting?: PlatformCore.SearchColumnBooleanField[];
  displayIneBayStore?: PlatformCore.SearchColumnBooleanField[];
  displayName?: PlatformCore.SearchColumnStringField[];
  distributionCategory?: PlatformCore.SearchColumnSelectField[];
  distributionNetwork?: PlatformCore.SearchColumnSelectField[];
  dontShowPrice?: PlatformCore.SearchColumnBooleanField[];
  eBayItemDescription?: PlatformCore.SearchColumnStringField[];
  eBayItemSubtitle?: PlatformCore.SearchColumnStringField[];
  eBayItemTitle?: PlatformCore.SearchColumnStringField[];
  ebayRelistingOption?: PlatformCore.SearchColumnEnumSelectField[];
  effectiveBomControl?: PlatformCore.SearchColumnEnumSelectField[];
  effectiveDate?: PlatformCore.SearchColumnDateField[];
  effectiveRevision?: PlatformCore.SearchColumnSelectField[];
  endAuctionsWhenOutOfStock?: PlatformCore.SearchColumnBooleanField[];
  excludeFromSitemap?: PlatformCore.SearchColumnBooleanField[];
  expenseAccount?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  featuredDescription?: PlatformCore.SearchColumnStringField[];
  feedDescription?: PlatformCore.SearchColumnStringField[];
  feedName?: PlatformCore.SearchColumnStringField[];
  fixedLotSize?: PlatformCore.SearchColumnDoubleField[];
  forwardConsumptionDays?: PlatformCore.SearchColumnLongField[];
  fraudRisk?: PlatformCore.SearchColumnEnumSelectField[];
  froogleProductFeed?: PlatformCore.SearchColumnBooleanField[];
  futureHorizon?: PlatformCore.SearchColumnLongField[];
  fxCost?: PlatformCore.SearchColumnDoubleField[];
  gainLossAccount?: PlatformCore.SearchColumnSelectField[];
  generateAccruals?: PlatformCore.SearchColumnBooleanField[];
  giftCertAuthCode?: PlatformCore.SearchColumnStringField[];
  giftCertEmail?: PlatformCore.SearchColumnStringField[];
  giftCertExpirationDate?: PlatformCore.SearchColumnStringField[];
  giftCertFrom?: PlatformCore.SearchColumnStringField[];
  giftCertMessage?: PlatformCore.SearchColumnStringField[];
  giftCertOriginalAmount?: PlatformCore.SearchColumnStringField[];
  giftCertRecipient?: PlatformCore.SearchColumnStringField[];
  hierarchyNode?: PlatformCore.SearchColumnStringField[];
  hierarchyVersion?: PlatformCore.SearchColumnStringField[];
  hits?: PlatformCore.SearchColumnLongField[];
  imageUrl?: PlatformCore.SearchColumnStringField[];
  includeChildren?: PlatformCore.SearchColumnBooleanField[];
  incomeAccount?: PlatformCore.SearchColumnSelectField[];
  intercoDefRevAccount?: PlatformCore.SearchColumnSelectField[];
  intercoExpenseAccount?: PlatformCore.SearchColumnSelectField[];
  intercoIncomeAccount?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  inventoryLocation?: PlatformCore.SearchColumnSelectField[];
  invtClassification?: PlatformCore.SearchColumnEnumSelectField[];
  invtCountInterval?: PlatformCore.SearchColumnLongField[];
  isAvailable?: PlatformCore.SearchColumnBooleanField[];
  isDropShipItem?: PlatformCore.SearchColumnBooleanField[];
  isFulfillable?: PlatformCore.SearchColumnBooleanField[];
  isGcoCompliant?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isLotItem?: PlatformCore.SearchColumnBooleanField[];
  isOnline?: PlatformCore.SearchColumnBooleanField[];
  isSerialItem?: PlatformCore.SearchColumnBooleanField[];
  isSpecialOrderItem?: PlatformCore.SearchColumnBooleanField[];
  isSpecialWorkOrderItem?: PlatformCore.SearchColumnBooleanField[];
  isStorePickupAllowed?: PlatformCore.SearchColumnBooleanField[];
  issueProduct?: PlatformCore.SearchColumnSelectField[];
  isTaxable?: PlatformCore.SearchColumnBooleanField[];
  isVsoeBundle?: PlatformCore.SearchColumnBooleanField[];
  isWip?: PlatformCore.SearchColumnBooleanField[];
  itemId?: PlatformCore.SearchColumnStringField[];
  itemRevenueCategory?: PlatformCore.SearchColumnSelectField[];
  itemUrl?: PlatformCore.SearchColumnStringField[];
  lastInvtCountDate?: PlatformCore.SearchColumnDateField[];
  lastPurchasePrice?: PlatformCore.SearchColumnDoubleField[];
  lastQuantityAvailableChange?: PlatformCore.SearchColumnDateField[];
  leadTime?: PlatformCore.SearchColumnLongField[];
  liabilityAccount?: PlatformCore.SearchColumnSelectField[];
  listingDuration?: PlatformCore.SearchColumnEnumSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  locationAllowStorePickup?: PlatformCore.SearchColumnBooleanField[];
  locationAtpLeadTime?: PlatformCore.SearchColumnDoubleField[];
  locationAverageCost?: PlatformCore.SearchColumnDoubleField[];
  locationBinQuantityAvailable?: PlatformCore.SearchColumnStringField[];
  locationBuildTime?: PlatformCore.SearchColumnDoubleField[];
  locationCost?: PlatformCore.SearchColumnDoubleField[];
  locationCostAccountingStatus?: PlatformCore.SearchColumnEnumSelectField[];
  locationDefaultReturnCost?: PlatformCore.SearchColumnDoubleField[];
  locationDemandSource?: PlatformCore.SearchColumnEnumSelectField[];
  locationDemandTimeFence?: PlatformCore.SearchColumnLongField[];
  locationFixedLotSize?: PlatformCore.SearchColumnDoubleField[];
  locationInventoryCostTemplate?: PlatformCore.SearchColumnStringField[];
  locationInvtClassification?: PlatformCore.SearchColumnEnumSelectField[];
  locationInvtCountInterval?: PlatformCore.SearchColumnLongField[];
  locationLastInvtCountDate?: PlatformCore.SearchColumnDateField[];
  locationLeadTime?: PlatformCore.SearchColumnLongField[];
  locationNextInvtCountDate?: PlatformCore.SearchColumnDateField[];
  locationPeriodicLotSizeDays?: PlatformCore.SearchColumnLongField[];
  locationPeriodicLotSizeType?: PlatformCore.SearchColumnEnumSelectField[];
  locationPreferredStockLevel?: PlatformCore.SearchColumnDoubleField[];
  locationQtyAvailForStorePickup?: PlatformCore.SearchColumnDoubleField[];
  locationQuantityAvailable?: PlatformCore.SearchColumnDoubleField[];
  locationQuantityBackOrdered?: PlatformCore.SearchColumnDoubleField[];
  locationQuantityCommitted?: PlatformCore.SearchColumnDoubleField[];
  locationQuantityInTransit?: PlatformCore.SearchColumnDoubleField[];
  locationQuantityOnHand?: PlatformCore.SearchColumnDoubleField[];
  locationQuantityOnOrder?: PlatformCore.SearchColumnDoubleField[];
  locationReOrderPoint?: PlatformCore.SearchColumnDoubleField[];
  locationRescheduleInDays?: PlatformCore.SearchColumnLongField[];
  locationRescheduleOutDays?: PlatformCore.SearchColumnLongField[];
  locationSafetyStockLevel?: PlatformCore.SearchColumnDoubleField[];
  locationStorePickupBufferStock?: PlatformCore.SearchColumnDoubleField[];
  locationSupplyLotSizingMethod?: PlatformCore.SearchColumnEnumSelectField[];
  locationSupplyTimeFence?: PlatformCore.SearchColumnLongField[];
  locationSupplyType?: PlatformCore.SearchColumnEnumSelectField[];
  locationTotalValue?: PlatformCore.SearchColumnDoubleField[];
  locBackwardConsumptionDays?: PlatformCore.SearchColumnLongField[];
  locForwardConsumptionDays?: PlatformCore.SearchColumnLongField[];
  manufacturer?: PlatformCore.SearchColumnStringField[];
  manufacturerAddr1?: PlatformCore.SearchColumnStringField[];
  manufacturerCity?: PlatformCore.SearchColumnStringField[];
  manufacturerState?: PlatformCore.SearchColumnStringField[];
  manufacturerTariff?: PlatformCore.SearchColumnStringField[];
  manufacturerTaxId?: PlatformCore.SearchColumnStringField[];
  manufacturerZip?: PlatformCore.SearchColumnStringField[];
  manufacturingChargeItem?: PlatformCore.SearchColumnBooleanField[];
  matchBillToReceipt?: PlatformCore.SearchColumnBooleanField[];
  maximumQuantity?: PlatformCore.SearchColumnStringField[];
  memberItem?: PlatformCore.SearchColumnSelectField[];
  memberQuantity?: PlatformCore.SearchColumnDoubleField[];
  metaTagHtml?: PlatformCore.SearchColumnStringField[];
  minimumQuantity?: PlatformCore.SearchColumnStringField[];
  modified?: PlatformCore.SearchColumnDateField[];
  mossApplies?: PlatformCore.SearchColumnBooleanField[];
  mpn?: PlatformCore.SearchColumnStringField[];
  multManufactureAddr?: PlatformCore.SearchColumnBooleanField[];
  nextagCategory?: PlatformCore.SearchColumnStringField[];
  nextagProductFeed?: PlatformCore.SearchColumnBooleanField[];
  nextInvtCountDate?: PlatformCore.SearchColumnDateField[];
  noPriceMessage?: PlatformCore.SearchColumnStringField[];
  numActiveListings?: PlatformCore.SearchColumnLongField[];
  numberAllowedDownloads?: PlatformCore.SearchColumnStringField[];
  numCurrentlyListed?: PlatformCore.SearchColumnLongField[];
  obsoleteDate?: PlatformCore.SearchColumnDateField[];
  obsoleteRevision?: PlatformCore.SearchColumnSelectField[];
  offerSupport?: PlatformCore.SearchColumnBooleanField[];
  onlineCustomerPrice?: PlatformCore.SearchColumnDoubleField[];
  onlinePrice?: PlatformCore.SearchColumnDoubleField[];
  onSpecial?: PlatformCore.SearchColumnBooleanField[];
  otherPrices?: PlatformCore.SearchColumnDoubleField[];
  otherVendor?: PlatformCore.SearchColumnSelectField[];
  outOfStockBehavior?: PlatformCore.SearchColumnStringField[];
  outOfStockMessage?: PlatformCore.SearchColumnStringField[];
  overallQuantityPricingType?: PlatformCore.SearchColumnEnumSelectField[];
  overheadType?: PlatformCore.SearchColumnEnumSelectField[];
  pageTitle?: PlatformCore.SearchColumnStringField[];
  parent?: PlatformCore.SearchColumnSelectField[];
  periodicLotSizeDays?: PlatformCore.SearchColumnLongField[];
  periodicLotSizeType?: PlatformCore.SearchColumnEnumSelectField[];
  preferenceCriterion?: PlatformCore.SearchColumnStringField[];
  preferredBin?: PlatformCore.SearchColumnBooleanField[];
  preferredLocation?: PlatformCore.SearchColumnSelectField[];
  preferredStockLevel?: PlatformCore.SearchColumnDoubleField[];
  preferredStockLevelDays?: PlatformCore.SearchColumnLongField[];
  pricesIncludeTax?: PlatformCore.SearchColumnBooleanField[];
  pricingGroup?: PlatformCore.SearchColumnSelectField[];
  primaryCategory?: PlatformCore.SearchColumnStringField[];
  prodPriceVarianceAcct?: PlatformCore.SearchColumnSelectField[];
  prodQtyVarianceAcct?: PlatformCore.SearchColumnSelectField[];
  purchaseDescription?: PlatformCore.SearchColumnStringField[];
  purchaseOrderAmount?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrderQuantity?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrderQuantityDiff?: PlatformCore.SearchColumnDoubleField[];
  purchasePriceVarianceAcct?: PlatformCore.SearchColumnSelectField[];
  purchaseUnit?: PlatformCore.SearchColumnSelectField[];
  quantityAvailable?: PlatformCore.SearchColumnDoubleField[];
  quantityBackOrdered?: PlatformCore.SearchColumnDoubleField[];
  quantityCommitted?: PlatformCore.SearchColumnDoubleField[];
  quantityOnHand?: PlatformCore.SearchColumnDoubleField[];
  quantityOnOrder?: PlatformCore.SearchColumnDoubleField[];
  quantityPricingSchedule?: PlatformCore.SearchColumnSelectField[];
  receiptAmount?: PlatformCore.SearchColumnDoubleField[];
  receiptQuantity?: PlatformCore.SearchColumnDoubleField[];
  receiptQuantityDiff?: PlatformCore.SearchColumnDoubleField[];
  reorderMultiple?: PlatformCore.SearchColumnLongField[];
  reOrderPoint?: PlatformCore.SearchColumnDoubleField[];
  rescheduleInDays?: PlatformCore.SearchColumnLongField[];
  rescheduleOutDays?: PlatformCore.SearchColumnLongField[];
  reservePrice?: PlatformCore.SearchColumnDoubleField[];
  revenueAllocationGroup?: PlatformCore.SearchColumnSelectField[];
  revenueRecognitionRule?: PlatformCore.SearchColumnSelectField[];
  revRecForecastRule?: PlatformCore.SearchColumnSelectField[];
  revReclassFXAccount?: PlatformCore.SearchColumnSelectField[];
  revRecSchedule?: PlatformCore.SearchColumnSelectField[];
  roundUpAsComponent?: PlatformCore.SearchColumnBooleanField[];
  safetyStockLevel?: PlatformCore.SearchColumnDoubleField[];
  safetyStockLevelDays?: PlatformCore.SearchColumnLongField[];
  salesDescription?: PlatformCore.SearchColumnStringField[];
  salesTaxCode?: PlatformCore.SearchColumnSelectField[];
  saleUnit?: PlatformCore.SearchColumnSelectField[];
  sameAsPrimaryBookAmortization?: PlatformCore.SearchColumnBooleanField[];
  sameAsPrimaryBookRevRec?: PlatformCore.SearchColumnBooleanField[];
  scheduleBCode?: PlatformCore.SearchColumnEnumSelectField[];
  scheduleBNumber?: PlatformCore.SearchColumnStringField[];
  scheduleBQuantity?: PlatformCore.SearchColumnStringField[];
  scrapAcct?: PlatformCore.SearchColumnSelectField[];
  searchKeywords?: PlatformCore.SearchColumnStringField[];
  seasonalDemand?: PlatformCore.SearchColumnBooleanField[];
  sellOnEBay?: PlatformCore.SearchColumnBooleanField[];
  serialNumber?: PlatformCore.SearchColumnStringField[];
  serialNumberLocation?: PlatformCore.SearchColumnStringField[];
  shipIndividually?: PlatformCore.SearchColumnBooleanField[];
  shipPackage?: PlatformCore.SearchColumnSelectField[];
  shippingCarrier?: PlatformCore.SearchColumnEnumSelectField[];
  shippingRate?: PlatformCore.SearchColumnDoubleField[];
  shoppingDotComCategory?: PlatformCore.SearchColumnStringField[];
  shoppingProductFeed?: PlatformCore.SearchColumnBooleanField[];
  shopzillaCategoryId?: PlatformCore.SearchColumnLongField[];
  shopzillaProductFeed?: PlatformCore.SearchColumnBooleanField[];
  sitemapPriority?: PlatformCore.SearchColumnEnumSelectField[];
  softDescriptor?: PlatformCore.SearchColumnSelectField[];
  startingPrice?: PlatformCore.SearchColumnDoubleField[];
  stockDescription?: PlatformCore.SearchColumnStringField[];
  stockUnit?: PlatformCore.SearchColumnSelectField[];
  storeDescription?: PlatformCore.SearchColumnStringField[];
  storeDetailedDescription?: PlatformCore.SearchColumnStringField[];
  storeDisplayImage?: PlatformCore.SearchColumnSelectField[];
  storeDisplayName?: PlatformCore.SearchColumnStringField[];
  storeDisplayThumbnail?: PlatformCore.SearchColumnSelectField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  subType?: PlatformCore.SearchColumnEnumSelectField[];
  supplyLotSizingMethod?: PlatformCore.SearchColumnEnumSelectField[];
  supplyReplenishmentMethod?: PlatformCore.SearchColumnEnumSelectField[];
  supplyTimeFence?: PlatformCore.SearchColumnLongField[];
  supplyType?: PlatformCore.SearchColumnEnumSelectField[];
  taxSchedule?: PlatformCore.SearchColumnSelectField[];
  thumbNailUrl?: PlatformCore.SearchColumnStringField[];
  totalValue?: PlatformCore.SearchColumnDoubleField[];
  trackLandedCost?: PlatformCore.SearchColumnBooleanField[];
  transferPrice?: PlatformCore.SearchColumnDoubleField[];
  type?: PlatformCore.SearchColumnEnumSelectField[];
  unbuildVarianceAccount?: PlatformCore.SearchColumnSelectField[];
  unitsType?: PlatformCore.SearchColumnSelectField[];
  upcCode?: PlatformCore.SearchColumnStringField[];
  urlComponent?: PlatformCore.SearchColumnStringField[];
  useBins?: PlatformCore.SearchColumnBooleanField[];
  useComponentYield?: PlatformCore.SearchColumnBooleanField[];
  useMarginalRates?: PlatformCore.SearchColumnBooleanField[];
  vendor?: PlatformCore.SearchColumnSelectField[];
  vendorCode?: PlatformCore.SearchColumnStringField[];
  vendorCost?: PlatformCore.SearchColumnDoubleField[];
  vendorCostEntered?: PlatformCore.SearchColumnDoubleField[];
  vendorName?: PlatformCore.SearchColumnStringField[];
  vendorPriceCurrency?: PlatformCore.SearchColumnStringField[];
  vendorSchedule?: PlatformCore.SearchColumnSelectField[];
  vendReturnVarianceAccount?: PlatformCore.SearchColumnSelectField[];
  vsoeDeferral?: PlatformCore.SearchColumnEnumSelectField[];
  vsoeDelivered?: PlatformCore.SearchColumnBooleanField[];
  vsoePermitDiscount?: PlatformCore.SearchColumnEnumSelectField[];
  vsoePrice?: PlatformCore.SearchColumnDoubleField[];
  vsoeSopGroup?: PlatformCore.SearchColumnEnumSelectField[];
  webSite?: PlatformCore.SearchColumnSelectField[];
  weight?: PlatformCore.SearchColumnDoubleField[];
  weightUnit?: PlatformCore.SearchColumnEnumSelectField[];
  wipAcct?: PlatformCore.SearchColumnSelectField[];
  wipVarianceAcct?: PlatformCore.SearchColumnSelectField[];
  yahooProductFeed?: PlatformCore.SearchColumnBooleanField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: ItemSearchRowBasicProps) {
    super();
    this.accBookRevRecForecastRule = props.accBookRevRecForecastRule;
    this.accountingBook = props.accountingBook;
    this.accountingBookAmortization = props.accountingBookAmortization;
    this.accountingBookCreatePlansOn = props.accountingBookCreatePlansOn;
    this.accountingBookRevRecRule = props.accountingBookRevRecRule;
    this.accountingBookRevRecSchedule = props.accountingBookRevRecSchedule;
    this.allowedShippingMethod = props.allowedShippingMethod;
    this.alternateDemandSourceItem = props.alternateDemandSourceItem;
    this.assetAccount = props.assetAccount;
    this.atpLeadTime = props.atpLeadTime;
    this.atpMethod = props.atpMethod;
    this.autoLeadTime = props.autoLeadTime;
    this.autoPreferredStockLevel = props.autoPreferredStockLevel;
    this.autoReorderPoint = props.autoReorderPoint;
    this.availableToPartners = props.availableToPartners;
    this.averageCost = props.averageCost;
    this.backwardConsumptionDays = props.backwardConsumptionDays;
    this.basePrice = props.basePrice;
    this.billExchRateVarianceAcct = props.billExchRateVarianceAcct;
    this.billPriceVarianceAcct = props.billPriceVarianceAcct;
    this.billQtyVarianceAcct = props.billQtyVarianceAcct;
    this.binNumber = props.binNumber;
    this.binOnHandAvail = props.binOnHandAvail;
    this.binOnHandCount = props.binOnHandCount;
    this.bomQuantity = props.bomQuantity;
    this.buildEntireAssembly = props.buildEntireAssembly;
    this.buildTime = props.buildTime;
    this.buyItNowPrice = props.buyItNowPrice;
    this.category = props.category;
    this.categoryPreferred = props.categoryPreferred;
    this.clazz = props.clazz;
    this.componentYield = props.componentYield;
    this.consumptionUnit = props.consumptionUnit;
    this.contingentRevenueHandling = props.contingentRevenueHandling;
    this.copyDescription = props.copyDescription;
    this.correlatedItem = props.correlatedItem;
    this.correlatedItemCorrelation = props.correlatedItemCorrelation;
    this.correlatedItemCount = props.correlatedItemCount;
    this.correlatedItemLift = props.correlatedItemLift;
    this.correlatedItemPurchaseRate = props.correlatedItemPurchaseRate;
    this.cost = props.cost;
    this.costAccountingStatus = props.costAccountingStatus;
    this.costCategory = props.costCategory;
    this.costEstimate = props.costEstimate;
    this.costEstimateType = props.costEstimateType;
    this.costingMethod = props.costingMethod;
    this.countryOfManufacture = props.countryOfManufacture;
    this.created = props.created;
    this.createJob = props.createJob;
    this.createRevenuePlansOn = props.createRevenuePlansOn;
    this.custReturnVarianceAccount = props.custReturnVarianceAccount;
    this.dateViewed = props.dateViewed;
    this.daysBeforeExpiration = props.daysBeforeExpiration;
    this.defaultReturnCost = props.defaultReturnCost;
    this.defaultShippingMethod = props.defaultShippingMethod;
    this.deferredExpenseAccount = props.deferredExpenseAccount;
    this.deferredRevenueAccount = props.deferredRevenueAccount;
    this.deferRevRec = props.deferRevRec;
    this.demandModifier = props.demandModifier;
    this.demandSource = props.demandSource;
    this.demandTimeFence = props.demandTimeFence;
    this.department = props.department;
    this.departmentnohierarchy = props.departmentnohierarchy;
    this.directRevenuePosting = props.directRevenuePosting;
    this.displayIneBayStore = props.displayIneBayStore;
    this.displayName = props.displayName;
    this.distributionCategory = props.distributionCategory;
    this.distributionNetwork = props.distributionNetwork;
    this.dontShowPrice = props.dontShowPrice;
    this.eBayItemDescription = props.eBayItemDescription;
    this.eBayItemSubtitle = props.eBayItemSubtitle;
    this.eBayItemTitle = props.eBayItemTitle;
    this.ebayRelistingOption = props.ebayRelistingOption;
    this.effectiveBomControl = props.effectiveBomControl;
    this.effectiveDate = props.effectiveDate;
    this.effectiveRevision = props.effectiveRevision;
    this.endAuctionsWhenOutOfStock = props.endAuctionsWhenOutOfStock;
    this.excludeFromSitemap = props.excludeFromSitemap;
    this.expenseAccount = props.expenseAccount;
    this.externalId = props.externalId;
    this.featuredDescription = props.featuredDescription;
    this.feedDescription = props.feedDescription;
    this.feedName = props.feedName;
    this.fixedLotSize = props.fixedLotSize;
    this.forwardConsumptionDays = props.forwardConsumptionDays;
    this.fraudRisk = props.fraudRisk;
    this.froogleProductFeed = props.froogleProductFeed;
    this.futureHorizon = props.futureHorizon;
    this.fxCost = props.fxCost;
    this.gainLossAccount = props.gainLossAccount;
    this.generateAccruals = props.generateAccruals;
    this.giftCertAuthCode = props.giftCertAuthCode;
    this.giftCertEmail = props.giftCertEmail;
    this.giftCertExpirationDate = props.giftCertExpirationDate;
    this.giftCertFrom = props.giftCertFrom;
    this.giftCertMessage = props.giftCertMessage;
    this.giftCertOriginalAmount = props.giftCertOriginalAmount;
    this.giftCertRecipient = props.giftCertRecipient;
    this.hierarchyNode = props.hierarchyNode;
    this.hierarchyVersion = props.hierarchyVersion;
    this.hits = props.hits;
    this.imageUrl = props.imageUrl;
    this.includeChildren = props.includeChildren;
    this.incomeAccount = props.incomeAccount;
    this.intercoDefRevAccount = props.intercoDefRevAccount;
    this.intercoExpenseAccount = props.intercoExpenseAccount;
    this.intercoIncomeAccount = props.intercoIncomeAccount;
    this.internalId = props.internalId;
    this.inventoryLocation = props.inventoryLocation;
    this.invtClassification = props.invtClassification;
    this.invtCountInterval = props.invtCountInterval;
    this.isAvailable = props.isAvailable;
    this.isDropShipItem = props.isDropShipItem;
    this.isFulfillable = props.isFulfillable;
    this.isGcoCompliant = props.isGcoCompliant;
    this.isInactive = props.isInactive;
    this.isLotItem = props.isLotItem;
    this.isOnline = props.isOnline;
    this.isSerialItem = props.isSerialItem;
    this.isSpecialOrderItem = props.isSpecialOrderItem;
    this.isSpecialWorkOrderItem = props.isSpecialWorkOrderItem;
    this.isStorePickupAllowed = props.isStorePickupAllowed;
    this.issueProduct = props.issueProduct;
    this.isTaxable = props.isTaxable;
    this.isVsoeBundle = props.isVsoeBundle;
    this.isWip = props.isWip;
    this.itemId = props.itemId;
    this.itemRevenueCategory = props.itemRevenueCategory;
    this.itemUrl = props.itemUrl;
    this.lastInvtCountDate = props.lastInvtCountDate;
    this.lastPurchasePrice = props.lastPurchasePrice;
    this.lastQuantityAvailableChange = props.lastQuantityAvailableChange;
    this.leadTime = props.leadTime;
    this.liabilityAccount = props.liabilityAccount;
    this.listingDuration = props.listingDuration;
    this.location = props.location;
    this.locationAllowStorePickup = props.locationAllowStorePickup;
    this.locationAtpLeadTime = props.locationAtpLeadTime;
    this.locationAverageCost = props.locationAverageCost;
    this.locationBinQuantityAvailable = props.locationBinQuantityAvailable;
    this.locationBuildTime = props.locationBuildTime;
    this.locationCost = props.locationCost;
    this.locationCostAccountingStatus = props.locationCostAccountingStatus;
    this.locationDefaultReturnCost = props.locationDefaultReturnCost;
    this.locationDemandSource = props.locationDemandSource;
    this.locationDemandTimeFence = props.locationDemandTimeFence;
    this.locationFixedLotSize = props.locationFixedLotSize;
    this.locationInventoryCostTemplate = props.locationInventoryCostTemplate;
    this.locationInvtClassification = props.locationInvtClassification;
    this.locationInvtCountInterval = props.locationInvtCountInterval;
    this.locationLastInvtCountDate = props.locationLastInvtCountDate;
    this.locationLeadTime = props.locationLeadTime;
    this.locationNextInvtCountDate = props.locationNextInvtCountDate;
    this.locationPeriodicLotSizeDays = props.locationPeriodicLotSizeDays;
    this.locationPeriodicLotSizeType = props.locationPeriodicLotSizeType;
    this.locationPreferredStockLevel = props.locationPreferredStockLevel;
    this.locationQtyAvailForStorePickup = props.locationQtyAvailForStorePickup;
    this.locationQuantityAvailable = props.locationQuantityAvailable;
    this.locationQuantityBackOrdered = props.locationQuantityBackOrdered;
    this.locationQuantityCommitted = props.locationQuantityCommitted;
    this.locationQuantityInTransit = props.locationQuantityInTransit;
    this.locationQuantityOnHand = props.locationQuantityOnHand;
    this.locationQuantityOnOrder = props.locationQuantityOnOrder;
    this.locationReOrderPoint = props.locationReOrderPoint;
    this.locationRescheduleInDays = props.locationRescheduleInDays;
    this.locationRescheduleOutDays = props.locationRescheduleOutDays;
    this.locationSafetyStockLevel = props.locationSafetyStockLevel;
    this.locationStorePickupBufferStock = props.locationStorePickupBufferStock;
    this.locationSupplyLotSizingMethod = props.locationSupplyLotSizingMethod;
    this.locationSupplyTimeFence = props.locationSupplyTimeFence;
    this.locationSupplyType = props.locationSupplyType;
    this.locationTotalValue = props.locationTotalValue;
    this.locBackwardConsumptionDays = props.locBackwardConsumptionDays;
    this.locForwardConsumptionDays = props.locForwardConsumptionDays;
    this.manufacturer = props.manufacturer;
    this.manufacturerAddr1 = props.manufacturerAddr1;
    this.manufacturerCity = props.manufacturerCity;
    this.manufacturerState = props.manufacturerState;
    this.manufacturerTariff = props.manufacturerTariff;
    this.manufacturerTaxId = props.manufacturerTaxId;
    this.manufacturerZip = props.manufacturerZip;
    this.manufacturingChargeItem = props.manufacturingChargeItem;
    this.matchBillToReceipt = props.matchBillToReceipt;
    this.maximumQuantity = props.maximumQuantity;
    this.memberItem = props.memberItem;
    this.memberQuantity = props.memberQuantity;
    this.metaTagHtml = props.metaTagHtml;
    this.minimumQuantity = props.minimumQuantity;
    this.modified = props.modified;
    this.mossApplies = props.mossApplies;
    this.mpn = props.mpn;
    this.multManufactureAddr = props.multManufactureAddr;
    this.nextagCategory = props.nextagCategory;
    this.nextagProductFeed = props.nextagProductFeed;
    this.nextInvtCountDate = props.nextInvtCountDate;
    this.noPriceMessage = props.noPriceMessage;
    this.numActiveListings = props.numActiveListings;
    this.numberAllowedDownloads = props.numberAllowedDownloads;
    this.numCurrentlyListed = props.numCurrentlyListed;
    this.obsoleteDate = props.obsoleteDate;
    this.obsoleteRevision = props.obsoleteRevision;
    this.offerSupport = props.offerSupport;
    this.onlineCustomerPrice = props.onlineCustomerPrice;
    this.onlinePrice = props.onlinePrice;
    this.onSpecial = props.onSpecial;
    this.otherPrices = props.otherPrices;
    this.otherVendor = props.otherVendor;
    this.outOfStockBehavior = props.outOfStockBehavior;
    this.outOfStockMessage = props.outOfStockMessage;
    this.overallQuantityPricingType = props.overallQuantityPricingType;
    this.overheadType = props.overheadType;
    this.pageTitle = props.pageTitle;
    this.parent = props.parent;
    this.periodicLotSizeDays = props.periodicLotSizeDays;
    this.periodicLotSizeType = props.periodicLotSizeType;
    this.preferenceCriterion = props.preferenceCriterion;
    this.preferredBin = props.preferredBin;
    this.preferredLocation = props.preferredLocation;
    this.preferredStockLevel = props.preferredStockLevel;
    this.preferredStockLevelDays = props.preferredStockLevelDays;
    this.pricesIncludeTax = props.pricesIncludeTax;
    this.pricingGroup = props.pricingGroup;
    this.primaryCategory = props.primaryCategory;
    this.prodPriceVarianceAcct = props.prodPriceVarianceAcct;
    this.prodQtyVarianceAcct = props.prodQtyVarianceAcct;
    this.purchaseDescription = props.purchaseDescription;
    this.purchaseOrderAmount = props.purchaseOrderAmount;
    this.purchaseOrderQuantity = props.purchaseOrderQuantity;
    this.purchaseOrderQuantityDiff = props.purchaseOrderQuantityDiff;
    this.purchasePriceVarianceAcct = props.purchasePriceVarianceAcct;
    this.purchaseUnit = props.purchaseUnit;
    this.quantityAvailable = props.quantityAvailable;
    this.quantityBackOrdered = props.quantityBackOrdered;
    this.quantityCommitted = props.quantityCommitted;
    this.quantityOnHand = props.quantityOnHand;
    this.quantityOnOrder = props.quantityOnOrder;
    this.quantityPricingSchedule = props.quantityPricingSchedule;
    this.receiptAmount = props.receiptAmount;
    this.receiptQuantity = props.receiptQuantity;
    this.receiptQuantityDiff = props.receiptQuantityDiff;
    this.reorderMultiple = props.reorderMultiple;
    this.reOrderPoint = props.reOrderPoint;
    this.rescheduleInDays = props.rescheduleInDays;
    this.rescheduleOutDays = props.rescheduleOutDays;
    this.reservePrice = props.reservePrice;
    this.revenueAllocationGroup = props.revenueAllocationGroup;
    this.revenueRecognitionRule = props.revenueRecognitionRule;
    this.revRecForecastRule = props.revRecForecastRule;
    this.revReclassFXAccount = props.revReclassFXAccount;
    this.revRecSchedule = props.revRecSchedule;
    this.roundUpAsComponent = props.roundUpAsComponent;
    this.safetyStockLevel = props.safetyStockLevel;
    this.safetyStockLevelDays = props.safetyStockLevelDays;
    this.salesDescription = props.salesDescription;
    this.salesTaxCode = props.salesTaxCode;
    this.saleUnit = props.saleUnit;
    this.sameAsPrimaryBookAmortization = props.sameAsPrimaryBookAmortization;
    this.sameAsPrimaryBookRevRec = props.sameAsPrimaryBookRevRec;
    this.scheduleBCode = props.scheduleBCode;
    this.scheduleBNumber = props.scheduleBNumber;
    this.scheduleBQuantity = props.scheduleBQuantity;
    this.scrapAcct = props.scrapAcct;
    this.searchKeywords = props.searchKeywords;
    this.seasonalDemand = props.seasonalDemand;
    this.sellOnEBay = props.sellOnEBay;
    this.serialNumber = props.serialNumber;
    this.serialNumberLocation = props.serialNumberLocation;
    this.shipIndividually = props.shipIndividually;
    this.shipPackage = props.shipPackage;
    this.shippingCarrier = props.shippingCarrier;
    this.shippingRate = props.shippingRate;
    this.shoppingDotComCategory = props.shoppingDotComCategory;
    this.shoppingProductFeed = props.shoppingProductFeed;
    this.shopzillaCategoryId = props.shopzillaCategoryId;
    this.shopzillaProductFeed = props.shopzillaProductFeed;
    this.sitemapPriority = props.sitemapPriority;
    this.softDescriptor = props.softDescriptor;
    this.startingPrice = props.startingPrice;
    this.stockDescription = props.stockDescription;
    this.stockUnit = props.stockUnit;
    this.storeDescription = props.storeDescription;
    this.storeDetailedDescription = props.storeDetailedDescription;
    this.storeDisplayImage = props.storeDisplayImage;
    this.storeDisplayName = props.storeDisplayName;
    this.storeDisplayThumbnail = props.storeDisplayThumbnail;
    this.subsidiary = props.subsidiary;
    this.subType = props.subType;
    this.supplyLotSizingMethod = props.supplyLotSizingMethod;
    this.supplyReplenishmentMethod = props.supplyReplenishmentMethod;
    this.supplyTimeFence = props.supplyTimeFence;
    this.supplyType = props.supplyType;
    this.taxSchedule = props.taxSchedule;
    this.thumbNailUrl = props.thumbNailUrl;
    this.totalValue = props.totalValue;
    this.trackLandedCost = props.trackLandedCost;
    this.transferPrice = props.transferPrice;
    this.type = props.type;
    this.unbuildVarianceAccount = props.unbuildVarianceAccount;
    this.unitsType = props.unitsType;
    this.upcCode = props.upcCode;
    this.urlComponent = props.urlComponent;
    this.useBins = props.useBins;
    this.useComponentYield = props.useComponentYield;
    this.useMarginalRates = props.useMarginalRates;
    this.vendor = props.vendor;
    this.vendorCode = props.vendorCode;
    this.vendorCost = props.vendorCost;
    this.vendorCostEntered = props.vendorCostEntered;
    this.vendorName = props.vendorName;
    this.vendorPriceCurrency = props.vendorPriceCurrency;
    this.vendorSchedule = props.vendorSchedule;
    this.vendReturnVarianceAccount = props.vendReturnVarianceAccount;
    this.vsoeDeferral = props.vsoeDeferral;
    this.vsoeDelivered = props.vsoeDelivered;
    this.vsoePermitDiscount = props.vsoePermitDiscount;
    this.vsoePrice = props.vsoePrice;
    this.vsoeSopGroup = props.vsoeSopGroup;
    this.webSite = props.webSite;
    this.weight = props.weight;
    this.weightUnit = props.weightUnit;
    this.wipAcct = props.wipAcct;
    this.wipVarianceAcct = props.wipVarianceAcct;
    this.yahooProductFeed = props.yahooProductFeed;
    this.customFieldList = props.customFieldList;
  }
}

export type BudgetSearchRowBasicProps = {
  account?: PlatformCore.SearchColumnStringField[];
  accountingBook?: PlatformCore.SearchColumnStringField[];
  amount?: PlatformCore.SearchColumnDoubleField[];
  category?: PlatformCore.SearchColumnStringField[];
  clazz?: PlatformCore.SearchColumnStringField[];
  classnohierarchy?: PlatformCore.SearchColumnStringField[];
  currency?: PlatformCore.SearchColumnStringField[];
  customer?: PlatformCore.SearchColumnStringField[];
  department?: PlatformCore.SearchColumnStringField[];
  departmentnohierarchy?: PlatformCore.SearchColumnStringField[];
  global?: PlatformCore.SearchColumnBooleanField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  item?: PlatformCore.SearchColumnStringField[];
  location?: PlatformCore.SearchColumnStringField[];
  locationnohierarchy?: PlatformCore.SearchColumnStringField[];
  subsidiary?: PlatformCore.SearchColumnStringField[];
  subsidiarynohierarchy?: PlatformCore.SearchColumnStringField[];
  year?: PlatformCore.SearchColumnStringField[];
  year2?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class BudgetSearchRowBasic extends PlatformCore.SearchRowBasic {
  account?: PlatformCore.SearchColumnStringField[];
  accountingBook?: PlatformCore.SearchColumnStringField[];
  amount?: PlatformCore.SearchColumnDoubleField[];
  category?: PlatformCore.SearchColumnStringField[];
  clazz?: PlatformCore.SearchColumnStringField[];
  classnohierarchy?: PlatformCore.SearchColumnStringField[];
  currency?: PlatformCore.SearchColumnStringField[];
  customer?: PlatformCore.SearchColumnStringField[];
  department?: PlatformCore.SearchColumnStringField[];
  departmentnohierarchy?: PlatformCore.SearchColumnStringField[];
  global?: PlatformCore.SearchColumnBooleanField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  item?: PlatformCore.SearchColumnStringField[];
  location?: PlatformCore.SearchColumnStringField[];
  locationnohierarchy?: PlatformCore.SearchColumnStringField[];
  subsidiary?: PlatformCore.SearchColumnStringField[];
  subsidiarynohierarchy?: PlatformCore.SearchColumnStringField[];
  year?: PlatformCore.SearchColumnStringField[];
  year2?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: BudgetSearchRowBasicProps) {
    super();
    this.account = props.account;
    this.accountingBook = props.accountingBook;
    this.amount = props.amount;
    this.category = props.category;
    this.clazz = props.clazz;
    this.classnohierarchy = props.classnohierarchy;
    this.currency = props.currency;
    this.customer = props.customer;
    this.department = props.department;
    this.departmentnohierarchy = props.departmentnohierarchy;
    this.global = props.global;
    this.internalId = props.internalId;
    this.item = props.item;
    this.location = props.location;
    this.locationnohierarchy = props.locationnohierarchy;
    this.subsidiary = props.subsidiary;
    this.subsidiarynohierarchy = props.subsidiarynohierarchy;
    this.year = props.year;
    this.year2 = props.year2;
    this.customFieldList = props.customFieldList;
  }
}

export type RevRecTemplateSearchBasicProps = {
  amorMethod?: PlatformCore.SearchEnumMultiSelectField;
  amorPeriod?: PlatformCore.SearchLongField;
  amorStartOffset?: PlatformCore.SearchLongField;
  amorTermSrc?: PlatformCore.SearchEnumMultiSelectField;
  amorType?: PlatformCore.SearchEnumMultiSelectField;
  contraAccount?: PlatformCore.SearchMultiSelectField;
  deferralAccount?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  periodOffset?: PlatformCore.SearchLongField;
  targetAccount?: PlatformCore.SearchMultiSelectField;
  useForeignAmounts?: PlatformCore.SearchBooleanField;
};

export class RevRecTemplateSearchBasic extends PlatformCore.SearchRecordBasic {
  amorMethod?: PlatformCore.SearchEnumMultiSelectField;
  amorPeriod?: PlatformCore.SearchLongField;
  amorStartOffset?: PlatformCore.SearchLongField;
  amorTermSrc?: PlatformCore.SearchEnumMultiSelectField;
  amorType?: PlatformCore.SearchEnumMultiSelectField;
  contraAccount?: PlatformCore.SearchMultiSelectField;
  deferralAccount?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  periodOffset?: PlatformCore.SearchLongField;
  targetAccount?: PlatformCore.SearchMultiSelectField;
  useForeignAmounts?: PlatformCore.SearchBooleanField;
  constructor(props: RevRecTemplateSearchBasicProps) {
    super();
    this.amorMethod = props.amorMethod;
    this.amorPeriod = props.amorPeriod;
    this.amorStartOffset = props.amorStartOffset;
    this.amorTermSrc = props.amorTermSrc;
    this.amorType = props.amorType;
    this.contraAccount = props.contraAccount;
    this.deferralAccount = props.deferralAccount;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.periodOffset = props.periodOffset;
    this.targetAccount = props.targetAccount;
    this.useForeignAmounts = props.useForeignAmounts;
  }
}

export type InventoryNumberBinSearchBasicProps = {
  binNumber?: PlatformCore.SearchMultiSelectField;
  inventoryNumber?: PlatformCore.SearchStringField;
  location?: PlatformCore.SearchMultiSelectField;
  quantityAvailable?: PlatformCore.SearchDoubleField;
  quantityOnHand?: PlatformCore.SearchDoubleField;
};

export class InventoryNumberBinSearchBasic extends PlatformCore.SearchRecordBasic {
  binNumber?: PlatformCore.SearchMultiSelectField;
  inventoryNumber?: PlatformCore.SearchStringField;
  location?: PlatformCore.SearchMultiSelectField;
  quantityAvailable?: PlatformCore.SearchDoubleField;
  quantityOnHand?: PlatformCore.SearchDoubleField;
  constructor(props: InventoryNumberBinSearchBasicProps) {
    super();
    this.binNumber = props.binNumber;
    this.inventoryNumber = props.inventoryNumber;
    this.location = props.location;
    this.quantityAvailable = props.quantityAvailable;
    this.quantityOnHand = props.quantityOnHand;
  }
}

export type MerchandiseHierarchyNodeSearchRowBasicProps = {
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  hierarchyLevel?: PlatformCore.SearchColumnSelectField[];
  hierarchyVersion?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  name?: PlatformCore.SearchColumnStringField[];
  parentNode?: PlatformCore.SearchColumnSelectField[];
};

export class MerchandiseHierarchyNodeSearchRowBasic extends PlatformCore.SearchRowBasic {
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  hierarchyLevel?: PlatformCore.SearchColumnSelectField[];
  hierarchyVersion?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  name?: PlatformCore.SearchColumnStringField[];
  parentNode?: PlatformCore.SearchColumnSelectField[];
  constructor(props: MerchandiseHierarchyNodeSearchRowBasicProps) {
    super();
    this.description = props.description;
    this.externalId = props.externalId;
    this.hierarchyLevel = props.hierarchyLevel;
    this.hierarchyVersion = props.hierarchyVersion;
    this.internalId = props.internalId;
    this.name = props.name;
    this.parentNode = props.parentNode;
  }
}

export type JobSearchBasicProps = {
  accountNumber?: PlatformCore.SearchStringField;
  actualTime?: PlatformCore.SearchDoubleField;
  address?: PlatformCore.SearchStringField;
  addressee?: PlatformCore.SearchStringField;
  addressLabel?: PlatformCore.SearchStringField;
  addressPhone?: PlatformCore.SearchStringField;
  allocatePayrollExpenses?: PlatformCore.SearchBooleanField;
  allowAllResourcesForTasks?: PlatformCore.SearchBooleanField;
  allowExpenses?: PlatformCore.SearchBooleanField;
  allowTime?: PlatformCore.SearchBooleanField;
  applyProjectExpenseTypeToAll?: PlatformCore.SearchBooleanField;
  attention?: PlatformCore.SearchStringField;
  billingSchedule?: PlatformCore.SearchMultiSelectField;
  calculatedEndDate?: PlatformCore.SearchDateField;
  calculatedEndDateBaseline?: PlatformCore.SearchDateField;
  category?: PlatformCore.SearchMultiSelectField;
  city?: PlatformCore.SearchStringField;
  comments?: PlatformCore.SearchStringField;
  contact?: PlatformCore.SearchStringField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  customer?: PlatformCore.SearchMultiSelectField;
  dateCreated?: PlatformCore.SearchDateField;
  defaultTaxReg?: PlatformCore.SearchMultiSelectField;
  defaultTaxRegText?: PlatformCore.SearchStringField;
  email?: PlatformCore.SearchStringField;
  endDate?: PlatformCore.SearchDateField;
  entityId?: PlatformCore.SearchStringField;
  estCost?: PlatformCore.SearchDoubleField;
  estEndDate?: PlatformCore.SearchDateField;
  estimatedGrossProfit?: PlatformCore.SearchDoubleField;
  estimatedGrossProfitPercent?: PlatformCore.SearchDoubleField;
  estimatedLaborCost?: PlatformCore.SearchDoubleField;
  estimatedLaborCostBaseline?: PlatformCore.SearchDoubleField;
  estimatedLaborRevenue?: PlatformCore.SearchDoubleField;
  estimatedTime?: PlatformCore.SearchDoubleField;
  estimatedTimeOverride?: PlatformCore.SearchDoubleField;
  estimatedTimeOverrideBaseline?: PlatformCore.SearchDoubleField;
  estRevenue?: PlatformCore.SearchDoubleField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  giveAccess?: PlatformCore.SearchBooleanField;
  globalSubscriptionStatus?: PlatformCore.SearchEnumMultiSelectField;
  image?: PlatformCore.SearchStringField;
  includeCrmTasksInTotals?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDefaultBilling?: PlatformCore.SearchBooleanField;
  isDefaultShipping?: PlatformCore.SearchBooleanField;
  isExemptTime?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isProductiveTime?: PlatformCore.SearchBooleanField;
  isUtilizedTime?: PlatformCore.SearchBooleanField;
  jobBillingType?: PlatformCore.SearchEnumMultiSelectField;
  jobItem?: PlatformCore.SearchMultiSelectField;
  jobPrice?: PlatformCore.SearchDoubleField;
  jobResource?: PlatformCore.SearchMultiSelectField;
  jobResourceRole?: PlatformCore.SearchMultiSelectField;
  language?: PlatformCore.SearchEnumMultiSelectField;
  lastBaselineDate?: PlatformCore.SearchDateField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  level?: PlatformCore.SearchEnumMultiSelectField;
  limitTimeToAssignees?: PlatformCore.SearchBooleanField;
  materializeTime?: PlatformCore.SearchBooleanField;
  parent?: PlatformCore.SearchMultiSelectField;
  pctComplete?: PlatformCore.SearchLongField;
  percentTimeComplete?: PlatformCore.SearchLongField;
  permission?: PlatformCore.SearchEnumMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  phoneticName?: PlatformCore.SearchStringField;
  projectedEndDateBaseline?: PlatformCore.SearchDateField;
  projectExpenseType?: PlatformCore.SearchMultiSelectField;
  revRecForecastRule?: PlatformCore.SearchMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  startDateBaseline?: PlatformCore.SearchDateField;
  state?: PlatformCore.SearchStringField;
  status?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  timeApproval?: PlatformCore.SearchMultiSelectField;
  timeRemaining?: PlatformCore.SearchDoubleField;
  type?: PlatformCore.SearchMultiSelectField;
  usePercentCompleteOverride?: PlatformCore.SearchBooleanField;
  zipCode?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class JobSearchBasic extends PlatformCore.SearchRecordBasic {
  accountNumber?: PlatformCore.SearchStringField;
  actualTime?: PlatformCore.SearchDoubleField;
  address?: PlatformCore.SearchStringField;
  addressee?: PlatformCore.SearchStringField;
  addressLabel?: PlatformCore.SearchStringField;
  addressPhone?: PlatformCore.SearchStringField;
  allocatePayrollExpenses?: PlatformCore.SearchBooleanField;
  allowAllResourcesForTasks?: PlatformCore.SearchBooleanField;
  allowExpenses?: PlatformCore.SearchBooleanField;
  allowTime?: PlatformCore.SearchBooleanField;
  applyProjectExpenseTypeToAll?: PlatformCore.SearchBooleanField;
  attention?: PlatformCore.SearchStringField;
  billingSchedule?: PlatformCore.SearchMultiSelectField;
  calculatedEndDate?: PlatformCore.SearchDateField;
  calculatedEndDateBaseline?: PlatformCore.SearchDateField;
  category?: PlatformCore.SearchMultiSelectField;
  city?: PlatformCore.SearchStringField;
  comments?: PlatformCore.SearchStringField;
  contact?: PlatformCore.SearchStringField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  customer?: PlatformCore.SearchMultiSelectField;
  dateCreated?: PlatformCore.SearchDateField;
  defaultTaxReg?: PlatformCore.SearchMultiSelectField;
  defaultTaxRegText?: PlatformCore.SearchStringField;
  email?: PlatformCore.SearchStringField;
  endDate?: PlatformCore.SearchDateField;
  entityId?: PlatformCore.SearchStringField;
  estCost?: PlatformCore.SearchDoubleField;
  estEndDate?: PlatformCore.SearchDateField;
  estimatedGrossProfit?: PlatformCore.SearchDoubleField;
  estimatedGrossProfitPercent?: PlatformCore.SearchDoubleField;
  estimatedLaborCost?: PlatformCore.SearchDoubleField;
  estimatedLaborCostBaseline?: PlatformCore.SearchDoubleField;
  estimatedLaborRevenue?: PlatformCore.SearchDoubleField;
  estimatedTime?: PlatformCore.SearchDoubleField;
  estimatedTimeOverride?: PlatformCore.SearchDoubleField;
  estimatedTimeOverrideBaseline?: PlatformCore.SearchDoubleField;
  estRevenue?: PlatformCore.SearchDoubleField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  giveAccess?: PlatformCore.SearchBooleanField;
  globalSubscriptionStatus?: PlatformCore.SearchEnumMultiSelectField;
  image?: PlatformCore.SearchStringField;
  includeCrmTasksInTotals?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDefaultBilling?: PlatformCore.SearchBooleanField;
  isDefaultShipping?: PlatformCore.SearchBooleanField;
  isExemptTime?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isProductiveTime?: PlatformCore.SearchBooleanField;
  isUtilizedTime?: PlatformCore.SearchBooleanField;
  jobBillingType?: PlatformCore.SearchEnumMultiSelectField;
  jobItem?: PlatformCore.SearchMultiSelectField;
  jobPrice?: PlatformCore.SearchDoubleField;
  jobResource?: PlatformCore.SearchMultiSelectField;
  jobResourceRole?: PlatformCore.SearchMultiSelectField;
  language?: PlatformCore.SearchEnumMultiSelectField;
  lastBaselineDate?: PlatformCore.SearchDateField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  level?: PlatformCore.SearchEnumMultiSelectField;
  limitTimeToAssignees?: PlatformCore.SearchBooleanField;
  materializeTime?: PlatformCore.SearchBooleanField;
  parent?: PlatformCore.SearchMultiSelectField;
  pctComplete?: PlatformCore.SearchLongField;
  percentTimeComplete?: PlatformCore.SearchLongField;
  permission?: PlatformCore.SearchEnumMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  phoneticName?: PlatformCore.SearchStringField;
  projectedEndDateBaseline?: PlatformCore.SearchDateField;
  projectExpenseType?: PlatformCore.SearchMultiSelectField;
  revRecForecastRule?: PlatformCore.SearchMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  startDateBaseline?: PlatformCore.SearchDateField;
  state?: PlatformCore.SearchStringField;
  status?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  timeApproval?: PlatformCore.SearchMultiSelectField;
  timeRemaining?: PlatformCore.SearchDoubleField;
  type?: PlatformCore.SearchMultiSelectField;
  usePercentCompleteOverride?: PlatformCore.SearchBooleanField;
  zipCode?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: JobSearchBasicProps) {
    super();
    this.accountNumber = props.accountNumber;
    this.actualTime = props.actualTime;
    this.address = props.address;
    this.addressee = props.addressee;
    this.addressLabel = props.addressLabel;
    this.addressPhone = props.addressPhone;
    this.allocatePayrollExpenses = props.allocatePayrollExpenses;
    this.allowAllResourcesForTasks = props.allowAllResourcesForTasks;
    this.allowExpenses = props.allowExpenses;
    this.allowTime = props.allowTime;
    this.applyProjectExpenseTypeToAll = props.applyProjectExpenseTypeToAll;
    this.attention = props.attention;
    this.billingSchedule = props.billingSchedule;
    this.calculatedEndDate = props.calculatedEndDate;
    this.calculatedEndDateBaseline = props.calculatedEndDateBaseline;
    this.category = props.category;
    this.city = props.city;
    this.comments = props.comments;
    this.contact = props.contact;
    this.country = props.country;
    this.county = props.county;
    this.customer = props.customer;
    this.dateCreated = props.dateCreated;
    this.defaultTaxReg = props.defaultTaxReg;
    this.defaultTaxRegText = props.defaultTaxRegText;
    this.email = props.email;
    this.endDate = props.endDate;
    this.entityId = props.entityId;
    this.estCost = props.estCost;
    this.estEndDate = props.estEndDate;
    this.estimatedGrossProfit = props.estimatedGrossProfit;
    this.estimatedGrossProfitPercent = props.estimatedGrossProfitPercent;
    this.estimatedLaborCost = props.estimatedLaborCost;
    this.estimatedLaborCostBaseline = props.estimatedLaborCostBaseline;
    this.estimatedLaborRevenue = props.estimatedLaborRevenue;
    this.estimatedTime = props.estimatedTime;
    this.estimatedTimeOverride = props.estimatedTimeOverride;
    this.estimatedTimeOverrideBaseline = props.estimatedTimeOverrideBaseline;
    this.estRevenue = props.estRevenue;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.fax = props.fax;
    this.giveAccess = props.giveAccess;
    this.globalSubscriptionStatus = props.globalSubscriptionStatus;
    this.image = props.image;
    this.includeCrmTasksInTotals = props.includeCrmTasksInTotals;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isDefaultBilling = props.isDefaultBilling;
    this.isDefaultShipping = props.isDefaultShipping;
    this.isExemptTime = props.isExemptTime;
    this.isInactive = props.isInactive;
    this.isProductiveTime = props.isProductiveTime;
    this.isUtilizedTime = props.isUtilizedTime;
    this.jobBillingType = props.jobBillingType;
    this.jobItem = props.jobItem;
    this.jobPrice = props.jobPrice;
    this.jobResource = props.jobResource;
    this.jobResourceRole = props.jobResourceRole;
    this.language = props.language;
    this.lastBaselineDate = props.lastBaselineDate;
    this.lastModifiedDate = props.lastModifiedDate;
    this.level = props.level;
    this.limitTimeToAssignees = props.limitTimeToAssignees;
    this.materializeTime = props.materializeTime;
    this.parent = props.parent;
    this.pctComplete = props.pctComplete;
    this.percentTimeComplete = props.percentTimeComplete;
    this.permission = props.permission;
    this.phone = props.phone;
    this.phoneticName = props.phoneticName;
    this.projectedEndDateBaseline = props.projectedEndDateBaseline;
    this.projectExpenseType = props.projectExpenseType;
    this.revRecForecastRule = props.revRecForecastRule;
    this.startDate = props.startDate;
    this.startDateBaseline = props.startDateBaseline;
    this.state = props.state;
    this.status = props.status;
    this.subsidiary = props.subsidiary;
    this.timeApproval = props.timeApproval;
    this.timeRemaining = props.timeRemaining;
    this.type = props.type;
    this.usePercentCompleteOverride = props.usePercentCompleteOverride;
    this.zipCode = props.zipCode;
    this.customFieldList = props.customFieldList;
  }
}

export type AccountingTransactionSearchBasicProps = {
  account?: PlatformCore.SearchMultiSelectField;
  accountingBook?: PlatformCore.SearchMultiSelectField;
  accountType?: PlatformCore.SearchMultiSelectField;
  altSalesAmount?: PlatformCore.SearchDoubleField;
  altSalesNetAmount?: PlatformCore.SearchDoubleField;
  amount?: PlatformCore.SearchDoubleField;
  bookSpecificTransaction?: PlatformCore.SearchBooleanField;
  catchUpPeriod?: PlatformCore.SearchMultiSelectField;
  creditAmount?: PlatformCore.SearchDoubleField;
  customGL?: PlatformCore.SearchBooleanField;
  debitAmount?: PlatformCore.SearchDoubleField;
  deferRevRec?: PlatformCore.SearchBooleanField;
  exchangeRate?: PlatformCore.SearchDoubleField;
  grossAmount?: PlatformCore.SearchDoubleField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  multiSubsidiary?: PlatformCore.SearchBooleanField;
  netAmount?: PlatformCore.SearchDoubleField;
  posting?: PlatformCore.SearchBooleanField;
  quantityRevCommitted?: PlatformCore.SearchDoubleField;
  recognizedRevenue?: PlatformCore.SearchDoubleField;
  revCommitStatus?: PlatformCore.SearchEnumMultiSelectField;
  revenueStatus?: PlatformCore.SearchEnumMultiSelectField;
  revRecEndDate?: PlatformCore.SearchDateField;
  revRecOnRevCommitment?: PlatformCore.SearchBooleanField;
  revRecStartDate?: PlatformCore.SearchDateField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  tranIsVsoeBundle?: PlatformCore.SearchBooleanField;
  type?: PlatformCore.SearchEnumMultiSelectField;
  vsoeAllocation?: PlatformCore.SearchDoubleField;
};

export class AccountingTransactionSearchBasic extends PlatformCore.SearchRecordBasic {
  account?: PlatformCore.SearchMultiSelectField;
  accountingBook?: PlatformCore.SearchMultiSelectField;
  accountType?: PlatformCore.SearchMultiSelectField;
  altSalesAmount?: PlatformCore.SearchDoubleField;
  altSalesNetAmount?: PlatformCore.SearchDoubleField;
  amount?: PlatformCore.SearchDoubleField;
  bookSpecificTransaction?: PlatformCore.SearchBooleanField;
  catchUpPeriod?: PlatformCore.SearchMultiSelectField;
  creditAmount?: PlatformCore.SearchDoubleField;
  customGL?: PlatformCore.SearchBooleanField;
  debitAmount?: PlatformCore.SearchDoubleField;
  deferRevRec?: PlatformCore.SearchBooleanField;
  exchangeRate?: PlatformCore.SearchDoubleField;
  grossAmount?: PlatformCore.SearchDoubleField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  multiSubsidiary?: PlatformCore.SearchBooleanField;
  netAmount?: PlatformCore.SearchDoubleField;
  posting?: PlatformCore.SearchBooleanField;
  quantityRevCommitted?: PlatformCore.SearchDoubleField;
  recognizedRevenue?: PlatformCore.SearchDoubleField;
  revCommitStatus?: PlatformCore.SearchEnumMultiSelectField;
  revenueStatus?: PlatformCore.SearchEnumMultiSelectField;
  revRecEndDate?: PlatformCore.SearchDateField;
  revRecOnRevCommitment?: PlatformCore.SearchBooleanField;
  revRecStartDate?: PlatformCore.SearchDateField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  tranIsVsoeBundle?: PlatformCore.SearchBooleanField;
  type?: PlatformCore.SearchEnumMultiSelectField;
  vsoeAllocation?: PlatformCore.SearchDoubleField;
  constructor(props: AccountingTransactionSearchBasicProps) {
    super();
    this.account = props.account;
    this.accountingBook = props.accountingBook;
    this.accountType = props.accountType;
    this.altSalesAmount = props.altSalesAmount;
    this.altSalesNetAmount = props.altSalesNetAmount;
    this.amount = props.amount;
    this.bookSpecificTransaction = props.bookSpecificTransaction;
    this.catchUpPeriod = props.catchUpPeriod;
    this.creditAmount = props.creditAmount;
    this.customGL = props.customGL;
    this.debitAmount = props.debitAmount;
    this.deferRevRec = props.deferRevRec;
    this.exchangeRate = props.exchangeRate;
    this.grossAmount = props.grossAmount;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.multiSubsidiary = props.multiSubsidiary;
    this.netAmount = props.netAmount;
    this.posting = props.posting;
    this.quantityRevCommitted = props.quantityRevCommitted;
    this.recognizedRevenue = props.recognizedRevenue;
    this.revCommitStatus = props.revCommitStatus;
    this.revenueStatus = props.revenueStatus;
    this.revRecEndDate = props.revRecEndDate;
    this.revRecOnRevCommitment = props.revRecOnRevCommitment;
    this.revRecStartDate = props.revRecStartDate;
    this.subsidiary = props.subsidiary;
    this.tranIsVsoeBundle = props.tranIsVsoeBundle;
    this.type = props.type;
    this.vsoeAllocation = props.vsoeAllocation;
  }
}

export type GiftCertificateSearchRowBasicProps = {
  amountRemaining?: PlatformCore.SearchColumnDoubleField[];
  amtAvailBilled?: PlatformCore.SearchColumnDoubleField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  email?: PlatformCore.SearchColumnStringField[];
  expirationDate?: PlatformCore.SearchColumnDateField[];
  gcActive?: PlatformCore.SearchColumnBooleanField[];
  giftCertCode?: PlatformCore.SearchColumnStringField[];
  incomeAcct?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  item?: PlatformCore.SearchColumnSelectField[];
  liabilityAcct?: PlatformCore.SearchColumnStringField[];
  message?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  originalAmount?: PlatformCore.SearchColumnDoubleField[];
  purchaseDate?: PlatformCore.SearchColumnDateField[];
  sender?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class GiftCertificateSearchRowBasic extends PlatformCore.SearchRowBasic {
  amountRemaining?: PlatformCore.SearchColumnDoubleField[];
  amtAvailBilled?: PlatformCore.SearchColumnDoubleField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  email?: PlatformCore.SearchColumnStringField[];
  expirationDate?: PlatformCore.SearchColumnDateField[];
  gcActive?: PlatformCore.SearchColumnBooleanField[];
  giftCertCode?: PlatformCore.SearchColumnStringField[];
  incomeAcct?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  item?: PlatformCore.SearchColumnSelectField[];
  liabilityAcct?: PlatformCore.SearchColumnStringField[];
  message?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  originalAmount?: PlatformCore.SearchColumnDoubleField[];
  purchaseDate?: PlatformCore.SearchColumnDateField[];
  sender?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: GiftCertificateSearchRowBasicProps) {
    super();
    this.amountRemaining = props.amountRemaining;
    this.amtAvailBilled = props.amtAvailBilled;
    this.createdDate = props.createdDate;
    this.email = props.email;
    this.expirationDate = props.expirationDate;
    this.gcActive = props.gcActive;
    this.giftCertCode = props.giftCertCode;
    this.incomeAcct = props.incomeAcct;
    this.internalId = props.internalId;
    this.item = props.item;
    this.liabilityAcct = props.liabilityAcct;
    this.message = props.message;
    this.name = props.name;
    this.originalAmount = props.originalAmount;
    this.purchaseDate = props.purchaseDate;
    this.sender = props.sender;
    this.customFieldList = props.customFieldList;
  }
}

export type MessageSearchRowBasicProps = {
  author?: PlatformCore.SearchColumnSelectField[];
  authorEmail?: PlatformCore.SearchColumnStringField[];
  bcc?: PlatformCore.SearchColumnStringField[];
  cc?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  hasAttachment?: PlatformCore.SearchColumnBooleanField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  internalOnly?: PlatformCore.SearchColumnBooleanField[];
  isEmailed?: PlatformCore.SearchColumnBooleanField[];
  isIncoming?: PlatformCore.SearchColumnBooleanField[];
  message?: PlatformCore.SearchColumnStringField[];
  messageDate?: PlatformCore.SearchColumnDateField[];
  messageType?: PlatformCore.SearchColumnEnumSelectField[];
  recipient?: PlatformCore.SearchColumnSelectField[];
  recipientEmail?: PlatformCore.SearchColumnStringField[];
  subject?: PlatformCore.SearchColumnStringField[];
};

export class MessageSearchRowBasic extends PlatformCore.SearchRowBasic {
  author?: PlatformCore.SearchColumnSelectField[];
  authorEmail?: PlatformCore.SearchColumnStringField[];
  bcc?: PlatformCore.SearchColumnStringField[];
  cc?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  hasAttachment?: PlatformCore.SearchColumnBooleanField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  internalOnly?: PlatformCore.SearchColumnBooleanField[];
  isEmailed?: PlatformCore.SearchColumnBooleanField[];
  isIncoming?: PlatformCore.SearchColumnBooleanField[];
  message?: PlatformCore.SearchColumnStringField[];
  messageDate?: PlatformCore.SearchColumnDateField[];
  messageType?: PlatformCore.SearchColumnEnumSelectField[];
  recipient?: PlatformCore.SearchColumnSelectField[];
  recipientEmail?: PlatformCore.SearchColumnStringField[];
  subject?: PlatformCore.SearchColumnStringField[];
  constructor(props: MessageSearchRowBasicProps) {
    super();
    this.author = props.author;
    this.authorEmail = props.authorEmail;
    this.bcc = props.bcc;
    this.cc = props.cc;
    this.externalId = props.externalId;
    this.hasAttachment = props.hasAttachment;
    this.internalId = props.internalId;
    this.internalOnly = props.internalOnly;
    this.isEmailed = props.isEmailed;
    this.isIncoming = props.isIncoming;
    this.message = props.message;
    this.messageDate = props.messageDate;
    this.messageType = props.messageType;
    this.recipient = props.recipient;
    this.recipientEmail = props.recipientEmail;
    this.subject = props.subject;
  }
}

export type JobTypeSearchBasicProps = {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  parent?: PlatformCore.SearchMultiSelectField;
};

export class JobTypeSearchBasic extends PlatformCore.SearchRecordBasic {
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  parent?: PlatformCore.SearchMultiSelectField;
  constructor(props: JobTypeSearchBasicProps) {
    super();
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.parent = props.parent;
  }
}

export type ContactRoleSearchRowBasicProps = {
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
};

export class ContactRoleSearchRowBasic extends PlatformCore.SearchRowBasic {
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  constructor(props: ContactRoleSearchRowBasicProps) {
    super();
    this.description = props.description;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type ItemDemandPlanSearchRowBasicProps = {
  alternateSourceItem?: PlatformCore.SearchColumnSelectField[];
  analysisDuration?: PlatformCore.SearchColumnLongField[];
  demandDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  item?: PlatformCore.SearchColumnSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  location?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  projectionDuration?: PlatformCore.SearchColumnLongField[];
  projectionInterval?: PlatformCore.SearchColumnStringField[];
  projectionMethod?: PlatformCore.SearchColumnStringField[];
  projectionStartDate?: PlatformCore.SearchColumnDateField[];
  quantity?: PlatformCore.SearchColumnDoubleField[];
  quantityUom?: PlatformCore.SearchColumnDoubleField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  units?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class ItemDemandPlanSearchRowBasic extends PlatformCore.SearchRowBasic {
  alternateSourceItem?: PlatformCore.SearchColumnSelectField[];
  analysisDuration?: PlatformCore.SearchColumnLongField[];
  demandDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  item?: PlatformCore.SearchColumnSelectField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  location?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  projectionDuration?: PlatformCore.SearchColumnLongField[];
  projectionInterval?: PlatformCore.SearchColumnStringField[];
  projectionMethod?: PlatformCore.SearchColumnStringField[];
  projectionStartDate?: PlatformCore.SearchColumnDateField[];
  quantity?: PlatformCore.SearchColumnDoubleField[];
  quantityUom?: PlatformCore.SearchColumnDoubleField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  units?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: ItemDemandPlanSearchRowBasicProps) {
    super();
    this.alternateSourceItem = props.alternateSourceItem;
    this.analysisDuration = props.analysisDuration;
    this.demandDate = props.demandDate;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.item = props.item;
    this.lastModifiedDate = props.lastModifiedDate;
    this.location = props.location;
    this.memo = props.memo;
    this.projectionDuration = props.projectionDuration;
    this.projectionInterval = props.projectionInterval;
    this.projectionMethod = props.projectionMethod;
    this.projectionStartDate = props.projectionStartDate;
    this.quantity = props.quantity;
    this.quantityUom = props.quantityUom;
    this.subsidiary = props.subsidiary;
    this.units = props.units;
    this.customFieldList = props.customFieldList;
  }
}

export type CurrencyRateSearchRowBasicProps = {
  baseCurrency?: PlatformCore.SearchColumnSelectField[];
  effectiveDate?: PlatformCore.SearchColumnDateField[];
  exchangeRate?: PlatformCore.SearchColumnDoubleField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  transactionCurrency?: PlatformCore.SearchColumnSelectField[];
};

export class CurrencyRateSearchRowBasic extends PlatformCore.SearchRowBasic {
  baseCurrency?: PlatformCore.SearchColumnSelectField[];
  effectiveDate?: PlatformCore.SearchColumnDateField[];
  exchangeRate?: PlatformCore.SearchColumnDoubleField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  transactionCurrency?: PlatformCore.SearchColumnSelectField[];
  constructor(props: CurrencyRateSearchRowBasicProps) {
    super();
    this.baseCurrency = props.baseCurrency;
    this.effectiveDate = props.effectiveDate;
    this.exchangeRate = props.exchangeRate;
    this.internalId = props.internalId;
    this.transactionCurrency = props.transactionCurrency;
  }
}

export type ContactRoleSearchBasicProps = {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
};

export class ContactRoleSearchBasic extends PlatformCore.SearchRecordBasic {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  constructor(props: ContactRoleSearchBasicProps) {
    super();
    this.description = props.description;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type MseSubsidiarySearchRowBasicProps = {
  accountingBook?: PlatformCore.SearchColumnSelectField[];
  accountingBookCurrency?: PlatformCore.SearchColumnSelectField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  anonymousCustomerInboundEmail?: PlatformCore.SearchColumnStringField[];
  anonymousCustomerOnlineForms?: PlatformCore.SearchColumnStringField[];
  caseAssignmentTemplate?: PlatformCore.SearchColumnStringField[];
  caseAutomaticClosureTemplate?: PlatformCore.SearchColumnStringField[];
  caseCopyEmployeeTemplate?: PlatformCore.SearchColumnStringField[];
  caseCreationTemplate?: PlatformCore.SearchColumnStringField[];
  caseEscalationTemplate?: PlatformCore.SearchColumnStringField[];
  caseUpdateTemplate?: PlatformCore.SearchColumnStringField[];
  city?: PlatformCore.SearchColumnStringField[];
  companyNameForSupportMessages?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  effectiveFrom?: PlatformCore.SearchColumnDateField[];
  email?: PlatformCore.SearchColumnStringField[];
  employeeCaseUpdateTemplate?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isElimination?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  legalName?: PlatformCore.SearchColumnStringField[];
  mainSupportEmailAddress?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  nameNoHierarchy?: PlatformCore.SearchColumnStringField[];
  nexus?: PlatformCore.SearchColumnSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  primary?: PlatformCore.SearchColumnBooleanField[];
  purchaseOrderAmount?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrderQuantity?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrderQuantityDiff?: PlatformCore.SearchColumnDoubleField[];
  receiptAmount?: PlatformCore.SearchColumnDoubleField[];
  receiptQuantity?: PlatformCore.SearchColumnDoubleField[];
  receiptQuantityDiff?: PlatformCore.SearchColumnDoubleField[];
  state?: PlatformCore.SearchColumnStringField[];
  taxEngine?: PlatformCore.SearchColumnSelectField[];
  taxIdNum?: PlatformCore.SearchColumnStringField[];
  taxRegistrationNumber?: PlatformCore.SearchColumnStringField[];
  tranPrefix?: PlatformCore.SearchColumnStringField[];
  url?: PlatformCore.SearchColumnStringField[];
  validUntil?: PlatformCore.SearchColumnDateField[];
  zip?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class MseSubsidiarySearchRowBasic extends PlatformCore.SearchRowBasic {
  accountingBook?: PlatformCore.SearchColumnSelectField[];
  accountingBookCurrency?: PlatformCore.SearchColumnSelectField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  anonymousCustomerInboundEmail?: PlatformCore.SearchColumnStringField[];
  anonymousCustomerOnlineForms?: PlatformCore.SearchColumnStringField[];
  caseAssignmentTemplate?: PlatformCore.SearchColumnStringField[];
  caseAutomaticClosureTemplate?: PlatformCore.SearchColumnStringField[];
  caseCopyEmployeeTemplate?: PlatformCore.SearchColumnStringField[];
  caseCreationTemplate?: PlatformCore.SearchColumnStringField[];
  caseEscalationTemplate?: PlatformCore.SearchColumnStringField[];
  caseUpdateTemplate?: PlatformCore.SearchColumnStringField[];
  city?: PlatformCore.SearchColumnStringField[];
  companyNameForSupportMessages?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  effectiveFrom?: PlatformCore.SearchColumnDateField[];
  email?: PlatformCore.SearchColumnStringField[];
  employeeCaseUpdateTemplate?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isElimination?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  legalName?: PlatformCore.SearchColumnStringField[];
  mainSupportEmailAddress?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  nameNoHierarchy?: PlatformCore.SearchColumnStringField[];
  nexus?: PlatformCore.SearchColumnSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  primary?: PlatformCore.SearchColumnBooleanField[];
  purchaseOrderAmount?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrderQuantity?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrderQuantityDiff?: PlatformCore.SearchColumnDoubleField[];
  receiptAmount?: PlatformCore.SearchColumnDoubleField[];
  receiptQuantity?: PlatformCore.SearchColumnDoubleField[];
  receiptQuantityDiff?: PlatformCore.SearchColumnDoubleField[];
  state?: PlatformCore.SearchColumnStringField[];
  taxEngine?: PlatformCore.SearchColumnSelectField[];
  taxIdNum?: PlatformCore.SearchColumnStringField[];
  taxRegistrationNumber?: PlatformCore.SearchColumnStringField[];
  tranPrefix?: PlatformCore.SearchColumnStringField[];
  url?: PlatformCore.SearchColumnStringField[];
  validUntil?: PlatformCore.SearchColumnDateField[];
  zip?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: MseSubsidiarySearchRowBasicProps) {
    super();
    this.accountingBook = props.accountingBook;
    this.accountingBookCurrency = props.accountingBookCurrency;
    this.address1 = props.address1;
    this.address2 = props.address2;
    this.address3 = props.address3;
    this.anonymousCustomerInboundEmail = props.anonymousCustomerInboundEmail;
    this.anonymousCustomerOnlineForms = props.anonymousCustomerOnlineForms;
    this.caseAssignmentTemplate = props.caseAssignmentTemplate;
    this.caseAutomaticClosureTemplate = props.caseAutomaticClosureTemplate;
    this.caseCopyEmployeeTemplate = props.caseCopyEmployeeTemplate;
    this.caseCreationTemplate = props.caseCreationTemplate;
    this.caseEscalationTemplate = props.caseEscalationTemplate;
    this.caseUpdateTemplate = props.caseUpdateTemplate;
    this.city = props.city;
    this.companyNameForSupportMessages = props.companyNameForSupportMessages;
    this.country = props.country;
    this.currency = props.currency;
    this.effectiveFrom = props.effectiveFrom;
    this.email = props.email;
    this.employeeCaseUpdateTemplate = props.employeeCaseUpdateTemplate;
    this.externalId = props.externalId;
    this.fax = props.fax;
    this.internalId = props.internalId;
    this.isElimination = props.isElimination;
    this.isInactive = props.isInactive;
    this.legalName = props.legalName;
    this.mainSupportEmailAddress = props.mainSupportEmailAddress;
    this.name = props.name;
    this.nameNoHierarchy = props.nameNoHierarchy;
    this.nexus = props.nexus;
    this.phone = props.phone;
    this.primary = props.primary;
    this.purchaseOrderAmount = props.purchaseOrderAmount;
    this.purchaseOrderQuantity = props.purchaseOrderQuantity;
    this.purchaseOrderQuantityDiff = props.purchaseOrderQuantityDiff;
    this.receiptAmount = props.receiptAmount;
    this.receiptQuantity = props.receiptQuantity;
    this.receiptQuantityDiff = props.receiptQuantityDiff;
    this.state = props.state;
    this.taxEngine = props.taxEngine;
    this.taxIdNum = props.taxIdNum;
    this.taxRegistrationNumber = props.taxRegistrationNumber;
    this.tranPrefix = props.tranPrefix;
    this.url = props.url;
    this.validUntil = props.validUntil;
    this.zip = props.zip;
    this.customFieldList = props.customFieldList;
  }
}

export type PaycheckSearchBasicProps = {
  account?: PlatformCore.SearchMultiSelectField;
  batchNumber?: PlatformCore.SearchLongField;
  checkDate?: PlatformCore.SearchDateField;
  employee?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  hasGLImpact?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  payrollItem?: PlatformCore.SearchMultiSelectField;
  payrollItemType?: PlatformCore.SearchMultiSelectField;
};

export class PaycheckSearchBasic extends PlatformCore.SearchRecordBasic {
  account?: PlatformCore.SearchMultiSelectField;
  batchNumber?: PlatformCore.SearchLongField;
  checkDate?: PlatformCore.SearchDateField;
  employee?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  hasGLImpact?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  payrollItem?: PlatformCore.SearchMultiSelectField;
  payrollItemType?: PlatformCore.SearchMultiSelectField;
  constructor(props: PaycheckSearchBasicProps) {
    super();
    this.account = props.account;
    this.batchNumber = props.batchNumber;
    this.checkDate = props.checkDate;
    this.employee = props.employee;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.hasGLImpact = props.hasGLImpact;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.payrollItem = props.payrollItem;
    this.payrollItemType = props.payrollItemType;
  }
}

export type PromotionCodeSearchBasicProps = {
  applyDiscountTo?: PlatformCore.SearchEnumMultiSelectField;
  code?: PlatformCore.SearchStringField;
  description?: PlatformCore.SearchStringField;
  discount?: PlatformCore.SearchMultiSelectField;
  endDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  freeShipItem?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  isPublic?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  location?: PlatformCore.SearchMultiSelectField;
  name?: PlatformCore.SearchStringField;
  partner?: PlatformCore.SearchMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class PromotionCodeSearchBasic extends PlatformCore.SearchRecordBasic {
  applyDiscountTo?: PlatformCore.SearchEnumMultiSelectField;
  code?: PlatformCore.SearchStringField;
  description?: PlatformCore.SearchStringField;
  discount?: PlatformCore.SearchMultiSelectField;
  endDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  freeShipItem?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  isPublic?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  location?: PlatformCore.SearchMultiSelectField;
  name?: PlatformCore.SearchStringField;
  partner?: PlatformCore.SearchMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: PromotionCodeSearchBasicProps) {
    super();
    this.applyDiscountTo = props.applyDiscountTo;
    this.code = props.code;
    this.description = props.description;
    this.discount = props.discount;
    this.endDate = props.endDate;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.freeShipItem = props.freeShipItem;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.isPublic = props.isPublic;
    this.item = props.item;
    this.location = props.location;
    this.name = props.name;
    this.partner = props.partner;
    this.startDate = props.startDate;
    this.customFieldList = props.customFieldList;
  }
}

export type InstallmentSearchBasicProps = {
  amount?: PlatformCore.SearchDoubleField;
  amountPaid?: PlatformCore.SearchDoubleField;
  amountRemaining?: PlatformCore.SearchDoubleField;
  daysOverdue?: PlatformCore.SearchLongField;
  dueDate?: PlatformCore.SearchDateField;
  fxAmount?: PlatformCore.SearchDoubleField;
  fxAmountPaid?: PlatformCore.SearchDoubleField;
  fxAmountRemaining?: PlatformCore.SearchDoubleField;
  installmentNumber?: PlatformCore.SearchLongField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class InstallmentSearchBasic extends PlatformCore.SearchRecordBasic {
  amount?: PlatformCore.SearchDoubleField;
  amountPaid?: PlatformCore.SearchDoubleField;
  amountRemaining?: PlatformCore.SearchDoubleField;
  daysOverdue?: PlatformCore.SearchLongField;
  dueDate?: PlatformCore.SearchDateField;
  fxAmount?: PlatformCore.SearchDoubleField;
  fxAmountPaid?: PlatformCore.SearchDoubleField;
  fxAmountRemaining?: PlatformCore.SearchDoubleField;
  installmentNumber?: PlatformCore.SearchLongField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: InstallmentSearchBasicProps) {
    super();
    this.amount = props.amount;
    this.amountPaid = props.amountPaid;
    this.amountRemaining = props.amountRemaining;
    this.daysOverdue = props.daysOverdue;
    this.dueDate = props.dueDate;
    this.fxAmount = props.fxAmount;
    this.fxAmountPaid = props.fxAmountPaid;
    this.fxAmountRemaining = props.fxAmountRemaining;
    this.installmentNumber = props.installmentNumber;
    this.customFieldList = props.customFieldList;
  }
}

export type ManufacturingOperationTaskSearchBasicProps = {
  actualRunTime?: PlatformCore.SearchDoubleField;
  actualSetupTime?: PlatformCore.SearchDoubleField;
  completedQuantity?: PlatformCore.SearchDoubleField;
  endDate?: PlatformCore.SearchDateField;
  estimatedWork?: PlatformCore.SearchDoubleField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  id?: PlatformCore.SearchLongField;
  inputQuantity?: PlatformCore.SearchDoubleField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  laborResources?: PlatformCore.SearchDoubleField;
  lagAmount?: PlatformCore.SearchDoubleField;
  lagType?: PlatformCore.SearchEnumMultiSelectField;
  lagUnits?: PlatformCore.SearchStringField;
  machineResources?: PlatformCore.SearchDoubleField;
  manufacturingCostTemplate?: PlatformCore.SearchMultiSelectField;
  manufacturingWorkCenter?: PlatformCore.SearchMultiSelectField;
  name?: PlatformCore.SearchStringField;
  order?: PlatformCore.SearchDoubleField;
  predecessor?: PlatformCore.SearchMultiSelectField;
  remainingQuantity?: PlatformCore.SearchDoubleField;
  runRate?: PlatformCore.SearchDoubleField;
  runTime?: PlatformCore.SearchDoubleField;
  sequence?: PlatformCore.SearchLongField;
  setupTime?: PlatformCore.SearchDoubleField;
  startDate?: PlatformCore.SearchDateField;
  status?: PlatformCore.SearchMultiSelectField;
  workOrder?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class ManufacturingOperationTaskSearchBasic extends PlatformCore.SearchRecordBasic {
  actualRunTime?: PlatformCore.SearchDoubleField;
  actualSetupTime?: PlatformCore.SearchDoubleField;
  completedQuantity?: PlatformCore.SearchDoubleField;
  endDate?: PlatformCore.SearchDateField;
  estimatedWork?: PlatformCore.SearchDoubleField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  id?: PlatformCore.SearchLongField;
  inputQuantity?: PlatformCore.SearchDoubleField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  laborResources?: PlatformCore.SearchDoubleField;
  lagAmount?: PlatformCore.SearchDoubleField;
  lagType?: PlatformCore.SearchEnumMultiSelectField;
  lagUnits?: PlatformCore.SearchStringField;
  machineResources?: PlatformCore.SearchDoubleField;
  manufacturingCostTemplate?: PlatformCore.SearchMultiSelectField;
  manufacturingWorkCenter?: PlatformCore.SearchMultiSelectField;
  name?: PlatformCore.SearchStringField;
  order?: PlatformCore.SearchDoubleField;
  predecessor?: PlatformCore.SearchMultiSelectField;
  remainingQuantity?: PlatformCore.SearchDoubleField;
  runRate?: PlatformCore.SearchDoubleField;
  runTime?: PlatformCore.SearchDoubleField;
  sequence?: PlatformCore.SearchLongField;
  setupTime?: PlatformCore.SearchDoubleField;
  startDate?: PlatformCore.SearchDateField;
  status?: PlatformCore.SearchMultiSelectField;
  workOrder?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: ManufacturingOperationTaskSearchBasicProps) {
    super();
    this.actualRunTime = props.actualRunTime;
    this.actualSetupTime = props.actualSetupTime;
    this.completedQuantity = props.completedQuantity;
    this.endDate = props.endDate;
    this.estimatedWork = props.estimatedWork;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.id = props.id;
    this.inputQuantity = props.inputQuantity;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.laborResources = props.laborResources;
    this.lagAmount = props.lagAmount;
    this.lagType = props.lagType;
    this.lagUnits = props.lagUnits;
    this.machineResources = props.machineResources;
    this.manufacturingCostTemplate = props.manufacturingCostTemplate;
    this.manufacturingWorkCenter = props.manufacturingWorkCenter;
    this.name = props.name;
    this.order = props.order;
    this.predecessor = props.predecessor;
    this.remainingQuantity = props.remainingQuantity;
    this.runRate = props.runRate;
    this.runTime = props.runTime;
    this.sequence = props.sequence;
    this.setupTime = props.setupTime;
    this.startDate = props.startDate;
    this.status = props.status;
    this.workOrder = props.workOrder;
    this.customFieldList = props.customFieldList;
  }
}

export type BomRevisionComponentSearchRowBasicProps = {
  bomQuantity?: PlatformCore.SearchColumnDoubleField[];
  bomRevision?: PlatformCore.SearchColumnSelectField[];
  componentYield?: PlatformCore.SearchColumnDoubleField[];
  description?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  item?: PlatformCore.SearchColumnSelectField[];
  itemSource?: PlatformCore.SearchColumnEnumSelectField[];
  itemSubtype?: PlatformCore.SearchColumnStringField[];
  itemType?: PlatformCore.SearchColumnSelectField[];
  lineId?: PlatformCore.SearchColumnLongField[];
  quantity?: PlatformCore.SearchColumnDoubleField[];
  units?: PlatformCore.SearchColumnStringField[];
  weight?: PlatformCore.SearchColumnDoubleField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class BomRevisionComponentSearchRowBasic extends PlatformCore.SearchRowBasic {
  bomQuantity?: PlatformCore.SearchColumnDoubleField[];
  bomRevision?: PlatformCore.SearchColumnSelectField[];
  componentYield?: PlatformCore.SearchColumnDoubleField[];
  description?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  item?: PlatformCore.SearchColumnSelectField[];
  itemSource?: PlatformCore.SearchColumnEnumSelectField[];
  itemSubtype?: PlatformCore.SearchColumnStringField[];
  itemType?: PlatformCore.SearchColumnSelectField[];
  lineId?: PlatformCore.SearchColumnLongField[];
  quantity?: PlatformCore.SearchColumnDoubleField[];
  units?: PlatformCore.SearchColumnStringField[];
  weight?: PlatformCore.SearchColumnDoubleField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: BomRevisionComponentSearchRowBasicProps) {
    super();
    this.bomQuantity = props.bomQuantity;
    this.bomRevision = props.bomRevision;
    this.componentYield = props.componentYield;
    this.description = props.description;
    this.internalId = props.internalId;
    this.item = props.item;
    this.itemSource = props.itemSource;
    this.itemSubtype = props.itemSubtype;
    this.itemType = props.itemType;
    this.lineId = props.lineId;
    this.quantity = props.quantity;
    this.units = props.units;
    this.weight = props.weight;
    this.customFieldList = props.customFieldList;
  }
}

export type TaxDetailsListProps = {
  taxDetails?: TaxDetails[];
  replaceAll?: boolean;
};

export class TaxDetailsList {
  taxDetails?: TaxDetails[];
  replaceAll?: boolean;
  constructor(props: TaxDetailsListProps) {
    this.taxDetails = props.taxDetails;
    this.replaceAll = props.replaceAll;
  }
}

export type SiteCategorySearchBasicProps = {
  dateViewed?: PlatformCore.SearchDateField;
  description?: PlatformCore.SearchStringField;
  excludeFromSitemap?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  name?: PlatformCore.SearchMultiSelectField;
  sitemapPriority?: PlatformCore.SearchEnumMultiSelectField;
};

export class SiteCategorySearchBasic extends PlatformCore.SearchRecordBasic {
  dateViewed?: PlatformCore.SearchDateField;
  description?: PlatformCore.SearchStringField;
  excludeFromSitemap?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  name?: PlatformCore.SearchMultiSelectField;
  sitemapPriority?: PlatformCore.SearchEnumMultiSelectField;
  constructor(props: SiteCategorySearchBasicProps) {
    super();
    this.dateViewed = props.dateViewed;
    this.description = props.description;
    this.excludeFromSitemap = props.excludeFromSitemap;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.name = props.name;
    this.sitemapPriority = props.sitemapPriority;
  }
}

export type NexusSearchRowBasicProps = {
  country?: PlatformCore.SearchColumnEnumSelectField[];
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  parentNexus?: PlatformCore.SearchColumnSelectField[];
  state?: PlatformCore.SearchColumnSelectField[];
  taxAgency?: PlatformCore.SearchColumnSelectField[];
  taxDateFromFulfillment?: PlatformCore.SearchColumnBooleanField[];
};

export class NexusSearchRowBasic extends PlatformCore.SearchRowBasic {
  country?: PlatformCore.SearchColumnEnumSelectField[];
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  parentNexus?: PlatformCore.SearchColumnSelectField[];
  state?: PlatformCore.SearchColumnSelectField[];
  taxAgency?: PlatformCore.SearchColumnSelectField[];
  taxDateFromFulfillment?: PlatformCore.SearchColumnBooleanField[];
  constructor(props: NexusSearchRowBasicProps) {
    super();
    this.country = props.country;
    this.description = props.description;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.parentNexus = props.parentNexus;
    this.state = props.state;
    this.taxAgency = props.taxAgency;
    this.taxDateFromFulfillment = props.taxDateFromFulfillment;
  }
}

export type ContactCategorySearchRowBasicProps = {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  _private?: PlatformCore.SearchColumnBooleanField[];
  sync?: PlatformCore.SearchColumnBooleanField[];
};

export class ContactCategorySearchRowBasic extends PlatformCore.SearchRowBasic {
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  _private?: PlatformCore.SearchColumnBooleanField[];
  sync?: PlatformCore.SearchColumnBooleanField[];
  constructor(props: ContactCategorySearchRowBasicProps) {
    super();
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this._private = props._private;
    this.sync = props.sync;
  }
}

export type CustomListSearchRowBasicProps = {
  description?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isOrdered?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  scriptId?: PlatformCore.SearchColumnStringField[];
};

export class CustomListSearchRowBasic extends PlatformCore.SearchRowBasic {
  description?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isOrdered?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  scriptId?: PlatformCore.SearchColumnStringField[];
  constructor(props: CustomListSearchRowBasicProps) {
    super();
    this.description = props.description;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.isOrdered = props.isOrdered;
    this.name = props.name;
    this.owner = props.owner;
    this.scriptId = props.scriptId;
  }
}

export type ItemRevisionSearchBasicProps = {
  effectiveDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  item?: PlatformCore.SearchMultiSelectField;
  name?: PlatformCore.SearchStringField;
  obsoleteDate?: PlatformCore.SearchDateField;
};

export class ItemRevisionSearchBasic extends PlatformCore.SearchRecordBasic {
  effectiveDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  item?: PlatformCore.SearchMultiSelectField;
  name?: PlatformCore.SearchStringField;
  obsoleteDate?: PlatformCore.SearchDateField;
  constructor(props: ItemRevisionSearchBasicProps) {
    super();
    this.effectiveDate = props.effectiveDate;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.item = props.item;
    this.name = props.name;
    this.obsoleteDate = props.obsoleteDate;
  }
}

export type FileSearchRowBasicProps = {
  availableWithoutLogin?: PlatformCore.SearchColumnBooleanField[];
  created?: PlatformCore.SearchColumnDateField[];
  dateViewed?: PlatformCore.SearchColumnDateField[];
  description?: PlatformCore.SearchColumnStringField[];
  documentSize?: PlatformCore.SearchColumnLongField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fileType?: PlatformCore.SearchColumnEnumSelectField[];
  folder?: PlatformCore.SearchColumnSelectField[];
  hits?: PlatformCore.SearchColumnLongField[];
  hostedPath?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isAvailable?: PlatformCore.SearchColumnBooleanField[];
  modified?: PlatformCore.SearchColumnDateField[];
  name?: PlatformCore.SearchColumnStringField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  url?: PlatformCore.SearchColumnStringField[];
};

export class FileSearchRowBasic extends PlatformCore.SearchRowBasic {
  availableWithoutLogin?: PlatformCore.SearchColumnBooleanField[];
  created?: PlatformCore.SearchColumnDateField[];
  dateViewed?: PlatformCore.SearchColumnDateField[];
  description?: PlatformCore.SearchColumnStringField[];
  documentSize?: PlatformCore.SearchColumnLongField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fileType?: PlatformCore.SearchColumnEnumSelectField[];
  folder?: PlatformCore.SearchColumnSelectField[];
  hits?: PlatformCore.SearchColumnLongField[];
  hostedPath?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isAvailable?: PlatformCore.SearchColumnBooleanField[];
  modified?: PlatformCore.SearchColumnDateField[];
  name?: PlatformCore.SearchColumnStringField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  url?: PlatformCore.SearchColumnStringField[];
  constructor(props: FileSearchRowBasicProps) {
    super();
    this.availableWithoutLogin = props.availableWithoutLogin;
    this.created = props.created;
    this.dateViewed = props.dateViewed;
    this.description = props.description;
    this.documentSize = props.documentSize;
    this.externalId = props.externalId;
    this.fileType = props.fileType;
    this.folder = props.folder;
    this.hits = props.hits;
    this.hostedPath = props.hostedPath;
    this.internalId = props.internalId;
    this.isAvailable = props.isAvailable;
    this.modified = props.modified;
    this.name = props.name;
    this.owner = props.owner;
    this.url = props.url;
  }
}

export type LocationSearchBasicProps = {
  address?: PlatformCore.SearchStringField;
  allowStorePickup?: PlatformCore.SearchBooleanField;
  autoAssignmentRegionSetting?: PlatformCore.SearchEnumMultiSelectField;
  bufferStock?: PlatformCore.SearchLongField;
  city?: PlatformCore.SearchStringField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  dailyShippingCapacity?: PlatformCore.SearchLongField;
  endTime?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  geolocationMethod?: PlatformCore.SearchEnumMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isFriday?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isIncludeInCt?: PlatformCore.SearchBooleanField;
  isMonday?: PlatformCore.SearchBooleanField;
  isOffice?: PlatformCore.SearchBooleanField;
  isSaturday?: PlatformCore.SearchBooleanField;
  isSunday?: PlatformCore.SearchBooleanField;
  isThursday?: PlatformCore.SearchBooleanField;
  isTuesday?: PlatformCore.SearchBooleanField;
  isWednesday?: PlatformCore.SearchBooleanField;
  latitude?: PlatformCore.SearchDoubleField;
  locationType?: PlatformCore.SearchEnumMultiSelectField;
  longitude?: PlatformCore.SearchDoubleField;
  makeInventoryAvailable?: PlatformCore.SearchBooleanField;
  makeInventoryAvailableStore?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  nameNoHierarchy?: PlatformCore.SearchStringField;
  nextPickupCutOffTime?: PlatformCore.SearchDateField;
  phone?: PlatformCore.SearchStringField;
  sameDayPickupCutOffTime?: PlatformCore.SearchDateField;
  startTime?: PlatformCore.SearchDateField;
  state?: PlatformCore.SearchStringField;
  storePickupBufferStock?: PlatformCore.SearchDoubleField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  timeZone?: PlatformCore.SearchEnumMultiSelectField;
  totalShippingCapacity?: PlatformCore.SearchLongField;
  tranprefix?: PlatformCore.SearchStringField;
  usesBins?: PlatformCore.SearchBooleanField;
  zip?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class LocationSearchBasic extends PlatformCore.SearchRecordBasic {
  address?: PlatformCore.SearchStringField;
  allowStorePickup?: PlatformCore.SearchBooleanField;
  autoAssignmentRegionSetting?: PlatformCore.SearchEnumMultiSelectField;
  bufferStock?: PlatformCore.SearchLongField;
  city?: PlatformCore.SearchStringField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  dailyShippingCapacity?: PlatformCore.SearchLongField;
  endTime?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  geolocationMethod?: PlatformCore.SearchEnumMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isFriday?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isIncludeInCt?: PlatformCore.SearchBooleanField;
  isMonday?: PlatformCore.SearchBooleanField;
  isOffice?: PlatformCore.SearchBooleanField;
  isSaturday?: PlatformCore.SearchBooleanField;
  isSunday?: PlatformCore.SearchBooleanField;
  isThursday?: PlatformCore.SearchBooleanField;
  isTuesday?: PlatformCore.SearchBooleanField;
  isWednesday?: PlatformCore.SearchBooleanField;
  latitude?: PlatformCore.SearchDoubleField;
  locationType?: PlatformCore.SearchEnumMultiSelectField;
  longitude?: PlatformCore.SearchDoubleField;
  makeInventoryAvailable?: PlatformCore.SearchBooleanField;
  makeInventoryAvailableStore?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  nameNoHierarchy?: PlatformCore.SearchStringField;
  nextPickupCutOffTime?: PlatformCore.SearchDateField;
  phone?: PlatformCore.SearchStringField;
  sameDayPickupCutOffTime?: PlatformCore.SearchDateField;
  startTime?: PlatformCore.SearchDateField;
  state?: PlatformCore.SearchStringField;
  storePickupBufferStock?: PlatformCore.SearchDoubleField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  timeZone?: PlatformCore.SearchEnumMultiSelectField;
  totalShippingCapacity?: PlatformCore.SearchLongField;
  tranprefix?: PlatformCore.SearchStringField;
  usesBins?: PlatformCore.SearchBooleanField;
  zip?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: LocationSearchBasicProps) {
    super();
    this.address = props.address;
    this.allowStorePickup = props.allowStorePickup;
    this.autoAssignmentRegionSetting = props.autoAssignmentRegionSetting;
    this.bufferStock = props.bufferStock;
    this.city = props.city;
    this.country = props.country;
    this.county = props.county;
    this.dailyShippingCapacity = props.dailyShippingCapacity;
    this.endTime = props.endTime;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.geolocationMethod = props.geolocationMethod;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isFriday = props.isFriday;
    this.isInactive = props.isInactive;
    this.isIncludeInCt = props.isIncludeInCt;
    this.isMonday = props.isMonday;
    this.isOffice = props.isOffice;
    this.isSaturday = props.isSaturday;
    this.isSunday = props.isSunday;
    this.isThursday = props.isThursday;
    this.isTuesday = props.isTuesday;
    this.isWednesday = props.isWednesday;
    this.latitude = props.latitude;
    this.locationType = props.locationType;
    this.longitude = props.longitude;
    this.makeInventoryAvailable = props.makeInventoryAvailable;
    this.makeInventoryAvailableStore = props.makeInventoryAvailableStore;
    this.name = props.name;
    this.nameNoHierarchy = props.nameNoHierarchy;
    this.nextPickupCutOffTime = props.nextPickupCutOffTime;
    this.phone = props.phone;
    this.sameDayPickupCutOffTime = props.sameDayPickupCutOffTime;
    this.startTime = props.startTime;
    this.state = props.state;
    this.storePickupBufferStock = props.storePickupBufferStock;
    this.subsidiary = props.subsidiary;
    this.timeZone = props.timeZone;
    this.totalShippingCapacity = props.totalShippingCapacity;
    this.tranprefix = props.tranprefix;
    this.usesBins = props.usesBins;
    this.zip = props.zip;
    this.customFieldList = props.customFieldList;
  }
}

export type CalendarEventSearchBasicProps = {
  accessLevel?: PlatformCore.SearchEnumMultiSelectField;
  attendee?: PlatformCore.SearchMultiSelectField;
  calendar?: PlatformCore.SearchMultiSelectField;
  completedDate?: PlatformCore.SearchDateField;
  createdDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  instanceStart?: PlatformCore.SearchDateField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isUpcomingEvent?: PlatformCore.SearchBooleanField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  location?: PlatformCore.SearchStringField;
  message?: PlatformCore.SearchStringField;
  organizer?: PlatformCore.SearchMultiSelectField;
  owner?: PlatformCore.SearchMultiSelectField;
  resource?: PlatformCore.SearchMultiSelectField;
  response?: PlatformCore.SearchEnumMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  status?: PlatformCore.SearchEnumMultiSelectField;
  title?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class CalendarEventSearchBasic extends PlatformCore.SearchRecordBasic {
  accessLevel?: PlatformCore.SearchEnumMultiSelectField;
  attendee?: PlatformCore.SearchMultiSelectField;
  calendar?: PlatformCore.SearchMultiSelectField;
  completedDate?: PlatformCore.SearchDateField;
  createdDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  instanceStart?: PlatformCore.SearchDateField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isUpcomingEvent?: PlatformCore.SearchBooleanField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  location?: PlatformCore.SearchStringField;
  message?: PlatformCore.SearchStringField;
  organizer?: PlatformCore.SearchMultiSelectField;
  owner?: PlatformCore.SearchMultiSelectField;
  resource?: PlatformCore.SearchMultiSelectField;
  response?: PlatformCore.SearchEnumMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  status?: PlatformCore.SearchEnumMultiSelectField;
  title?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: CalendarEventSearchBasicProps) {
    super();
    this.accessLevel = props.accessLevel;
    this.attendee = props.attendee;
    this.calendar = props.calendar;
    this.completedDate = props.completedDate;
    this.createdDate = props.createdDate;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.instanceStart = props.instanceStart;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isUpcomingEvent = props.isUpcomingEvent;
    this.lastModifiedDate = props.lastModifiedDate;
    this.location = props.location;
    this.message = props.message;
    this.organizer = props.organizer;
    this.owner = props.owner;
    this.resource = props.resource;
    this.response = props.response;
    this.startDate = props.startDate;
    this.status = props.status;
    this.title = props.title;
    this.customFieldList = props.customFieldList;
  }
}

export type CustomerStatusSearchRowBasicProps = {
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  includeInLeadReports?: PlatformCore.SearchColumnBooleanField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  probability?: PlatformCore.SearchColumnStringField[];
};

export class CustomerStatusSearchRowBasic extends PlatformCore.SearchRowBasic {
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  includeInLeadReports?: PlatformCore.SearchColumnBooleanField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  probability?: PlatformCore.SearchColumnStringField[];
  constructor(props: CustomerStatusSearchRowBasicProps) {
    super();
    this.description = props.description;
    this.externalId = props.externalId;
    this.includeInLeadReports = props.includeInLeadReports;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.probability = props.probability;
  }
}

export type CustomerMessageSearchBasicProps = {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  preferred?: PlatformCore.SearchBooleanField;
};

export class CustomerMessageSearchBasic extends PlatformCore.SearchRecordBasic {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  preferred?: PlatformCore.SearchBooleanField;
  constructor(props: CustomerMessageSearchBasicProps) {
    super();
    this.description = props.description;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.preferred = props.preferred;
  }
}

export type BinSearchBasicProps = {
  binNumber?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  inactive?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  location?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class BinSearchBasic extends PlatformCore.SearchRecordBasic {
  binNumber?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  inactive?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  location?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: BinSearchBasicProps) {
    super();
    this.binNumber = props.binNumber;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.inactive = props.inactive;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.location = props.location;
    this.memo = props.memo;
    this.customFieldList = props.customFieldList;
  }
}

export type ContactSearchBasicProps = {
  address?: PlatformCore.SearchStringField;
  addressee?: PlatformCore.SearchStringField;
  addressLabel?: PlatformCore.SearchStringField;
  addressPhone?: PlatformCore.SearchStringField;
  attention?: PlatformCore.SearchStringField;
  availableOffline?: PlatformCore.SearchBooleanField;
  category?: PlatformCore.SearchMultiSelectField;
  city?: PlatformCore.SearchStringField;
  comments?: PlatformCore.SearchStringField;
  company?: PlatformCore.SearchMultiSelectField;
  contactRole?: PlatformCore.SearchMultiSelectField;
  contactSource?: PlatformCore.SearchMultiSelectField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  dateCreated?: PlatformCore.SearchDateField;
  defaultTaxReg?: PlatformCore.SearchMultiSelectField;
  defaultTaxRegText?: PlatformCore.SearchStringField;
  email?: PlatformCore.SearchStringField;
  employer?: PlatformCore.SearchStringField;
  entityId?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  firstName?: PlatformCore.SearchStringField;
  giveAccess?: PlatformCore.SearchBooleanField;
  globalSubscriptionStatus?: PlatformCore.SearchEnumMultiSelectField;
  group?: PlatformCore.SearchMultiSelectField;
  hasDuplicates?: PlatformCore.SearchBooleanField;
  image?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDefaultBilling?: PlatformCore.SearchBooleanField;
  isDefaultShipping?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isPrivate?: PlatformCore.SearchBooleanField;
  language?: PlatformCore.SearchEnumMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  lastName?: PlatformCore.SearchStringField;
  level?: PlatformCore.SearchEnumMultiSelectField;
  middleName?: PlatformCore.SearchStringField;
  owner?: PlatformCore.SearchMultiSelectField;
  permission?: PlatformCore.SearchEnumMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  phoneticName?: PlatformCore.SearchStringField;
  salutation?: PlatformCore.SearchStringField;
  state?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  type?: PlatformCore.SearchEnumMultiSelectField;
  zipCode?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class ContactSearchBasic extends PlatformCore.SearchRecordBasic {
  address?: PlatformCore.SearchStringField;
  addressee?: PlatformCore.SearchStringField;
  addressLabel?: PlatformCore.SearchStringField;
  addressPhone?: PlatformCore.SearchStringField;
  attention?: PlatformCore.SearchStringField;
  availableOffline?: PlatformCore.SearchBooleanField;
  category?: PlatformCore.SearchMultiSelectField;
  city?: PlatformCore.SearchStringField;
  comments?: PlatformCore.SearchStringField;
  company?: PlatformCore.SearchMultiSelectField;
  contactRole?: PlatformCore.SearchMultiSelectField;
  contactSource?: PlatformCore.SearchMultiSelectField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  county?: PlatformCore.SearchStringField;
  dateCreated?: PlatformCore.SearchDateField;
  defaultTaxReg?: PlatformCore.SearchMultiSelectField;
  defaultTaxRegText?: PlatformCore.SearchStringField;
  email?: PlatformCore.SearchStringField;
  employer?: PlatformCore.SearchStringField;
  entityId?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  firstName?: PlatformCore.SearchStringField;
  giveAccess?: PlatformCore.SearchBooleanField;
  globalSubscriptionStatus?: PlatformCore.SearchEnumMultiSelectField;
  group?: PlatformCore.SearchMultiSelectField;
  hasDuplicates?: PlatformCore.SearchBooleanField;
  image?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDefaultBilling?: PlatformCore.SearchBooleanField;
  isDefaultShipping?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isPrivate?: PlatformCore.SearchBooleanField;
  language?: PlatformCore.SearchEnumMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  lastName?: PlatformCore.SearchStringField;
  level?: PlatformCore.SearchEnumMultiSelectField;
  middleName?: PlatformCore.SearchStringField;
  owner?: PlatformCore.SearchMultiSelectField;
  permission?: PlatformCore.SearchEnumMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  phoneticName?: PlatformCore.SearchStringField;
  salutation?: PlatformCore.SearchStringField;
  state?: PlatformCore.SearchStringField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  type?: PlatformCore.SearchEnumMultiSelectField;
  zipCode?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: ContactSearchBasicProps) {
    super();
    this.address = props.address;
    this.addressee = props.addressee;
    this.addressLabel = props.addressLabel;
    this.addressPhone = props.addressPhone;
    this.attention = props.attention;
    this.availableOffline = props.availableOffline;
    this.category = props.category;
    this.city = props.city;
    this.comments = props.comments;
    this.company = props.company;
    this.contactRole = props.contactRole;
    this.contactSource = props.contactSource;
    this.country = props.country;
    this.county = props.county;
    this.dateCreated = props.dateCreated;
    this.defaultTaxReg = props.defaultTaxReg;
    this.defaultTaxRegText = props.defaultTaxRegText;
    this.email = props.email;
    this.employer = props.employer;
    this.entityId = props.entityId;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.fax = props.fax;
    this.firstName = props.firstName;
    this.giveAccess = props.giveAccess;
    this.globalSubscriptionStatus = props.globalSubscriptionStatus;
    this.group = props.group;
    this.hasDuplicates = props.hasDuplicates;
    this.image = props.image;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isDefaultBilling = props.isDefaultBilling;
    this.isDefaultShipping = props.isDefaultShipping;
    this.isInactive = props.isInactive;
    this.isPrivate = props.isPrivate;
    this.language = props.language;
    this.lastModifiedDate = props.lastModifiedDate;
    this.lastName = props.lastName;
    this.level = props.level;
    this.middleName = props.middleName;
    this.owner = props.owner;
    this.permission = props.permission;
    this.phone = props.phone;
    this.phoneticName = props.phoneticName;
    this.salutation = props.salutation;
    this.state = props.state;
    this.subsidiary = props.subsidiary;
    this.title = props.title;
    this.type = props.type;
    this.zipCode = props.zipCode;
    this.customFieldList = props.customFieldList;
  }
}

export type ItemRevisionSearchRowBasicProps = {
  effectiveDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  item?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  obsoleteDate?: PlatformCore.SearchColumnDateField[];
};

export class ItemRevisionSearchRowBasic extends PlatformCore.SearchRowBasic {
  effectiveDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  item?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  obsoleteDate?: PlatformCore.SearchColumnDateField[];
  constructor(props: ItemRevisionSearchRowBasicProps) {
    super();
    this.effectiveDate = props.effectiveDate;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.item = props.item;
    this.memo = props.memo;
    this.name = props.name;
    this.obsoleteDate = props.obsoleteDate;
  }
}

export type ResourceAllocationSearchRowBasicProps = {
  allocationType?: PlatformCore.SearchColumnSelectField[];
  allocationUnit?: PlatformCore.SearchColumnEnumSelectField[];
  approvalStatus?: PlatformCore.SearchColumnEnumSelectField[];
  project?: PlatformCore.SearchColumnSelectField[];
  customer?: PlatformCore.SearchColumnSelectField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  nextApprover?: PlatformCore.SearchColumnSelectField[];
  notes?: PlatformCore.SearchColumnStringField[];
  numberHours?: PlatformCore.SearchColumnDoubleField[];
  percentOfTime?: PlatformCore.SearchColumnDoubleField[];
  requestedBy?: PlatformCore.SearchColumnSelectField[];
  resource?: PlatformCore.SearchColumnSelectField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class ResourceAllocationSearchRowBasic extends PlatformCore.SearchRowBasic {
  allocationType?: PlatformCore.SearchColumnSelectField[];
  allocationUnit?: PlatformCore.SearchColumnEnumSelectField[];
  approvalStatus?: PlatformCore.SearchColumnEnumSelectField[];
  project?: PlatformCore.SearchColumnSelectField[];
  customer?: PlatformCore.SearchColumnSelectField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  nextApprover?: PlatformCore.SearchColumnSelectField[];
  notes?: PlatformCore.SearchColumnStringField[];
  numberHours?: PlatformCore.SearchColumnDoubleField[];
  percentOfTime?: PlatformCore.SearchColumnDoubleField[];
  requestedBy?: PlatformCore.SearchColumnSelectField[];
  resource?: PlatformCore.SearchColumnSelectField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: ResourceAllocationSearchRowBasicProps) {
    super();
    this.allocationType = props.allocationType;
    this.allocationUnit = props.allocationUnit;
    this.approvalStatus = props.approvalStatus;
    this.project = props.project;
    this.customer = props.customer;
    this.endDate = props.endDate;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.nextApprover = props.nextApprover;
    this.notes = props.notes;
    this.numberHours = props.numberHours;
    this.percentOfTime = props.percentOfTime;
    this.requestedBy = props.requestedBy;
    this.resource = props.resource;
    this.startDate = props.startDate;
    this.customFieldList = props.customFieldList;
  }
}

export type BomRevisionSearchBasicProps = {
  billOfMaterials?: PlatformCore.SearchMultiSelectField;
  createdDate?: PlatformCore.SearchDateField;
  effectiveEndDate?: PlatformCore.SearchDateField;
  effectiveStartDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  memo?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
};

export class BomRevisionSearchBasic extends PlatformCore.SearchRecordBasic {
  billOfMaterials?: PlatformCore.SearchMultiSelectField;
  createdDate?: PlatformCore.SearchDateField;
  effectiveEndDate?: PlatformCore.SearchDateField;
  effectiveStartDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  memo?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
  constructor(props: BomRevisionSearchBasicProps) {
    super();
    this.billOfMaterials = props.billOfMaterials;
    this.createdDate = props.createdDate;
    this.effectiveEndDate = props.effectiveEndDate;
    this.effectiveStartDate = props.effectiveStartDate;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.memo = props.memo;
    this.name = props.name;
  }
}

export type SupportCaseSearchBasicProps = {
  assigned?: PlatformCore.SearchMultiSelectField;
  awaitingReply?: PlatformCore.SearchBooleanField;
  caseNumber?: PlatformCore.SearchStringField;
  category?: PlatformCore.SearchMultiSelectField;
  closedDate?: PlatformCore.SearchDateField;
  company?: PlatformCore.SearchStringField;
  contact?: PlatformCore.SearchStringField;
  createdDate?: PlatformCore.SearchDateField;
  email?: PlatformCore.SearchStringField;
  escalateTo?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  helpDesk?: PlatformCore.SearchBooleanField;
  inboundEmail?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  issue?: PlatformCore.SearchMultiSelectField;
  item?: PlatformCore.SearchMultiSelectField;
  lastMessage?: PlatformCore.SearchBooleanField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  lastReopenedDate?: PlatformCore.SearchDateField;
  locked?: PlatformCore.SearchBooleanField;
  message?: PlatformCore.SearchStringField;
  messageAuthor?: PlatformCore.SearchMultiSelectField;
  messageDate?: PlatformCore.SearchDateField;
  messageType?: PlatformCore.SearchBooleanField;
  module?: PlatformCore.SearchMultiSelectField;
  number?: PlatformCore.SearchLongField;
  origin?: PlatformCore.SearchMultiSelectField;
  priority?: PlatformCore.SearchMultiSelectField;
  product?: PlatformCore.SearchMultiSelectField;
  profile?: PlatformCore.SearchMultiSelectField;
  serialNumber?: PlatformCore.SearchStringField;
  stage?: PlatformCore.SearchEnumMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  status?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class SupportCaseSearchBasic extends PlatformCore.SearchRecordBasic {
  assigned?: PlatformCore.SearchMultiSelectField;
  awaitingReply?: PlatformCore.SearchBooleanField;
  caseNumber?: PlatformCore.SearchStringField;
  category?: PlatformCore.SearchMultiSelectField;
  closedDate?: PlatformCore.SearchDateField;
  company?: PlatformCore.SearchStringField;
  contact?: PlatformCore.SearchStringField;
  createdDate?: PlatformCore.SearchDateField;
  email?: PlatformCore.SearchStringField;
  escalateTo?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  helpDesk?: PlatformCore.SearchBooleanField;
  inboundEmail?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  issue?: PlatformCore.SearchMultiSelectField;
  item?: PlatformCore.SearchMultiSelectField;
  lastMessage?: PlatformCore.SearchBooleanField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  lastReopenedDate?: PlatformCore.SearchDateField;
  locked?: PlatformCore.SearchBooleanField;
  message?: PlatformCore.SearchStringField;
  messageAuthor?: PlatformCore.SearchMultiSelectField;
  messageDate?: PlatformCore.SearchDateField;
  messageType?: PlatformCore.SearchBooleanField;
  module?: PlatformCore.SearchMultiSelectField;
  number?: PlatformCore.SearchLongField;
  origin?: PlatformCore.SearchMultiSelectField;
  priority?: PlatformCore.SearchMultiSelectField;
  product?: PlatformCore.SearchMultiSelectField;
  profile?: PlatformCore.SearchMultiSelectField;
  serialNumber?: PlatformCore.SearchStringField;
  stage?: PlatformCore.SearchEnumMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  status?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  title?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: SupportCaseSearchBasicProps) {
    super();
    this.assigned = props.assigned;
    this.awaitingReply = props.awaitingReply;
    this.caseNumber = props.caseNumber;
    this.category = props.category;
    this.closedDate = props.closedDate;
    this.company = props.company;
    this.contact = props.contact;
    this.createdDate = props.createdDate;
    this.email = props.email;
    this.escalateTo = props.escalateTo;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.helpDesk = props.helpDesk;
    this.inboundEmail = props.inboundEmail;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.issue = props.issue;
    this.item = props.item;
    this.lastMessage = props.lastMessage;
    this.lastModifiedDate = props.lastModifiedDate;
    this.lastReopenedDate = props.lastReopenedDate;
    this.locked = props.locked;
    this.message = props.message;
    this.messageAuthor = props.messageAuthor;
    this.messageDate = props.messageDate;
    this.messageType = props.messageType;
    this.module = props.module;
    this.number = props.number;
    this.origin = props.origin;
    this.priority = props.priority;
    this.product = props.product;
    this.profile = props.profile;
    this.serialNumber = props.serialNumber;
    this.stage = props.stage;
    this.startDate = props.startDate;
    this.status = props.status;
    this.subsidiary = props.subsidiary;
    this.title = props.title;
    this.customFieldList = props.customFieldList;
  }
}

export type PromotionCodeSearchRowBasicProps = {
  code?: PlatformCore.SearchColumnStringField[];
  description?: PlatformCore.SearchColumnStringField[];
  discount?: PlatformCore.SearchColumnStringField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isPublic?: PlatformCore.SearchColumnBooleanField[];
  location?: PlatformCore.SearchColumnSelectField[];
  name?: PlatformCore.SearchColumnStringField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class PromotionCodeSearchRowBasic extends PlatformCore.SearchRowBasic {
  code?: PlatformCore.SearchColumnStringField[];
  description?: PlatformCore.SearchColumnStringField[];
  discount?: PlatformCore.SearchColumnStringField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isPublic?: PlatformCore.SearchColumnBooleanField[];
  location?: PlatformCore.SearchColumnSelectField[];
  name?: PlatformCore.SearchColumnStringField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: PromotionCodeSearchRowBasicProps) {
    super();
    this.code = props.code;
    this.description = props.description;
    this.discount = props.discount;
    this.endDate = props.endDate;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.isPublic = props.isPublic;
    this.location = props.location;
    this.name = props.name;
    this.startDate = props.startDate;
    this.customFieldList = props.customFieldList;
  }
}

export type TaxDetailSearchBasicProps = {
  account?: PlatformCore.SearchMultiSelectField;
  lineNumber?: PlatformCore.SearchLongField;
  taxAmount?: PlatformCore.SearchDoubleField;
  taxBasis?: PlatformCore.SearchDoubleField;
  taxCode?: PlatformCore.SearchMultiSelectField;
  taxRate?: PlatformCore.SearchDoubleField;
  taxType?: PlatformCore.SearchMultiSelectField;
  tranId?: PlatformCore.SearchMultiSelectField;
};

export class TaxDetailSearchBasic extends PlatformCore.SearchRecordBasic {
  account?: PlatformCore.SearchMultiSelectField;
  lineNumber?: PlatformCore.SearchLongField;
  taxAmount?: PlatformCore.SearchDoubleField;
  taxBasis?: PlatformCore.SearchDoubleField;
  taxCode?: PlatformCore.SearchMultiSelectField;
  taxRate?: PlatformCore.SearchDoubleField;
  taxType?: PlatformCore.SearchMultiSelectField;
  tranId?: PlatformCore.SearchMultiSelectField;
  constructor(props: TaxDetailSearchBasicProps) {
    super();
    this.account = props.account;
    this.lineNumber = props.lineNumber;
    this.taxAmount = props.taxAmount;
    this.taxBasis = props.taxBasis;
    this.taxCode = props.taxCode;
    this.taxRate = props.taxRate;
    this.taxType = props.taxType;
    this.tranId = props.tranId;
  }
}

export type CustomListSearchBasicProps = {
  description?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  isOrdered?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  owner?: PlatformCore.SearchMultiSelectField;
  scriptId?: PlatformCore.SearchStringField;
};

export class CustomListSearchBasic extends PlatformCore.SearchRecordBasic {
  description?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  isOrdered?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  owner?: PlatformCore.SearchMultiSelectField;
  scriptId?: PlatformCore.SearchStringField;
  constructor(props: CustomListSearchBasicProps) {
    super();
    this.description = props.description;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.isOrdered = props.isOrdered;
    this.name = props.name;
    this.owner = props.owner;
    this.scriptId = props.scriptId;
  }
}

export type AccountingPeriodSearchBasicProps = {
  allLocked?: PlatformCore.SearchBooleanField;
  allowNonGlChanges?: PlatformCore.SearchBooleanField;
  apLocked?: PlatformCore.SearchBooleanField;
  arLocked?: PlatformCore.SearchBooleanField;
  closed?: PlatformCore.SearchBooleanField;
  closedOnDate?: PlatformCore.SearchDateField;
  endDate?: PlatformCore.SearchDateField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isAdjust?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isQuarter?: PlatformCore.SearchBooleanField;
  isYear?: PlatformCore.SearchBooleanField;
  parent?: PlatformCore.SearchMultiSelectField;
  payrollLocked?: PlatformCore.SearchBooleanField;
  periodName?: PlatformCore.SearchStringField;
  startDate?: PlatformCore.SearchDateField;
};

export class AccountingPeriodSearchBasic extends PlatformCore.SearchRecordBasic {
  allLocked?: PlatformCore.SearchBooleanField;
  allowNonGlChanges?: PlatformCore.SearchBooleanField;
  apLocked?: PlatformCore.SearchBooleanField;
  arLocked?: PlatformCore.SearchBooleanField;
  closed?: PlatformCore.SearchBooleanField;
  closedOnDate?: PlatformCore.SearchDateField;
  endDate?: PlatformCore.SearchDateField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isAdjust?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  isQuarter?: PlatformCore.SearchBooleanField;
  isYear?: PlatformCore.SearchBooleanField;
  parent?: PlatformCore.SearchMultiSelectField;
  payrollLocked?: PlatformCore.SearchBooleanField;
  periodName?: PlatformCore.SearchStringField;
  startDate?: PlatformCore.SearchDateField;
  constructor(props: AccountingPeriodSearchBasicProps) {
    super();
    this.allLocked = props.allLocked;
    this.allowNonGlChanges = props.allowNonGlChanges;
    this.apLocked = props.apLocked;
    this.arLocked = props.arLocked;
    this.closed = props.closed;
    this.closedOnDate = props.closedOnDate;
    this.endDate = props.endDate;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isAdjust = props.isAdjust;
    this.isInactive = props.isInactive;
    this.isQuarter = props.isQuarter;
    this.isYear = props.isYear;
    this.parent = props.parent;
    this.payrollLocked = props.payrollLocked;
    this.periodName = props.periodName;
    this.startDate = props.startDate;
  }
}

export type PaymentMethodSearchBasicProps = {
  account?: PlatformCore.SearchMultiSelectField;
  creditCard?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDebitCard?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
};

export class PaymentMethodSearchBasic extends PlatformCore.SearchRecordBasic {
  account?: PlatformCore.SearchMultiSelectField;
  creditCard?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDebitCard?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  constructor(props: PaymentMethodSearchBasicProps) {
    super();
    this.account = props.account;
    this.creditCard = props.creditCard;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isDebitCard = props.isDebitCard;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type ProjectTaskSearchRowBasicProps = {
  actualWork?: PlatformCore.SearchColumnDoubleField[];
  company?: PlatformCore.SearchColumnSelectField[];
  constraintType?: PlatformCore.SearchColumnEnumSelectField[];
  contact?: PlatformCore.SearchColumnSelectField[];
  cost?: PlatformCore.SearchColumnDoubleField[];
  costBase?: PlatformCore.SearchColumnDoubleField[];
  costBaseBaseline?: PlatformCore.SearchColumnDoubleField[];
  costBaseline?: PlatformCore.SearchColumnDoubleField[];
  costBaseVariance?: PlatformCore.SearchColumnDoubleField[];
  costVariance?: PlatformCore.SearchColumnDoubleField[];
  costVariancePercent?: PlatformCore.SearchColumnDoubleField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  endDateBaseline?: PlatformCore.SearchColumnDateField[];
  endDateVariance?: PlatformCore.SearchColumnDoubleField[];
  estimatedWork?: PlatformCore.SearchColumnDoubleField[];
  estimatedWorkBaseline?: PlatformCore.SearchColumnDoubleField[];
  estimatedWorkVariance?: PlatformCore.SearchColumnDoubleField[];
  estimatedWorkVariancePercent?: PlatformCore.SearchColumnDoubleField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  finishByDate?: PlatformCore.SearchColumnDateField[];
  id?: PlatformCore.SearchColumnLongField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isMilestone?: PlatformCore.SearchColumnBooleanField[];
  isSummaryTask?: PlatformCore.SearchColumnBooleanField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  message?: PlatformCore.SearchColumnStringField[];
  nonBillableTask?: PlatformCore.SearchColumnBooleanField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  parent?: PlatformCore.SearchColumnSelectField[];
  percentWorkComplete?: PlatformCore.SearchColumnDoubleField[];
  predecessor?: PlatformCore.SearchColumnSelectField[];
  predecessorLagDays?: PlatformCore.SearchColumnDoubleField[];
  predecessors?: PlatformCore.SearchColumnStringField[];
  predecessorType?: PlatformCore.SearchColumnStringField[];
  priority?: PlatformCore.SearchColumnEnumSelectField[];
  remainingWork?: PlatformCore.SearchColumnDoubleField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  startDateBaseline?: PlatformCore.SearchColumnDateField[];
  startDateVariance?: PlatformCore.SearchColumnDoubleField[];
  status?: PlatformCore.SearchColumnEnumSelectField[];
  successor?: PlatformCore.SearchColumnSelectField[];
  successorType?: PlatformCore.SearchColumnStringField[];
  title?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class ProjectTaskSearchRowBasic extends PlatformCore.SearchRowBasic {
  actualWork?: PlatformCore.SearchColumnDoubleField[];
  company?: PlatformCore.SearchColumnSelectField[];
  constraintType?: PlatformCore.SearchColumnEnumSelectField[];
  contact?: PlatformCore.SearchColumnSelectField[];
  cost?: PlatformCore.SearchColumnDoubleField[];
  costBase?: PlatformCore.SearchColumnDoubleField[];
  costBaseBaseline?: PlatformCore.SearchColumnDoubleField[];
  costBaseline?: PlatformCore.SearchColumnDoubleField[];
  costBaseVariance?: PlatformCore.SearchColumnDoubleField[];
  costVariance?: PlatformCore.SearchColumnDoubleField[];
  costVariancePercent?: PlatformCore.SearchColumnDoubleField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  endDateBaseline?: PlatformCore.SearchColumnDateField[];
  endDateVariance?: PlatformCore.SearchColumnDoubleField[];
  estimatedWork?: PlatformCore.SearchColumnDoubleField[];
  estimatedWorkBaseline?: PlatformCore.SearchColumnDoubleField[];
  estimatedWorkVariance?: PlatformCore.SearchColumnDoubleField[];
  estimatedWorkVariancePercent?: PlatformCore.SearchColumnDoubleField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  finishByDate?: PlatformCore.SearchColumnDateField[];
  id?: PlatformCore.SearchColumnLongField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isMilestone?: PlatformCore.SearchColumnBooleanField[];
  isSummaryTask?: PlatformCore.SearchColumnBooleanField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  message?: PlatformCore.SearchColumnStringField[];
  nonBillableTask?: PlatformCore.SearchColumnBooleanField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  parent?: PlatformCore.SearchColumnSelectField[];
  percentWorkComplete?: PlatformCore.SearchColumnDoubleField[];
  predecessor?: PlatformCore.SearchColumnSelectField[];
  predecessorLagDays?: PlatformCore.SearchColumnDoubleField[];
  predecessors?: PlatformCore.SearchColumnStringField[];
  predecessorType?: PlatformCore.SearchColumnStringField[];
  priority?: PlatformCore.SearchColumnEnumSelectField[];
  remainingWork?: PlatformCore.SearchColumnDoubleField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  startDateBaseline?: PlatformCore.SearchColumnDateField[];
  startDateVariance?: PlatformCore.SearchColumnDoubleField[];
  status?: PlatformCore.SearchColumnEnumSelectField[];
  successor?: PlatformCore.SearchColumnSelectField[];
  successorType?: PlatformCore.SearchColumnStringField[];
  title?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: ProjectTaskSearchRowBasicProps) {
    super();
    this.actualWork = props.actualWork;
    this.company = props.company;
    this.constraintType = props.constraintType;
    this.contact = props.contact;
    this.cost = props.cost;
    this.costBase = props.costBase;
    this.costBaseBaseline = props.costBaseBaseline;
    this.costBaseline = props.costBaseline;
    this.costBaseVariance = props.costBaseVariance;
    this.costVariance = props.costVariance;
    this.costVariancePercent = props.costVariancePercent;
    this.createdDate = props.createdDate;
    this.endDate = props.endDate;
    this.endDateBaseline = props.endDateBaseline;
    this.endDateVariance = props.endDateVariance;
    this.estimatedWork = props.estimatedWork;
    this.estimatedWorkBaseline = props.estimatedWorkBaseline;
    this.estimatedWorkVariance = props.estimatedWorkVariance;
    this.estimatedWorkVariancePercent = props.estimatedWorkVariancePercent;
    this.externalId = props.externalId;
    this.finishByDate = props.finishByDate;
    this.id = props.id;
    this.internalId = props.internalId;
    this.isMilestone = props.isMilestone;
    this.isSummaryTask = props.isSummaryTask;
    this.lastModifiedDate = props.lastModifiedDate;
    this.message = props.message;
    this.nonBillableTask = props.nonBillableTask;
    this.owner = props.owner;
    this.parent = props.parent;
    this.percentWorkComplete = props.percentWorkComplete;
    this.predecessor = props.predecessor;
    this.predecessorLagDays = props.predecessorLagDays;
    this.predecessors = props.predecessors;
    this.predecessorType = props.predecessorType;
    this.priority = props.priority;
    this.remainingWork = props.remainingWork;
    this.startDate = props.startDate;
    this.startDateBaseline = props.startDateBaseline;
    this.startDateVariance = props.startDateVariance;
    this.status = props.status;
    this.successor = props.successor;
    this.successorType = props.successorType;
    this.title = props.title;
    this.customFieldList = props.customFieldList;
  }
}

export type CustomerMessageSearchRowBasicProps = {
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  preferred?: PlatformCore.SearchColumnStringField[];
};

export class CustomerMessageSearchRowBasic extends PlatformCore.SearchRowBasic {
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  preferred?: PlatformCore.SearchColumnStringField[];
  constructor(props: CustomerMessageSearchRowBasicProps) {
    super();
    this.description = props.description;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.preferred = props.preferred;
  }
}

export type ExpenseCategorySearchBasicProps = {
  account?: PlatformCore.SearchMultiSelectField;
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  rateRequired?: PlatformCore.SearchBooleanField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class ExpenseCategorySearchBasic extends PlatformCore.SearchRecordBasic {
  account?: PlatformCore.SearchMultiSelectField;
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  rateRequired?: PlatformCore.SearchBooleanField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: ExpenseCategorySearchBasicProps) {
    super();
    this.account = props.account;
    this.description = props.description;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.rateRequired = props.rateRequired;
    this.subsidiary = props.subsidiary;
    this.customFieldList = props.customFieldList;
  }
}

export type VendorSubsidiaryRelationshipSearchBasicProps = {
  balance?: PlatformCore.SearchDoubleField;
  balanceBase?: PlatformCore.SearchDoubleField;
  baseCurrency?: PlatformCore.SearchMultiSelectField;
  creditLimit?: PlatformCore.SearchDoubleField;
  entity?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  inTransitBalance?: PlatformCore.SearchDoubleField;
  inTransitBalanceBase?: PlatformCore.SearchDoubleField;
  isPrimarySub?: PlatformCore.SearchBooleanField;
  primaryCurrency?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  taxItem?: PlatformCore.SearchMultiSelectField;
  unbilledOrders?: PlatformCore.SearchDoubleField;
  unbilledOrdersBase?: PlatformCore.SearchDoubleField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class VendorSubsidiaryRelationshipSearchBasic extends PlatformCore.SearchRecordBasic {
  balance?: PlatformCore.SearchDoubleField;
  balanceBase?: PlatformCore.SearchDoubleField;
  baseCurrency?: PlatformCore.SearchMultiSelectField;
  creditLimit?: PlatformCore.SearchDoubleField;
  entity?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  inTransitBalance?: PlatformCore.SearchDoubleField;
  inTransitBalanceBase?: PlatformCore.SearchDoubleField;
  isPrimarySub?: PlatformCore.SearchBooleanField;
  primaryCurrency?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  taxItem?: PlatformCore.SearchMultiSelectField;
  unbilledOrders?: PlatformCore.SearchDoubleField;
  unbilledOrdersBase?: PlatformCore.SearchDoubleField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: VendorSubsidiaryRelationshipSearchBasicProps) {
    super();
    this.balance = props.balance;
    this.balanceBase = props.balanceBase;
    this.baseCurrency = props.baseCurrency;
    this.creditLimit = props.creditLimit;
    this.entity = props.entity;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.inTransitBalance = props.inTransitBalance;
    this.inTransitBalanceBase = props.inTransitBalanceBase;
    this.isPrimarySub = props.isPrimarySub;
    this.primaryCurrency = props.primaryCurrency;
    this.subsidiary = props.subsidiary;
    this.taxItem = props.taxItem;
    this.unbilledOrders = props.unbilledOrders;
    this.unbilledOrdersBase = props.unbilledOrdersBase;
    this.customFieldList = props.customFieldList;
  }
}

export type HcmJobSearchBasicProps = {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  jobId?: PlatformCore.SearchStringField;
  title?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class HcmJobSearchBasic extends PlatformCore.SearchRecordBasic {
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  jobId?: PlatformCore.SearchStringField;
  title?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: HcmJobSearchBasicProps) {
    super();
    this.description = props.description;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.jobId = props.jobId;
    this.title = props.title;
    this.customFieldList = props.customFieldList;
  }
}

export type SubsidiarySearchBasicProps = {
  accountingBook?: PlatformCore.SearchMultiSelectField;
  accountingBookCurrency?: PlatformCore.SearchMultiSelectField;
  address?: PlatformCore.SearchStringField;
  city?: PlatformCore.SearchStringField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  currency?: PlatformCore.SearchMultiSelectField;
  effectiveFrom?: PlatformCore.SearchDateField;
  email?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isElimination?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  legalName?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
  nameNoHierarchy?: PlatformCore.SearchStringField;
  nexus?: PlatformCore.SearchMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  purchaseOrderAmount?: PlatformCore.SearchDoubleField;
  purchaseOrderQuantity?: PlatformCore.SearchDoubleField;
  purchaseOrderQuantityDiff?: PlatformCore.SearchDoubleField;
  receiptAmount?: PlatformCore.SearchDoubleField;
  receiptQuantity?: PlatformCore.SearchDoubleField;
  receiptQuantityDiff?: PlatformCore.SearchDoubleField;
  state?: PlatformCore.SearchStringField;
  taxEngine?: PlatformCore.SearchMultiSelectField;
  taxIdNum?: PlatformCore.SearchStringField;
  taxRegistrationNumber?: PlatformCore.SearchStringField;
  tranPrefix?: PlatformCore.SearchStringField;
  url?: PlatformCore.SearchStringField;
  validUntil?: PlatformCore.SearchDateField;
  zip?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class SubsidiarySearchBasic extends PlatformCore.SearchRecordBasic {
  accountingBook?: PlatformCore.SearchMultiSelectField;
  accountingBookCurrency?: PlatformCore.SearchMultiSelectField;
  address?: PlatformCore.SearchStringField;
  city?: PlatformCore.SearchStringField;
  country?: PlatformCore.SearchEnumMultiSelectField;
  currency?: PlatformCore.SearchMultiSelectField;
  effectiveFrom?: PlatformCore.SearchDateField;
  email?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fax?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isElimination?: PlatformCore.SearchBooleanField;
  isInactive?: PlatformCore.SearchBooleanField;
  legalName?: PlatformCore.SearchStringField;
  name?: PlatformCore.SearchStringField;
  nameNoHierarchy?: PlatformCore.SearchStringField;
  nexus?: PlatformCore.SearchMultiSelectField;
  phone?: PlatformCore.SearchStringField;
  purchaseOrderAmount?: PlatformCore.SearchDoubleField;
  purchaseOrderQuantity?: PlatformCore.SearchDoubleField;
  purchaseOrderQuantityDiff?: PlatformCore.SearchDoubleField;
  receiptAmount?: PlatformCore.SearchDoubleField;
  receiptQuantity?: PlatformCore.SearchDoubleField;
  receiptQuantityDiff?: PlatformCore.SearchDoubleField;
  state?: PlatformCore.SearchStringField;
  taxEngine?: PlatformCore.SearchMultiSelectField;
  taxIdNum?: PlatformCore.SearchStringField;
  taxRegistrationNumber?: PlatformCore.SearchStringField;
  tranPrefix?: PlatformCore.SearchStringField;
  url?: PlatformCore.SearchStringField;
  validUntil?: PlatformCore.SearchDateField;
  zip?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: SubsidiarySearchBasicProps) {
    super();
    this.accountingBook = props.accountingBook;
    this.accountingBookCurrency = props.accountingBookCurrency;
    this.address = props.address;
    this.city = props.city;
    this.country = props.country;
    this.currency = props.currency;
    this.effectiveFrom = props.effectiveFrom;
    this.email = props.email;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.fax = props.fax;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isElimination = props.isElimination;
    this.isInactive = props.isInactive;
    this.legalName = props.legalName;
    this.name = props.name;
    this.nameNoHierarchy = props.nameNoHierarchy;
    this.nexus = props.nexus;
    this.phone = props.phone;
    this.purchaseOrderAmount = props.purchaseOrderAmount;
    this.purchaseOrderQuantity = props.purchaseOrderQuantity;
    this.purchaseOrderQuantityDiff = props.purchaseOrderQuantityDiff;
    this.receiptAmount = props.receiptAmount;
    this.receiptQuantity = props.receiptQuantity;
    this.receiptQuantityDiff = props.receiptQuantityDiff;
    this.state = props.state;
    this.taxEngine = props.taxEngine;
    this.taxIdNum = props.taxIdNum;
    this.taxRegistrationNumber = props.taxRegistrationNumber;
    this.tranPrefix = props.tranPrefix;
    this.url = props.url;
    this.validUntil = props.validUntil;
    this.zip = props.zip;
    this.customFieldList = props.customFieldList;
  }
}

export type InventoryNumberSearchRowBasicProps = {
  expirationDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  inventoryNumber?: PlatformCore.SearchColumnStringField[];
  isonhand?: PlatformCore.SearchColumnBooleanField[];
  item?: PlatformCore.SearchColumnSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  quantityavailable?: PlatformCore.SearchColumnDoubleField[];
  quantityintransit?: PlatformCore.SearchColumnDoubleField[];
  quantityonhand?: PlatformCore.SearchColumnDoubleField[];
  quantityonorder?: PlatformCore.SearchColumnDoubleField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class InventoryNumberSearchRowBasic extends PlatformCore.SearchRowBasic {
  expirationDate?: PlatformCore.SearchColumnDateField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  inventoryNumber?: PlatformCore.SearchColumnStringField[];
  isonhand?: PlatformCore.SearchColumnBooleanField[];
  item?: PlatformCore.SearchColumnSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  quantityavailable?: PlatformCore.SearchColumnDoubleField[];
  quantityintransit?: PlatformCore.SearchColumnDoubleField[];
  quantityonhand?: PlatformCore.SearchColumnDoubleField[];
  quantityonorder?: PlatformCore.SearchColumnDoubleField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: InventoryNumberSearchRowBasicProps) {
    super();
    this.expirationDate = props.expirationDate;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.inventoryNumber = props.inventoryNumber;
    this.isonhand = props.isonhand;
    this.item = props.item;
    this.location = props.location;
    this.memo = props.memo;
    this.quantityavailable = props.quantityavailable;
    this.quantityintransit = props.quantityintransit;
    this.quantityonhand = props.quantityonhand;
    this.quantityonorder = props.quantityonorder;
    this.customFieldList = props.customFieldList;
  }
}

export type BillingScheduleSearchBasicProps = {
  applyToSubtotal?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  frequency?: PlatformCore.SearchEnumMultiSelectField;
  inArrears?: PlatformCore.SearchBooleanField;
  initialAmount?: PlatformCore.SearchDoubleField;
  initialTerms?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  isPublic?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  recurrenceCount?: PlatformCore.SearchLongField;
  recurrencePattern?: PlatformCore.SearchEnumMultiSelectField;
  recurrenceTerms?: PlatformCore.SearchMultiSelectField;
  repeatEvery?: PlatformCore.SearchLongField;
  type?: PlatformCore.SearchEnumMultiSelectField;
};

export class BillingScheduleSearchBasic extends PlatformCore.SearchRecordBasic {
  applyToSubtotal?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  frequency?: PlatformCore.SearchEnumMultiSelectField;
  inArrears?: PlatformCore.SearchBooleanField;
  initialAmount?: PlatformCore.SearchDoubleField;
  initialTerms?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  isPublic?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  recurrenceCount?: PlatformCore.SearchLongField;
  recurrencePattern?: PlatformCore.SearchEnumMultiSelectField;
  recurrenceTerms?: PlatformCore.SearchMultiSelectField;
  repeatEvery?: PlatformCore.SearchLongField;
  type?: PlatformCore.SearchEnumMultiSelectField;
  constructor(props: BillingScheduleSearchBasicProps) {
    super();
    this.applyToSubtotal = props.applyToSubtotal;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.frequency = props.frequency;
    this.inArrears = props.inArrears;
    this.initialAmount = props.initialAmount;
    this.initialTerms = props.initialTerms;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.isPublic = props.isPublic;
    this.name = props.name;
    this.recurrenceCount = props.recurrenceCount;
    this.recurrencePattern = props.recurrencePattern;
    this.recurrenceTerms = props.recurrenceTerms;
    this.repeatEvery = props.repeatEvery;
    this.type = props.type;
  }
}

export type InventoryAssignmentProps = {
  internalId?: string;
  issueInventoryNumber?: PlatformCore.RecordRef;
  receiptInventoryNumber?: string;
  binNumber?: PlatformCore.RecordRef;
  toBinNumber?: PlatformCore.RecordRef;
  quantity?: number;
  expirationDate?: string;
  quantityAvailable?: number;
};

export class InventoryAssignment {
  internalId?: string;
  issueInventoryNumber?: PlatformCore.RecordRef;
  receiptInventoryNumber?: string;
  binNumber?: PlatformCore.RecordRef;
  toBinNumber?: PlatformCore.RecordRef;
  quantity?: number;
  expirationDate?: string;
  quantityAvailable?: number;
  constructor(props: InventoryAssignmentProps) {
    this.internalId = props.internalId;
    this.issueInventoryNumber = props.issueInventoryNumber;
    this.receiptInventoryNumber = props.receiptInventoryNumber;
    this.binNumber = props.binNumber;
    this.toBinNumber = props.toBinNumber;
    this.quantity = props.quantity;
    this.expirationDate = props.expirationDate;
    this.quantityAvailable = props.quantityAvailable;
  }
}

export type CustomRecordSearchBasicProps = {
  recType: PlatformCore.RecordRef;
  availableOffline?: PlatformCore.SearchBooleanField;
  created?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  id?: PlatformCore.SearchLongField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  lastModified?: PlatformCore.SearchDateField;
  lastModifiedBy?: PlatformCore.SearchMultiSelectField;
  name?: PlatformCore.SearchStringField;
  owner?: PlatformCore.SearchMultiSelectField;
  parent?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class CustomRecordSearchBasic extends PlatformCore.SearchRecordBasic {
  recType: PlatformCore.RecordRef;
  availableOffline?: PlatformCore.SearchBooleanField;
  created?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  id?: PlatformCore.SearchLongField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  lastModified?: PlatformCore.SearchDateField;
  lastModifiedBy?: PlatformCore.SearchMultiSelectField;
  name?: PlatformCore.SearchStringField;
  owner?: PlatformCore.SearchMultiSelectField;
  parent?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: CustomRecordSearchBasicProps) {
    super();
    this.recType = props.recType;
    this.availableOffline = props.availableOffline;
    this.created = props.created;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.id = props.id;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.lastModified = props.lastModified;
    this.lastModifiedBy = props.lastModifiedBy;
    this.name = props.name;
    this.owner = props.owner;
    this.parent = props.parent;
    this.customFieldList = props.customFieldList;
  }
}

export type RevRecScheduleSearchBasicProps = {
  accountingBook?: PlatformCore.SearchMultiSelectField;
  amorStatus?: PlatformCore.SearchEnumMultiSelectField;
  amortizedAmount?: PlatformCore.SearchDoubleField;
  amorType?: PlatformCore.SearchEnumMultiSelectField;
  amount?: PlatformCore.SearchDoubleField;
  currency?: PlatformCore.SearchMultiSelectField;
  deferredAmount?: PlatformCore.SearchDoubleField;
  destAcct?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  initialAmt?: PlatformCore.SearchDoubleField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isRecognized?: PlatformCore.SearchBooleanField;
  jeDoc?: PlatformCore.SearchMultiSelectField;
  name?: PlatformCore.SearchStringField;
  pctComplete?: PlatformCore.SearchDoubleField;
  pctRecognition?: PlatformCore.SearchDoubleField;
  periodOffset?: PlatformCore.SearchLongField;
  postPeriod?: PlatformCore.SearchMultiSelectField;
  schedDate?: PlatformCore.SearchDateField;
  scheduleNumber?: PlatformCore.SearchLongField;
  scheduleNumberText?: PlatformCore.SearchStringField;
  sourceAcct?: PlatformCore.SearchMultiSelectField;
  srcTranPostPeriod?: PlatformCore.SearchMultiSelectField;
  srcTranType?: PlatformCore.SearchMultiSelectField;
  startOffset?: PlatformCore.SearchLongField;
  templateName?: PlatformCore.SearchStringField;
  useForeignAmounts?: PlatformCore.SearchBooleanField;
};

export class RevRecScheduleSearchBasic extends PlatformCore.SearchRecordBasic {
  accountingBook?: PlatformCore.SearchMultiSelectField;
  amorStatus?: PlatformCore.SearchEnumMultiSelectField;
  amortizedAmount?: PlatformCore.SearchDoubleField;
  amorType?: PlatformCore.SearchEnumMultiSelectField;
  amount?: PlatformCore.SearchDoubleField;
  currency?: PlatformCore.SearchMultiSelectField;
  deferredAmount?: PlatformCore.SearchDoubleField;
  destAcct?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  initialAmt?: PlatformCore.SearchDoubleField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isRecognized?: PlatformCore.SearchBooleanField;
  jeDoc?: PlatformCore.SearchMultiSelectField;
  name?: PlatformCore.SearchStringField;
  pctComplete?: PlatformCore.SearchDoubleField;
  pctRecognition?: PlatformCore.SearchDoubleField;
  periodOffset?: PlatformCore.SearchLongField;
  postPeriod?: PlatformCore.SearchMultiSelectField;
  schedDate?: PlatformCore.SearchDateField;
  scheduleNumber?: PlatformCore.SearchLongField;
  scheduleNumberText?: PlatformCore.SearchStringField;
  sourceAcct?: PlatformCore.SearchMultiSelectField;
  srcTranPostPeriod?: PlatformCore.SearchMultiSelectField;
  srcTranType?: PlatformCore.SearchMultiSelectField;
  startOffset?: PlatformCore.SearchLongField;
  templateName?: PlatformCore.SearchStringField;
  useForeignAmounts?: PlatformCore.SearchBooleanField;
  constructor(props: RevRecScheduleSearchBasicProps) {
    super();
    this.accountingBook = props.accountingBook;
    this.amorStatus = props.amorStatus;
    this.amortizedAmount = props.amortizedAmount;
    this.amorType = props.amorType;
    this.amount = props.amount;
    this.currency = props.currency;
    this.deferredAmount = props.deferredAmount;
    this.destAcct = props.destAcct;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.initialAmt = props.initialAmt;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isRecognized = props.isRecognized;
    this.jeDoc = props.jeDoc;
    this.name = props.name;
    this.pctComplete = props.pctComplete;
    this.pctRecognition = props.pctRecognition;
    this.periodOffset = props.periodOffset;
    this.postPeriod = props.postPeriod;
    this.schedDate = props.schedDate;
    this.scheduleNumber = props.scheduleNumber;
    this.scheduleNumberText = props.scheduleNumberText;
    this.sourceAcct = props.sourceAcct;
    this.srcTranPostPeriod = props.srcTranPostPeriod;
    this.srcTranType = props.srcTranType;
    this.startOffset = props.startOffset;
    this.templateName = props.templateName;
    this.useForeignAmounts = props.useForeignAmounts;
  }
}

export type SubsidiarySearchRowBasicProps = {
  accountingBook?: PlatformCore.SearchColumnSelectField[];
  accountingBookCurrency?: PlatformCore.SearchColumnSelectField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  anonymousCustomerInboundEmail?: PlatformCore.SearchColumnStringField[];
  anonymousCustomerOnlineForms?: PlatformCore.SearchColumnStringField[];
  caseAssignmentTemplate?: PlatformCore.SearchColumnStringField[];
  caseAutomaticClosureTemplate?: PlatformCore.SearchColumnStringField[];
  caseCopyEmployeeTemplate?: PlatformCore.SearchColumnStringField[];
  caseCreationTemplate?: PlatformCore.SearchColumnStringField[];
  caseEscalationTemplate?: PlatformCore.SearchColumnStringField[];
  caseUpdateTemplate?: PlatformCore.SearchColumnStringField[];
  city?: PlatformCore.SearchColumnStringField[];
  companyNameForSupportMessages?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  effectiveFrom?: PlatformCore.SearchColumnDateField[];
  email?: PlatformCore.SearchColumnStringField[];
  employeeCaseUpdateTemplate?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isElimination?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  legalName?: PlatformCore.SearchColumnStringField[];
  mainSupportEmailAddress?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  nameNoHierarchy?: PlatformCore.SearchColumnStringField[];
  nexus?: PlatformCore.SearchColumnSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  purchaseOrderAmount?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrderQuantity?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrderQuantityDiff?: PlatformCore.SearchColumnDoubleField[];
  receiptAmount?: PlatformCore.SearchColumnDoubleField[];
  receiptQuantity?: PlatformCore.SearchColumnDoubleField[];
  receiptQuantityDiff?: PlatformCore.SearchColumnDoubleField[];
  state?: PlatformCore.SearchColumnStringField[];
  taxEngine?: PlatformCore.SearchColumnSelectField[];
  taxIdNum?: PlatformCore.SearchColumnStringField[];
  taxRegistrationNumber?: PlatformCore.SearchColumnStringField[];
  tranPrefix?: PlatformCore.SearchColumnStringField[];
  url?: PlatformCore.SearchColumnStringField[];
  validUntil?: PlatformCore.SearchColumnDateField[];
  zip?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class SubsidiarySearchRowBasic extends PlatformCore.SearchRowBasic {
  accountingBook?: PlatformCore.SearchColumnSelectField[];
  accountingBookCurrency?: PlatformCore.SearchColumnSelectField[];
  address1?: PlatformCore.SearchColumnStringField[];
  address2?: PlatformCore.SearchColumnStringField[];
  address3?: PlatformCore.SearchColumnStringField[];
  anonymousCustomerInboundEmail?: PlatformCore.SearchColumnStringField[];
  anonymousCustomerOnlineForms?: PlatformCore.SearchColumnStringField[];
  caseAssignmentTemplate?: PlatformCore.SearchColumnStringField[];
  caseAutomaticClosureTemplate?: PlatformCore.SearchColumnStringField[];
  caseCopyEmployeeTemplate?: PlatformCore.SearchColumnStringField[];
  caseCreationTemplate?: PlatformCore.SearchColumnStringField[];
  caseEscalationTemplate?: PlatformCore.SearchColumnStringField[];
  caseUpdateTemplate?: PlatformCore.SearchColumnStringField[];
  city?: PlatformCore.SearchColumnStringField[];
  companyNameForSupportMessages?: PlatformCore.SearchColumnStringField[];
  country?: PlatformCore.SearchColumnEnumSelectField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  effectiveFrom?: PlatformCore.SearchColumnDateField[];
  email?: PlatformCore.SearchColumnStringField[];
  employeeCaseUpdateTemplate?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  fax?: PlatformCore.SearchColumnStringField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isElimination?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  legalName?: PlatformCore.SearchColumnStringField[];
  mainSupportEmailAddress?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  nameNoHierarchy?: PlatformCore.SearchColumnStringField[];
  nexus?: PlatformCore.SearchColumnSelectField[];
  phone?: PlatformCore.SearchColumnStringField[];
  purchaseOrderAmount?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrderQuantity?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrderQuantityDiff?: PlatformCore.SearchColumnDoubleField[];
  receiptAmount?: PlatformCore.SearchColumnDoubleField[];
  receiptQuantity?: PlatformCore.SearchColumnDoubleField[];
  receiptQuantityDiff?: PlatformCore.SearchColumnDoubleField[];
  state?: PlatformCore.SearchColumnStringField[];
  taxEngine?: PlatformCore.SearchColumnSelectField[];
  taxIdNum?: PlatformCore.SearchColumnStringField[];
  taxRegistrationNumber?: PlatformCore.SearchColumnStringField[];
  tranPrefix?: PlatformCore.SearchColumnStringField[];
  url?: PlatformCore.SearchColumnStringField[];
  validUntil?: PlatformCore.SearchColumnDateField[];
  zip?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: SubsidiarySearchRowBasicProps) {
    super();
    this.accountingBook = props.accountingBook;
    this.accountingBookCurrency = props.accountingBookCurrency;
    this.address1 = props.address1;
    this.address2 = props.address2;
    this.address3 = props.address3;
    this.anonymousCustomerInboundEmail = props.anonymousCustomerInboundEmail;
    this.anonymousCustomerOnlineForms = props.anonymousCustomerOnlineForms;
    this.caseAssignmentTemplate = props.caseAssignmentTemplate;
    this.caseAutomaticClosureTemplate = props.caseAutomaticClosureTemplate;
    this.caseCopyEmployeeTemplate = props.caseCopyEmployeeTemplate;
    this.caseCreationTemplate = props.caseCreationTemplate;
    this.caseEscalationTemplate = props.caseEscalationTemplate;
    this.caseUpdateTemplate = props.caseUpdateTemplate;
    this.city = props.city;
    this.companyNameForSupportMessages = props.companyNameForSupportMessages;
    this.country = props.country;
    this.currency = props.currency;
    this.effectiveFrom = props.effectiveFrom;
    this.email = props.email;
    this.employeeCaseUpdateTemplate = props.employeeCaseUpdateTemplate;
    this.externalId = props.externalId;
    this.fax = props.fax;
    this.internalId = props.internalId;
    this.isElimination = props.isElimination;
    this.isInactive = props.isInactive;
    this.legalName = props.legalName;
    this.mainSupportEmailAddress = props.mainSupportEmailAddress;
    this.name = props.name;
    this.nameNoHierarchy = props.nameNoHierarchy;
    this.nexus = props.nexus;
    this.phone = props.phone;
    this.purchaseOrderAmount = props.purchaseOrderAmount;
    this.purchaseOrderQuantity = props.purchaseOrderQuantity;
    this.purchaseOrderQuantityDiff = props.purchaseOrderQuantityDiff;
    this.receiptAmount = props.receiptAmount;
    this.receiptQuantity = props.receiptQuantity;
    this.receiptQuantityDiff = props.receiptQuantityDiff;
    this.state = props.state;
    this.taxEngine = props.taxEngine;
    this.taxIdNum = props.taxIdNum;
    this.taxRegistrationNumber = props.taxRegistrationNumber;
    this.tranPrefix = props.tranPrefix;
    this.url = props.url;
    this.validUntil = props.validUntil;
    this.zip = props.zip;
    this.customFieldList = props.customFieldList;
  }
}

export type SalesRoleSearchRowBasicProps = {
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
};

export class SalesRoleSearchRowBasic extends PlatformCore.SearchRowBasic {
  description?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  name?: PlatformCore.SearchColumnStringField[];
  constructor(props: SalesRoleSearchRowBasicProps) {
    super();
    this.description = props.description;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isInactive = props.isInactive;
    this.name = props.name;
  }
}

export type TimeEntrySearchBasicProps = {
  approvalStatus?: PlatformCore.SearchMultiSelectField;
  billable?: PlatformCore.SearchBooleanField;
  billingClass?: PlatformCore.SearchMultiSelectField;
  billingStatus?: PlatformCore.SearchBooleanField;
  clazz?: PlatformCore.SearchMultiSelectField;
  customer?: PlatformCore.SearchMultiSelectField;
  date?: PlatformCore.SearchDateField;
  dateCreated?: PlatformCore.SearchDateField;
  department?: PlatformCore.SearchMultiSelectField;
  duration?: PlatformCore.SearchDoubleField;
  employee?: PlatformCore.SearchMultiSelectField;
  exempt?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isCharged?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  lastModified?: PlatformCore.SearchDateField;
  location?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  nextApprover?: PlatformCore.SearchMultiSelectField;
  paidByPayroll?: PlatformCore.SearchBooleanField;
  paidExternally?: PlatformCore.SearchBooleanField;
  payItem?: PlatformCore.SearchMultiSelectField;
  productive?: PlatformCore.SearchBooleanField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  type?: PlatformCore.SearchEnumMultiSelectField;
  utilized?: PlatformCore.SearchBooleanField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class TimeEntrySearchBasic extends PlatformCore.SearchRecordBasic {
  approvalStatus?: PlatformCore.SearchMultiSelectField;
  billable?: PlatformCore.SearchBooleanField;
  billingClass?: PlatformCore.SearchMultiSelectField;
  billingStatus?: PlatformCore.SearchBooleanField;
  clazz?: PlatformCore.SearchMultiSelectField;
  customer?: PlatformCore.SearchMultiSelectField;
  date?: PlatformCore.SearchDateField;
  dateCreated?: PlatformCore.SearchDateField;
  department?: PlatformCore.SearchMultiSelectField;
  duration?: PlatformCore.SearchDoubleField;
  employee?: PlatformCore.SearchMultiSelectField;
  exempt?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isCharged?: PlatformCore.SearchBooleanField;
  item?: PlatformCore.SearchMultiSelectField;
  lastModified?: PlatformCore.SearchDateField;
  location?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  nextApprover?: PlatformCore.SearchMultiSelectField;
  paidByPayroll?: PlatformCore.SearchBooleanField;
  paidExternally?: PlatformCore.SearchBooleanField;
  payItem?: PlatformCore.SearchMultiSelectField;
  productive?: PlatformCore.SearchBooleanField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  type?: PlatformCore.SearchEnumMultiSelectField;
  utilized?: PlatformCore.SearchBooleanField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: TimeEntrySearchBasicProps) {
    super();
    this.approvalStatus = props.approvalStatus;
    this.billable = props.billable;
    this.billingClass = props.billingClass;
    this.billingStatus = props.billingStatus;
    this.clazz = props.clazz;
    this.customer = props.customer;
    this.date = props.date;
    this.dateCreated = props.dateCreated;
    this.department = props.department;
    this.duration = props.duration;
    this.employee = props.employee;
    this.exempt = props.exempt;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isCharged = props.isCharged;
    this.item = props.item;
    this.lastModified = props.lastModified;
    this.location = props.location;
    this.memo = props.memo;
    this.nextApprover = props.nextApprover;
    this.paidByPayroll = props.paidByPayroll;
    this.paidExternally = props.paidExternally;
    this.payItem = props.payItem;
    this.productive = props.productive;
    this.subsidiary = props.subsidiary;
    this.type = props.type;
    this.utilized = props.utilized;
    this.customFieldList = props.customFieldList;
  }
}

export type BudgetSearchBasicProps = {
  account?: PlatformCore.SearchMultiSelectField;
  accountingBook?: PlatformCore.SearchMultiSelectField;
  amount?: PlatformCore.SearchDoubleField;
  category?: PlatformCore.SearchMultiSelectField;
  clazz?: PlatformCore.SearchMultiSelectField;
  currency?: PlatformCore.SearchMultiSelectField;
  customer?: PlatformCore.SearchMultiSelectField;
  department?: PlatformCore.SearchMultiSelectField;
  global?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  item?: PlatformCore.SearchMultiSelectField;
  location?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  year?: PlatformCore.SearchMultiSelectField;
  year2?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class BudgetSearchBasic extends PlatformCore.SearchRecordBasic {
  account?: PlatformCore.SearchMultiSelectField;
  accountingBook?: PlatformCore.SearchMultiSelectField;
  amount?: PlatformCore.SearchDoubleField;
  category?: PlatformCore.SearchMultiSelectField;
  clazz?: PlatformCore.SearchMultiSelectField;
  currency?: PlatformCore.SearchMultiSelectField;
  customer?: PlatformCore.SearchMultiSelectField;
  department?: PlatformCore.SearchMultiSelectField;
  global?: PlatformCore.SearchBooleanField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  item?: PlatformCore.SearchMultiSelectField;
  location?: PlatformCore.SearchMultiSelectField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  year?: PlatformCore.SearchMultiSelectField;
  year2?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: BudgetSearchBasicProps) {
    super();
    this.account = props.account;
    this.accountingBook = props.accountingBook;
    this.amount = props.amount;
    this.category = props.category;
    this.clazz = props.clazz;
    this.currency = props.currency;
    this.customer = props.customer;
    this.department = props.department;
    this.global = props.global;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.item = props.item;
    this.location = props.location;
    this.subsidiary = props.subsidiary;
    this.year = props.year;
    this.year2 = props.year2;
    this.customFieldList = props.customFieldList;
  }
}

export type VendorSubsidiaryRelationshipSearchRowBasicProps = {
  balance?: PlatformCore.SearchColumnDoubleField[];
  balancebase?: PlatformCore.SearchColumnDoubleField[];
  baseCurrency?: PlatformCore.SearchColumnSelectField[];
  creditlimit?: PlatformCore.SearchColumnDoubleField[];
  entity?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  inTransitBalance?: PlatformCore.SearchColumnDoubleField[];
  inTransitBalanceBase?: PlatformCore.SearchColumnDoubleField[];
  isprimarysub?: PlatformCore.SearchColumnBooleanField[];
  primaryCurrency?: PlatformCore.SearchColumnSelectField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  taxitem?: PlatformCore.SearchColumnSelectField[];
  unbilledorders?: PlatformCore.SearchColumnDoubleField[];
  unbilledordersbase?: PlatformCore.SearchColumnDoubleField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class VendorSubsidiaryRelationshipSearchRowBasic extends PlatformCore.SearchRowBasic {
  balance?: PlatformCore.SearchColumnDoubleField[];
  balancebase?: PlatformCore.SearchColumnDoubleField[];
  baseCurrency?: PlatformCore.SearchColumnSelectField[];
  creditlimit?: PlatformCore.SearchColumnDoubleField[];
  entity?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  inTransitBalance?: PlatformCore.SearchColumnDoubleField[];
  inTransitBalanceBase?: PlatformCore.SearchColumnDoubleField[];
  isprimarysub?: PlatformCore.SearchColumnBooleanField[];
  primaryCurrency?: PlatformCore.SearchColumnSelectField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  taxitem?: PlatformCore.SearchColumnSelectField[];
  unbilledorders?: PlatformCore.SearchColumnDoubleField[];
  unbilledordersbase?: PlatformCore.SearchColumnDoubleField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: VendorSubsidiaryRelationshipSearchRowBasicProps) {
    super();
    this.balance = props.balance;
    this.balancebase = props.balancebase;
    this.baseCurrency = props.baseCurrency;
    this.creditlimit = props.creditlimit;
    this.entity = props.entity;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.inTransitBalance = props.inTransitBalance;
    this.inTransitBalanceBase = props.inTransitBalanceBase;
    this.isprimarysub = props.isprimarysub;
    this.primaryCurrency = props.primaryCurrency;
    this.subsidiary = props.subsidiary;
    this.taxitem = props.taxitem;
    this.unbilledorders = props.unbilledorders;
    this.unbilledordersbase = props.unbilledordersbase;
    this.customFieldList = props.customFieldList;
  }
}

export type InboundShipmentSearchRowBasicProps = {
  actualDeliveryDate?: PlatformCore.SearchColumnDateField[];
  actualShippingDate?: PlatformCore.SearchColumnDateField[];
  billOfLading?: PlatformCore.SearchColumnStringField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  description?: PlatformCore.SearchColumnStringField[];
  expectedDeliveryDate?: PlatformCore.SearchColumnDateField[];
  expectedRate?: PlatformCore.SearchColumnDoubleField[];
  expectedShippingDate?: PlatformCore.SearchColumnDateField[];
  externalDocumentNumber?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  incoterm?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  item?: PlatformCore.SearchColumnSelectField[];
  itemEffectiveDate?: PlatformCore.SearchColumnDateField[];
  itemExchangeRate?: PlatformCore.SearchColumnDoubleField[];
  landedCostAllocationMethod?: PlatformCore.SearchColumnEnumSelectField[];
  landedCostAmount?: PlatformCore.SearchColumnDoubleField[];
  landedCostCostCategory?: PlatformCore.SearchColumnSelectField[];
  landedCostCurrency?: PlatformCore.SearchColumnSelectField[];
  landedCostEffectiveDate?: PlatformCore.SearchColumnDateField[];
  landedCostExchangeRate?: PlatformCore.SearchColumnDoubleField[];
  memo?: PlatformCore.SearchColumnStringField[];
  poAmount?: PlatformCore.SearchColumnDoubleField[];
  poRate?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrder?: PlatformCore.SearchColumnSelectField[];
  quantityBilled?: PlatformCore.SearchColumnDoubleField[];
  quantityExpected?: PlatformCore.SearchColumnDoubleField[];
  quantityReceived?: PlatformCore.SearchColumnDoubleField[];
  quantityRemaining?: PlatformCore.SearchColumnDoubleField[];
  receivingLocation?: PlatformCore.SearchColumnSelectField[];
  shipmentBaseCurrency?: PlatformCore.SearchColumnSelectField[];
  shipmentNumber?: PlatformCore.SearchColumnStringField[];
  status?: PlatformCore.SearchColumnStringField[];
  totalUnitCost?: PlatformCore.SearchColumnDoubleField[];
  unit?: PlatformCore.SearchColumnSelectField[];
  unitLandedCost?: PlatformCore.SearchColumnDoubleField[];
  vendor?: PlatformCore.SearchColumnSelectField[];
  vesselNumber?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class InboundShipmentSearchRowBasic extends PlatformCore.SearchRowBasic {
  actualDeliveryDate?: PlatformCore.SearchColumnDateField[];
  actualShippingDate?: PlatformCore.SearchColumnDateField[];
  billOfLading?: PlatformCore.SearchColumnStringField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  currency?: PlatformCore.SearchColumnSelectField[];
  description?: PlatformCore.SearchColumnStringField[];
  expectedDeliveryDate?: PlatformCore.SearchColumnDateField[];
  expectedRate?: PlatformCore.SearchColumnDoubleField[];
  expectedShippingDate?: PlatformCore.SearchColumnDateField[];
  externalDocumentNumber?: PlatformCore.SearchColumnStringField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  incoterm?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  item?: PlatformCore.SearchColumnSelectField[];
  itemEffectiveDate?: PlatformCore.SearchColumnDateField[];
  itemExchangeRate?: PlatformCore.SearchColumnDoubleField[];
  landedCostAllocationMethod?: PlatformCore.SearchColumnEnumSelectField[];
  landedCostAmount?: PlatformCore.SearchColumnDoubleField[];
  landedCostCostCategory?: PlatformCore.SearchColumnSelectField[];
  landedCostCurrency?: PlatformCore.SearchColumnSelectField[];
  landedCostEffectiveDate?: PlatformCore.SearchColumnDateField[];
  landedCostExchangeRate?: PlatformCore.SearchColumnDoubleField[];
  memo?: PlatformCore.SearchColumnStringField[];
  poAmount?: PlatformCore.SearchColumnDoubleField[];
  poRate?: PlatformCore.SearchColumnDoubleField[];
  purchaseOrder?: PlatformCore.SearchColumnSelectField[];
  quantityBilled?: PlatformCore.SearchColumnDoubleField[];
  quantityExpected?: PlatformCore.SearchColumnDoubleField[];
  quantityReceived?: PlatformCore.SearchColumnDoubleField[];
  quantityRemaining?: PlatformCore.SearchColumnDoubleField[];
  receivingLocation?: PlatformCore.SearchColumnSelectField[];
  shipmentBaseCurrency?: PlatformCore.SearchColumnSelectField[];
  shipmentNumber?: PlatformCore.SearchColumnStringField[];
  status?: PlatformCore.SearchColumnStringField[];
  totalUnitCost?: PlatformCore.SearchColumnDoubleField[];
  unit?: PlatformCore.SearchColumnSelectField[];
  unitLandedCost?: PlatformCore.SearchColumnDoubleField[];
  vendor?: PlatformCore.SearchColumnSelectField[];
  vesselNumber?: PlatformCore.SearchColumnStringField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: InboundShipmentSearchRowBasicProps) {
    super();
    this.actualDeliveryDate = props.actualDeliveryDate;
    this.actualShippingDate = props.actualShippingDate;
    this.billOfLading = props.billOfLading;
    this.createdDate = props.createdDate;
    this.currency = props.currency;
    this.description = props.description;
    this.expectedDeliveryDate = props.expectedDeliveryDate;
    this.expectedRate = props.expectedRate;
    this.expectedShippingDate = props.expectedShippingDate;
    this.externalDocumentNumber = props.externalDocumentNumber;
    this.externalId = props.externalId;
    this.incoterm = props.incoterm;
    this.internalId = props.internalId;
    this.item = props.item;
    this.itemEffectiveDate = props.itemEffectiveDate;
    this.itemExchangeRate = props.itemExchangeRate;
    this.landedCostAllocationMethod = props.landedCostAllocationMethod;
    this.landedCostAmount = props.landedCostAmount;
    this.landedCostCostCategory = props.landedCostCostCategory;
    this.landedCostCurrency = props.landedCostCurrency;
    this.landedCostEffectiveDate = props.landedCostEffectiveDate;
    this.landedCostExchangeRate = props.landedCostExchangeRate;
    this.memo = props.memo;
    this.poAmount = props.poAmount;
    this.poRate = props.poRate;
    this.purchaseOrder = props.purchaseOrder;
    this.quantityBilled = props.quantityBilled;
    this.quantityExpected = props.quantityExpected;
    this.quantityReceived = props.quantityReceived;
    this.quantityRemaining = props.quantityRemaining;
    this.receivingLocation = props.receivingLocation;
    this.shipmentBaseCurrency = props.shipmentBaseCurrency;
    this.shipmentNumber = props.shipmentNumber;
    this.status = props.status;
    this.totalUnitCost = props.totalUnitCost;
    this.unit = props.unit;
    this.unitLandedCost = props.unitLandedCost;
    this.vendor = props.vendor;
    this.vesselNumber = props.vesselNumber;
    this.customFieldList = props.customFieldList;
  }
}

export type SolutionSearchBasicProps = {
  _abstract?: PlatformCore.SearchStringField;
  assigned?: PlatformCore.SearchMultiSelectField;
  caseCount?: PlatformCore.SearchLongField;
  code?: PlatformCore.SearchStringField;
  createdDate?: PlatformCore.SearchDateField;
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  find?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  isOnline?: PlatformCore.SearchBooleanField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  number?: PlatformCore.SearchLongField;
  status?: PlatformCore.SearchEnumMultiSelectField;
  title?: PlatformCore.SearchStringField;
  topic?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class SolutionSearchBasic extends PlatformCore.SearchRecordBasic {
  _abstract?: PlatformCore.SearchStringField;
  assigned?: PlatformCore.SearchMultiSelectField;
  caseCount?: PlatformCore.SearchLongField;
  code?: PlatformCore.SearchStringField;
  createdDate?: PlatformCore.SearchDateField;
  description?: PlatformCore.SearchStringField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  find?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  isOnline?: PlatformCore.SearchBooleanField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  number?: PlatformCore.SearchLongField;
  status?: PlatformCore.SearchEnumMultiSelectField;
  title?: PlatformCore.SearchStringField;
  topic?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: SolutionSearchBasicProps) {
    super();
    this._abstract = props._abstract;
    this.assigned = props.assigned;
    this.caseCount = props.caseCount;
    this.code = props.code;
    this.createdDate = props.createdDate;
    this.description = props.description;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.find = props.find;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.isOnline = props.isOnline;
    this.lastModifiedDate = props.lastModifiedDate;
    this.number = props.number;
    this.status = props.status;
    this.title = props.title;
    this.topic = props.topic;
    this.customFieldList = props.customFieldList;
  }
}

export type PricingSearchBasicProps = {
  assignedPriceLevel?: PlatformCore.SearchBooleanField;
  currency?: PlatformCore.SearchMultiSelectField;
  customer?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  item?: PlatformCore.SearchMultiSelectField;
  maximumQuantity?: PlatformCore.SearchDoubleField;
  minimumQuantity?: PlatformCore.SearchDoubleField;
  priceLevel?: PlatformCore.SearchMultiSelectField;
  rate?: PlatformCore.SearchDoubleField;
};

export class PricingSearchBasic extends PlatformCore.SearchRecordBasic {
  assignedPriceLevel?: PlatformCore.SearchBooleanField;
  currency?: PlatformCore.SearchMultiSelectField;
  customer?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  item?: PlatformCore.SearchMultiSelectField;
  maximumQuantity?: PlatformCore.SearchDoubleField;
  minimumQuantity?: PlatformCore.SearchDoubleField;
  priceLevel?: PlatformCore.SearchMultiSelectField;
  rate?: PlatformCore.SearchDoubleField;
  constructor(props: PricingSearchBasicProps) {
    super();
    this.assignedPriceLevel = props.assignedPriceLevel;
    this.currency = props.currency;
    this.customer = props.customer;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.item = props.item;
    this.maximumQuantity = props.maximumQuantity;
    this.minimumQuantity = props.minimumQuantity;
    this.priceLevel = props.priceLevel;
    this.rate = props.rate;
  }
}

export type AccountingPeriodSearchRowBasicProps = {
  allLocked?: PlatformCore.SearchColumnBooleanField[];
  allowNonGLChanges?: PlatformCore.SearchColumnBooleanField[];
  apLocked?: PlatformCore.SearchColumnBooleanField[];
  arLocked?: PlatformCore.SearchColumnBooleanField[];
  closed?: PlatformCore.SearchColumnBooleanField[];
  closedOnDate?: PlatformCore.SearchColumnDateField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isAdjust?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isQuarter?: PlatformCore.SearchColumnBooleanField[];
  isYear?: PlatformCore.SearchColumnBooleanField[];
  parent?: PlatformCore.SearchColumnSelectField[];
  payrollLocked?: PlatformCore.SearchColumnBooleanField[];
  periodName?: PlatformCore.SearchColumnStringField[];
  startDate?: PlatformCore.SearchColumnDateField[];
};

export class AccountingPeriodSearchRowBasic extends PlatformCore.SearchRowBasic {
  allLocked?: PlatformCore.SearchColumnBooleanField[];
  allowNonGLChanges?: PlatformCore.SearchColumnBooleanField[];
  apLocked?: PlatformCore.SearchColumnBooleanField[];
  arLocked?: PlatformCore.SearchColumnBooleanField[];
  closed?: PlatformCore.SearchColumnBooleanField[];
  closedOnDate?: PlatformCore.SearchColumnDateField[];
  endDate?: PlatformCore.SearchColumnDateField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isAdjust?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  isQuarter?: PlatformCore.SearchColumnBooleanField[];
  isYear?: PlatformCore.SearchColumnBooleanField[];
  parent?: PlatformCore.SearchColumnSelectField[];
  payrollLocked?: PlatformCore.SearchColumnBooleanField[];
  periodName?: PlatformCore.SearchColumnStringField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  constructor(props: AccountingPeriodSearchRowBasicProps) {
    super();
    this.allLocked = props.allLocked;
    this.allowNonGLChanges = props.allowNonGLChanges;
    this.apLocked = props.apLocked;
    this.arLocked = props.arLocked;
    this.closed = props.closed;
    this.closedOnDate = props.closedOnDate;
    this.endDate = props.endDate;
    this.internalId = props.internalId;
    this.isAdjust = props.isAdjust;
    this.isInactive = props.isInactive;
    this.isQuarter = props.isQuarter;
    this.isYear = props.isYear;
    this.parent = props.parent;
    this.payrollLocked = props.payrollLocked;
    this.periodName = props.periodName;
    this.startDate = props.startDate;
  }
}

export type TaxTypeSearchBasicProps = {
  country?: PlatformCore.SearchEnumMultiSelectField;
  description?: PlatformCore.SearchStringField;
  doesNotAddToTotal?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  nexus?: PlatformCore.SearchMultiSelectField;
  payablesAccount?: PlatformCore.SearchMultiSelectField;
  postToItemCost?: PlatformCore.SearchBooleanField;
  receivablesAccount?: PlatformCore.SearchMultiSelectField;
  reverseCharge?: PlatformCore.SearchBooleanField;
  taxInNetAmount?: PlatformCore.SearchBooleanField;
};

export class TaxTypeSearchBasic extends PlatformCore.SearchRecordBasic {
  country?: PlatformCore.SearchEnumMultiSelectField;
  description?: PlatformCore.SearchStringField;
  doesNotAddToTotal?: PlatformCore.SearchBooleanField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isInactive?: PlatformCore.SearchBooleanField;
  name?: PlatformCore.SearchStringField;
  nexus?: PlatformCore.SearchMultiSelectField;
  payablesAccount?: PlatformCore.SearchMultiSelectField;
  postToItemCost?: PlatformCore.SearchBooleanField;
  receivablesAccount?: PlatformCore.SearchMultiSelectField;
  reverseCharge?: PlatformCore.SearchBooleanField;
  taxInNetAmount?: PlatformCore.SearchBooleanField;
  constructor(props: TaxTypeSearchBasicProps) {
    super();
    this.country = props.country;
    this.description = props.description;
    this.doesNotAddToTotal = props.doesNotAddToTotal;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isInactive = props.isInactive;
    this.name = props.name;
    this.nexus = props.nexus;
    this.payablesAccount = props.payablesAccount;
    this.postToItemCost = props.postToItemCost;
    this.receivablesAccount = props.receivablesAccount;
    this.reverseCharge = props.reverseCharge;
    this.taxInNetAmount = props.taxInNetAmount;
  }
}

export type TaskSearchRowBasicProps = {
  accessLevel?: PlatformCore.SearchColumnStringField[];
  actualTime?: PlatformCore.SearchColumnDoubleField[];
  assigned?: PlatformCore.SearchColumnSelectField[];
  company?: PlatformCore.SearchColumnSelectField[];
  completedDate?: PlatformCore.SearchColumnDateField[];
  contact?: PlatformCore.SearchColumnSelectField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  dueDate?: PlatformCore.SearchColumnDateField[];
  estimatedTime?: PlatformCore.SearchColumnDoubleField[];
  estimatedTimeOverride?: PlatformCore.SearchColumnDoubleField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isJobSummaryTask?: PlatformCore.SearchColumnBooleanField[];
  isJobTask?: PlatformCore.SearchColumnBooleanField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  markdone?: PlatformCore.SearchColumnStringField[];
  message?: PlatformCore.SearchColumnStringField[];
  milestone?: PlatformCore.SearchColumnSelectField[];
  order?: PlatformCore.SearchColumnLongField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  percentComplete?: PlatformCore.SearchColumnDoubleField[];
  percentTimeComplete?: PlatformCore.SearchColumnDoubleField[];
  priority?: PlatformCore.SearchColumnEnumSelectField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  startTime?: PlatformCore.SearchColumnStringField[];
  status?: PlatformCore.SearchColumnEnumSelectField[];
  timeRemaining?: PlatformCore.SearchColumnDoubleField[];
  title?: PlatformCore.SearchColumnStringField[];
  transaction?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class TaskSearchRowBasic extends PlatformCore.SearchRowBasic {
  accessLevel?: PlatformCore.SearchColumnStringField[];
  actualTime?: PlatformCore.SearchColumnDoubleField[];
  assigned?: PlatformCore.SearchColumnSelectField[];
  company?: PlatformCore.SearchColumnSelectField[];
  completedDate?: PlatformCore.SearchColumnDateField[];
  contact?: PlatformCore.SearchColumnSelectField[];
  createdDate?: PlatformCore.SearchColumnDateField[];
  dueDate?: PlatformCore.SearchColumnDateField[];
  estimatedTime?: PlatformCore.SearchColumnDoubleField[];
  estimatedTimeOverride?: PlatformCore.SearchColumnDoubleField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isJobSummaryTask?: PlatformCore.SearchColumnBooleanField[];
  isJobTask?: PlatformCore.SearchColumnBooleanField[];
  lastModifiedDate?: PlatformCore.SearchColumnDateField[];
  markdone?: PlatformCore.SearchColumnStringField[];
  message?: PlatformCore.SearchColumnStringField[];
  milestone?: PlatformCore.SearchColumnSelectField[];
  order?: PlatformCore.SearchColumnLongField[];
  owner?: PlatformCore.SearchColumnSelectField[];
  percentComplete?: PlatformCore.SearchColumnDoubleField[];
  percentTimeComplete?: PlatformCore.SearchColumnDoubleField[];
  priority?: PlatformCore.SearchColumnEnumSelectField[];
  startDate?: PlatformCore.SearchColumnDateField[];
  startTime?: PlatformCore.SearchColumnStringField[];
  status?: PlatformCore.SearchColumnEnumSelectField[];
  timeRemaining?: PlatformCore.SearchColumnDoubleField[];
  title?: PlatformCore.SearchColumnStringField[];
  transaction?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: TaskSearchRowBasicProps) {
    super();
    this.accessLevel = props.accessLevel;
    this.actualTime = props.actualTime;
    this.assigned = props.assigned;
    this.company = props.company;
    this.completedDate = props.completedDate;
    this.contact = props.contact;
    this.createdDate = props.createdDate;
    this.dueDate = props.dueDate;
    this.estimatedTime = props.estimatedTime;
    this.estimatedTimeOverride = props.estimatedTimeOverride;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isJobSummaryTask = props.isJobSummaryTask;
    this.isJobTask = props.isJobTask;
    this.lastModifiedDate = props.lastModifiedDate;
    this.markdone = props.markdone;
    this.message = props.message;
    this.milestone = props.milestone;
    this.order = props.order;
    this.owner = props.owner;
    this.percentComplete = props.percentComplete;
    this.percentTimeComplete = props.percentTimeComplete;
    this.priority = props.priority;
    this.startDate = props.startDate;
    this.startTime = props.startTime;
    this.status = props.status;
    this.timeRemaining = props.timeRemaining;
    this.title = props.title;
    this.transaction = props.transaction;
    this.customFieldList = props.customFieldList;
  }
}

export type TaskSearchBasicProps = {
  actualTime?: PlatformCore.SearchDoubleField;
  assigned?: PlatformCore.SearchMultiSelectField;
  company?: PlatformCore.SearchMultiSelectField;
  completedDate?: PlatformCore.SearchDateField;
  contact?: PlatformCore.SearchMultiSelectField;
  createdDate?: PlatformCore.SearchDateField;
  endDate?: PlatformCore.SearchDateField;
  estimatedTime?: PlatformCore.SearchDoubleField;
  estimatedTimeOverride?: PlatformCore.SearchDoubleField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isJobSummaryTask?: PlatformCore.SearchBooleanField;
  isJobTask?: PlatformCore.SearchBooleanField;
  isPrivate?: PlatformCore.SearchBooleanField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  milestone?: PlatformCore.SearchLongField;
  owner?: PlatformCore.SearchMultiSelectField;
  percentComplete?: PlatformCore.SearchLongField;
  percentTimeComplete?: PlatformCore.SearchLongField;
  priority?: PlatformCore.SearchEnumMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  status?: PlatformCore.SearchEnumMultiSelectField;
  timeRemaining?: PlatformCore.SearchDoubleField;
  title?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class TaskSearchBasic extends PlatformCore.SearchRecordBasic {
  actualTime?: PlatformCore.SearchDoubleField;
  assigned?: PlatformCore.SearchMultiSelectField;
  company?: PlatformCore.SearchMultiSelectField;
  completedDate?: PlatformCore.SearchDateField;
  contact?: PlatformCore.SearchMultiSelectField;
  createdDate?: PlatformCore.SearchDateField;
  endDate?: PlatformCore.SearchDateField;
  estimatedTime?: PlatformCore.SearchDoubleField;
  estimatedTimeOverride?: PlatformCore.SearchDoubleField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isJobSummaryTask?: PlatformCore.SearchBooleanField;
  isJobTask?: PlatformCore.SearchBooleanField;
  isPrivate?: PlatformCore.SearchBooleanField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  milestone?: PlatformCore.SearchLongField;
  owner?: PlatformCore.SearchMultiSelectField;
  percentComplete?: PlatformCore.SearchLongField;
  percentTimeComplete?: PlatformCore.SearchLongField;
  priority?: PlatformCore.SearchEnumMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  status?: PlatformCore.SearchEnumMultiSelectField;
  timeRemaining?: PlatformCore.SearchDoubleField;
  title?: PlatformCore.SearchStringField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: TaskSearchBasicProps) {
    super();
    this.actualTime = props.actualTime;
    this.assigned = props.assigned;
    this.company = props.company;
    this.completedDate = props.completedDate;
    this.contact = props.contact;
    this.createdDate = props.createdDate;
    this.endDate = props.endDate;
    this.estimatedTime = props.estimatedTime;
    this.estimatedTimeOverride = props.estimatedTimeOverride;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isJobSummaryTask = props.isJobSummaryTask;
    this.isJobTask = props.isJobTask;
    this.isPrivate = props.isPrivate;
    this.lastModifiedDate = props.lastModifiedDate;
    this.milestone = props.milestone;
    this.owner = props.owner;
    this.percentComplete = props.percentComplete;
    this.percentTimeComplete = props.percentTimeComplete;
    this.priority = props.priority;
    this.startDate = props.startDate;
    this.status = props.status;
    this.timeRemaining = props.timeRemaining;
    this.title = props.title;
    this.customFieldList = props.customFieldList;
  }
}

export type ConsolidatedExchangeRateSearchBasicProps = {
  accountingBook?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fromSubsidiary?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDerivedRate?: PlatformCore.SearchBooleanField;
  period?: PlatformCore.SearchMultiSelectField;
  periodStartDate?: PlatformCore.SearchDateField;
  toSubsidiary?: PlatformCore.SearchMultiSelectField;
};

export class ConsolidatedExchangeRateSearchBasic extends PlatformCore.SearchRecordBasic {
  accountingBook?: PlatformCore.SearchMultiSelectField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  fromSubsidiary?: PlatformCore.SearchMultiSelectField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  isDerivedRate?: PlatformCore.SearchBooleanField;
  period?: PlatformCore.SearchMultiSelectField;
  periodStartDate?: PlatformCore.SearchDateField;
  toSubsidiary?: PlatformCore.SearchMultiSelectField;
  constructor(props: ConsolidatedExchangeRateSearchBasicProps) {
    super();
    this.accountingBook = props.accountingBook;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.fromSubsidiary = props.fromSubsidiary;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.isDerivedRate = props.isDerivedRate;
    this.period = props.period;
    this.periodStartDate = props.periodStartDate;
    this.toSubsidiary = props.toSubsidiary;
  }
}

export type ItemBinNumberSearchRowBasicProps = {
  binNumber?: PlatformCore.SearchColumnSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  quantityAvailable?: PlatformCore.SearchColumnDoubleField[];
  quantityOnHand?: PlatformCore.SearchColumnDoubleField[];
};

export class ItemBinNumberSearchRowBasic extends PlatformCore.SearchRowBasic {
  binNumber?: PlatformCore.SearchColumnSelectField[];
  location?: PlatformCore.SearchColumnSelectField[];
  quantityAvailable?: PlatformCore.SearchColumnDoubleField[];
  quantityOnHand?: PlatformCore.SearchColumnDoubleField[];
  constructor(props: ItemBinNumberSearchRowBasicProps) {
    super();
    this.binNumber = props.binNumber;
    this.location = props.location;
    this.quantityAvailable = props.quantityAvailable;
    this.quantityOnHand = props.quantityOnHand;
  }
}

export type ManufacturingRoutingSearchRowBasicProps = {
  autoCalculateLag?: PlatformCore.SearchColumnBooleanField[];
  billOfMaterials?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isDefault?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  item?: PlatformCore.SearchColumnSelectField[];
  lagAmount?: PlatformCore.SearchColumnDoubleField[];
  lagType?: PlatformCore.SearchColumnEnumSelectField[];
  lagUnits?: PlatformCore.SearchColumnStringField[];
  location?: PlatformCore.SearchColumnSelectField[];
  manufacturingCostTemplate?: PlatformCore.SearchColumnSelectField[];
  manufacturingWorkCenter?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  operationName?: PlatformCore.SearchColumnStringField[];
  operationYield?: PlatformCore.SearchColumnDoubleField[];
  runRate?: PlatformCore.SearchColumnDoubleField[];
  sequence?: PlatformCore.SearchColumnLongField[];
  setupTime?: PlatformCore.SearchColumnDoubleField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
};

export class ManufacturingRoutingSearchRowBasic extends PlatformCore.SearchRowBasic {
  autoCalculateLag?: PlatformCore.SearchColumnBooleanField[];
  billOfMaterials?: PlatformCore.SearchColumnSelectField[];
  externalId?: PlatformCore.SearchColumnSelectField[];
  internalId?: PlatformCore.SearchColumnSelectField[];
  isDefault?: PlatformCore.SearchColumnBooleanField[];
  isInactive?: PlatformCore.SearchColumnBooleanField[];
  item?: PlatformCore.SearchColumnSelectField[];
  lagAmount?: PlatformCore.SearchColumnDoubleField[];
  lagType?: PlatformCore.SearchColumnEnumSelectField[];
  lagUnits?: PlatformCore.SearchColumnStringField[];
  location?: PlatformCore.SearchColumnSelectField[];
  manufacturingCostTemplate?: PlatformCore.SearchColumnSelectField[];
  manufacturingWorkCenter?: PlatformCore.SearchColumnSelectField[];
  memo?: PlatformCore.SearchColumnStringField[];
  name?: PlatformCore.SearchColumnStringField[];
  operationName?: PlatformCore.SearchColumnStringField[];
  operationYield?: PlatformCore.SearchColumnDoubleField[];
  runRate?: PlatformCore.SearchColumnDoubleField[];
  sequence?: PlatformCore.SearchColumnLongField[];
  setupTime?: PlatformCore.SearchColumnDoubleField[];
  subsidiary?: PlatformCore.SearchColumnSelectField[];
  customFieldList?: PlatformCore.SearchColumnCustomFieldList;
  constructor(props: ManufacturingRoutingSearchRowBasicProps) {
    super();
    this.autoCalculateLag = props.autoCalculateLag;
    this.billOfMaterials = props.billOfMaterials;
    this.externalId = props.externalId;
    this.internalId = props.internalId;
    this.isDefault = props.isDefault;
    this.isInactive = props.isInactive;
    this.item = props.item;
    this.lagAmount = props.lagAmount;
    this.lagType = props.lagType;
    this.lagUnits = props.lagUnits;
    this.location = props.location;
    this.manufacturingCostTemplate = props.manufacturingCostTemplate;
    this.manufacturingWorkCenter = props.manufacturingWorkCenter;
    this.memo = props.memo;
    this.name = props.name;
    this.operationName = props.operationName;
    this.operationYield = props.operationYield;
    this.runRate = props.runRate;
    this.sequence = props.sequence;
    this.setupTime = props.setupTime;
    this.subsidiary = props.subsidiary;
    this.customFieldList = props.customFieldList;
  }
}

export type ResourceAllocationSearchBasicProps = {
  allocationType?: PlatformCore.SearchMultiSelectField;
  allocationUnit?: PlatformCore.SearchEnumMultiSelectField;
  approvalStatus?: PlatformCore.SearchEnumMultiSelectField;
  customer?: PlatformCore.SearchMultiSelectField;
  endDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  nextApprover?: PlatformCore.SearchMultiSelectField;
  notes?: PlatformCore.SearchStringField;
  numberHours?: PlatformCore.SearchDoubleField;
  percentOfTime?: PlatformCore.SearchDoubleField;
  project?: PlatformCore.SearchMultiSelectField;
  requestedBy?: PlatformCore.SearchMultiSelectField;
  resource?: PlatformCore.SearchMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class ResourceAllocationSearchBasic extends PlatformCore.SearchRecordBasic {
  allocationType?: PlatformCore.SearchMultiSelectField;
  allocationUnit?: PlatformCore.SearchEnumMultiSelectField;
  approvalStatus?: PlatformCore.SearchEnumMultiSelectField;
  customer?: PlatformCore.SearchMultiSelectField;
  endDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  nextApprover?: PlatformCore.SearchMultiSelectField;
  notes?: PlatformCore.SearchStringField;
  numberHours?: PlatformCore.SearchDoubleField;
  percentOfTime?: PlatformCore.SearchDoubleField;
  project?: PlatformCore.SearchMultiSelectField;
  requestedBy?: PlatformCore.SearchMultiSelectField;
  resource?: PlatformCore.SearchMultiSelectField;
  startDate?: PlatformCore.SearchDateField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: ResourceAllocationSearchBasicProps) {
    super();
    this.allocationType = props.allocationType;
    this.allocationUnit = props.allocationUnit;
    this.approvalStatus = props.approvalStatus;
    this.customer = props.customer;
    this.endDate = props.endDate;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.nextApprover = props.nextApprover;
    this.notes = props.notes;
    this.numberHours = props.numberHours;
    this.percentOfTime = props.percentOfTime;
    this.project = props.project;
    this.requestedBy = props.requestedBy;
    this.resource = props.resource;
    this.startDate = props.startDate;
    this.customFieldList = props.customFieldList;
  }
}

export type ItemDemandPlanSearchBasicProps = {
  alternateSourceItem?: PlatformCore.SearchMultiSelectField;
  analysisDuration?: PlatformCore.SearchLongField;
  demandDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  item?: PlatformCore.SearchMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  location?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  projectionDuration?: PlatformCore.SearchLongField;
  projectionInterval?: PlatformCore.SearchMultiSelectField;
  projectionMethod?: PlatformCore.SearchEnumMultiSelectField;
  projectionStartDate?: PlatformCore.SearchDateField;
  quantity?: PlatformCore.SearchDoubleField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  units?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
};

export class ItemDemandPlanSearchBasic extends PlatformCore.SearchRecordBasic {
  alternateSourceItem?: PlatformCore.SearchMultiSelectField;
  analysisDuration?: PlatformCore.SearchLongField;
  demandDate?: PlatformCore.SearchDateField;
  externalId?: PlatformCore.SearchMultiSelectField;
  externalIdString?: PlatformCore.SearchStringField;
  internalId?: PlatformCore.SearchMultiSelectField;
  internalIdNumber?: PlatformCore.SearchLongField;
  item?: PlatformCore.SearchMultiSelectField;
  lastModifiedDate?: PlatformCore.SearchDateField;
  location?: PlatformCore.SearchMultiSelectField;
  memo?: PlatformCore.SearchStringField;
  projectionDuration?: PlatformCore.SearchLongField;
  projectionInterval?: PlatformCore.SearchMultiSelectField;
  projectionMethod?: PlatformCore.SearchEnumMultiSelectField;
  projectionStartDate?: PlatformCore.SearchDateField;
  quantity?: PlatformCore.SearchDoubleField;
  subsidiary?: PlatformCore.SearchMultiSelectField;
  units?: PlatformCore.SearchMultiSelectField;
  customFieldList?: PlatformCore.SearchCustomFieldList;
  constructor(props: ItemDemandPlanSearchBasicProps) {
    super();
    this.alternateSourceItem = props.alternateSourceItem;
    this.analysisDuration = props.analysisDuration;
    this.demandDate = props.demandDate;
    this.externalId = props.externalId;
    this.externalIdString = props.externalIdString;
    this.internalId = props.internalId;
    this.internalIdNumber = props.internalIdNumber;
    this.item = props.item;
    this.lastModifiedDate = props.lastModifiedDate;
    this.location = props.location;
    this.memo = props.memo;
    this.projectionDuration = props.projectionDuration;
    this.projectionInterval = props.projectionInterval;
    this.projectionMethod = props.projectionMethod;
    this.projectionStartDate = props.projectionStartDate;
    this.quantity = props.quantity;
    this.subsidiary = props.subsidiary;
    this.units = props.units;
    this.customFieldList = props.customFieldList;
  }
}

export type TaxDetailSearchRowBasicProps = {
  account?: PlatformCore.SearchColumnStringField[];
  details?: PlatformCore.SearchColumnStringField[];
  lineNumber?: PlatformCore.SearchColumnLongField[];
  taxAmount?: PlatformCore.SearchColumnDoubleField[];
  taxBasis?: PlatformCore.SearchColumnDoubleField[];
  taxCode?: PlatformCore.SearchColumnSelectField[];
  taxRate?: PlatformCore.SearchColumnDoubleField[];
  taxType?: PlatformCore.SearchColumnSelectField[];
  tranId?: PlatformCore.SearchColumnLongField[];
};

export class TaxDetailSearchRowBasic extends PlatformCore.SearchRowBasic {
  account?: PlatformCore.SearchColumnStringField[];
  details?: PlatformCore.SearchColumnStringField[];
  lineNumber?: PlatformCore.SearchColumnLongField[];
  taxAmount?: PlatformCore.SearchColumnDoubleField[];
  taxBasis?: PlatformCore.SearchColumnDoubleField[];
  taxCode?: PlatformCore.SearchColumnSelectField[];
  taxRate?: PlatformCore.SearchColumnDoubleField[];
  taxType?: PlatformCore.SearchColumnSelectField[];
  tranId?: PlatformCore.SearchColumnLongField[];
  constructor(props: TaxDetailSearchRowBasicProps) {
    super();
    this.account = props.account;
    this.details = props.details;
    this.lineNumber = props.lineNumber;
    this.taxAmount = props.taxAmount;
    this.taxBasis = props.taxBasis;
    this.taxCode = props.taxCode;
    this.taxRate = props.taxRate;
    this.taxType = props.taxType;
    this.tranId = props.tranId;
  }
}
