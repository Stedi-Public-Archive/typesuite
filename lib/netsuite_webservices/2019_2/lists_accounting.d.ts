import * as ListsAccountingTypes from "./lists_accounting_types";
import * as PlatformCore from "./platform_core";
import * as PlatformCommon from "./platform_common";
import * as PlatformCommonTypes from "./platform_common_types";
import { SoapMappingBase } from "../../soap-types";
export declare type PaymentCardProps = {
    lastFourDigits?: string;
    issuerIdNumber?: string;
    entity?: PlatformCore.RecordRef;
    mask?: string;
    paymentMethod?: PlatformCore.RecordRef;
    memo?: string;
    state?: ListsAccountingTypes.PaymentInstrumentState;
    isInactive?: boolean;
    preserveOnFile?: boolean;
    isDefault?: boolean;
    cardNumber?: string;
    expirationDate?: string;
    cardBrand?: ListsAccountingTypes.PaymentCardBrand;
    cardType?: ListsAccountingTypes.PaymentCardType;
    nameOnCard?: string;
    street?: string;
    zipCode?: string;
    validFromDate?: string;
    issueNumber?: string;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class PaymentCard extends PlatformCore.Record {
    lastFourDigits?: string;
    issuerIdNumber?: string;
    entity?: PlatformCore.RecordRef;
    mask?: string;
    paymentMethod?: PlatformCore.RecordRef;
    memo?: string;
    state?: ListsAccountingTypes.PaymentInstrumentState;
    isInactive?: boolean;
    preserveOnFile?: boolean;
    isDefault?: boolean;
    cardNumber?: string;
    expirationDate?: string;
    cardBrand?: ListsAccountingTypes.PaymentCardBrand;
    cardType?: ListsAccountingTypes.PaymentCardType;
    nameOnCard?: string;
    street?: string;
    zipCode?: string;
    validFromDate?: string;
    issueNumber?: string;
    internalId?: string;
    externalId?: string;
    constructor(props: PaymentCardProps);
}
export declare type InventoryNumberLocationsProps = {
    location?: string;
    quantityOnHand?: number;
    quantityAvailable?: number;
    quantityOnOrder?: number;
    quantityInTransit?: number;
};
export declare class InventoryNumberLocations extends SoapMappingBase {
    location?: string;
    quantityOnHand?: number;
    quantityAvailable?: number;
    quantityOnOrder?: number;
    quantityInTransit?: number;
    constructor(props: InventoryNumberLocationsProps);
}
export declare type OtherNameCategoryProps = {
    name?: string;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class OtherNameCategory extends PlatformCore.Record {
    name?: string;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
    constructor(props: OtherNameCategoryProps);
}
export declare type SalesRoleSearchProps = {
    basic?: PlatformCommon.SalesRoleSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class SalesRoleSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.SalesRoleSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: SalesRoleSearchProps);
}
export declare type MatrixOptionListProps = {
    matrixOption?: PlatformCore.SelectCustomFieldRef[];
};
export declare class MatrixOptionList extends SoapMappingBase {
    matrixOption?: PlatformCore.SelectCustomFieldRef[];
    constructor(props: MatrixOptionListProps);
}
export declare type FairValuePriceSearchProps = {
    basic?: PlatformCommon.FairValuePriceSearchBasic;
    itemJoin?: PlatformCommon.ItemSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
};
export declare class FairValuePriceSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.FairValuePriceSearchBasic;
    itemJoin?: PlatformCommon.ItemSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
    constructor(props: FairValuePriceSearchProps);
}
export declare type AccountLocalizationsProps = {
    accountingContext?: PlatformCore.RecordRef;
    acctNumber?: string;
    acctName?: string;
    legalName?: string;
    locale?: PlatformCommonTypes.Language;
};
export declare class AccountLocalizations extends SoapMappingBase {
    accountingContext?: PlatformCore.RecordRef;
    acctNumber?: string;
    acctName?: string;
    legalName?: string;
    locale?: PlatformCommonTypes.Language;
    constructor(props: AccountLocalizationsProps);
}
export declare type LotNumberedInventoryItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    includeChildren?: boolean;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isHazmatItem?: boolean;
    hazmatId?: string;
    hazmatShippingName?: string;
    hazmatHazardClass?: string;
    hazmatPackingGroup?: ListsAccountingTypes.HazmatPackingGroup;
    hazmatItemUnits?: string;
    hazmatItemUnitsQty?: number;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    costingMethod?: ListsAccountingTypes.ItemCostingMethod;
    subsidiaryList?: PlatformCore.RecordRefList;
    purchaseDescription?: string;
    copyDescription?: boolean;
    currency?: string;
    cogsAccount?: PlatformCore.RecordRef;
    intercoCogsAccount?: PlatformCore.RecordRef;
    vendor?: PlatformCore.RecordRef;
    salesDescription?: string;
    incomeAccount?: PlatformCore.RecordRef;
    intercoIncomeAccount?: PlatformCore.RecordRef;
    issueProduct?: PlatformCore.RecordRef;
    taxSchedule?: PlatformCore.RecordRef;
    dropshipExpenseAccount?: PlatformCore.RecordRef;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    isTaxable?: boolean;
    assetAccount?: PlatformCore.RecordRef;
    matchBillToReceipt?: boolean;
    billQtyVarianceAcct?: PlatformCore.RecordRef;
    billPriceVarianceAcct?: PlatformCore.RecordRef;
    billExchRateVarianceAcct?: PlatformCore.RecordRef;
    gainLossAccount?: PlatformCore.RecordRef;
    shippingCost?: number;
    handlingCost?: number;
    weight?: number;
    costingMethodDisplay?: string;
    shippingCostUnits?: string;
    handlingCostUnits?: string;
    unitsType?: PlatformCore.RecordRef;
    stockUnit?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    minimumQuantityUnits?: string;
    safetyStockLevelUnits?: string;
    billingSchedule?: PlatformCore.RecordRef;
    trackLandedCost?: boolean;
    matrixItemNameTemplate?: string;
    isDropShipItem?: boolean;
    isSpecialOrderItem?: boolean;
    stockDescription?: string;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    producer?: boolean;
    manufacturer?: string;
    revRecSchedule?: PlatformCore.RecordRef;
    mpn?: string;
    multManufactureAddr?: boolean;
    manufacturerAddr1?: string;
    manufacturerCity?: string;
    manufacturerState?: string;
    manufacturerZip?: string;
    countryOfManufacture?: PlatformCommonTypes.Country;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    roundUpAsComponent?: boolean;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    itemShipMethodList?: PlatformCore.RecordRefList;
    manufacturerTaxId?: string;
    scheduleBNumber?: string;
    scheduleBQuantity?: number;
    scheduleBCode?: string;
    manufacturerTariff?: string;
    preferenceCriterion?: ListsAccountingTypes.ItemPreferenceCriterion;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    shipPackage?: PlatformCore.RecordRef;
    shipIndividually?: boolean;
    softDescriptor?: PlatformCore.RecordRef;
    costCategory?: PlatformCore.RecordRef;
    pricesIncludeTax?: boolean;
    purchasePriceVarianceAcct?: PlatformCore.RecordRef;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    useMarginalRates?: boolean;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    transferPrice?: number;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    preferredLocation?: PlatformCore.RecordRef;
    isStorePickupAllowed?: boolean;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    cost?: number;
    costUnits?: string;
    reorderMultiple?: number;
    quantityReorderUnits?: string;
    totalValue?: number;
    useBins?: boolean;
    averageCost?: number;
    leadTime?: number;
    autoLeadTime?: boolean;
    lastPurchasePrice?: number;
    autoReorderPoint?: boolean;
    autoPreferredStockLevel?: boolean;
    preferredStockLevelDays?: number;
    safetyStockLevel?: number;
    safetyStockLevelDays?: number;
    backwardConsumptionDays?: number;
    seasonalDemand?: boolean;
    demandModifier?: number;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    weightUnit?: ListsAccountingTypes.ItemWeightUnit;
    weightUnits?: string;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    shoppingDotComCategory?: string;
    shopzillaCategoryId?: number;
    nexTagCategory?: string;
    quantityOnHand?: number;
    quantityOnHandUnits?: string;
    expirationDate?: string;
    lastInvtCountDate?: string;
    nextInvtCountDate?: string;
    invtCountInterval?: number;
    invtClassification?: ListsAccountingTypes.ItemInvtClassification;
    onHandValueMli?: number;
    serialNumbers?: string;
    reorderPoint?: number;
    preferredStockLevel?: number;
    reorderPointUnits?: string;
    defaultReturnCost?: number;
    supplyReplenishmentMethod?: PlatformCore.RecordRef;
    alternateDemandSourceItem?: PlatformCore.RecordRef;
    fixedLotSize?: number;
    periodicLotSizeType?: ListsAccountingTypes.PeriodicLotSizeType;
    supplyType?: PlatformCore.RecordRef;
    demandTimeFence?: number;
    supplyTimeFence?: number;
    rescheduleInDays?: number;
    rescheduleOutDays?: number;
    periodicLotSizeDays?: number;
    supplyLotSizingMethod?: PlatformCore.RecordRef;
    forwardConsumptionDays?: number;
    demandSource?: PlatformCore.RecordRef;
    quantityOnOrder?: number;
    preferredStockLevelUnits?: string;
    quantityCommitted?: number;
    quantityAvailable?: number;
    quantityBackOrdered?: number;
    purchaseTaxCode?: PlatformCore.RecordRef;
    rate?: number;
    salesTaxCode?: PlatformCore.RecordRef;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    onSpecial?: boolean;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    specialsDescription?: string;
    relatedItemsDescription?: string;
    featuredDescription?: string;
    productFeedList?: ProductFeedList;
    urlComponent?: string;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    itemVendorList?: ItemVendorList;
    pricingMatrix?: PricingMatrix;
    hierarchyVersionsList?: LotNumberedInventoryItemHierarchyVersionsList;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    itemNumberOptionsList?: PlatformCore.RecordRefList;
    numbersList?: LotNumberedInventoryItemNumbersList;
    binNumberList?: InventoryItemBinNumberList;
    siteCategoryList?: SiteCategoryList;
    locationsList?: LotNumberedInventoryItemLocationsList;
    translationsList?: TranslationList;
    presentationItemList?: PresentationItemList;
    futureHorizon?: number;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class LotNumberedInventoryItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    includeChildren?: boolean;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isHazmatItem?: boolean;
    hazmatId?: string;
    hazmatShippingName?: string;
    hazmatHazardClass?: string;
    hazmatPackingGroup?: ListsAccountingTypes.HazmatPackingGroup;
    hazmatItemUnits?: string;
    hazmatItemUnitsQty?: number;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    costingMethod?: ListsAccountingTypes.ItemCostingMethod;
    subsidiaryList?: PlatformCore.RecordRefList;
    purchaseDescription?: string;
    copyDescription?: boolean;
    currency?: string;
    cogsAccount?: PlatformCore.RecordRef;
    intercoCogsAccount?: PlatformCore.RecordRef;
    vendor?: PlatformCore.RecordRef;
    salesDescription?: string;
    incomeAccount?: PlatformCore.RecordRef;
    intercoIncomeAccount?: PlatformCore.RecordRef;
    issueProduct?: PlatformCore.RecordRef;
    taxSchedule?: PlatformCore.RecordRef;
    dropshipExpenseAccount?: PlatformCore.RecordRef;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    isTaxable?: boolean;
    assetAccount?: PlatformCore.RecordRef;
    matchBillToReceipt?: boolean;
    billQtyVarianceAcct?: PlatformCore.RecordRef;
    billPriceVarianceAcct?: PlatformCore.RecordRef;
    billExchRateVarianceAcct?: PlatformCore.RecordRef;
    gainLossAccount?: PlatformCore.RecordRef;
    shippingCost?: number;
    handlingCost?: number;
    weight?: number;
    costingMethodDisplay?: string;
    shippingCostUnits?: string;
    handlingCostUnits?: string;
    unitsType?: PlatformCore.RecordRef;
    stockUnit?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    minimumQuantityUnits?: string;
    safetyStockLevelUnits?: string;
    billingSchedule?: PlatformCore.RecordRef;
    trackLandedCost?: boolean;
    matrixItemNameTemplate?: string;
    isDropShipItem?: boolean;
    isSpecialOrderItem?: boolean;
    stockDescription?: string;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    producer?: boolean;
    manufacturer?: string;
    revRecSchedule?: PlatformCore.RecordRef;
    mpn?: string;
    multManufactureAddr?: boolean;
    manufacturerAddr1?: string;
    manufacturerCity?: string;
    manufacturerState?: string;
    manufacturerZip?: string;
    countryOfManufacture?: PlatformCommonTypes.Country;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    roundUpAsComponent?: boolean;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    itemShipMethodList?: PlatformCore.RecordRefList;
    manufacturerTaxId?: string;
    scheduleBNumber?: string;
    scheduleBQuantity?: number;
    scheduleBCode?: string;
    manufacturerTariff?: string;
    preferenceCriterion?: ListsAccountingTypes.ItemPreferenceCriterion;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    shipPackage?: PlatformCore.RecordRef;
    shipIndividually?: boolean;
    softDescriptor?: PlatformCore.RecordRef;
    costCategory?: PlatformCore.RecordRef;
    pricesIncludeTax?: boolean;
    purchasePriceVarianceAcct?: PlatformCore.RecordRef;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    useMarginalRates?: boolean;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    transferPrice?: number;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    preferredLocation?: PlatformCore.RecordRef;
    isStorePickupAllowed?: boolean;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    cost?: number;
    costUnits?: string;
    reorderMultiple?: number;
    quantityReorderUnits?: string;
    totalValue?: number;
    useBins?: boolean;
    averageCost?: number;
    leadTime?: number;
    autoLeadTime?: boolean;
    lastPurchasePrice?: number;
    autoReorderPoint?: boolean;
    autoPreferredStockLevel?: boolean;
    preferredStockLevelDays?: number;
    safetyStockLevel?: number;
    safetyStockLevelDays?: number;
    backwardConsumptionDays?: number;
    seasonalDemand?: boolean;
    demandModifier?: number;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    weightUnit?: ListsAccountingTypes.ItemWeightUnit;
    weightUnits?: string;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    shoppingDotComCategory?: string;
    shopzillaCategoryId?: number;
    nexTagCategory?: string;
    quantityOnHand?: number;
    quantityOnHandUnits?: string;
    expirationDate?: string;
    lastInvtCountDate?: string;
    nextInvtCountDate?: string;
    invtCountInterval?: number;
    invtClassification?: ListsAccountingTypes.ItemInvtClassification;
    onHandValueMli?: number;
    serialNumbers?: string;
    reorderPoint?: number;
    preferredStockLevel?: number;
    reorderPointUnits?: string;
    defaultReturnCost?: number;
    supplyReplenishmentMethod?: PlatformCore.RecordRef;
    alternateDemandSourceItem?: PlatformCore.RecordRef;
    fixedLotSize?: number;
    periodicLotSizeType?: ListsAccountingTypes.PeriodicLotSizeType;
    supplyType?: PlatformCore.RecordRef;
    demandTimeFence?: number;
    supplyTimeFence?: number;
    rescheduleInDays?: number;
    rescheduleOutDays?: number;
    periodicLotSizeDays?: number;
    supplyLotSizingMethod?: PlatformCore.RecordRef;
    forwardConsumptionDays?: number;
    demandSource?: PlatformCore.RecordRef;
    quantityOnOrder?: number;
    preferredStockLevelUnits?: string;
    quantityCommitted?: number;
    quantityAvailable?: number;
    quantityBackOrdered?: number;
    purchaseTaxCode?: PlatformCore.RecordRef;
    rate?: number;
    salesTaxCode?: PlatformCore.RecordRef;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    onSpecial?: boolean;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    specialsDescription?: string;
    relatedItemsDescription?: string;
    featuredDescription?: string;
    productFeedList?: ProductFeedList;
    urlComponent?: string;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    itemVendorList?: ItemVendorList;
    pricingMatrix?: PricingMatrix;
    hierarchyVersionsList?: LotNumberedInventoryItemHierarchyVersionsList;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    itemNumberOptionsList?: PlatformCore.RecordRefList;
    numbersList?: LotNumberedInventoryItemNumbersList;
    binNumberList?: InventoryItemBinNumberList;
    siteCategoryList?: SiteCategoryList;
    locationsList?: LotNumberedInventoryItemLocationsList;
    translationsList?: TranslationList;
    presentationItemList?: PresentationItemList;
    futureHorizon?: number;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: LotNumberedInventoryItemProps);
}
export declare type PricingMatrixProps = {
    pricing?: Pricing[];
    replaceAll?: boolean;
};
export declare class PricingMatrix extends SoapMappingBase {
    pricing?: Pricing[];
    replaceAll?: boolean;
    constructor(props: PricingMatrixProps);
}
export declare type UnitsTypeProps = {
    name?: string;
    isInactive?: boolean;
    uomList?: UnitsTypeUomList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class UnitsType extends PlatformCore.Record {
    name?: string;
    isInactive?: boolean;
    uomList?: UnitsTypeUomList;
    internalId?: string;
    externalId?: string;
    constructor(props: UnitsTypeProps);
}
export declare type ItemRevisionProps = {
    item?: PlatformCore.RecordRef;
    name?: string;
    effectiveDate?: string;
    obsoleteDate?: string;
    memo?: string;
    inactive?: boolean;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class ItemRevision extends PlatformCore.Record {
    item?: PlatformCore.RecordRef;
    name?: string;
    effectiveDate?: string;
    obsoleteDate?: string;
    memo?: string;
    inactive?: boolean;
    internalId?: string;
    externalId?: string;
    constructor(props: ItemRevisionProps);
}
export declare type OtherChargePurchaseItemHierarchyVersionsProps = {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
};
export declare class OtherChargePurchaseItemHierarchyVersions extends SoapMappingBase {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
    constructor(props: OtherChargePurchaseItemHierarchyVersionsProps);
}
export declare type SerializedAssemblyItemBillOfMaterialsListProps = {
    serializedAssemblyItemBillOfMaterials?: SerializedAssemblyItemBillOfMaterials[];
    replaceAll?: boolean;
};
export declare class SerializedAssemblyItemBillOfMaterialsList extends SoapMappingBase {
    serializedAssemblyItemBillOfMaterials?: SerializedAssemblyItemBillOfMaterials[];
    replaceAll?: boolean;
    constructor(props: SerializedAssemblyItemBillOfMaterialsListProps);
}
export declare type LocationSearchAdvancedProps = {
    criteria?: LocationSearch;
    columns?: LocationSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class LocationSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: LocationSearch;
    columns?: LocationSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: LocationSearchAdvancedProps);
}
export declare type BomSearchProps = {
    basic?: PlatformCommon.BomSearchBasic;
    assemblyItemJoin?: PlatformCommon.AssemblyItemBomSearchBasic;
    revisionJoin?: PlatformCommon.BomRevisionSearchBasic;
    transactionJoin?: PlatformCommon.TransactionSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
};
export declare class BomSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.BomSearchBasic;
    assemblyItemJoin?: PlatformCommon.AssemblyItemBomSearchBasic;
    revisionJoin?: PlatformCommon.BomRevisionSearchBasic;
    transactionJoin?: PlatformCommon.TransactionSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
    constructor(props: BomSearchProps);
}
export declare type RevRecTemplateSearchAdvancedProps = {
    criteria?: RevRecTemplateSearch;
    columns?: RevRecTemplateSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class RevRecTemplateSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: RevRecTemplateSearch;
    columns?: RevRecTemplateSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: RevRecTemplateSearchAdvancedProps);
}
export declare type AccountingPeriodFiscalCalendarsListProps = {
    accountingPeriodFiscalCalendars?: AccountingPeriodFiscalCalendars[];
    replaceAll?: boolean;
};
export declare class AccountingPeriodFiscalCalendarsList extends SoapMappingBase {
    accountingPeriodFiscalCalendars?: AccountingPeriodFiscalCalendars[];
    replaceAll?: boolean;
    constructor(props: AccountingPeriodFiscalCalendarsListProps);
}
export declare type LocationProps = {
    name?: string;
    parent?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    subsidiaryList?: PlatformCore.RecordRefList;
    isInactive?: boolean;
    tranPrefix?: string;
    mainAddress?: PlatformCommon.Address;
    returnAddress?: PlatformCommon.Address;
    locationType?: ListsAccountingTypes.LocationType;
    timeZone?: ListsAccountingTypes.LocationTimeZone;
    latitude?: number;
    longitude?: number;
    logo?: PlatformCore.RecordRef;
    useBins?: boolean;
    makeInventoryAvailable?: boolean;
    makeInventoryAvailableStore?: boolean;
    geolocationMethod?: ListsAccountingTypes.LocationGeolocationMethod;
    autoAssignmentRegionSetting?: ListsAccountingTypes.LocationAutoAssignmentRegionSetting;
    nextPickupCutOffTime?: string;
    bufferStock?: number;
    allowStorePickup?: boolean;
    storePickupBufferStock?: number;
    dailyShippingCapacity?: number;
    totalShippingCapacity?: number;
    includeLocationRegionsList?: LocationRegionsList;
    excludeLocationRegionsList?: LocationRegionsList;
    businessHoursList?: LocationBusinessHoursList;
    classTranslationList?: ClassTranslationList;
    includeInControlTower?: boolean;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class Location extends PlatformCore.Record {
    name?: string;
    parent?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    subsidiaryList?: PlatformCore.RecordRefList;
    isInactive?: boolean;
    tranPrefix?: string;
    mainAddress?: PlatformCommon.Address;
    returnAddress?: PlatformCommon.Address;
    locationType?: ListsAccountingTypes.LocationType;
    timeZone?: ListsAccountingTypes.LocationTimeZone;
    latitude?: number;
    longitude?: number;
    logo?: PlatformCore.RecordRef;
    useBins?: boolean;
    makeInventoryAvailable?: boolean;
    makeInventoryAvailableStore?: boolean;
    geolocationMethod?: ListsAccountingTypes.LocationGeolocationMethod;
    autoAssignmentRegionSetting?: ListsAccountingTypes.LocationAutoAssignmentRegionSetting;
    nextPickupCutOffTime?: string;
    bufferStock?: number;
    allowStorePickup?: boolean;
    storePickupBufferStock?: number;
    dailyShippingCapacity?: number;
    totalShippingCapacity?: number;
    includeLocationRegionsList?: LocationRegionsList;
    excludeLocationRegionsList?: LocationRegionsList;
    businessHoursList?: LocationBusinessHoursList;
    classTranslationList?: ClassTranslationList;
    includeInControlTower?: boolean;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: LocationProps);
}
export declare type NexusProps = {
    country?: PlatformCommonTypes.Country;
    state?: PlatformCore.RecordRef;
    taxAgency?: PlatformCore.RecordRef;
    taxAgencyPst?: PlatformCore.RecordRef;
    taxCode?: PlatformCore.RecordRef;
    description?: string;
    parentNexus?: PlatformCore.RecordRef;
    isInactive?: boolean;
    taxDateFromFulfillment?: boolean;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class Nexus extends PlatformCore.Record {
    country?: PlatformCommonTypes.Country;
    state?: PlatformCore.RecordRef;
    taxAgency?: PlatformCore.RecordRef;
    taxAgencyPst?: PlatformCore.RecordRef;
    taxCode?: PlatformCore.RecordRef;
    description?: string;
    parentNexus?: PlatformCore.RecordRef;
    isInactive?: boolean;
    taxDateFromFulfillment?: boolean;
    internalId?: string;
    externalId?: string;
    constructor(props: NexusProps);
}
export declare type ExpenseCategoryRatesListProps = {
    expenseCategoryRates?: ExpenseCategoryRates[];
    replaceAll?: boolean;
};
export declare class ExpenseCategoryRatesList extends SoapMappingBase {
    expenseCategoryRates?: ExpenseCategoryRates[];
    replaceAll?: boolean;
    constructor(props: ExpenseCategoryRatesListProps);
}
export declare type TermSearchProps = {
    basic?: PlatformCommon.TermSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class TermSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.TermSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: TermSearchProps);
}
export declare type AssemblyItemBillOfMaterialsListProps = {
    assemblyItemBillOfMaterials?: AssemblyItemBillOfMaterials[];
    replaceAll?: boolean;
};
export declare class AssemblyItemBillOfMaterialsList extends SoapMappingBase {
    assemblyItemBillOfMaterials?: AssemblyItemBillOfMaterials[];
    replaceAll?: boolean;
    constructor(props: AssemblyItemBillOfMaterialsListProps);
}
export declare type TaxTypeSearchAdvancedProps = {
    criteria?: TaxTypeSearch;
    columns?: TaxTypeSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class TaxTypeSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: TaxTypeSearch;
    columns?: TaxTypeSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: TaxTypeSearchAdvancedProps);
}
export declare type RevRecScheduleProps = {
    name?: string;
    amortizationType?: ListsAccountingTypes.RevRecScheduleAmortizationType;
    recurrenceType?: ListsAccountingTypes.RevRecScheduleRecurrenceType;
    recogIntervalSrc?: ListsAccountingTypes.RevRecScheduleRecogIntervalSrc;
    amortizationPeriod?: number;
    periodOffset?: number;
    revRecOffset?: number;
    initialAmount?: number;
    isInactive?: boolean;
    recurrenceList?: RevRecScheduleRecurrenceList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class RevRecSchedule extends PlatformCore.Record {
    name?: string;
    amortizationType?: ListsAccountingTypes.RevRecScheduleAmortizationType;
    recurrenceType?: ListsAccountingTypes.RevRecScheduleRecurrenceType;
    recogIntervalSrc?: ListsAccountingTypes.RevRecScheduleRecogIntervalSrc;
    amortizationPeriod?: number;
    periodOffset?: number;
    revRecOffset?: number;
    initialAmount?: number;
    isInactive?: boolean;
    recurrenceList?: RevRecScheduleRecurrenceList;
    internalId?: string;
    externalId?: string;
    constructor(props: RevRecScheduleProps);
}
export declare type CustomerCategorySearchRowProps = {
    basic?: PlatformCommon.CustomerCategorySearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class CustomerCategorySearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.CustomerCategorySearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: CustomerCategorySearchRowProps);
}
export declare type PaymentMethodVisualsProps = {
    flags?: string;
    location?: string;
};
export declare class PaymentMethodVisuals extends SoapMappingBase {
    flags?: string;
    location?: string;
    constructor(props: PaymentMethodVisualsProps);
}
export declare type OtherNameCategorySearchAdvancedProps = {
    criteria?: OtherNameCategorySearch;
    columns?: OtherNameCategorySearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class OtherNameCategorySearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: OtherNameCategorySearch;
    columns?: OtherNameCategorySearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: OtherNameCategorySearchAdvancedProps);
}
export declare type BillingScheduleRecurrenceListProps = {
    billingScheduleRecurrence?: BillingScheduleRecurrence[];
    replaceAll?: boolean;
};
export declare class BillingScheduleRecurrenceList extends SoapMappingBase {
    billingScheduleRecurrence?: BillingScheduleRecurrence[];
    replaceAll?: boolean;
    constructor(props: BillingScheduleRecurrenceListProps);
}
export declare type GiftCertificateSearchAdvancedProps = {
    criteria?: GiftCertificateSearch;
    columns?: GiftCertificateSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class GiftCertificateSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: GiftCertificateSearch;
    columns?: GiftCertificateSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: GiftCertificateSearchAdvancedProps);
}
export declare type SubtotalItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    displayName?: string;
    issueProduct?: PlatformCore.RecordRef;
    description?: string;
    includeChildren?: boolean;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    translationsList?: TranslationList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class SubtotalItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    displayName?: string;
    issueProduct?: PlatformCore.RecordRef;
    description?: string;
    includeChildren?: boolean;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    translationsList?: TranslationList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: SubtotalItemProps);
}
export declare type TaxGroupProps = {
    itemId?: string;
    description?: string;
    state?: string;
    subsidiaryList?: PlatformCore.RecordRefList;
    taxitem1?: PlatformCore.RecordRef;
    unitprice1?: string;
    taxitem2?: PlatformCore.RecordRef;
    unitprice2?: string;
    piggyback?: boolean;
    isInactive?: boolean;
    rate?: number;
    taxType?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    county?: string;
    city?: string;
    zip?: string;
    nexusCountry?: PlatformCore.RecordRef;
    isDefault?: boolean;
    taxItemList?: TaxGroupTaxItemList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class TaxGroup extends PlatformCore.Record {
    itemId?: string;
    description?: string;
    state?: string;
    subsidiaryList?: PlatformCore.RecordRefList;
    taxitem1?: PlatformCore.RecordRef;
    unitprice1?: string;
    taxitem2?: PlatformCore.RecordRef;
    unitprice2?: string;
    piggyback?: boolean;
    isInactive?: boolean;
    rate?: number;
    taxType?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    county?: string;
    city?: string;
    zip?: string;
    nexusCountry?: PlatformCore.RecordRef;
    isDefault?: boolean;
    taxItemList?: TaxGroupTaxItemList;
    internalId?: string;
    externalId?: string;
    constructor(props: TaxGroupProps);
}
export declare type PartnerCategoryProps = {
    name?: string;
    parent?: PlatformCore.RecordRef;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class PartnerCategory extends PlatformCore.Record {
    name?: string;
    parent?: PlatformCore.RecordRef;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
    constructor(props: PartnerCategoryProps);
}
export declare type RevRecScheduleSearchProps = {
    basic?: PlatformCommon.RevRecScheduleSearchBasic;
    appliedToTransactionJoin?: PlatformCommon.TransactionSearchBasic;
    customerJoin?: PlatformCommon.CustomerSearchBasic;
    itemJoin?: PlatformCommon.ItemSearchBasic;
    transactionJoin?: PlatformCommon.TransactionSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class RevRecScheduleSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.RevRecScheduleSearchBasic;
    appliedToTransactionJoin?: PlatformCommon.TransactionSearchBasic;
    customerJoin?: PlatformCommon.CustomerSearchBasic;
    itemJoin?: PlatformCommon.ItemSearchBasic;
    transactionJoin?: PlatformCommon.TransactionSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: RevRecScheduleSearchProps);
}
export declare type WinLossReasonSearchAdvancedProps = {
    criteria?: WinLossReasonSearch;
    columns?: WinLossReasonSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class WinLossReasonSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: WinLossReasonSearch;
    columns?: WinLossReasonSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: WinLossReasonSearchAdvancedProps);
}
export declare type InventoryItemBinNumberListProps = {
    binNumber?: InventoryItemBinNumber[];
    replaceAll?: boolean;
};
export declare class InventoryItemBinNumberList extends SoapMappingBase {
    binNumber?: InventoryItemBinNumber[];
    replaceAll?: boolean;
    constructor(props: InventoryItemBinNumberListProps);
}
export declare type PaymentMethodSearchRowProps = {
    basic?: PlatformCommon.PaymentMethodSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class PaymentMethodSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.PaymentMethodSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: PaymentMethodSearchRowProps);
}
export declare type LocationBusinessHoursListProps = {
    locationBusinessHours?: LocationBusinessHours[];
    replaceAll?: boolean;
};
export declare class LocationBusinessHoursList extends SoapMappingBase {
    locationBusinessHours?: LocationBusinessHours[];
    replaceAll?: boolean;
    constructor(props: LocationBusinessHoursListProps);
}
export declare type OtherChargePurchaseItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    purchaseDescription?: string;
    manufacturingChargeItem?: boolean;
    cost?: number;
    costUnits?: string;
    expenseAccount?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    unitsType?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    issueProduct?: PlatformCore.RecordRef;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isInactive?: boolean;
    matrixItemNameTemplate?: string;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    location?: PlatformCore.RecordRef;
    taxSchedule?: PlatformCore.RecordRef;
    deferralAccount?: PlatformCore.RecordRef;
    amortizationTemplate?: PlatformCore.RecordRef;
    residual?: string;
    amortizationPeriod?: number;
    isFulfillable?: boolean;
    generateAccruals?: boolean;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    costCategory?: PlatformCore.RecordRef;
    overheadType?: ListsAccountingTypes.ItemOverheadType;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    currency?: string;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    itemVendorList?: ItemVendorList;
    purchaseTaxCode?: PlatformCore.RecordRef;
    salesTaxCode?: PlatformCore.RecordRef;
    translationsList?: TranslationList;
    vendor?: PlatformCore.RecordRef;
    hierarchyVersionsList?: OtherChargePurchaseItemHierarchyVersionsList;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class OtherChargePurchaseItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    purchaseDescription?: string;
    manufacturingChargeItem?: boolean;
    cost?: number;
    costUnits?: string;
    expenseAccount?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    unitsType?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    issueProduct?: PlatformCore.RecordRef;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isInactive?: boolean;
    matrixItemNameTemplate?: string;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    location?: PlatformCore.RecordRef;
    taxSchedule?: PlatformCore.RecordRef;
    deferralAccount?: PlatformCore.RecordRef;
    amortizationTemplate?: PlatformCore.RecordRef;
    residual?: string;
    amortizationPeriod?: number;
    isFulfillable?: boolean;
    generateAccruals?: boolean;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    costCategory?: PlatformCore.RecordRef;
    overheadType?: ListsAccountingTypes.ItemOverheadType;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    currency?: string;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    itemVendorList?: ItemVendorList;
    purchaseTaxCode?: PlatformCore.RecordRef;
    salesTaxCode?: PlatformCore.RecordRef;
    translationsList?: TranslationList;
    vendor?: PlatformCore.RecordRef;
    hierarchyVersionsList?: OtherChargePurchaseItemHierarchyVersionsList;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: OtherChargePurchaseItemProps);
}
export declare type ItemGroupHierarchyVersionsProps = {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
};
export declare class ItemGroupHierarchyVersions extends SoapMappingBase {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
    constructor(props: ItemGroupHierarchyVersionsProps);
}
export declare type ClassTranslationProps = {
    locale?: string;
    language?: string;
    name?: string;
};
export declare class ClassTranslation extends SoapMappingBase {
    locale?: string;
    language?: string;
    name?: string;
    constructor(props: ClassTranslationProps);
}
export declare type CustomerMessageProps = {
    name?: string;
    description?: string;
    preferred?: boolean;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class CustomerMessage extends PlatformCore.Record {
    name?: string;
    description?: string;
    preferred?: boolean;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
    constructor(props: CustomerMessageProps);
}
export declare type ExpenseCategorySearchRowProps = {
    basic?: PlatformCommon.ExpenseCategorySearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
};
export declare class ExpenseCategorySearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.ExpenseCategorySearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
    constructor(props: ExpenseCategorySearchRowProps);
}
export declare type AssemblyItemHierarchyVersionsListProps = {
    assemblyItemHierarchyVersions?: AssemblyItemHierarchyVersions[];
    replaceAll?: boolean;
};
export declare class AssemblyItemHierarchyVersionsList extends SoapMappingBase {
    assemblyItemHierarchyVersions?: AssemblyItemHierarchyVersions[];
    replaceAll?: boolean;
    constructor(props: AssemblyItemHierarchyVersionsListProps);
}
export declare type CustomerCategoryProps = {
    name?: string;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class CustomerCategory extends PlatformCore.Record {
    name?: string;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
    constructor(props: CustomerCategoryProps);
}
export declare type BudgetCategoryProps = {
    name?: string;
    budgetType?: boolean;
    isInactive?: boolean;
    internalId?: string;
} & PlatformCore.RecordProps;
export declare class BudgetCategory extends PlatformCore.Record {
    name?: string;
    budgetType?: boolean;
    isInactive?: boolean;
    internalId?: string;
    constructor(props: BudgetCategoryProps);
}
export declare type BillingScheduleSearchRowProps = {
    basic?: PlatformCommon.BillingScheduleSearchRowBasic;
};
export declare class BillingScheduleSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.BillingScheduleSearchRowBasic;
    constructor(props: BillingScheduleSearchRowProps);
}
export declare type SubsidiaryProps = {
    name?: string;
    parent?: PlatformCore.RecordRef;
    isInactive?: boolean;
    showSubsidiaryName?: boolean;
    url?: string;
    logo?: PlatformCore.RecordRef;
    tranPrefix?: string;
    pageLogo?: PlatformCore.RecordRef;
    state?: string;
    country?: PlatformCommonTypes.Country;
    mainAddress?: PlatformCommon.Address;
    shippingAddress?: PlatformCommon.Address;
    returnAddress?: PlatformCommon.Address;
    legalName?: string;
    isElimination?: boolean;
    fiscalCalendar?: PlatformCore.RecordRef;
    taxFiscalCalendar?: PlatformCore.RecordRef;
    allowPayroll?: boolean;
    email?: string;
    currency?: PlatformCore.RecordRef;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    fax?: string;
    edition?: string;
    federalIdNumber?: string;
    addrLanguage?: string;
    nonConsol?: string;
    consol?: string;
    state1TaxNumber?: string;
    taxRegistrationList?: SubsidiaryTaxRegistrationList;
    ssnOrTin?: string;
    interCoAccount?: PlatformCore.RecordRef;
    nexusList?: SubsidiaryNexusList;
    accountingBookDetailList?: SubsidiaryAccountingBookDetailList;
    checkLayout?: PlatformCore.RecordRef;
    inboundEmail?: string;
    classTranslationList?: ClassTranslationList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class Subsidiary extends PlatformCore.Record {
    name?: string;
    parent?: PlatformCore.RecordRef;
    isInactive?: boolean;
    showSubsidiaryName?: boolean;
    url?: string;
    logo?: PlatformCore.RecordRef;
    tranPrefix?: string;
    pageLogo?: PlatformCore.RecordRef;
    state?: string;
    country?: PlatformCommonTypes.Country;
    mainAddress?: PlatformCommon.Address;
    shippingAddress?: PlatformCommon.Address;
    returnAddress?: PlatformCommon.Address;
    legalName?: string;
    isElimination?: boolean;
    fiscalCalendar?: PlatformCore.RecordRef;
    taxFiscalCalendar?: PlatformCore.RecordRef;
    allowPayroll?: boolean;
    email?: string;
    currency?: PlatformCore.RecordRef;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    fax?: string;
    edition?: string;
    federalIdNumber?: string;
    addrLanguage?: string;
    nonConsol?: string;
    consol?: string;
    state1TaxNumber?: string;
    taxRegistrationList?: SubsidiaryTaxRegistrationList;
    ssnOrTin?: string;
    interCoAccount?: PlatformCore.RecordRef;
    nexusList?: SubsidiaryNexusList;
    accountingBookDetailList?: SubsidiaryAccountingBookDetailList;
    checkLayout?: PlatformCore.RecordRef;
    inboundEmail?: string;
    classTranslationList?: ClassTranslationList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: SubsidiaryProps);
}
export declare type UnitsTypeSearchRowProps = {
    basic?: PlatformCommon.UnitsTypeSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class UnitsTypeSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.UnitsTypeSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: UnitsTypeSearchRowProps);
}
export declare type PricingGroupSearchProps = {
    basic?: PlatformCommon.PricingGroupSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class PricingGroupSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.PricingGroupSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: PricingGroupSearchProps);
}
export declare type BillingRatesMatrixProps = {
    billingRates?: BillingRates[];
    replaceAll?: boolean;
};
export declare class BillingRatesMatrix extends SoapMappingBase {
    billingRates?: BillingRates[];
    replaceAll?: boolean;
    constructor(props: BillingRatesMatrixProps);
}
export declare type BomRevisionComponentProps = {
    item?: PlatformCore.RecordRef;
    description?: string;
    componentYield?: number;
    bomQuantity?: number;
    itemSource?: PlatformCommonTypes.ItemSource;
    quantity?: number;
    units?: PlatformCore.RecordRef;
    internalId?: string;
    customFieldList?: PlatformCore.CustomFieldList;
};
export declare class BomRevisionComponent extends SoapMappingBase {
    item?: PlatformCore.RecordRef;
    description?: string;
    componentYield?: number;
    bomQuantity?: number;
    itemSource?: PlatformCommonTypes.ItemSource;
    quantity?: number;
    units?: PlatformCore.RecordRef;
    internalId?: string;
    customFieldList?: PlatformCore.CustomFieldList;
    constructor(props: BomRevisionComponentProps);
}
export declare type SerializedInventoryItemNumbersListProps = {
    numbers?: SerializedInventoryItemNumbers[];
    replaceAll?: boolean;
};
export declare class SerializedInventoryItemNumbersList extends SoapMappingBase {
    numbers?: SerializedInventoryItemNumbers[];
    replaceAll?: boolean;
    constructor(props: SerializedInventoryItemNumbersListProps);
}
export declare type PriceLevelSearchAdvancedProps = {
    criteria?: PriceLevelSearch;
    columns?: PriceLevelSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class PriceLevelSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: PriceLevelSearch;
    columns?: PriceLevelSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: PriceLevelSearchAdvancedProps);
}
export declare type ItemAccountMappingSearchAdvancedProps = {
    criteria?: ItemAccountMappingSearch;
    columns?: ItemAccountMappingSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class ItemAccountMappingSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: ItemAccountMappingSearch;
    columns?: ItemAccountMappingSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: ItemAccountMappingSearchAdvancedProps);
}
export declare type SalesRoleSearchAdvancedProps = {
    criteria?: SalesRoleSearch;
    columns?: SalesRoleSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class SalesRoleSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: SalesRoleSearch;
    columns?: SalesRoleSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: SalesRoleSearchAdvancedProps);
}
export declare type ItemMemberProps = {
    memberDescr?: string;
    componentYield?: number;
    bomQuantity?: number;
    itemSource?: PlatformCommonTypes.ItemSource;
    quantity?: number;
    memberUnit?: PlatformCore.RecordRef;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    taxSchedule?: PlatformCore.RecordRef;
    taxcode?: string;
    item?: PlatformCore.RecordRef;
    taxrate?: number;
    effectiveDate?: string;
    obsoleteDate?: string;
    effectiveRevision?: PlatformCore.RecordRef;
    obsoleteRevision?: PlatformCore.RecordRef;
    lineNumber?: number;
    memberKey?: string;
};
export declare class ItemMember extends SoapMappingBase {
    memberDescr?: string;
    componentYield?: number;
    bomQuantity?: number;
    itemSource?: PlatformCommonTypes.ItemSource;
    quantity?: number;
    memberUnit?: PlatformCore.RecordRef;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    taxSchedule?: PlatformCore.RecordRef;
    taxcode?: string;
    item?: PlatformCore.RecordRef;
    taxrate?: number;
    effectiveDate?: string;
    obsoleteDate?: string;
    effectiveRevision?: PlatformCore.RecordRef;
    obsoleteRevision?: PlatformCore.RecordRef;
    lineNumber?: number;
    memberKey?: string;
    constructor(props: ItemMemberProps);
}
export declare type PriceLevelSearchProps = {
    basic?: PlatformCommon.PriceLevelSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class PriceLevelSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.PriceLevelSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: PriceLevelSearchProps);
}
export declare type ItemGroupHierarchyVersionsListProps = {
    itemGroupHierarchyVersions?: ItemGroupHierarchyVersions[];
    replaceAll?: boolean;
};
export declare class ItemGroupHierarchyVersionsList extends SoapMappingBase {
    itemGroupHierarchyVersions?: ItemGroupHierarchyVersions[];
    replaceAll?: boolean;
    constructor(props: ItemGroupHierarchyVersionsListProps);
}
export declare type ItemSearchProps = {
    basic?: PlatformCommon.ItemSearchBasic;
    accountingBookRevRecScheduleJoin?: PlatformCommon.RevRecTemplateSearchBasic;
    assemblyItemBillOfMaterialsJoin?: PlatformCommon.AssemblyItemBomSearchBasic;
    binNumberJoin?: PlatformCommon.BinSearchBasic;
    binOnHandJoin?: PlatformCommon.ItemBinNumberSearchBasic;
    correlatedItemJoin?: PlatformCommon.ItemSearchBasic;
    effectiveRevisionJoin?: PlatformCommon.ItemRevisionSearchBasic;
    fileJoin?: PlatformCommon.FileSearchBasic;
    inventoryDetailJoin?: PlatformCommon.InventoryDetailSearchBasic;
    inventoryLocationJoin?: PlatformCommon.LocationSearchBasic;
    inventoryNumberJoin?: PlatformCommon.InventoryNumberSearchBasic;
    inventoryNumberBinOnHandJoin?: PlatformCommon.InventoryNumberBinSearchBasic;
    memberItemJoin?: PlatformCommon.ItemSearchBasic;
    obsoleteRevisionJoin?: PlatformCommon.ItemRevisionSearchBasic;
    parentJoin?: PlatformCommon.ItemSearchBasic;
    preferredLocationJoin?: PlatformCommon.LocationSearchBasic;
    preferredVendorJoin?: PlatformCommon.VendorSearchBasic;
    pricingJoin?: PlatformCommon.PricingSearchBasic;
    shopperJoin?: PlatformCommon.CustomerSearchBasic;
    transactionJoin?: PlatformCommon.TransactionSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    userNotesJoin?: PlatformCommon.NoteSearchBasic;
    vendorJoin?: PlatformCommon.VendorSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
};
export declare class ItemSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.ItemSearchBasic;
    accountingBookRevRecScheduleJoin?: PlatformCommon.RevRecTemplateSearchBasic;
    assemblyItemBillOfMaterialsJoin?: PlatformCommon.AssemblyItemBomSearchBasic;
    binNumberJoin?: PlatformCommon.BinSearchBasic;
    binOnHandJoin?: PlatformCommon.ItemBinNumberSearchBasic;
    correlatedItemJoin?: PlatformCommon.ItemSearchBasic;
    effectiveRevisionJoin?: PlatformCommon.ItemRevisionSearchBasic;
    fileJoin?: PlatformCommon.FileSearchBasic;
    inventoryDetailJoin?: PlatformCommon.InventoryDetailSearchBasic;
    inventoryLocationJoin?: PlatformCommon.LocationSearchBasic;
    inventoryNumberJoin?: PlatformCommon.InventoryNumberSearchBasic;
    inventoryNumberBinOnHandJoin?: PlatformCommon.InventoryNumberBinSearchBasic;
    memberItemJoin?: PlatformCommon.ItemSearchBasic;
    obsoleteRevisionJoin?: PlatformCommon.ItemRevisionSearchBasic;
    parentJoin?: PlatformCommon.ItemSearchBasic;
    preferredLocationJoin?: PlatformCommon.LocationSearchBasic;
    preferredVendorJoin?: PlatformCommon.VendorSearchBasic;
    pricingJoin?: PlatformCommon.PricingSearchBasic;
    shopperJoin?: PlatformCommon.CustomerSearchBasic;
    transactionJoin?: PlatformCommon.TransactionSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    userNotesJoin?: PlatformCommon.NoteSearchBasic;
    vendorJoin?: PlatformCommon.VendorSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
    constructor(props: ItemSearchProps);
}
export declare type NexusSearchAdvancedProps = {
    criteria?: NexusSearch;
    columns?: NexusSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class NexusSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: NexusSearch;
    columns?: NexusSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: NexusSearchAdvancedProps);
}
export declare type CostCategorySearchAdvancedProps = {
    criteria?: CostCategorySearch;
    columns?: CostCategorySearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class CostCategorySearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: CostCategorySearch;
    columns?: CostCategorySearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: CostCategorySearchAdvancedProps);
}
export declare type NonInventoryPurchaseItemHierarchyVersionsProps = {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
};
export declare class NonInventoryPurchaseItemHierarchyVersions extends SoapMappingBase {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
    constructor(props: NonInventoryPurchaseItemHierarchyVersionsProps);
}
export declare type DepartmentSearchRowProps = {
    basic?: PlatformCommon.DepartmentSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
};
export declare class DepartmentSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.DepartmentSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
    constructor(props: DepartmentSearchRowProps);
}
export declare type CostCategorySearchProps = {
    basic?: PlatformCommon.CostCategorySearchBasic;
    accountJoin?: PlatformCommon.AccountSearchBasic;
    transactionJoin?: PlatformCommon.TransactionSearchBasic;
};
export declare class CostCategorySearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.CostCategorySearchBasic;
    accountJoin?: PlatformCommon.AccountSearchBasic;
    transactionJoin?: PlatformCommon.TransactionSearchBasic;
    constructor(props: CostCategorySearchProps);
}
export declare type LotNumberedInventoryItemNumbersProps = {
    serialNumber?: PlatformCore.RecordRef;
    quantityOnHand?: number;
    expirationDate?: string;
};
export declare class LotNumberedInventoryItemNumbers extends SoapMappingBase {
    serialNumber?: PlatformCore.RecordRef;
    quantityOnHand?: number;
    expirationDate?: string;
    constructor(props: LotNumberedInventoryItemNumbersProps);
}
export declare type ExpenseCategorySearchProps = {
    basic?: PlatformCommon.ExpenseCategorySearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
};
export declare class ExpenseCategorySearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.ExpenseCategorySearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
    constructor(props: ExpenseCategorySearchProps);
}
export declare type CurrencyRateSearchAdvancedProps = {
    criteria?: CurrencyRateSearch;
    columns?: CurrencyRateSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class CurrencyRateSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: CurrencyRateSearch;
    columns?: CurrencyRateSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: CurrencyRateSearchAdvancedProps);
}
export declare type BinProps = {
    binNumber?: string;
    location?: PlatformCore.RecordRef;
    memo?: string;
    isInactive?: boolean;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class Bin extends PlatformCore.Record {
    binNumber?: string;
    location?: PlatformCore.RecordRef;
    memo?: string;
    isInactive?: boolean;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: BinProps);
}
export declare type CurrencyRateSearchProps = {
    basic?: PlatformCommon.CurrencyRateSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class CurrencyRateSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.CurrencyRateSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: CurrencyRateSearchProps);
}
export declare type GlobalAccountMappingSearchRowProps = {
    basic?: PlatformCommon.GlobalAccountMappingSearchRowBasic;
    classJoin?: PlatformCommon.ClassificationSearchRowBasic;
    departmentJoin?: PlatformCommon.DepartmentSearchRowBasic;
    destinationAccountJoin?: PlatformCommon.AccountSearchRowBasic;
    locationJoin?: PlatformCommon.LocationSearchRowBasic;
    sourceAccountJoin?: PlatformCommon.AccountSearchRowBasic;
    subsidiaryJoin?: PlatformCommon.SubsidiarySearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
};
export declare class GlobalAccountMappingSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.GlobalAccountMappingSearchRowBasic;
    classJoin?: PlatformCommon.ClassificationSearchRowBasic;
    departmentJoin?: PlatformCommon.DepartmentSearchRowBasic;
    destinationAccountJoin?: PlatformCommon.AccountSearchRowBasic;
    locationJoin?: PlatformCommon.LocationSearchRowBasic;
    sourceAccountJoin?: PlatformCommon.AccountSearchRowBasic;
    subsidiaryJoin?: PlatformCommon.SubsidiarySearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
    constructor(props: GlobalAccountMappingSearchRowProps);
}
export declare type InventoryNumberProps = {
    inventoryNumber?: string;
    item?: PlatformCore.RecordRef;
    status?: string;
    units?: string;
    expirationDate?: string;
    memo?: string;
    locationsList?: InventoryNumberLocationsList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class InventoryNumber extends PlatformCore.Record {
    inventoryNumber?: string;
    item?: PlatformCore.RecordRef;
    status?: string;
    units?: string;
    expirationDate?: string;
    memo?: string;
    locationsList?: InventoryNumberLocationsList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: InventoryNumberProps);
}
export declare type TaxAcctProps = {
    name?: string;
    description?: string;
    nexus?: PlatformCore.RecordRef;
    country?: PlatformCommonTypes.Country;
    taxAcctType?: ListsAccountingTypes.TaxAcctType;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class TaxAcct extends PlatformCore.Record {
    name?: string;
    description?: string;
    nexus?: PlatformCore.RecordRef;
    country?: PlatformCommonTypes.Country;
    taxAcctType?: ListsAccountingTypes.TaxAcctType;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
    constructor(props: TaxAcctProps);
}
export declare type CostCategoryProps = {
    name?: string;
    account?: PlatformCore.RecordRef;
    itemCostType?: ListsAccountingTypes.CostCategoryItemCostType;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class CostCategory extends PlatformCore.Record {
    name?: string;
    account?: PlatformCore.RecordRef;
    itemCostType?: ListsAccountingTypes.CostCategoryItemCostType;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
    constructor(props: CostCategoryProps);
}
export declare type CurrencyRateProps = {
    baseCurrency?: PlatformCore.RecordRef;
    transactionCurrency?: PlatformCore.RecordRef;
    exchangeRate?: number;
    effectiveDate?: string;
    internalId?: string;
} & PlatformCore.RecordProps;
export declare class CurrencyRate extends PlatformCore.Record {
    baseCurrency?: PlatformCore.RecordRef;
    transactionCurrency?: PlatformCore.RecordRef;
    exchangeRate?: number;
    effectiveDate?: string;
    internalId?: string;
    constructor(props: CurrencyRateProps);
}
export declare type InventoryNumberSearchAdvancedProps = {
    criteria?: InventoryNumberSearch;
    columns?: InventoryNumberSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class InventoryNumberSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: InventoryNumberSearch;
    columns?: InventoryNumberSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: InventoryNumberSearchAdvancedProps);
}
export declare type ItemSearchAdvancedProps = {
    criteria?: ItemSearch;
    columns?: ItemSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class ItemSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: ItemSearch;
    columns?: ItemSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: ItemSearchAdvancedProps);
}
export declare type InventoryItemLocationsListProps = {
    locations?: InventoryItemLocations[];
    replaceAll?: boolean;
};
export declare class InventoryItemLocationsList extends SoapMappingBase {
    locations?: InventoryItemLocations[];
    replaceAll?: boolean;
    constructor(props: InventoryItemLocationsListProps);
}
export declare type ClassificationSearchAdvancedProps = {
    criteria?: ClassificationSearch;
    columns?: ClassificationSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class ClassificationSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: ClassificationSearch;
    columns?: ClassificationSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: ClassificationSearchAdvancedProps);
}
export declare type ServiceItemTaskTemplatesProps = {
    taskName?: string;
    taskStartOffset?: number;
    taskDuration?: PlatformCore.Duration;
};
export declare class ServiceItemTaskTemplates extends SoapMappingBase {
    taskName?: string;
    taskStartOffset?: number;
    taskDuration?: PlatformCore.Duration;
    constructor(props: ServiceItemTaskTemplatesProps);
}
export declare type ServiceItemTaskTemplatesListProps = {
    taskTemplates?: ServiceItemTaskTemplates[];
    replaceAll?: boolean;
};
export declare class ServiceItemTaskTemplatesList extends SoapMappingBase {
    taskTemplates?: ServiceItemTaskTemplates[];
    replaceAll?: boolean;
    constructor(props: ServiceItemTaskTemplatesListProps);
}
export declare type LotNumberedAssemblyItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    printItems?: boolean;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    useComponentYield?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    subsidiaryList?: PlatformCore.RecordRefList;
    department?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    costCategory?: PlatformCore.RecordRef;
    description?: string;
    cogsAccount?: PlatformCore.RecordRef;
    vendor?: PlatformCore.RecordRef;
    incomeAccount?: PlatformCore.RecordRef;
    intercoIncomeAccount?: PlatformCore.RecordRef;
    assetAccount?: PlatformCore.RecordRef;
    matchBillToReceipt?: boolean;
    billQtyVarianceAcct?: PlatformCore.RecordRef;
    billPriceVarianceAcct?: PlatformCore.RecordRef;
    billExchRateVarianceAcct?: PlatformCore.RecordRef;
    gainLossAccount?: PlatformCore.RecordRef;
    salesTaxCode?: PlatformCore.RecordRef;
    purchaseTaxCode?: PlatformCore.RecordRef;
    prodQtyVarianceAcct?: PlatformCore.RecordRef;
    prodPriceVarianceAcct?: PlatformCore.RecordRef;
    purchasePriceVarianceAcct?: PlatformCore.RecordRef;
    wipVarianceAcct?: PlatformCore.RecordRef;
    taxSchedule?: PlatformCore.RecordRef;
    scrapAcct?: PlatformCore.RecordRef;
    shippingCost?: number;
    wipAcct?: PlatformCore.RecordRef;
    handlingCost?: number;
    weight?: number;
    weightUnit?: ListsAccountingTypes.ItemWeightUnit;
    costingMethod?: ListsAccountingTypes.ItemCostingMethod;
    isTaxable?: boolean;
    costingMethodDisplay?: string;
    rate?: number;
    unitsType?: PlatformCore.RecordRef;
    stockUnit?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    trackLandedCost?: boolean;
    matrixItemNameTemplate?: string;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    stockDescription?: string;
    producer?: boolean;
    manufacturer?: string;
    mpn?: string;
    multManufactureAddr?: boolean;
    manufactureraddr1?: string;
    manufacturerCity?: string;
    manufacturerState?: string;
    manufacturerZip?: string;
    countryOfManufacture?: PlatformCommonTypes.Country;
    effectiveBomControl?: ListsAccountingTypes.AssemblyItemEffectiveBomControl;
    manufacturerTaxId?: string;
    defaultRevision?: string;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    roundUpAsComponent?: boolean;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    isDropShipItem?: boolean;
    isPhantom?: boolean;
    itemShipMethodList?: PlatformCore.RecordRefList;
    scheduleBNumber?: string;
    scheduleBQuantity?: number;
    scheduleBCode?: PlatformCore.RecordRef;
    manufacturerTariff?: string;
    preferenceCriterion?: ListsAccountingTypes.ItemPreferenceCriterion;
    issueProduct?: PlatformCore.RecordRef;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: PlatformCore.RecordRef;
    isSpecialWorkOrderItem?: boolean;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    buildEntireAssembly?: boolean;
    quantityOnHand?: number;
    useMarginalRates?: boolean;
    reorderMultiple?: number;
    cost?: number;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    isHazmatItem?: boolean;
    hazmatId?: string;
    hazmatShippingName?: string;
    hazmatHazardClass?: string;
    hazmatPackingGroup?: ListsAccountingTypes.HazmatPackingGroup;
    hazmatItemUnits?: string;
    hazmatItemUnitsQty?: number;
    costEstimate?: number;
    transferPrice?: number;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    intercoCogsAccount?: PlatformCore.RecordRef;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    unbuildVarianceAccount?: PlatformCore.RecordRef;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    dropshipExpenseAccount?: PlatformCore.RecordRef;
    preferredLocation?: PlatformCore.RecordRef;
    isStorePickupAllowed?: boolean;
    totalValue?: number;
    useBins?: boolean;
    averageCost?: number;
    lastPurchasePrice?: number;
    purchaseDescription?: string;
    leadTime?: number;
    autoLeadTime?: boolean;
    buildTime?: number;
    safetyStockLevel?: number;
    safetyStockLevelDays?: number;
    seasonalDemand?: boolean;
    serialNumbers?: string;
    reorderPoint?: number;
    preferredStockLevel?: number;
    expirationDate?: string;
    lastInvtCountDate?: string;
    nextInvtCountDate?: string;
    invtCountInterval?: number;
    invtClassification?: ListsAccountingTypes.ItemInvtClassification;
    demandModifier?: number;
    autoReorderPoint?: boolean;
    autoPreferredStockLevel?: boolean;
    preferredStockLevelDays?: number;
    shipIndividually?: boolean;
    shipPackage?: PlatformCore.RecordRef;
    defaultReturnCost?: number;
    supplyReplenishmentMethod?: PlatformCore.RecordRef;
    alternateDemandSourceItem?: PlatformCore.RecordRef;
    fixedLotSize?: number;
    supplyType?: PlatformCore.RecordRef;
    demandTimeFence?: number;
    supplyTimeFence?: number;
    rescheduleInDays?: number;
    rescheduleOutDays?: number;
    supplyLotSizingMethod?: PlatformCore.RecordRef;
    demandSource?: PlatformCore.RecordRef;
    quantityCommitted?: number;
    quantityAvailable?: number;
    quantityBackOrdered?: number;
    quantityOnOrder?: number;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    urlComponent?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    shoppingDotComCategory?: string;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    shopzillaCategoryId?: number;
    nexTagCategory?: string;
    productFeedList?: ProductFeedList;
    relatedItemsDescription?: string;
    onSpecial?: boolean;
    specialsDescription?: string;
    featuredDescription?: string;
    itemOptionsList?: ItemOptionsList;
    itemNumberOptionsList?: PlatformCore.RecordRefList;
    itemVendorList?: ItemVendorList;
    pricingMatrix?: PricingMatrix;
    billOfMaterialsList?: LotNumberedAssemblyItemBillOfMaterialsList;
    memberList?: ItemMemberList;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    locationsList?: LotNumberedInventoryItemLocationsList;
    siteCategoryList?: SiteCategoryList;
    binNumberList?: InventoryItemBinNumberList;
    numbersList?: LotNumberedInventoryItemNumbersList;
    translationsList?: TranslationList;
    presentationItemList?: PresentationItemList;
    hierarchyVersionsList?: LotNumberedAssemblyItemHierarchyVersionsList;
    futureHorizon?: number;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class LotNumberedAssemblyItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    printItems?: boolean;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    useComponentYield?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    subsidiaryList?: PlatformCore.RecordRefList;
    department?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    costCategory?: PlatformCore.RecordRef;
    description?: string;
    cogsAccount?: PlatformCore.RecordRef;
    vendor?: PlatformCore.RecordRef;
    incomeAccount?: PlatformCore.RecordRef;
    intercoIncomeAccount?: PlatformCore.RecordRef;
    assetAccount?: PlatformCore.RecordRef;
    matchBillToReceipt?: boolean;
    billQtyVarianceAcct?: PlatformCore.RecordRef;
    billPriceVarianceAcct?: PlatformCore.RecordRef;
    billExchRateVarianceAcct?: PlatformCore.RecordRef;
    gainLossAccount?: PlatformCore.RecordRef;
    salesTaxCode?: PlatformCore.RecordRef;
    purchaseTaxCode?: PlatformCore.RecordRef;
    prodQtyVarianceAcct?: PlatformCore.RecordRef;
    prodPriceVarianceAcct?: PlatformCore.RecordRef;
    purchasePriceVarianceAcct?: PlatformCore.RecordRef;
    wipVarianceAcct?: PlatformCore.RecordRef;
    taxSchedule?: PlatformCore.RecordRef;
    scrapAcct?: PlatformCore.RecordRef;
    shippingCost?: number;
    wipAcct?: PlatformCore.RecordRef;
    handlingCost?: number;
    weight?: number;
    weightUnit?: ListsAccountingTypes.ItemWeightUnit;
    costingMethod?: ListsAccountingTypes.ItemCostingMethod;
    isTaxable?: boolean;
    costingMethodDisplay?: string;
    rate?: number;
    unitsType?: PlatformCore.RecordRef;
    stockUnit?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    trackLandedCost?: boolean;
    matrixItemNameTemplate?: string;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    stockDescription?: string;
    producer?: boolean;
    manufacturer?: string;
    mpn?: string;
    multManufactureAddr?: boolean;
    manufactureraddr1?: string;
    manufacturerCity?: string;
    manufacturerState?: string;
    manufacturerZip?: string;
    countryOfManufacture?: PlatformCommonTypes.Country;
    effectiveBomControl?: ListsAccountingTypes.AssemblyItemEffectiveBomControl;
    manufacturerTaxId?: string;
    defaultRevision?: string;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    roundUpAsComponent?: boolean;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    isDropShipItem?: boolean;
    isPhantom?: boolean;
    itemShipMethodList?: PlatformCore.RecordRefList;
    scheduleBNumber?: string;
    scheduleBQuantity?: number;
    scheduleBCode?: PlatformCore.RecordRef;
    manufacturerTariff?: string;
    preferenceCriterion?: ListsAccountingTypes.ItemPreferenceCriterion;
    issueProduct?: PlatformCore.RecordRef;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: PlatformCore.RecordRef;
    isSpecialWorkOrderItem?: boolean;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    buildEntireAssembly?: boolean;
    quantityOnHand?: number;
    useMarginalRates?: boolean;
    reorderMultiple?: number;
    cost?: number;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    isHazmatItem?: boolean;
    hazmatId?: string;
    hazmatShippingName?: string;
    hazmatHazardClass?: string;
    hazmatPackingGroup?: ListsAccountingTypes.HazmatPackingGroup;
    hazmatItemUnits?: string;
    hazmatItemUnitsQty?: number;
    costEstimate?: number;
    transferPrice?: number;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    intercoCogsAccount?: PlatformCore.RecordRef;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    unbuildVarianceAccount?: PlatformCore.RecordRef;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    dropshipExpenseAccount?: PlatformCore.RecordRef;
    preferredLocation?: PlatformCore.RecordRef;
    isStorePickupAllowed?: boolean;
    totalValue?: number;
    useBins?: boolean;
    averageCost?: number;
    lastPurchasePrice?: number;
    purchaseDescription?: string;
    leadTime?: number;
    autoLeadTime?: boolean;
    buildTime?: number;
    safetyStockLevel?: number;
    safetyStockLevelDays?: number;
    seasonalDemand?: boolean;
    serialNumbers?: string;
    reorderPoint?: number;
    preferredStockLevel?: number;
    expirationDate?: string;
    lastInvtCountDate?: string;
    nextInvtCountDate?: string;
    invtCountInterval?: number;
    invtClassification?: ListsAccountingTypes.ItemInvtClassification;
    demandModifier?: number;
    autoReorderPoint?: boolean;
    autoPreferredStockLevel?: boolean;
    preferredStockLevelDays?: number;
    shipIndividually?: boolean;
    shipPackage?: PlatformCore.RecordRef;
    defaultReturnCost?: number;
    supplyReplenishmentMethod?: PlatformCore.RecordRef;
    alternateDemandSourceItem?: PlatformCore.RecordRef;
    fixedLotSize?: number;
    supplyType?: PlatformCore.RecordRef;
    demandTimeFence?: number;
    supplyTimeFence?: number;
    rescheduleInDays?: number;
    rescheduleOutDays?: number;
    supplyLotSizingMethod?: PlatformCore.RecordRef;
    demandSource?: PlatformCore.RecordRef;
    quantityCommitted?: number;
    quantityAvailable?: number;
    quantityBackOrdered?: number;
    quantityOnOrder?: number;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    urlComponent?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    shoppingDotComCategory?: string;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    shopzillaCategoryId?: number;
    nexTagCategory?: string;
    productFeedList?: ProductFeedList;
    relatedItemsDescription?: string;
    onSpecial?: boolean;
    specialsDescription?: string;
    featuredDescription?: string;
    itemOptionsList?: ItemOptionsList;
    itemNumberOptionsList?: PlatformCore.RecordRefList;
    itemVendorList?: ItemVendorList;
    pricingMatrix?: PricingMatrix;
    billOfMaterialsList?: LotNumberedAssemblyItemBillOfMaterialsList;
    memberList?: ItemMemberList;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    locationsList?: LotNumberedInventoryItemLocationsList;
    siteCategoryList?: SiteCategoryList;
    binNumberList?: InventoryItemBinNumberList;
    numbersList?: LotNumberedInventoryItemNumbersList;
    translationsList?: TranslationList;
    presentationItemList?: PresentationItemList;
    hierarchyVersionsList?: LotNumberedAssemblyItemHierarchyVersionsList;
    futureHorizon?: number;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: LotNumberedAssemblyItemProps);
}
export declare type ConsolidatedExchangeRateSearchAdvancedProps = {
    criteria?: ConsolidatedExchangeRateSearch;
    columns?: ConsolidatedExchangeRateSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class ConsolidatedExchangeRateSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: ConsolidatedExchangeRateSearch;
    columns?: ConsolidatedExchangeRateSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: ConsolidatedExchangeRateSearchAdvancedProps);
}
export declare type WinLossReasonSearchRowProps = {
    basic?: PlatformCommon.WinLossReasonSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class WinLossReasonSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.WinLossReasonSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: WinLossReasonSearchRowProps);
}
export declare type InventoryItemHierarchyVersionsListProps = {
    inventoryItemHierarchyVersions?: InventoryItemHierarchyVersions[];
    replaceAll?: boolean;
};
export declare class InventoryItemHierarchyVersionsList extends SoapMappingBase {
    inventoryItemHierarchyVersions?: InventoryItemHierarchyVersions[];
    replaceAll?: boolean;
    constructor(props: InventoryItemHierarchyVersionsListProps);
}
export declare type MerchandiseHierarchyNodeHierarchyVersionsProps = {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyLevel?: PlatformCore.RecordRef;
    parentNode?: PlatformCore.RecordRef;
};
export declare class MerchandiseHierarchyNodeHierarchyVersions extends SoapMappingBase {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyLevel?: PlatformCore.RecordRef;
    parentNode?: PlatformCore.RecordRef;
    constructor(props: MerchandiseHierarchyNodeHierarchyVersionsProps);
}
export declare type SerializedInventoryItemNumbersProps = {
    serialNumber?: PlatformCore.RecordRef;
};
export declare class SerializedInventoryItemNumbers extends SoapMappingBase {
    serialNumber?: PlatformCore.RecordRef;
    constructor(props: SerializedInventoryItemNumbersProps);
}
export declare type RevRecScheduleSearchAdvancedProps = {
    criteria?: RevRecScheduleSearch;
    columns?: RevRecScheduleSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class RevRecScheduleSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: RevRecScheduleSearch;
    columns?: RevRecScheduleSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: RevRecScheduleSearchAdvancedProps);
}
export declare type NonInventoryPurchaseItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    purchaseDescription?: string;
    cost?: number;
    costUnits?: string;
    expenseAccount?: PlatformCore.RecordRef;
    issueProduct?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    unitsType?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    includeChildren?: boolean;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isInactive?: boolean;
    matrixItemNameTemplate?: string;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    taxSchedule?: PlatformCore.RecordRef;
    deferralAccount?: PlatformCore.RecordRef;
    amortizationTemplate?: PlatformCore.RecordRef;
    residual?: string;
    amortizationPeriod?: number;
    isFulfillable?: boolean;
    generateAccruals?: boolean;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    costCategory?: PlatformCore.RecordRef;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    currency?: string;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    itemVendorList?: ItemVendorList;
    purchaseTaxCode?: PlatformCore.RecordRef;
    salesTaxCode?: PlatformCore.RecordRef;
    translationsList?: TranslationList;
    vendor?: PlatformCore.RecordRef;
    hierarchyVersionsList?: NonInventoryPurchaseItemHierarchyVersionsList;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class NonInventoryPurchaseItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    purchaseDescription?: string;
    cost?: number;
    costUnits?: string;
    expenseAccount?: PlatformCore.RecordRef;
    issueProduct?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    unitsType?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    includeChildren?: boolean;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isInactive?: boolean;
    matrixItemNameTemplate?: string;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    taxSchedule?: PlatformCore.RecordRef;
    deferralAccount?: PlatformCore.RecordRef;
    amortizationTemplate?: PlatformCore.RecordRef;
    residual?: string;
    amortizationPeriod?: number;
    isFulfillable?: boolean;
    generateAccruals?: boolean;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    costCategory?: PlatformCore.RecordRef;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    currency?: string;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    itemVendorList?: ItemVendorList;
    purchaseTaxCode?: PlatformCore.RecordRef;
    salesTaxCode?: PlatformCore.RecordRef;
    translationsList?: TranslationList;
    vendor?: PlatformCore.RecordRef;
    hierarchyVersionsList?: NonInventoryPurchaseItemHierarchyVersionsList;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: NonInventoryPurchaseItemProps);
}
export declare type SubsidiaryAccountingBookDetailListProps = {
    subsidiaryAccountingBookDetail?: SubsidiaryAccountingBookDetail[];
    replaceAll?: boolean;
};
export declare class SubsidiaryAccountingBookDetailList extends SoapMappingBase {
    subsidiaryAccountingBookDetail?: SubsidiaryAccountingBookDetail[];
    replaceAll?: boolean;
    constructor(props: SubsidiaryAccountingBookDetailListProps);
}
export declare type OtherChargeResaleItemHierarchyVersionsListProps = {
    otherChargeResaleItemHierarchyVersions?: OtherChargeResaleItemHierarchyVersions[];
    replaceAll?: boolean;
};
export declare class OtherChargeResaleItemHierarchyVersionsList extends SoapMappingBase {
    otherChargeResaleItemHierarchyVersions?: OtherChargeResaleItemHierarchyVersions[];
    replaceAll?: boolean;
    constructor(props: OtherChargeResaleItemHierarchyVersionsListProps);
}
export declare type NonInventoryPurchaseItemHierarchyVersionsListProps = {
    nonInventoryPurchaseItemHierarchyVersions?: NonInventoryPurchaseItemHierarchyVersions[];
    replaceAll?: boolean;
};
export declare class NonInventoryPurchaseItemHierarchyVersionsList extends SoapMappingBase {
    nonInventoryPurchaseItemHierarchyVersions?: NonInventoryPurchaseItemHierarchyVersions[];
    replaceAll?: boolean;
    constructor(props: NonInventoryPurchaseItemHierarchyVersionsListProps);
}
export declare type OtherChargeResaleItemHierarchyVersionsProps = {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
};
export declare class OtherChargeResaleItemHierarchyVersions extends SoapMappingBase {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
    constructor(props: OtherChargeResaleItemHierarchyVersionsProps);
}
export declare type BomRevisionProps = {
    customForm?: PlatformCore.RecordRef;
    name?: string;
    createdDate?: string;
    billOfMaterials?: PlatformCore.RecordRef;
    memo?: string;
    isInactive?: boolean;
    effectiveStartDate?: string;
    effectiveEndDate?: string;
    componentList?: BomRevisionComponentList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class BomRevision extends PlatformCore.Record {
    customForm?: PlatformCore.RecordRef;
    name?: string;
    createdDate?: string;
    billOfMaterials?: PlatformCore.RecordRef;
    memo?: string;
    isInactive?: boolean;
    effectiveStartDate?: string;
    effectiveEndDate?: string;
    componentList?: BomRevisionComponentList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: BomRevisionProps);
}
export declare type MerchandiseHierarchyNodeSearchProps = {
    basic?: PlatformCommon.MerchandiseHierarchyNodeSearchBasic;
    parentNodeJoin?: PlatformCommon.MerchandiseHierarchyNodeSearchBasic;
};
export declare class MerchandiseHierarchyNodeSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.MerchandiseHierarchyNodeSearchBasic;
    parentNodeJoin?: PlatformCommon.MerchandiseHierarchyNodeSearchBasic;
    constructor(props: MerchandiseHierarchyNodeSearchProps);
}
export declare type AccountLocalizationsListProps = {
    accountLocalizations?: AccountLocalizations[];
    replaceAll?: boolean;
};
export declare class AccountLocalizationsList extends SoapMappingBase {
    accountLocalizations?: AccountLocalizations[];
    replaceAll?: boolean;
    constructor(props: AccountLocalizationsListProps);
}
export declare type AccountProps = {
    acctType?: ListsAccountingTypes.AccountType;
    unitsType?: PlatformCore.RecordRef;
    unit?: PlatformCore.RecordRef;
    acctNumber?: string;
    acctName?: string;
    legalName?: string;
    includeChildren?: boolean;
    currency?: PlatformCore.RecordRef;
    exchangeRate?: string;
    generalRate?: ListsAccountingTypes.ConsolidatedRate;
    parent?: PlatformCore.RecordRef;
    cashFlowRate?: ListsAccountingTypes.ConsolidatedRate;
    billableExpensesAcct?: PlatformCore.RecordRef;
    deferralAcct?: PlatformCore.RecordRef;
    description?: string;
    curDocNum?: number;
    isInactive?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    restrictToAccountingBookList?: PlatformCore.RecordRefList;
    inventory?: boolean;
    eliminate?: boolean;
    subsidiaryList?: PlatformCore.RecordRefList;
    category1099Misc?: PlatformCore.RecordRef;
    localizationsList?: AccountLocalizationsList;
    openingBalance?: number;
    tranDate?: string;
    revalue?: boolean;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class Account extends PlatformCore.Record {
    acctType?: ListsAccountingTypes.AccountType;
    unitsType?: PlatformCore.RecordRef;
    unit?: PlatformCore.RecordRef;
    acctNumber?: string;
    acctName?: string;
    legalName?: string;
    includeChildren?: boolean;
    currency?: PlatformCore.RecordRef;
    exchangeRate?: string;
    generalRate?: ListsAccountingTypes.ConsolidatedRate;
    parent?: PlatformCore.RecordRef;
    cashFlowRate?: ListsAccountingTypes.ConsolidatedRate;
    billableExpensesAcct?: PlatformCore.RecordRef;
    deferralAcct?: PlatformCore.RecordRef;
    description?: string;
    curDocNum?: number;
    isInactive?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    restrictToAccountingBookList?: PlatformCore.RecordRefList;
    inventory?: boolean;
    eliminate?: boolean;
    subsidiaryList?: PlatformCore.RecordRefList;
    category1099Misc?: PlatformCore.RecordRef;
    localizationsList?: AccountLocalizationsList;
    openingBalance?: number;
    tranDate?: string;
    revalue?: boolean;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: AccountProps);
}
export declare type LeadSourceProps = {
    name?: string;
    description?: string;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class LeadSource extends PlatformCore.Record {
    name?: string;
    description?: string;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
    constructor(props: LeadSourceProps);
}
export declare type PartnerCategorySearchAdvancedProps = {
    criteria?: PartnerCategorySearch;
    columns?: PartnerCategorySearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class PartnerCategorySearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: PartnerCategorySearch;
    columns?: PartnerCategorySearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: PartnerCategorySearchAdvancedProps);
}
export declare type TaxGroupTaxItemProps = {
    taxName?: PlatformCore.RecordRef;
    rate?: number;
    basis?: number;
    taxType?: string;
};
export declare class TaxGroupTaxItem extends SoapMappingBase {
    taxName?: PlatformCore.RecordRef;
    rate?: number;
    basis?: number;
    taxType?: string;
    constructor(props: TaxGroupTaxItemProps);
}
export declare type VendorCategorySearchProps = {
    basic?: PlatformCommon.VendorCategorySearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class VendorCategorySearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.VendorCategorySearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: VendorCategorySearchProps);
}
export declare type TermPercentagesListProps = {
    termPercentages?: TermPercentages[];
    replaceAll?: boolean;
};
export declare class TermPercentagesList extends SoapMappingBase {
    termPercentages?: TermPercentages[];
    replaceAll?: boolean;
    constructor(props: TermPercentagesListProps);
}
export declare type AccountingPeriodSearchRowProps = {
    basic?: PlatformCommon.AccountingPeriodSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    userNotesJoin?: PlatformCommon.NoteSearchRowBasic;
};
export declare class AccountingPeriodSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.AccountingPeriodSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    userNotesJoin?: PlatformCommon.NoteSearchRowBasic;
    constructor(props: AccountingPeriodSearchRowProps);
}
export declare type StateProps = {
    country?: PlatformCommonTypes.Country;
    fullName?: string;
    shortname?: string;
    internalId?: string;
} & PlatformCore.RecordProps;
export declare class State extends PlatformCore.Record {
    country?: PlatformCommonTypes.Country;
    fullName?: string;
    shortname?: string;
    internalId?: string;
    constructor(props: StateProps);
}
export declare type SalesTaxItemProps = {
    itemId?: string;
    displayName?: string;
    description?: string;
    rate?: string;
    taxType?: PlatformCore.RecordRef;
    taxAgency?: PlatformCore.RecordRef;
    purchaseAccount?: PlatformCore.RecordRef;
    saleAccount?: PlatformCore.RecordRef;
    isInactive?: boolean;
    effectiveFrom?: string;
    validUntil?: string;
    subsidiaryList?: PlatformCore.RecordRefList;
    includeChildren?: boolean;
    eccode?: boolean;
    reverseCharge?: boolean;
    parent?: PlatformCore.RecordRef;
    service?: boolean;
    exempt?: boolean;
    isDefault?: boolean;
    excludeFromTaxReports?: boolean;
    available?: ListsAccountingTypes.SalesTaxItemAvailable;
    export?: boolean;
    taxAccount?: PlatformCore.RecordRef;
    county?: string;
    city?: string;
    state?: string;
    zip?: string;
    nexusCountry?: PlatformCore.RecordRef;
    name?: string;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class SalesTaxItem extends PlatformCore.Record {
    itemId?: string;
    displayName?: string;
    description?: string;
    rate?: string;
    taxType?: PlatformCore.RecordRef;
    taxAgency?: PlatformCore.RecordRef;
    purchaseAccount?: PlatformCore.RecordRef;
    saleAccount?: PlatformCore.RecordRef;
    isInactive?: boolean;
    effectiveFrom?: string;
    validUntil?: string;
    subsidiaryList?: PlatformCore.RecordRefList;
    includeChildren?: boolean;
    eccode?: boolean;
    reverseCharge?: boolean;
    parent?: PlatformCore.RecordRef;
    service?: boolean;
    exempt?: boolean;
    isDefault?: boolean;
    excludeFromTaxReports?: boolean;
    available?: ListsAccountingTypes.SalesTaxItemAvailable;
    export?: boolean;
    taxAccount?: PlatformCore.RecordRef;
    county?: string;
    city?: string;
    state?: string;
    zip?: string;
    nexusCountry?: PlatformCore.RecordRef;
    name?: string;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: SalesTaxItemProps);
}
export declare type OtherNameCategorySearchProps = {
    basic?: PlatformCommon.OtherNameCategorySearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class OtherNameCategorySearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.OtherNameCategorySearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: OtherNameCategorySearchProps);
}
export declare type PartnerCategorySearchProps = {
    basic?: PlatformCommon.PartnerCategorySearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class PartnerCategorySearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.PartnerCategorySearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: PartnerCategorySearchProps);
}
export declare type RevRecTemplateRecurrenceListProps = {
    revRecTemplateRecurrence?: RevRecTemplateRecurrence[];
    replaceAll?: boolean;
};
export declare class RevRecTemplateRecurrenceList extends SoapMappingBase {
    revRecTemplateRecurrence?: RevRecTemplateRecurrence[];
    replaceAll?: boolean;
    constructor(props: RevRecTemplateRecurrenceListProps);
}
export declare type TaxGroupSearchRowProps = {
    basic?: PlatformCommon.TaxGroupSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class TaxGroupSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.TaxGroupSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: TaxGroupSearchRowProps);
}
export declare type KitItemHierarchyVersionsProps = {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
};
export declare class KitItemHierarchyVersions extends SoapMappingBase {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
    constructor(props: KitItemHierarchyVersionsProps);
}
export declare type LotNumberedInventoryItemLocationsProps = {
    location?: string;
    quantityOnHand?: number;
    onHandValueMli?: number;
    serialNumbers?: string;
    expirationDate?: string;
    averageCostMli?: number;
    lastPurchasePriceMli?: number;
    reorderPoint?: number;
    locationAllowStorePickup?: boolean;
    locationStorePickupBufferStock?: number;
    locationQtyAvailForStorePickup?: number;
    preferredStockLevel?: number;
    leadTime?: number;
    defaultReturnCost?: number;
    safetyStockLevel?: number;
    cost?: number;
    inventoryCostTemplate?: PlatformCore.RecordRef;
    buildTime?: number;
    lastInvtCountDate?: string;
    nextInvtCountDate?: string;
    isWip?: boolean;
    invtCountInterval?: number;
    invtClassification?: ListsAccountingTypes.ItemInvtClassification;
    costingLotSize?: number;
    quantityOnOrder?: number;
    quantityCommitted?: number;
    quantityAvailable?: number;
    quantityBackOrdered?: number;
    locationId?: PlatformCore.RecordRef;
    locationlookup?: PlatformCore.RecordRef;
    locationDisplay?: string;
    supplyReplenishmentMethod?: PlatformCore.RecordRef;
    alternateDemandSourceItem?: PlatformCore.RecordRef;
    fixedLotSize?: number;
    periodicLotSizeType?: ListsAccountingTypes.PeriodicLotSizeType;
    periodicLotSizeDays?: number;
    supplyType?: PlatformCore.RecordRef;
    supplyLotSizingMethod?: PlatformCore.RecordRef;
    demandSource?: PlatformCore.RecordRef;
    backwardConsumptionDays?: number;
    forwardConsumptionDays?: number;
    demandTimeFence?: number;
    supplyTimeFence?: number;
    rescheduleInDays?: number;
    rescheduleOutDays?: number;
};
export declare class LotNumberedInventoryItemLocations extends SoapMappingBase {
    location?: string;
    quantityOnHand?: number;
    onHandValueMli?: number;
    serialNumbers?: string;
    expirationDate?: string;
    averageCostMli?: number;
    lastPurchasePriceMli?: number;
    reorderPoint?: number;
    locationAllowStorePickup?: boolean;
    locationStorePickupBufferStock?: number;
    locationQtyAvailForStorePickup?: number;
    preferredStockLevel?: number;
    leadTime?: number;
    defaultReturnCost?: number;
    safetyStockLevel?: number;
    cost?: number;
    inventoryCostTemplate?: PlatformCore.RecordRef;
    buildTime?: number;
    lastInvtCountDate?: string;
    nextInvtCountDate?: string;
    isWip?: boolean;
    invtCountInterval?: number;
    invtClassification?: ListsAccountingTypes.ItemInvtClassification;
    costingLotSize?: number;
    quantityOnOrder?: number;
    quantityCommitted?: number;
    quantityAvailable?: number;
    quantityBackOrdered?: number;
    locationId?: PlatformCore.RecordRef;
    locationlookup?: PlatformCore.RecordRef;
    locationDisplay?: string;
    supplyReplenishmentMethod?: PlatformCore.RecordRef;
    alternateDemandSourceItem?: PlatformCore.RecordRef;
    fixedLotSize?: number;
    periodicLotSizeType?: ListsAccountingTypes.PeriodicLotSizeType;
    periodicLotSizeDays?: number;
    supplyType?: PlatformCore.RecordRef;
    supplyLotSizingMethod?: PlatformCore.RecordRef;
    demandSource?: PlatformCore.RecordRef;
    backwardConsumptionDays?: number;
    forwardConsumptionDays?: number;
    demandTimeFence?: number;
    supplyTimeFence?: number;
    rescheduleInDays?: number;
    rescheduleOutDays?: number;
    constructor(props: LotNumberedInventoryItemLocationsProps);
}
export declare type WinLossReasonProps = {
    name?: string;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class WinLossReason extends PlatformCore.Record {
    name?: string;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
    constructor(props: WinLossReasonProps);
}
export declare type AssemblyItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    printItems?: boolean;
    vendor?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    subsidiaryList?: PlatformCore.RecordRefList;
    department?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    description?: string;
    cogsAccount?: PlatformCore.RecordRef;
    incomeAccount?: PlatformCore.RecordRef;
    intercoIncomeAccount?: PlatformCore.RecordRef;
    assetAccount?: PlatformCore.RecordRef;
    matchBillToReceipt?: boolean;
    billQtyVarianceAcct?: PlatformCore.RecordRef;
    billPriceVarianceAcct?: PlatformCore.RecordRef;
    billExchRateVarianceAcct?: PlatformCore.RecordRef;
    gainLossAccount?: PlatformCore.RecordRef;
    salesTaxCode?: PlatformCore.RecordRef;
    useComponentYield?: boolean;
    wipVarianceAcct?: PlatformCore.RecordRef;
    purchaseTaxCode?: PlatformCore.RecordRef;
    scrapAcct?: PlatformCore.RecordRef;
    taxSchedule?: PlatformCore.RecordRef;
    wipAcct?: PlatformCore.RecordRef;
    shippingCost?: number;
    handlingCost?: number;
    weight?: number;
    weightUnit?: ListsAccountingTypes.ItemWeightUnit;
    isTaxable?: boolean;
    costingMethod?: ListsAccountingTypes.ItemCostingMethod;
    rate?: number;
    costingMethodDisplay?: string;
    unitsType?: PlatformCore.RecordRef;
    stockUnit?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    trackLandedCost?: boolean;
    matrixItemNameTemplate?: string;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    stockDescription?: string;
    producer?: boolean;
    manufacturer?: string;
    mpn?: string;
    multManufactureAddr?: boolean;
    manufactureraddr1?: string;
    manufacturerCity?: string;
    manufacturerState?: string;
    manufacturerZip?: string;
    countryOfManufacture?: PlatformCommonTypes.Country;
    effectiveBomControl?: ListsAccountingTypes.AssemblyItemEffectiveBomControl;
    defaultRevision?: string;
    roundUpAsComponent?: boolean;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    isDropShipItem?: boolean;
    isPhantom?: boolean;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    itemShipMethodList?: PlatformCore.RecordRefList;
    manufacturerTaxId?: string;
    scheduleBNumber?: string;
    scheduleBQuantity?: number;
    scheduleBCode?: PlatformCore.RecordRef;
    manufacturerTariff?: string;
    preferenceCriterion?: ListsAccountingTypes.ItemPreferenceCriterion;
    issueProduct?: PlatformCore.RecordRef;
    minimumQuantity?: number;
    lastInvtCountDate?: string;
    nextInvtCountDate?: string;
    invtCountInterval?: number;
    invtClassification?: ListsAccountingTypes.ItemInvtClassification;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: PlatformCore.RecordRef;
    isSpecialWorkOrderItem?: boolean;
    costCategory?: PlatformCore.RecordRef;
    pricesIncludeTax?: boolean;
    prodQtyVarianceAcct?: PlatformCore.RecordRef;
    prodPriceVarianceAcct?: PlatformCore.RecordRef;
    purchasePriceVarianceAcct?: PlatformCore.RecordRef;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    buildEntireAssembly?: boolean;
    quantityOnHand?: number;
    useMarginalRates?: boolean;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    isHazmatItem?: boolean;
    hazmatId?: string;
    hazmatShippingName?: string;
    hazmatHazardClass?: string;
    hazmatPackingGroup?: ListsAccountingTypes.HazmatPackingGroup;
    hazmatItemUnits?: string;
    hazmatItemUnitsQty?: number;
    costEstimate?: number;
    transferPrice?: number;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    intercoCogsAccount?: PlatformCore.RecordRef;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    unbuildVarianceAccount?: PlatformCore.RecordRef;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    dropshipExpenseAccount?: PlatformCore.RecordRef;
    preferredLocation?: PlatformCore.RecordRef;
    isStorePickupAllowed?: boolean;
    totalValue?: number;
    useBins?: boolean;
    averageCost?: number;
    leadTime?: number;
    autoLeadTime?: boolean;
    buildTime?: number;
    lastPurchasePrice?: number;
    purchaseDescription?: string;
    safetyStockLevel?: number;
    safetyStockLevelDays?: number;
    seasonalDemand?: boolean;
    reorderMultiple?: number;
    cost?: number;
    reorderPoint?: number;
    demandModifier?: number;
    distributionNetwork?: PlatformCore.RecordRef;
    distributionCategory?: PlatformCore.RecordRef;
    preferredStockLevel?: number;
    autoReorderPoint?: boolean;
    autoPreferredStockLevel?: boolean;
    preferredStockLevelDays?: number;
    quantityCommitted?: number;
    shipIndividually?: boolean;
    quantityAvailable?: number;
    shipPackage?: PlatformCore.RecordRef;
    quantityBackOrdered?: number;
    storeDisplayName?: string;
    defaultReturnCost?: number;
    supplyReplenishmentMethod?: PlatformCore.RecordRef;
    alternateDemandSourceItem?: PlatformCore.RecordRef;
    fixedLotSize?: number;
    supplyType?: PlatformCore.RecordRef;
    demandTimeFence?: number;
    supplyTimeFence?: number;
    rescheduleInDays?: number;
    rescheduleOutDays?: number;
    supplyLotSizingMethod?: PlatformCore.RecordRef;
    demandSource?: PlatformCore.RecordRef;
    quantityOnOrder?: number;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    urlComponent?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    shoppingDotComCategory?: string;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    shopzillaCategoryId?: number;
    nexTagCategory?: string;
    productFeedList?: ProductFeedList;
    relatedItemsDescription?: string;
    onSpecial?: boolean;
    specialsDescription?: string;
    featuredDescription?: string;
    itemOptionsList?: ItemOptionsList;
    itemNumberOptionsList?: PlatformCore.RecordRefList;
    itemVendorList?: ItemVendorList;
    pricingMatrix?: PricingMatrix;
    memberList?: ItemMemberList;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    billOfMaterialsList?: AssemblyItemBillOfMaterialsList;
    locationsList?: InventoryItemLocationsList;
    siteCategoryList?: SiteCategoryList;
    binNumberList?: InventoryItemBinNumberList;
    translationsList?: TranslationList;
    presentationItemList?: PresentationItemList;
    hierarchyVersionsList?: AssemblyItemHierarchyVersionsList;
    futureHorizon?: number;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class AssemblyItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    printItems?: boolean;
    vendor?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    subsidiaryList?: PlatformCore.RecordRefList;
    department?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    description?: string;
    cogsAccount?: PlatformCore.RecordRef;
    incomeAccount?: PlatformCore.RecordRef;
    intercoIncomeAccount?: PlatformCore.RecordRef;
    assetAccount?: PlatformCore.RecordRef;
    matchBillToReceipt?: boolean;
    billQtyVarianceAcct?: PlatformCore.RecordRef;
    billPriceVarianceAcct?: PlatformCore.RecordRef;
    billExchRateVarianceAcct?: PlatformCore.RecordRef;
    gainLossAccount?: PlatformCore.RecordRef;
    salesTaxCode?: PlatformCore.RecordRef;
    useComponentYield?: boolean;
    wipVarianceAcct?: PlatformCore.RecordRef;
    purchaseTaxCode?: PlatformCore.RecordRef;
    scrapAcct?: PlatformCore.RecordRef;
    taxSchedule?: PlatformCore.RecordRef;
    wipAcct?: PlatformCore.RecordRef;
    shippingCost?: number;
    handlingCost?: number;
    weight?: number;
    weightUnit?: ListsAccountingTypes.ItemWeightUnit;
    isTaxable?: boolean;
    costingMethod?: ListsAccountingTypes.ItemCostingMethod;
    rate?: number;
    costingMethodDisplay?: string;
    unitsType?: PlatformCore.RecordRef;
    stockUnit?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    trackLandedCost?: boolean;
    matrixItemNameTemplate?: string;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    stockDescription?: string;
    producer?: boolean;
    manufacturer?: string;
    mpn?: string;
    multManufactureAddr?: boolean;
    manufactureraddr1?: string;
    manufacturerCity?: string;
    manufacturerState?: string;
    manufacturerZip?: string;
    countryOfManufacture?: PlatformCommonTypes.Country;
    effectiveBomControl?: ListsAccountingTypes.AssemblyItemEffectiveBomControl;
    defaultRevision?: string;
    roundUpAsComponent?: boolean;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    isDropShipItem?: boolean;
    isPhantom?: boolean;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    itemShipMethodList?: PlatformCore.RecordRefList;
    manufacturerTaxId?: string;
    scheduleBNumber?: string;
    scheduleBQuantity?: number;
    scheduleBCode?: PlatformCore.RecordRef;
    manufacturerTariff?: string;
    preferenceCriterion?: ListsAccountingTypes.ItemPreferenceCriterion;
    issueProduct?: PlatformCore.RecordRef;
    minimumQuantity?: number;
    lastInvtCountDate?: string;
    nextInvtCountDate?: string;
    invtCountInterval?: number;
    invtClassification?: ListsAccountingTypes.ItemInvtClassification;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: PlatformCore.RecordRef;
    isSpecialWorkOrderItem?: boolean;
    costCategory?: PlatformCore.RecordRef;
    pricesIncludeTax?: boolean;
    prodQtyVarianceAcct?: PlatformCore.RecordRef;
    prodPriceVarianceAcct?: PlatformCore.RecordRef;
    purchasePriceVarianceAcct?: PlatformCore.RecordRef;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    buildEntireAssembly?: boolean;
    quantityOnHand?: number;
    useMarginalRates?: boolean;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    isHazmatItem?: boolean;
    hazmatId?: string;
    hazmatShippingName?: string;
    hazmatHazardClass?: string;
    hazmatPackingGroup?: ListsAccountingTypes.HazmatPackingGroup;
    hazmatItemUnits?: string;
    hazmatItemUnitsQty?: number;
    costEstimate?: number;
    transferPrice?: number;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    intercoCogsAccount?: PlatformCore.RecordRef;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    unbuildVarianceAccount?: PlatformCore.RecordRef;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    dropshipExpenseAccount?: PlatformCore.RecordRef;
    preferredLocation?: PlatformCore.RecordRef;
    isStorePickupAllowed?: boolean;
    totalValue?: number;
    useBins?: boolean;
    averageCost?: number;
    leadTime?: number;
    autoLeadTime?: boolean;
    buildTime?: number;
    lastPurchasePrice?: number;
    purchaseDescription?: string;
    safetyStockLevel?: number;
    safetyStockLevelDays?: number;
    seasonalDemand?: boolean;
    reorderMultiple?: number;
    cost?: number;
    reorderPoint?: number;
    demandModifier?: number;
    distributionNetwork?: PlatformCore.RecordRef;
    distributionCategory?: PlatformCore.RecordRef;
    preferredStockLevel?: number;
    autoReorderPoint?: boolean;
    autoPreferredStockLevel?: boolean;
    preferredStockLevelDays?: number;
    quantityCommitted?: number;
    shipIndividually?: boolean;
    quantityAvailable?: number;
    shipPackage?: PlatformCore.RecordRef;
    quantityBackOrdered?: number;
    storeDisplayName?: string;
    defaultReturnCost?: number;
    supplyReplenishmentMethod?: PlatformCore.RecordRef;
    alternateDemandSourceItem?: PlatformCore.RecordRef;
    fixedLotSize?: number;
    supplyType?: PlatformCore.RecordRef;
    demandTimeFence?: number;
    supplyTimeFence?: number;
    rescheduleInDays?: number;
    rescheduleOutDays?: number;
    supplyLotSizingMethod?: PlatformCore.RecordRef;
    demandSource?: PlatformCore.RecordRef;
    quantityOnOrder?: number;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    urlComponent?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    shoppingDotComCategory?: string;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    shopzillaCategoryId?: number;
    nexTagCategory?: string;
    productFeedList?: ProductFeedList;
    relatedItemsDescription?: string;
    onSpecial?: boolean;
    specialsDescription?: string;
    featuredDescription?: string;
    itemOptionsList?: ItemOptionsList;
    itemNumberOptionsList?: PlatformCore.RecordRefList;
    itemVendorList?: ItemVendorList;
    pricingMatrix?: PricingMatrix;
    memberList?: ItemMemberList;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    billOfMaterialsList?: AssemblyItemBillOfMaterialsList;
    locationsList?: InventoryItemLocationsList;
    siteCategoryList?: SiteCategoryList;
    binNumberList?: InventoryItemBinNumberList;
    translationsList?: TranslationList;
    presentationItemList?: PresentationItemList;
    hierarchyVersionsList?: AssemblyItemHierarchyVersionsList;
    futureHorizon?: number;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: AssemblyItemProps);
}
export declare type TranslationListProps = {
    translation?: Translation[];
    replaceAll?: boolean;
};
export declare class TranslationList extends SoapMappingBase {
    translation?: Translation[];
    replaceAll?: boolean;
    constructor(props: TranslationListProps);
}
export declare type ServiceResaleItemHierarchyVersionsListProps = {
    serviceResaleItemHierarchyVersions?: ServiceResaleItemHierarchyVersions[];
    replaceAll?: boolean;
};
export declare class ServiceResaleItemHierarchyVersionsList extends SoapMappingBase {
    serviceResaleItemHierarchyVersions?: ServiceResaleItemHierarchyVersions[];
    replaceAll?: boolean;
    constructor(props: ServiceResaleItemHierarchyVersionsListProps);
}
export declare type ServiceSaleItemHierarchyVersionsListProps = {
    serviceSaleItemHierarchyVersions?: ServiceSaleItemHierarchyVersions[];
    replaceAll?: boolean;
};
export declare class ServiceSaleItemHierarchyVersionsList extends SoapMappingBase {
    serviceSaleItemHierarchyVersions?: ServiceSaleItemHierarchyVersions[];
    replaceAll?: boolean;
    constructor(props: ServiceSaleItemHierarchyVersionsListProps);
}
export declare type GiftCertificateSearchRowProps = {
    basic?: PlatformCommon.GiftCertificateSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
};
export declare class GiftCertificateSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.GiftCertificateSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
    constructor(props: GiftCertificateSearchRowProps);
}
export declare type PriceProps = {
    value?: number;
    quantity?: number;
};
export declare class Price extends SoapMappingBase {
    value?: number;
    quantity?: number;
    constructor(props: PriceProps);
}
export declare type NoteTypeSearchRowProps = {
    basic?: PlatformCommon.NoteTypeSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class NoteTypeSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.NoteTypeSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: NoteTypeSearchRowProps);
}
export declare type ItemGroupProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    includeStartEndLines?: boolean;
    isVsoeBundle?: boolean;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    availableToPartners?: boolean;
    isInactive?: boolean;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    issueProduct?: PlatformCore.RecordRef;
    parent?: PlatformCore.RecordRef;
    description?: string;
    subsidiaryList?: PlatformCore.RecordRefList;
    includeChildren?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    itemShipMethodList?: PlatformCore.RecordRefList;
    printItems?: boolean;
    memberList?: ItemMemberList;
    translationsList?: TranslationList;
    hierarchyVersionsList?: ItemGroupHierarchyVersionsList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class ItemGroup extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    includeStartEndLines?: boolean;
    isVsoeBundle?: boolean;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    availableToPartners?: boolean;
    isInactive?: boolean;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    issueProduct?: PlatformCore.RecordRef;
    parent?: PlatformCore.RecordRef;
    description?: string;
    subsidiaryList?: PlatformCore.RecordRefList;
    includeChildren?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    itemShipMethodList?: PlatformCore.RecordRefList;
    printItems?: boolean;
    memberList?: ItemMemberList;
    translationsList?: TranslationList;
    hierarchyVersionsList?: ItemGroupHierarchyVersionsList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: ItemGroupProps);
}
export declare type PresentationItemListProps = {
    presentationItem?: PlatformCommon.PresentationItem[];
    replaceAll?: boolean;
};
export declare class PresentationItemList extends SoapMappingBase {
    presentationItem?: PlatformCommon.PresentationItem[];
    replaceAll?: boolean;
    constructor(props: PresentationItemListProps);
}
export declare type RevRecTemplateSearchProps = {
    basic?: PlatformCommon.RevRecTemplateSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class RevRecTemplateSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.RevRecTemplateSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: RevRecTemplateSearchProps);
}
export declare type LotNumberedInventoryItemHierarchyVersionsProps = {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
};
export declare class LotNumberedInventoryItemHierarchyVersions extends SoapMappingBase {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
    constructor(props: LotNumberedInventoryItemHierarchyVersionsProps);
}
export declare type MarkupItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    description?: string;
    nonPosting?: boolean;
    account?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    rate?: string;
    isPreTax?: boolean;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    issueProduct?: PlatformCore.RecordRef;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    taxSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    expenseAccount?: PlatformCore.RecordRef;
    incomeAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    salesTaxCode?: PlatformCore.RecordRef;
    translationsList?: TranslationList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class MarkupItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    description?: string;
    nonPosting?: boolean;
    account?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    rate?: string;
    isPreTax?: boolean;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    issueProduct?: PlatformCore.RecordRef;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    taxSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    expenseAccount?: PlatformCore.RecordRef;
    incomeAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    salesTaxCode?: PlatformCore.RecordRef;
    translationsList?: TranslationList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: MarkupItemProps);
}
export declare type SubsidiarySearchRowProps = {
    basic?: PlatformCommon.SubsidiarySearchRowBasic;
    addressJoin?: PlatformCommon.AddressSearchRowBasic;
    defaultAdvanceToApplyAccountJoin?: PlatformCommon.AccountSearchRowBasic;
    returnAddressJoin?: PlatformCommon.AddressSearchRowBasic;
    shippingAddressJoin?: PlatformCommon.AddressSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
};
export declare class SubsidiarySearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.SubsidiarySearchRowBasic;
    addressJoin?: PlatformCommon.AddressSearchRowBasic;
    defaultAdvanceToApplyAccountJoin?: PlatformCommon.AccountSearchRowBasic;
    returnAddressJoin?: PlatformCommon.AddressSearchRowBasic;
    shippingAddressJoin?: PlatformCommon.AddressSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
    constructor(props: SubsidiarySearchRowProps);
}
export declare type NonInventorySaleItemHierarchyVersionsProps = {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
};
export declare class NonInventorySaleItemHierarchyVersions extends SoapMappingBase {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
    constructor(props: NonInventorySaleItemHierarchyVersionsProps);
}
export declare type PaymentMethodSearchProps = {
    basic?: PlatformCommon.PaymentMethodSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class PaymentMethodSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.PaymentMethodSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: PaymentMethodSearchProps);
}
export declare type OtherNameCategorySearchRowProps = {
    basic?: PlatformCommon.OtherNameCategorySearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class OtherNameCategorySearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.OtherNameCategorySearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: OtherNameCategorySearchRowProps);
}
export declare type BillingScheduleRecurrenceProps = {
    recurrenceId?: number;
    count?: number;
    units?: ListsAccountingTypes.BillingScheduleRecurrenceRecurrenceUnits;
    relativeToPrevious?: boolean;
    recurrenceDate?: string;
    amount?: number;
    paymentTerms?: PlatformCore.RecordRef;
};
export declare class BillingScheduleRecurrence extends SoapMappingBase {
    recurrenceId?: number;
    count?: number;
    units?: ListsAccountingTypes.BillingScheduleRecurrenceRecurrenceUnits;
    relativeToPrevious?: boolean;
    recurrenceDate?: string;
    amount?: number;
    paymentTerms?: PlatformCore.RecordRef;
    constructor(props: BillingScheduleRecurrenceProps);
}
export declare type ItemVendorListProps = {
    itemVendor?: ItemVendor[];
    replaceAll?: boolean;
};
export declare class ItemVendorList extends SoapMappingBase {
    itemVendor?: ItemVendor[];
    replaceAll?: boolean;
    constructor(props: ItemVendorListProps);
}
export declare type ClassificationSearchProps = {
    basic?: PlatformCommon.ClassificationSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
};
export declare class ClassificationSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.ClassificationSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
    constructor(props: ClassificationSearchProps);
}
export declare type CurrencyProps = {
    name?: string;
    symbol?: string;
    isBaseCurrency?: boolean;
    isInactive?: boolean;
    overrideCurrencyFormat?: boolean;
    displaySymbol?: string;
    symbolPlacement?: PlatformCommonTypes.CurrencySymbolPlacement;
    locale?: ListsAccountingTypes.CurrencyLocale;
    formatSample?: string;
    exchangeRate?: number;
    fxRateUpdateTimezone?: ListsAccountingTypes.CurrencyFxRateUpdateTimezone;
    inclInFxRateUpdates?: boolean;
    currencyPrecision?: ListsAccountingTypes.CurrencyCurrencyPrecision;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class Currency extends PlatformCore.Record {
    name?: string;
    symbol?: string;
    isBaseCurrency?: boolean;
    isInactive?: boolean;
    overrideCurrencyFormat?: boolean;
    displaySymbol?: string;
    symbolPlacement?: PlatformCommonTypes.CurrencySymbolPlacement;
    locale?: ListsAccountingTypes.CurrencyLocale;
    formatSample?: string;
    exchangeRate?: number;
    fxRateUpdateTimezone?: ListsAccountingTypes.CurrencyFxRateUpdateTimezone;
    inclInFxRateUpdates?: boolean;
    currencyPrecision?: ListsAccountingTypes.CurrencyCurrencyPrecision;
    internalId?: string;
    externalId?: string;
    constructor(props: CurrencyProps);
}
export declare type SerializedInventoryItemLocationsProps = {
    location?: string;
    quantityOnHand?: number;
    onHandValueMli?: number;
    serialNumbers?: string;
    averageCostMli?: number;
    lastPurchasePriceMli?: number;
    reorderPoint?: number;
    locationAllowStorePickup?: boolean;
    locationStorePickupBufferStock?: number;
    locationQtyAvailForStorePickup?: number;
    preferredStockLevel?: number;
    leadTime?: number;
    defaultReturnCost?: number;
    isWip?: boolean;
    safetyStockLevel?: number;
    cost?: number;
    inventoryCostTemplate?: PlatformCore.RecordRef;
    buildTime?: number;
    lastInvtCountDate?: string;
    nextInvtCountDate?: string;
    invtCountInterval?: number;
    invtClassification?: ListsAccountingTypes.ItemInvtClassification;
    costingLotSize?: number;
    quantityOnOrder?: number;
    quantityCommitted?: number;
    quantityAvailable?: number;
    quantityBackOrdered?: number;
    locationId?: PlatformCore.RecordRef;
    supplyReplenishmentMethod?: PlatformCore.RecordRef;
    alternateDemandSourceItem?: PlatformCore.RecordRef;
    fixedLotSize?: number;
    periodicLotSizeType?: ListsAccountingTypes.PeriodicLotSizeType;
    periodicLotSizeDays?: number;
    supplyType?: PlatformCore.RecordRef;
    supplyLotSizingMethod?: PlatformCore.RecordRef;
    demandSource?: PlatformCore.RecordRef;
    backwardConsumptionDays?: number;
    forwardConsumptionDays?: number;
    demandTimeFence?: number;
    supplyTimeFence?: number;
    rescheduleInDays?: number;
    rescheduleOutDays?: number;
};
export declare class SerializedInventoryItemLocations extends SoapMappingBase {
    location?: string;
    quantityOnHand?: number;
    onHandValueMli?: number;
    serialNumbers?: string;
    averageCostMli?: number;
    lastPurchasePriceMli?: number;
    reorderPoint?: number;
    locationAllowStorePickup?: boolean;
    locationStorePickupBufferStock?: number;
    locationQtyAvailForStorePickup?: number;
    preferredStockLevel?: number;
    leadTime?: number;
    defaultReturnCost?: number;
    isWip?: boolean;
    safetyStockLevel?: number;
    cost?: number;
    inventoryCostTemplate?: PlatformCore.RecordRef;
    buildTime?: number;
    lastInvtCountDate?: string;
    nextInvtCountDate?: string;
    invtCountInterval?: number;
    invtClassification?: ListsAccountingTypes.ItemInvtClassification;
    costingLotSize?: number;
    quantityOnOrder?: number;
    quantityCommitted?: number;
    quantityAvailable?: number;
    quantityBackOrdered?: number;
    locationId?: PlatformCore.RecordRef;
    supplyReplenishmentMethod?: PlatformCore.RecordRef;
    alternateDemandSourceItem?: PlatformCore.RecordRef;
    fixedLotSize?: number;
    periodicLotSizeType?: ListsAccountingTypes.PeriodicLotSizeType;
    periodicLotSizeDays?: number;
    supplyType?: PlatformCore.RecordRef;
    supplyLotSizingMethod?: PlatformCore.RecordRef;
    demandSource?: PlatformCore.RecordRef;
    backwardConsumptionDays?: number;
    forwardConsumptionDays?: number;
    demandTimeFence?: number;
    supplyTimeFence?: number;
    rescheduleInDays?: number;
    rescheduleOutDays?: number;
    constructor(props: SerializedInventoryItemLocationsProps);
}
export declare type RevRecScheduleRecurrenceProps = {
    incomeaccount?: PlatformCore.RecordRef;
    periodOffset?: number;
    recamount?: string;
};
export declare class RevRecScheduleRecurrence extends SoapMappingBase {
    incomeaccount?: PlatformCore.RecordRef;
    periodOffset?: number;
    recamount?: string;
    constructor(props: RevRecScheduleRecurrenceProps);
}
export declare type LocationSearchProps = {
    basic?: PlatformCommon.LocationSearchBasic;
    addressJoin?: PlatformCommon.AddressSearchBasic;
    returnAddressJoin?: PlatformCommon.AddressSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
};
export declare class LocationSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.LocationSearchBasic;
    addressJoin?: PlatformCommon.AddressSearchBasic;
    returnAddressJoin?: PlatformCommon.AddressSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
    constructor(props: LocationSearchProps);
}
export declare type AssemblyItemHierarchyVersionsProps = {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
};
export declare class AssemblyItemHierarchyVersions extends SoapMappingBase {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
    constructor(props: AssemblyItemHierarchyVersionsProps);
}
export declare type GiftCertificateItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    includeChildren?: boolean;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    salesDescription?: string;
    incomeAccount?: PlatformCore.RecordRef;
    liabilityAccount?: PlatformCore.RecordRef;
    daysBeforeExpiration?: number;
    isTaxable?: boolean;
    rate?: number;
    urlComponent?: string;
    salesTaxCode?: PlatformCore.RecordRef;
    pricesIncludeTax?: boolean;
    taxSchedule?: PlatformCore.RecordRef;
    costEstimate?: number;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    billingSchedule?: PlatformCore.RecordRef;
    issueProduct?: PlatformCore.RecordRef;
    isFulfillable?: boolean;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    onSpecial?: boolean;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    specialsDescription?: string;
    featuredDescription?: string;
    relatedItemsDescription?: string;
    pricingMatrix?: PricingMatrix;
    authCodesList?: GiftCertificateItemAuthCodesList;
    siteCategoryList?: SiteCategoryList;
    translationsList?: TranslationList;
    itemOptionsList?: ItemOptionsList;
    presentationItemList?: PresentationItemList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class GiftCertificateItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    includeChildren?: boolean;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    salesDescription?: string;
    incomeAccount?: PlatformCore.RecordRef;
    liabilityAccount?: PlatformCore.RecordRef;
    daysBeforeExpiration?: number;
    isTaxable?: boolean;
    rate?: number;
    urlComponent?: string;
    salesTaxCode?: PlatformCore.RecordRef;
    pricesIncludeTax?: boolean;
    taxSchedule?: PlatformCore.RecordRef;
    costEstimate?: number;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    billingSchedule?: PlatformCore.RecordRef;
    issueProduct?: PlatformCore.RecordRef;
    isFulfillable?: boolean;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    onSpecial?: boolean;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    specialsDescription?: string;
    featuredDescription?: string;
    relatedItemsDescription?: string;
    pricingMatrix?: PricingMatrix;
    authCodesList?: GiftCertificateItemAuthCodesList;
    siteCategoryList?: SiteCategoryList;
    translationsList?: TranslationList;
    itemOptionsList?: ItemOptionsList;
    presentationItemList?: PresentationItemList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: GiftCertificateItemProps);
}
export declare type GlobalAccountMappingSearchProps = {
    basic?: PlatformCommon.GlobalAccountMappingSearchBasic;
    classJoin?: PlatformCommon.ClassificationSearchBasic;
    departmentJoin?: PlatformCommon.DepartmentSearchBasic;
    destinationAccountJoin?: PlatformCommon.AccountSearchBasic;
    locationJoin?: PlatformCommon.LocationSearchBasic;
    sourceAccountJoin?: PlatformCommon.AccountSearchBasic;
    subsidiaryJoin?: PlatformCommon.SubsidiarySearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
};
export declare class GlobalAccountMappingSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.GlobalAccountMappingSearchBasic;
    classJoin?: PlatformCommon.ClassificationSearchBasic;
    departmentJoin?: PlatformCommon.DepartmentSearchBasic;
    destinationAccountJoin?: PlatformCommon.AccountSearchBasic;
    locationJoin?: PlatformCommon.LocationSearchBasic;
    sourceAccountJoin?: PlatformCommon.AccountSearchBasic;
    subsidiaryJoin?: PlatformCommon.SubsidiarySearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
    constructor(props: GlobalAccountMappingSearchProps);
}
export declare type NoteTypeSearchAdvancedProps = {
    criteria?: NoteTypeSearch;
    columns?: NoteTypeSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class NoteTypeSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: NoteTypeSearch;
    columns?: NoteTypeSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: NoteTypeSearchAdvancedProps);
}
export declare type RevRecScheduleSearchRowProps = {
    basic?: PlatformCommon.RevRecScheduleSearchRowBasic;
    appliedToTransactionJoin?: PlatformCommon.TransactionSearchRowBasic;
    customerJoin?: PlatformCommon.CustomerSearchRowBasic;
    itemJoin?: PlatformCommon.ItemSearchRowBasic;
    transactionJoin?: PlatformCommon.TransactionSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class RevRecScheduleSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.RevRecScheduleSearchRowBasic;
    appliedToTransactionJoin?: PlatformCommon.TransactionSearchRowBasic;
    customerJoin?: PlatformCommon.CustomerSearchRowBasic;
    itemJoin?: PlatformCommon.ItemSearchRowBasic;
    transactionJoin?: PlatformCommon.TransactionSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: RevRecScheduleSearchRowProps);
}
export declare type ServicePurchaseItemHierarchyVersionsProps = {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
};
export declare class ServicePurchaseItemHierarchyVersions extends SoapMappingBase {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
    constructor(props: ServicePurchaseItemHierarchyVersionsProps);
}
export declare type ClassificationProps = {
    name?: string;
    includeChildren?: boolean;
    parent?: PlatformCore.RecordRef;
    isInactive?: boolean;
    classTranslationList?: ClassTranslationList;
    subsidiaryList?: PlatformCore.RecordRefList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class Classification extends PlatformCore.Record {
    name?: string;
    includeChildren?: boolean;
    parent?: PlatformCore.RecordRef;
    isInactive?: boolean;
    classTranslationList?: ClassTranslationList;
    subsidiaryList?: PlatformCore.RecordRefList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: ClassificationProps);
}
export declare type ContactRoleSearchAdvancedProps = {
    criteria?: ContactRoleSearch;
    columns?: ContactRoleSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class ContactRoleSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: ContactRoleSearch;
    columns?: ContactRoleSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: ContactRoleSearchAdvancedProps);
}
export declare type BomSearchRowProps = {
    basic?: PlatformCommon.BomSearchRowBasic;
    assemblyItemJoin?: PlatformCommon.AssemblyItemBomSearchRowBasic;
    revisionJoin?: PlatformCommon.BomRevisionSearchRowBasic;
    transactionJoin?: PlatformCommon.TransactionSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
};
export declare class BomSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.BomSearchRowBasic;
    assemblyItemJoin?: PlatformCommon.AssemblyItemBomSearchRowBasic;
    revisionJoin?: PlatformCommon.BomRevisionSearchRowBasic;
    transactionJoin?: PlatformCommon.TransactionSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
    constructor(props: BomSearchRowProps);
}
export declare type UnitsTypeUomProps = {
    internalId?: string;
    unitName?: string;
    pluralName?: string;
    abbreviation?: string;
    pluralAbbreviation?: string;
    conversionRate?: number;
    baseUnit?: boolean;
};
export declare class UnitsTypeUom extends SoapMappingBase {
    internalId?: string;
    unitName?: string;
    pluralName?: string;
    abbreviation?: string;
    pluralAbbreviation?: string;
    conversionRate?: number;
    baseUnit?: boolean;
    constructor(props: UnitsTypeUomProps);
}
export declare type AssemblyItemBillOfMaterialsProps = {
    billOfMaterials?: PlatformCore.RecordRef;
    currentRevision?: string;
    masterDefault?: boolean;
    defaultForLocationList?: PlatformCore.RecordRefList;
    inactive?: string;
    memo?: string;
};
export declare class AssemblyItemBillOfMaterials extends SoapMappingBase {
    billOfMaterials?: PlatformCore.RecordRef;
    currentRevision?: string;
    masterDefault?: boolean;
    defaultForLocationList?: PlatformCore.RecordRefList;
    inactive?: string;
    memo?: string;
    constructor(props: AssemblyItemBillOfMaterialsProps);
}
export declare type FairValuePriceSearchRowProps = {
    basic?: PlatformCommon.FairValuePriceSearchRowBasic;
    itemJoin?: PlatformCommon.ItemSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
};
export declare class FairValuePriceSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.FairValuePriceSearchRowBasic;
    itemJoin?: PlatformCommon.ItemSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
    constructor(props: FairValuePriceSearchRowProps);
}
export declare type DescriptionItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    description?: string;
    includeChildren?: boolean;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    issueProduct?: PlatformCore.RecordRef;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    translationsList?: TranslationList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class DescriptionItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    description?: string;
    includeChildren?: boolean;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    issueProduct?: PlatformCore.RecordRef;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    translationsList?: TranslationList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: DescriptionItemProps);
}
export declare type SubsidiaryTaxRegistrationProps = {
    id?: number;
    nexusCountry?: PlatformCommonTypes.Country;
    nexus?: PlatformCore.RecordRef;
    taxAgency?: PlatformCore.RecordRef;
    taxRegistrationNumber?: string;
    taxEngine?: PlatformCore.RecordRef;
    effectiveFrom?: string;
    validUntil?: string;
};
export declare class SubsidiaryTaxRegistration extends SoapMappingBase {
    id?: number;
    nexusCountry?: PlatformCommonTypes.Country;
    nexus?: PlatformCore.RecordRef;
    taxAgency?: PlatformCore.RecordRef;
    taxRegistrationNumber?: string;
    taxEngine?: PlatformCore.RecordRef;
    effectiveFrom?: string;
    validUntil?: string;
    constructor(props: SubsidiaryTaxRegistrationProps);
}
export declare type GiftCertificateProps = {
    giftCertCode?: string;
    sender?: string;
    name?: string;
    email?: string;
    message?: string;
    expirationDate?: string;
    createdDate?: string;
    lastModifiedDate?: string;
    originalAmount?: number;
    amountRemaining?: number;
    internalId?: string;
} & PlatformCore.RecordProps;
export declare class GiftCertificate extends PlatformCore.Record {
    giftCertCode?: string;
    sender?: string;
    name?: string;
    email?: string;
    message?: string;
    expirationDate?: string;
    createdDate?: string;
    lastModifiedDate?: string;
    originalAmount?: number;
    amountRemaining?: number;
    internalId?: string;
    constructor(props: GiftCertificateProps);
}
export declare type SerializedInventoryItemLocationsListProps = {
    locations?: SerializedInventoryItemLocations[];
    replaceAll?: boolean;
};
export declare class SerializedInventoryItemLocationsList extends SoapMappingBase {
    locations?: SerializedInventoryItemLocations[];
    replaceAll?: boolean;
    constructor(props: SerializedInventoryItemLocationsListProps);
}
export declare type SalesRoleProps = {
    name?: string;
    description?: string;
    isSalesRep?: boolean;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class SalesRole extends PlatformCore.Record {
    name?: string;
    description?: string;
    isSalesRep?: boolean;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
    constructor(props: SalesRoleProps);
}
export declare type PaymentItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    description?: string;
    paymentMethod?: PlatformCore.RecordRef;
    undepFunds?: boolean;
    includeChildren?: boolean;
    issueProduct?: PlatformCore.RecordRef;
    account?: PlatformCore.RecordRef;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    displayName?: string;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    translationsList?: TranslationList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class PaymentItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    description?: string;
    paymentMethod?: PlatformCore.RecordRef;
    undepFunds?: boolean;
    includeChildren?: boolean;
    issueProduct?: PlatformCore.RecordRef;
    account?: PlatformCore.RecordRef;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    displayName?: string;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    translationsList?: TranslationList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: PaymentItemProps);
}
export declare type RevRecTemplateRecurrenceProps = {
    incomeaccount?: PlatformCore.RecordRef;
    periodOffset?: number;
    recamount?: string;
};
export declare class RevRecTemplateRecurrence extends SoapMappingBase {
    incomeaccount?: PlatformCore.RecordRef;
    periodOffset?: number;
    recamount?: string;
    constructor(props: RevRecTemplateRecurrenceProps);
}
export declare type KitItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    parent?: PlatformCore.RecordRef;
    printItems?: boolean;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    clazz?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    location?: PlatformCore.RecordRef;
    description?: string;
    incomeAccount?: PlatformCore.RecordRef;
    taxSchedule?: PlatformCore.RecordRef;
    shippingCost?: number;
    handlingCost?: number;
    isTaxable?: boolean;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    contingentRevenueHandling?: boolean;
    revReclassFXAccount?: PlatformCore.RecordRef;
    salesTaxCode?: PlatformCore.RecordRef;
    weight?: number;
    weightUnit?: PlatformCore.RecordRef;
    rate?: number;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    stockDescription?: string;
    producer?: boolean;
    manufacturer?: string;
    mpn?: string;
    multManufactureAddr?: boolean;
    manufactureraddr1?: string;
    manufacturerCity?: string;
    manufacturerState?: string;
    manufacturerZip?: string;
    countryOfManufacture?: PlatformCommonTypes.Country;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    itemShipMethodList?: PlatformCore.RecordRefList;
    manufacturerTaxId?: string;
    scheduleBNumber?: string;
    scheduleBQuantity?: number;
    scheduleBCode?: PlatformCore.RecordRef;
    manufacturerTariff?: string;
    preferenceCriterion?: ListsAccountingTypes.ItemPreferenceCriterion;
    issueProduct?: PlatformCore.RecordRef;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: PlatformCore.RecordRef;
    isFulfillable?: boolean;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    useMarginalRates?: boolean;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    isHazmatItem?: boolean;
    hazmatId?: string;
    hazmatShippingName?: string;
    hazmatHazardClass?: string;
    hazmatPackingGroup?: ListsAccountingTypes.HazmatPackingGroup;
    hazmatItemUnits?: string;
    hazmatItemUnitsQty?: number;
    costEstimate?: number;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    shipIndividually?: boolean;
    shipPackage?: PlatformCore.RecordRef;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    outOfStockMessage?: string;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    urlComponent?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    itemOptionsList?: ItemOptionsList;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    shoppingDotComCategory?: string;
    shopzillaCategoryId?: number;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    nexTagCategory?: string;
    productFeedList?: ProductFeedList;
    relatedItemsDescription?: string;
    onSpecial?: boolean;
    specialsDescription?: string;
    featuredDescription?: string;
    pricingMatrix?: PricingMatrix;
    siteCategoryList?: SiteCategoryList;
    memberList?: ItemMemberList;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    translationsList?: TranslationList;
    presentationItemList?: PresentationItemList;
    hierarchyVersionsList?: KitItemHierarchyVersionsList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class KitItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    parent?: PlatformCore.RecordRef;
    printItems?: boolean;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    clazz?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    location?: PlatformCore.RecordRef;
    description?: string;
    incomeAccount?: PlatformCore.RecordRef;
    taxSchedule?: PlatformCore.RecordRef;
    shippingCost?: number;
    handlingCost?: number;
    isTaxable?: boolean;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    contingentRevenueHandling?: boolean;
    revReclassFXAccount?: PlatformCore.RecordRef;
    salesTaxCode?: PlatformCore.RecordRef;
    weight?: number;
    weightUnit?: PlatformCore.RecordRef;
    rate?: number;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    stockDescription?: string;
    producer?: boolean;
    manufacturer?: string;
    mpn?: string;
    multManufactureAddr?: boolean;
    manufactureraddr1?: string;
    manufacturerCity?: string;
    manufacturerState?: string;
    manufacturerZip?: string;
    countryOfManufacture?: PlatformCommonTypes.Country;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    itemShipMethodList?: PlatformCore.RecordRefList;
    manufacturerTaxId?: string;
    scheduleBNumber?: string;
    scheduleBQuantity?: number;
    scheduleBCode?: PlatformCore.RecordRef;
    manufacturerTariff?: string;
    preferenceCriterion?: ListsAccountingTypes.ItemPreferenceCriterion;
    issueProduct?: PlatformCore.RecordRef;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: PlatformCore.RecordRef;
    isFulfillable?: boolean;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    useMarginalRates?: boolean;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    isHazmatItem?: boolean;
    hazmatId?: string;
    hazmatShippingName?: string;
    hazmatHazardClass?: string;
    hazmatPackingGroup?: ListsAccountingTypes.HazmatPackingGroup;
    hazmatItemUnits?: string;
    hazmatItemUnitsQty?: number;
    costEstimate?: number;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    shipIndividually?: boolean;
    shipPackage?: PlatformCore.RecordRef;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    outOfStockMessage?: string;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    urlComponent?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    itemOptionsList?: ItemOptionsList;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    shoppingDotComCategory?: string;
    shopzillaCategoryId?: number;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    nexTagCategory?: string;
    productFeedList?: ProductFeedList;
    relatedItemsDescription?: string;
    onSpecial?: boolean;
    specialsDescription?: string;
    featuredDescription?: string;
    pricingMatrix?: PricingMatrix;
    siteCategoryList?: SiteCategoryList;
    memberList?: ItemMemberList;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    translationsList?: TranslationList;
    presentationItemList?: PresentationItemList;
    hierarchyVersionsList?: KitItemHierarchyVersionsList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: KitItemProps);
}
export declare type DepartmentSearchProps = {
    basic?: PlatformCommon.DepartmentSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
};
export declare class DepartmentSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.DepartmentSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
    constructor(props: DepartmentSearchProps);
}
export declare type SubsidiarySearchAdvancedProps = {
    criteria?: SubsidiarySearch;
    columns?: SubsidiarySearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class SubsidiarySearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: SubsidiarySearch;
    columns?: SubsidiarySearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: SubsidiarySearchAdvancedProps);
}
export declare type RateProps = {
    value?: number;
    priceLevel?: PlatformCore.RecordRef;
};
export declare class Rate extends SoapMappingBase {
    value?: number;
    priceLevel?: PlatformCore.RecordRef;
    constructor(props: RateProps);
}
export declare type TermPercentagesProps = {
    percentage?: number;
};
export declare class TermPercentages extends SoapMappingBase {
    percentage?: number;
    constructor(props: TermPercentagesProps);
}
export declare type InventoryNumberSearchProps = {
    basic?: PlatformCommon.InventoryNumberSearchBasic;
    itemJoin?: PlatformCommon.ItemSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
};
export declare class InventoryNumberSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.InventoryNumberSearchBasic;
    itemJoin?: PlatformCommon.ItemSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
    constructor(props: InventoryNumberSearchProps);
}
export declare type DiscountItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    description?: string;
    nonPosting?: boolean;
    account?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    rate?: string;
    isPreTax?: boolean;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    issueProduct?: PlatformCore.RecordRef;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    taxSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    expenseAccount?: PlatformCore.RecordRef;
    incomeAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    salesTaxCode?: PlatformCore.RecordRef;
    translationsList?: TranslationList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class DiscountItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    description?: string;
    nonPosting?: boolean;
    account?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    rate?: string;
    isPreTax?: boolean;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    issueProduct?: PlatformCore.RecordRef;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    taxSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    expenseAccount?: PlatformCore.RecordRef;
    incomeAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    salesTaxCode?: PlatformCore.RecordRef;
    translationsList?: TranslationList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: DiscountItemProps);
}
export declare type OtherChargeSaleItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    salesDescription?: string;
    includeChildren?: boolean;
    incomeAccount?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    taxSchedule?: PlatformCore.RecordRef;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    unitsType?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    issueProduct?: PlatformCore.RecordRef;
    costEstimateUnits?: string;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    minimumQuantity?: number;
    minimumQuantityUnits?: string;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: string;
    isFulfillable?: boolean;
    costCategory?: PlatformCore.RecordRef;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    useMarginalRates?: boolean;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    matrixItemNameTemplate?: string;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    contingentRevenueHandling?: boolean;
    revReclassFXAccount?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    pricingMatrix?: PricingMatrix;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    purchaseTaxCode?: PlatformCore.RecordRef;
    rate?: number;
    salesTaxCode?: PlatformCore.RecordRef;
    translationsList?: TranslationList;
    hierarchyVersionsList?: OtherChargeSaleItemHierarchyVersionsList;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class OtherChargeSaleItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    salesDescription?: string;
    includeChildren?: boolean;
    incomeAccount?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    taxSchedule?: PlatformCore.RecordRef;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    unitsType?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    issueProduct?: PlatformCore.RecordRef;
    costEstimateUnits?: string;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    minimumQuantity?: number;
    minimumQuantityUnits?: string;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: string;
    isFulfillable?: boolean;
    costCategory?: PlatformCore.RecordRef;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    useMarginalRates?: boolean;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    matrixItemNameTemplate?: string;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    contingentRevenueHandling?: boolean;
    revReclassFXAccount?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    pricingMatrix?: PricingMatrix;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    purchaseTaxCode?: PlatformCore.RecordRef;
    rate?: number;
    salesTaxCode?: PlatformCore.RecordRef;
    translationsList?: TranslationList;
    hierarchyVersionsList?: OtherChargeSaleItemHierarchyVersionsList;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: OtherChargeSaleItemProps);
}
export declare type TaxTypeSearchProps = {
    basic?: PlatformCommon.TaxTypeSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class TaxTypeSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.TaxTypeSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: TaxTypeSearchProps);
}
export declare type BinSearchAdvancedProps = {
    criteria?: BinSearch;
    columns?: BinSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class BinSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: BinSearch;
    columns?: BinSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: BinSearchAdvancedProps);
}
export declare type AccountSearchAdvancedProps = {
    criteria?: AccountSearch;
    columns?: AccountSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class AccountSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: AccountSearch;
    columns?: AccountSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: AccountSearchAdvancedProps);
}
export declare type CustomerMessageSearchRowProps = {
    basic?: PlatformCommon.CustomerMessageSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class CustomerMessageSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.CustomerMessageSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: CustomerMessageSearchRowProps);
}
export declare type ProductFeedListProps = {
    productFeed: ListsAccountingTypes.ItemProductFeed[];
};
export declare class ProductFeedList extends SoapMappingBase {
    productFeed: ListsAccountingTypes.ItemProductFeed[];
    constructor(props: ProductFeedListProps);
}
export declare type SubsidiaryNexusListProps = {
    nexus?: SubsidiaryNexus[];
    replaceAll?: boolean;
};
export declare class SubsidiaryNexusList extends SoapMappingBase {
    nexus?: SubsidiaryNexus[];
    replaceAll?: boolean;
    constructor(props: SubsidiaryNexusListProps);
}
export declare type BomSearchAdvancedProps = {
    criteria?: BomSearch;
    columns?: BomSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class BomSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: BomSearch;
    columns?: BomSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: BomSearchAdvancedProps);
}
export declare type PaymentMethodVisualsListProps = {
    paymentMethodVisuals?: PaymentMethodVisuals[];
    replaceAll?: boolean;
};
export declare class PaymentMethodVisualsList extends SoapMappingBase {
    paymentMethodVisuals?: PaymentMethodVisuals[];
    replaceAll?: boolean;
    constructor(props: PaymentMethodVisualsListProps);
}
export declare type LocationRegionsProps = {
    region?: PlatformCore.RecordRef;
};
export declare class LocationRegions extends SoapMappingBase {
    region?: PlatformCore.RecordRef;
    constructor(props: LocationRegionsProps);
}
export declare type ClassTranslationListProps = {
    classTranslation?: ClassTranslation[];
    replaceAll?: boolean;
};
export declare class ClassTranslationList extends SoapMappingBase {
    classTranslation?: ClassTranslation[];
    replaceAll?: boolean;
    constructor(props: ClassTranslationListProps);
}
export declare type VendorCategoryProps = {
    name?: string;
    isTaxAgency?: boolean;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class VendorCategory extends PlatformCore.Record {
    name?: string;
    isTaxAgency?: boolean;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
    constructor(props: VendorCategoryProps);
}
export declare type ItemOptionsListProps = {
    itemOptions: PlatformCore.RecordRef[];
};
export declare class ItemOptionsList extends SoapMappingBase {
    itemOptions: PlatformCore.RecordRef[];
    constructor(props: ItemOptionsListProps);
}
export declare type MerchandiseHierarchyNodeSearchRowProps = {
    basic?: PlatformCommon.MerchandiseHierarchyNodeSearchRowBasic;
    parentNodeJoin?: PlatformCommon.MerchandiseHierarchyNodeSearchRowBasic;
};
export declare class MerchandiseHierarchyNodeSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.MerchandiseHierarchyNodeSearchRowBasic;
    parentNodeJoin?: PlatformCommon.MerchandiseHierarchyNodeSearchRowBasic;
    constructor(props: MerchandiseHierarchyNodeSearchRowProps);
}
export declare type TaxGroupSearchProps = {
    basic?: PlatformCommon.TaxGroupSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class TaxGroupSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.TaxGroupSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: TaxGroupSearchProps);
}
export declare type NonInventoryResaleItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    purchaseDescription?: string;
    copyDescription?: boolean;
    cost?: number;
    costUnits?: string;
    expenseAccount?: PlatformCore.RecordRef;
    intercoExpenseAccount?: PlatformCore.RecordRef;
    salesDescription?: string;
    includeChildren?: boolean;
    incomeAccount?: PlatformCore.RecordRef;
    intercoIncomeAccount?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    taxSchedule?: PlatformCore.RecordRef;
    dropshipExpenseAccount?: PlatformCore.RecordRef;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    isDropShipItem?: boolean;
    isSpecialOrderItem?: boolean;
    shippingCost?: number;
    shippingCostUnits?: string;
    handlingCost?: number;
    handlingCostUnits?: string;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    weight?: number;
    weightUnit?: ListsAccountingTypes.ItemWeightUnit;
    weightUnits?: string;
    costEstimateUnits?: string;
    unitsType?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    issueProduct?: PlatformCore.RecordRef;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    deferralAccount?: PlatformCore.RecordRef;
    amortizationTemplate?: PlatformCore.RecordRef;
    residual?: string;
    amortizationPeriod?: number;
    stockDescription?: string;
    producer?: boolean;
    manufacturer?: string;
    mpn?: string;
    multManufactureAddr?: boolean;
    manufacturerAddr1?: string;
    manufacturerCity?: string;
    manufacturerState?: string;
    manufacturerZip?: string;
    countryOfManufacture?: PlatformCommonTypes.Country;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    manufacturerTaxId?: string;
    scheduleBNumber?: string;
    scheduleBQuantity?: number;
    scheduleBCode?: string;
    manufacturerTariff?: string;
    preferenceCriterion?: ListsAccountingTypes.ItemPreferenceCriterion;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: string;
    shipPackage?: PlatformCore.RecordRef;
    shipIndividually?: boolean;
    isFulfillable?: boolean;
    generateAccruals?: boolean;
    costCategory?: PlatformCore.RecordRef;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    useMarginalRates?: boolean;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    minimumQuantityUnits?: string;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    onSpecial?: boolean;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    relatedItemsDescription?: string;
    specialsDescription?: string;
    featuredDescription?: string;
    shoppingDotComCategory?: string;
    shopzillaCategoryId?: number;
    nexTagCategory?: string;
    productFeedList?: ProductFeedList;
    urlComponent?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isHazmatItem?: boolean;
    hazmatId?: string;
    hazmatShippingName?: string;
    hazmatHazardClass?: string;
    hazmatPackingGroup?: ListsAccountingTypes.HazmatPackingGroup;
    hazmatItemUnits?: string;
    hazmatItemUnitsQty?: number;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    matrixItemNameTemplate?: string;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    itemShipMethodList?: PlatformCore.RecordRefList;
    subsidiaryList?: PlatformCore.RecordRefList;
    currency?: string;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    itemVendorList?: ItemVendorList;
    pricingMatrix?: PricingMatrix;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    purchaseTaxCode?: PlatformCore.RecordRef;
    rate?: number;
    salesTaxCode?: PlatformCore.RecordRef;
    siteCategoryList?: SiteCategoryList;
    translationsList?: TranslationList;
    vendor?: PlatformCore.RecordRef;
    presentationItemList?: PresentationItemList;
    hierarchyVersionsList?: NonInventoryResaleItemHierarchyVersionsList;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class NonInventoryResaleItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    purchaseDescription?: string;
    copyDescription?: boolean;
    cost?: number;
    costUnits?: string;
    expenseAccount?: PlatformCore.RecordRef;
    intercoExpenseAccount?: PlatformCore.RecordRef;
    salesDescription?: string;
    includeChildren?: boolean;
    incomeAccount?: PlatformCore.RecordRef;
    intercoIncomeAccount?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    taxSchedule?: PlatformCore.RecordRef;
    dropshipExpenseAccount?: PlatformCore.RecordRef;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    isDropShipItem?: boolean;
    isSpecialOrderItem?: boolean;
    shippingCost?: number;
    shippingCostUnits?: string;
    handlingCost?: number;
    handlingCostUnits?: string;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    weight?: number;
    weightUnit?: ListsAccountingTypes.ItemWeightUnit;
    weightUnits?: string;
    costEstimateUnits?: string;
    unitsType?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    issueProduct?: PlatformCore.RecordRef;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    deferralAccount?: PlatformCore.RecordRef;
    amortizationTemplate?: PlatformCore.RecordRef;
    residual?: string;
    amortizationPeriod?: number;
    stockDescription?: string;
    producer?: boolean;
    manufacturer?: string;
    mpn?: string;
    multManufactureAddr?: boolean;
    manufacturerAddr1?: string;
    manufacturerCity?: string;
    manufacturerState?: string;
    manufacturerZip?: string;
    countryOfManufacture?: PlatformCommonTypes.Country;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    manufacturerTaxId?: string;
    scheduleBNumber?: string;
    scheduleBQuantity?: number;
    scheduleBCode?: string;
    manufacturerTariff?: string;
    preferenceCriterion?: ListsAccountingTypes.ItemPreferenceCriterion;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: string;
    shipPackage?: PlatformCore.RecordRef;
    shipIndividually?: boolean;
    isFulfillable?: boolean;
    generateAccruals?: boolean;
    costCategory?: PlatformCore.RecordRef;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    useMarginalRates?: boolean;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    minimumQuantityUnits?: string;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    onSpecial?: boolean;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    relatedItemsDescription?: string;
    specialsDescription?: string;
    featuredDescription?: string;
    shoppingDotComCategory?: string;
    shopzillaCategoryId?: number;
    nexTagCategory?: string;
    productFeedList?: ProductFeedList;
    urlComponent?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isHazmatItem?: boolean;
    hazmatId?: string;
    hazmatShippingName?: string;
    hazmatHazardClass?: string;
    hazmatPackingGroup?: ListsAccountingTypes.HazmatPackingGroup;
    hazmatItemUnits?: string;
    hazmatItemUnitsQty?: number;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    matrixItemNameTemplate?: string;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    itemShipMethodList?: PlatformCore.RecordRefList;
    subsidiaryList?: PlatformCore.RecordRefList;
    currency?: string;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    itemVendorList?: ItemVendorList;
    pricingMatrix?: PricingMatrix;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    purchaseTaxCode?: PlatformCore.RecordRef;
    rate?: number;
    salesTaxCode?: PlatformCore.RecordRef;
    siteCategoryList?: SiteCategoryList;
    translationsList?: TranslationList;
    vendor?: PlatformCore.RecordRef;
    presentationItemList?: PresentationItemList;
    hierarchyVersionsList?: NonInventoryResaleItemHierarchyVersionsList;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: NonInventoryResaleItemProps);
}
export declare type LotNumberedInventoryItemHierarchyVersionsListProps = {
    lotNumberedInventoryItemHierarchyVersions?: LotNumberedInventoryItemHierarchyVersions[];
    replaceAll?: boolean;
};
export declare class LotNumberedInventoryItemHierarchyVersionsList extends SoapMappingBase {
    lotNumberedInventoryItemHierarchyVersions?: LotNumberedInventoryItemHierarchyVersions[];
    replaceAll?: boolean;
    constructor(props: LotNumberedInventoryItemHierarchyVersionsListProps);
}
export declare type BomRevisionComponentListProps = {
    bomRevisionComponent?: BomRevisionComponent[];
    replaceAll?: boolean;
};
export declare class BomRevisionComponentList extends SoapMappingBase {
    bomRevisionComponent?: BomRevisionComponent[];
    replaceAll?: boolean;
    constructor(props: BomRevisionComponentListProps);
}
export declare type MerchandiseHierarchyNodeProps = {
    name?: string;
    description?: string;
    hierarchyVersionsList?: MerchandiseHierarchyNodeHierarchyVersionsList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class MerchandiseHierarchyNode extends PlatformCore.Record {
    name?: string;
    description?: string;
    hierarchyVersionsList?: MerchandiseHierarchyNodeHierarchyVersionsList;
    internalId?: string;
    externalId?: string;
    constructor(props: MerchandiseHierarchyNodeProps);
}
export declare type PricingProps = {
    currency?: PlatformCore.RecordRef;
    priceLevel?: PlatformCore.RecordRef;
    discount?: number;
    priceList?: PriceList;
};
export declare class Pricing extends SoapMappingBase {
    currency?: PlatformCore.RecordRef;
    priceLevel?: PlatformCore.RecordRef;
    discount?: number;
    priceList?: PriceList;
    constructor(props: PricingProps);
}
export declare type PaymentMethodProps = {
    name?: string;
    creditCard?: boolean;
    undepFunds?: boolean;
    account?: PlatformCore.RecordRef;
    isInactive?: boolean;
    isOnline?: boolean;
    visualsList?: PaymentMethodVisualsList;
    isDebitCard?: boolean;
    merchantAccountsList?: PlatformCore.RecordRefList;
    payPalEmailAddress?: string;
    expressCheckoutArrangement?: string;
    useExpressCheckout?: boolean;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class PaymentMethod extends PlatformCore.Record {
    name?: string;
    creditCard?: boolean;
    undepFunds?: boolean;
    account?: PlatformCore.RecordRef;
    isInactive?: boolean;
    isOnline?: boolean;
    visualsList?: PaymentMethodVisualsList;
    isDebitCard?: boolean;
    merchantAccountsList?: PlatformCore.RecordRefList;
    payPalEmailAddress?: string;
    expressCheckoutArrangement?: string;
    useExpressCheckout?: boolean;
    internalId?: string;
    externalId?: string;
    constructor(props: PaymentMethodProps);
}
export declare type ConsolidatedExchangeRateSearchRowProps = {
    basic?: PlatformCommon.ConsolidatedExchangeRateSearchRowBasic;
    fromSubsidiaryJoin?: PlatformCommon.SubsidiarySearchRowBasic;
    periodJoin?: PlatformCommon.AccountingPeriodSearchRowBasic;
    toSubsidiaryJoin?: PlatformCommon.SubsidiarySearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class ConsolidatedExchangeRateSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.ConsolidatedExchangeRateSearchRowBasic;
    fromSubsidiaryJoin?: PlatformCommon.SubsidiarySearchRowBasic;
    periodJoin?: PlatformCommon.AccountingPeriodSearchRowBasic;
    toSubsidiaryJoin?: PlatformCommon.SubsidiarySearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: ConsolidatedExchangeRateSearchRowProps);
}
export declare type ServiceSaleItemHierarchyVersionsProps = {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
};
export declare class ServiceSaleItemHierarchyVersions extends SoapMappingBase {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
    constructor(props: ServiceSaleItemHierarchyVersionsProps);
}
export declare type ItemRevisionSearchRowProps = {
    basic?: PlatformCommon.ItemRevisionSearchRowBasic;
    itemJoin?: PlatformCommon.ItemSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class ItemRevisionSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.ItemRevisionSearchRowBasic;
    itemJoin?: PlatformCommon.ItemSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: ItemRevisionSearchRowProps);
}
export declare type SalesTaxItemSearchRowProps = {
    basic?: PlatformCommon.SalesTaxItemSearchRowBasic;
    taxTypeJoin?: PlatformCommon.TaxTypeSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
};
export declare class SalesTaxItemSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.SalesTaxItemSearchRowBasic;
    taxTypeJoin?: PlatformCommon.TaxTypeSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
    constructor(props: SalesTaxItemSearchRowProps);
}
export declare type UnitsTypeSearchProps = {
    basic?: PlatformCommon.UnitsTypeSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class UnitsTypeSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.UnitsTypeSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: UnitsTypeSearchProps);
}
export declare type InventoryItemLocationsProps = {
    location?: string;
    quantityOnHand?: number;
    onHandValueMli?: number;
    averageCostMli?: number;
    lastPurchasePriceMli?: number;
    reorderPoint?: number;
    locationAllowStorePickup?: boolean;
    locationStorePickupBufferStock?: number;
    locationQtyAvailForStorePickup?: number;
    preferredStockLevel?: number;
    leadTime?: number;
    defaultReturnCost?: number;
    safetyStockLevel?: number;
    cost?: number;
    inventoryCostTemplate?: PlatformCore.RecordRef;
    buildTime?: number;
    lastInvtCountDate?: string;
    nextInvtCountDate?: string;
    isWip?: boolean;
    invtCountInterval?: number;
    invtClassification?: ListsAccountingTypes.ItemInvtClassification;
    costingLotSize?: number;
    quantityOnOrder?: number;
    quantityCommitted?: number;
    quantityAvailable?: number;
    quantityBackOrdered?: number;
    locationId?: PlatformCore.RecordRef;
    supplyReplenishmentMethod?: PlatformCore.RecordRef;
    alternateDemandSourceItem?: PlatformCore.RecordRef;
    fixedLotSize?: number;
    periodicLotSizeType?: ListsAccountingTypes.PeriodicLotSizeType;
    periodicLotSizeDays?: number;
    supplyType?: PlatformCore.RecordRef;
    supplyLotSizingMethod?: PlatformCore.RecordRef;
    demandSource?: PlatformCore.RecordRef;
    backwardConsumptionDays?: number;
    forwardConsumptionDays?: number;
    demandTimeFence?: number;
    supplyTimeFence?: number;
    rescheduleInDays?: number;
    rescheduleOutDays?: number;
};
export declare class InventoryItemLocations extends SoapMappingBase {
    location?: string;
    quantityOnHand?: number;
    onHandValueMli?: number;
    averageCostMli?: number;
    lastPurchasePriceMli?: number;
    reorderPoint?: number;
    locationAllowStorePickup?: boolean;
    locationStorePickupBufferStock?: number;
    locationQtyAvailForStorePickup?: number;
    preferredStockLevel?: number;
    leadTime?: number;
    defaultReturnCost?: number;
    safetyStockLevel?: number;
    cost?: number;
    inventoryCostTemplate?: PlatformCore.RecordRef;
    buildTime?: number;
    lastInvtCountDate?: string;
    nextInvtCountDate?: string;
    isWip?: boolean;
    invtCountInterval?: number;
    invtClassification?: ListsAccountingTypes.ItemInvtClassification;
    costingLotSize?: number;
    quantityOnOrder?: number;
    quantityCommitted?: number;
    quantityAvailable?: number;
    quantityBackOrdered?: number;
    locationId?: PlatformCore.RecordRef;
    supplyReplenishmentMethod?: PlatformCore.RecordRef;
    alternateDemandSourceItem?: PlatformCore.RecordRef;
    fixedLotSize?: number;
    periodicLotSizeType?: ListsAccountingTypes.PeriodicLotSizeType;
    periodicLotSizeDays?: number;
    supplyType?: PlatformCore.RecordRef;
    supplyLotSizingMethod?: PlatformCore.RecordRef;
    demandSource?: PlatformCore.RecordRef;
    backwardConsumptionDays?: number;
    forwardConsumptionDays?: number;
    demandTimeFence?: number;
    supplyTimeFence?: number;
    rescheduleInDays?: number;
    rescheduleOutDays?: number;
    constructor(props: InventoryItemLocationsProps);
}
export declare type CostCategorySearchRowProps = {
    basic?: PlatformCommon.CostCategorySearchRowBasic;
    accountJoin?: PlatformCommon.AccountSearchRowBasic;
    transactionJoin?: PlatformCommon.TransactionSearchRowBasic;
};
export declare class CostCategorySearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.CostCategorySearchRowBasic;
    accountJoin?: PlatformCommon.AccountSearchRowBasic;
    transactionJoin?: PlatformCommon.TransactionSearchRowBasic;
    constructor(props: CostCategorySearchRowProps);
}
export declare type ItemAccountMappingSearchProps = {
    basic?: PlatformCommon.ItemAccountMappingSearchBasic;
    classJoin?: PlatformCommon.ClassificationSearchBasic;
    departmentJoin?: PlatformCommon.DepartmentSearchBasic;
    destinationAccountJoin?: PlatformCommon.AccountSearchBasic;
    locationJoin?: PlatformCommon.LocationSearchBasic;
    sourceAccountJoin?: PlatformCommon.AccountSearchBasic;
    subsidiaryJoin?: PlatformCommon.SubsidiarySearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
};
export declare class ItemAccountMappingSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.ItemAccountMappingSearchBasic;
    classJoin?: PlatformCommon.ClassificationSearchBasic;
    departmentJoin?: PlatformCommon.DepartmentSearchBasic;
    destinationAccountJoin?: PlatformCommon.AccountSearchBasic;
    locationJoin?: PlatformCommon.LocationSearchBasic;
    sourceAccountJoin?: PlatformCommon.AccountSearchBasic;
    subsidiaryJoin?: PlatformCommon.SubsidiarySearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
    constructor(props: ItemAccountMappingSearchProps);
}
export declare type UnitsTypeSearchAdvancedProps = {
    criteria?: UnitsTypeSearch;
    columns?: UnitsTypeSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class UnitsTypeSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: UnitsTypeSearch;
    columns?: UnitsTypeSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: UnitsTypeSearchAdvancedProps);
}
export declare type VendorCategorySearchAdvancedProps = {
    criteria?: VendorCategorySearch;
    columns?: VendorCategorySearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class VendorCategorySearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: VendorCategorySearch;
    columns?: VendorCategorySearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: VendorCategorySearchAdvancedProps);
}
export declare type NonInventorySaleItemHierarchyVersionsListProps = {
    nonInventorySaleItemHierarchyVersions?: NonInventorySaleItemHierarchyVersions[];
    replaceAll?: boolean;
};
export declare class NonInventorySaleItemHierarchyVersionsList extends SoapMappingBase {
    nonInventorySaleItemHierarchyVersions?: NonInventorySaleItemHierarchyVersions[];
    replaceAll?: boolean;
    constructor(props: NonInventorySaleItemHierarchyVersionsListProps);
}
export declare type CustomerMessageSearchAdvancedProps = {
    criteria?: CustomerMessageSearch;
    columns?: CustomerMessageSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class CustomerMessageSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: CustomerMessageSearch;
    columns?: CustomerMessageSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: CustomerMessageSearchAdvancedProps);
}
export declare type PaymentCardTokenProps = {
    entity?: PlatformCore.RecordRef;
    mask?: string;
    paymentMethod?: PlatformCore.RecordRef;
    memo?: string;
    state?: ListsAccountingTypes.PaymentInstrumentState;
    isInactive?: boolean;
    preserveOnFile?: boolean;
    isDefault?: boolean;
    token?: string;
    tokenExpirationDate?: string;
    tokenFamily?: ListsAccountingTypes.TokenFamily;
    tokenNamespace?: string;
    cardIssuerIdNumber?: string;
    cardBrand?: ListsAccountingTypes.PaymentCardBrand;
    cardType?: ListsAccountingTypes.PaymentCardType;
    cardNameOnCard?: string;
    cardLastFourDigits?: string;
    cardExpirationDate?: string;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class PaymentCardToken extends PlatformCore.Record {
    entity?: PlatformCore.RecordRef;
    mask?: string;
    paymentMethod?: PlatformCore.RecordRef;
    memo?: string;
    state?: ListsAccountingTypes.PaymentInstrumentState;
    isInactive?: boolean;
    preserveOnFile?: boolean;
    isDefault?: boolean;
    token?: string;
    tokenExpirationDate?: string;
    tokenFamily?: ListsAccountingTypes.TokenFamily;
    tokenNamespace?: string;
    cardIssuerIdNumber?: string;
    cardBrand?: ListsAccountingTypes.PaymentCardBrand;
    cardType?: ListsAccountingTypes.PaymentCardType;
    cardNameOnCard?: string;
    cardLastFourDigits?: string;
    cardExpirationDate?: string;
    internalId?: string;
    externalId?: string;
    constructor(props: PaymentCardTokenProps);
}
export declare type GiftCertificateItemAuthCodesProps = {
    authCode?: string;
    used?: boolean;
};
export declare class GiftCertificateItemAuthCodes extends SoapMappingBase {
    authCode?: string;
    used?: boolean;
    constructor(props: GiftCertificateItemAuthCodesProps);
}
export declare type SerializedAssemblyItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    printItems?: boolean;
    isOnline?: boolean;
    lastInvtCountDate?: string;
    nextInvtCountDate?: string;
    invtCountInterval?: number;
    invtClassification?: ListsAccountingTypes.ItemInvtClassification;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    useComponentYield?: boolean;
    isInactive?: boolean;
    subsidiaryList?: PlatformCore.RecordRefList;
    availableToPartners?: boolean;
    includeChildren?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    description?: string;
    cogsAccount?: PlatformCore.RecordRef;
    vendor?: PlatformCore.RecordRef;
    incomeAccount?: PlatformCore.RecordRef;
    intercoIncomeAccount?: PlatformCore.RecordRef;
    assetAccount?: PlatformCore.RecordRef;
    matchBillToReceipt?: boolean;
    billQtyVarianceAcct?: PlatformCore.RecordRef;
    billPriceVarianceAcct?: PlatformCore.RecordRef;
    billExchRateVarianceAcct?: PlatformCore.RecordRef;
    gainLossAccount?: PlatformCore.RecordRef;
    salesTaxCode?: PlatformCore.RecordRef;
    costCategory?: PlatformCore.RecordRef;
    purchaseTaxCode?: PlatformCore.RecordRef;
    prodQtyVarianceAcct?: PlatformCore.RecordRef;
    prodPriceVarianceAcct?: PlatformCore.RecordRef;
    purchasePriceVarianceAcct?: PlatformCore.RecordRef;
    wipVarianceAcct?: PlatformCore.RecordRef;
    taxSchedule?: PlatformCore.RecordRef;
    scrapAcct?: PlatformCore.RecordRef;
    shippingCost?: number;
    wipAcct?: PlatformCore.RecordRef;
    shippingCostUnits?: string;
    handlingCost?: number;
    weight?: number;
    handlingCostUnits?: string;
    weightUnit?: ListsAccountingTypes.ItemWeightUnit;
    weightUnits?: string;
    costingMethod?: ListsAccountingTypes.ItemCostingMethod;
    isTaxable?: boolean;
    costingMethodDisplay?: string;
    rate?: number;
    unitsType?: PlatformCore.RecordRef;
    stockUnit?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    trackLandedCost?: boolean;
    matrixItemNameTemplate?: string;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    stockDescription?: string;
    producer?: boolean;
    manufacturer?: string;
    mpn?: string;
    multManufactureAddr?: boolean;
    manufactureraddr1?: string;
    manufacturerCity?: string;
    manufacturerState?: string;
    manufacturerZip?: string;
    countryOfManufacture?: PlatformCommonTypes.Country;
    effectiveBomControl?: ListsAccountingTypes.AssemblyItemEffectiveBomControl;
    minimumQuantityUnits?: string;
    defaultRevision?: string;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    roundUpAsComponent?: boolean;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    isDropShipItem?: boolean;
    isPhantom?: boolean;
    itemShipMethodList?: PlatformCore.RecordRefList;
    manufacturerTaxId?: string;
    scheduleBNumber?: string;
    scheduleBQuantity?: number;
    scheduleBCode?: PlatformCore.RecordRef;
    manufacturerTariff?: string;
    preferenceCriterion?: ListsAccountingTypes.ItemPreferenceCriterion;
    issueProduct?: PlatformCore.RecordRef;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: PlatformCore.RecordRef;
    isSpecialWorkOrderItem?: boolean;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    buildEntireAssembly?: boolean;
    quantityOnHand?: number;
    quantityOnHandUnits?: string;
    useMarginalRates?: boolean;
    reorderMultiple?: number;
    cost?: number;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    isHazmatItem?: boolean;
    hazmatId?: string;
    hazmatShippingName?: string;
    hazmatHazardClass?: string;
    hazmatPackingGroup?: ListsAccountingTypes.HazmatPackingGroup;
    hazmatItemUnits?: string;
    hazmatItemUnitsQty?: number;
    costEstimate?: number;
    transferPrice?: number;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    intercoCogsAccount?: PlatformCore.RecordRef;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    unbuildVarianceAccount?: PlatformCore.RecordRef;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    dropshipExpenseAccount?: PlatformCore.RecordRef;
    preferredLocation?: PlatformCore.RecordRef;
    isStorePickupAllowed?: boolean;
    totalValue?: number;
    useBins?: boolean;
    averageCost?: number;
    lastPurchasePrice?: number;
    purchaseDescription?: string;
    leadTime?: number;
    autoLeadTime?: boolean;
    buildTime?: number;
    safetyStockLevel?: number;
    safetyStockLevelUnits?: string;
    safetyStockLevelDays?: number;
    seasonalDemand?: boolean;
    serialNumbers?: string;
    reorderPoint?: number;
    reorderPointUnits?: string;
    preferredStockLevel?: number;
    preferredStockLevelUnits?: string;
    demandModifier?: number;
    autoReorderPoint?: boolean;
    autoPreferredStockLevel?: boolean;
    preferredStockLevelDays?: number;
    defaultReturnCost?: number;
    supplyReplenishmentMethod?: PlatformCore.RecordRef;
    alternateDemandSourceItem?: PlatformCore.RecordRef;
    fixedLotSize?: number;
    supplyType?: PlatformCore.RecordRef;
    demandTimeFence?: number;
    supplyTimeFence?: number;
    rescheduleInDays?: number;
    rescheduleOutDays?: number;
    supplyLotSizingMethod?: PlatformCore.RecordRef;
    demandSource?: PlatformCore.RecordRef;
    shipIndividually?: boolean;
    quantityCommitted?: number;
    quantityAvailable?: number;
    quantityBackOrdered?: number;
    quantityOnOrder?: number;
    shipPackage?: PlatformCore.RecordRef;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    urlComponent?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    shoppingDotComCategory?: string;
    shopzillaCategoryId?: number;
    outOfStockMessage?: string;
    nexTagCategory?: string;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    productFeedList?: ProductFeedList;
    relatedItemsDescription?: string;
    onSpecial?: boolean;
    specialsDescription?: string;
    featuredDescription?: string;
    itemOptionsList?: ItemOptionsList;
    itemNumberOptionsList?: PlatformCore.RecordRefList;
    itemVendorList?: ItemVendorList;
    pricingMatrix?: PricingMatrix;
    billOfMaterialsList?: SerializedAssemblyItemBillOfMaterialsList;
    memberList?: ItemMemberList;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    locationsList?: SerializedInventoryItemLocationsList;
    siteCategoryList?: SiteCategoryList;
    binNumberList?: InventoryItemBinNumberList;
    numbersList?: SerializedInventoryItemNumbersList;
    translationsList?: TranslationList;
    presentationItemList?: PresentationItemList;
    hierarchyVersionsList?: SerializedAssemblyItemHierarchyVersionsList;
    futureHorizon?: number;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class SerializedAssemblyItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    printItems?: boolean;
    isOnline?: boolean;
    lastInvtCountDate?: string;
    nextInvtCountDate?: string;
    invtCountInterval?: number;
    invtClassification?: ListsAccountingTypes.ItemInvtClassification;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    useComponentYield?: boolean;
    isInactive?: boolean;
    subsidiaryList?: PlatformCore.RecordRefList;
    availableToPartners?: boolean;
    includeChildren?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    description?: string;
    cogsAccount?: PlatformCore.RecordRef;
    vendor?: PlatformCore.RecordRef;
    incomeAccount?: PlatformCore.RecordRef;
    intercoIncomeAccount?: PlatformCore.RecordRef;
    assetAccount?: PlatformCore.RecordRef;
    matchBillToReceipt?: boolean;
    billQtyVarianceAcct?: PlatformCore.RecordRef;
    billPriceVarianceAcct?: PlatformCore.RecordRef;
    billExchRateVarianceAcct?: PlatformCore.RecordRef;
    gainLossAccount?: PlatformCore.RecordRef;
    salesTaxCode?: PlatformCore.RecordRef;
    costCategory?: PlatformCore.RecordRef;
    purchaseTaxCode?: PlatformCore.RecordRef;
    prodQtyVarianceAcct?: PlatformCore.RecordRef;
    prodPriceVarianceAcct?: PlatformCore.RecordRef;
    purchasePriceVarianceAcct?: PlatformCore.RecordRef;
    wipVarianceAcct?: PlatformCore.RecordRef;
    taxSchedule?: PlatformCore.RecordRef;
    scrapAcct?: PlatformCore.RecordRef;
    shippingCost?: number;
    wipAcct?: PlatformCore.RecordRef;
    shippingCostUnits?: string;
    handlingCost?: number;
    weight?: number;
    handlingCostUnits?: string;
    weightUnit?: ListsAccountingTypes.ItemWeightUnit;
    weightUnits?: string;
    costingMethod?: ListsAccountingTypes.ItemCostingMethod;
    isTaxable?: boolean;
    costingMethodDisplay?: string;
    rate?: number;
    unitsType?: PlatformCore.RecordRef;
    stockUnit?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    trackLandedCost?: boolean;
    matrixItemNameTemplate?: string;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    stockDescription?: string;
    producer?: boolean;
    manufacturer?: string;
    mpn?: string;
    multManufactureAddr?: boolean;
    manufactureraddr1?: string;
    manufacturerCity?: string;
    manufacturerState?: string;
    manufacturerZip?: string;
    countryOfManufacture?: PlatformCommonTypes.Country;
    effectiveBomControl?: ListsAccountingTypes.AssemblyItemEffectiveBomControl;
    minimumQuantityUnits?: string;
    defaultRevision?: string;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    roundUpAsComponent?: boolean;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    isDropShipItem?: boolean;
    isPhantom?: boolean;
    itemShipMethodList?: PlatformCore.RecordRefList;
    manufacturerTaxId?: string;
    scheduleBNumber?: string;
    scheduleBQuantity?: number;
    scheduleBCode?: PlatformCore.RecordRef;
    manufacturerTariff?: string;
    preferenceCriterion?: ListsAccountingTypes.ItemPreferenceCriterion;
    issueProduct?: PlatformCore.RecordRef;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: PlatformCore.RecordRef;
    isSpecialWorkOrderItem?: boolean;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    buildEntireAssembly?: boolean;
    quantityOnHand?: number;
    quantityOnHandUnits?: string;
    useMarginalRates?: boolean;
    reorderMultiple?: number;
    cost?: number;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    isHazmatItem?: boolean;
    hazmatId?: string;
    hazmatShippingName?: string;
    hazmatHazardClass?: string;
    hazmatPackingGroup?: ListsAccountingTypes.HazmatPackingGroup;
    hazmatItemUnits?: string;
    hazmatItemUnitsQty?: number;
    costEstimate?: number;
    transferPrice?: number;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    intercoCogsAccount?: PlatformCore.RecordRef;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    unbuildVarianceAccount?: PlatformCore.RecordRef;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    dropshipExpenseAccount?: PlatformCore.RecordRef;
    preferredLocation?: PlatformCore.RecordRef;
    isStorePickupAllowed?: boolean;
    totalValue?: number;
    useBins?: boolean;
    averageCost?: number;
    lastPurchasePrice?: number;
    purchaseDescription?: string;
    leadTime?: number;
    autoLeadTime?: boolean;
    buildTime?: number;
    safetyStockLevel?: number;
    safetyStockLevelUnits?: string;
    safetyStockLevelDays?: number;
    seasonalDemand?: boolean;
    serialNumbers?: string;
    reorderPoint?: number;
    reorderPointUnits?: string;
    preferredStockLevel?: number;
    preferredStockLevelUnits?: string;
    demandModifier?: number;
    autoReorderPoint?: boolean;
    autoPreferredStockLevel?: boolean;
    preferredStockLevelDays?: number;
    defaultReturnCost?: number;
    supplyReplenishmentMethod?: PlatformCore.RecordRef;
    alternateDemandSourceItem?: PlatformCore.RecordRef;
    fixedLotSize?: number;
    supplyType?: PlatformCore.RecordRef;
    demandTimeFence?: number;
    supplyTimeFence?: number;
    rescheduleInDays?: number;
    rescheduleOutDays?: number;
    supplyLotSizingMethod?: PlatformCore.RecordRef;
    demandSource?: PlatformCore.RecordRef;
    shipIndividually?: boolean;
    quantityCommitted?: number;
    quantityAvailable?: number;
    quantityBackOrdered?: number;
    quantityOnOrder?: number;
    shipPackage?: PlatformCore.RecordRef;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    urlComponent?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    shoppingDotComCategory?: string;
    shopzillaCategoryId?: number;
    outOfStockMessage?: string;
    nexTagCategory?: string;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    productFeedList?: ProductFeedList;
    relatedItemsDescription?: string;
    onSpecial?: boolean;
    specialsDescription?: string;
    featuredDescription?: string;
    itemOptionsList?: ItemOptionsList;
    itemNumberOptionsList?: PlatformCore.RecordRefList;
    itemVendorList?: ItemVendorList;
    pricingMatrix?: PricingMatrix;
    billOfMaterialsList?: SerializedAssemblyItemBillOfMaterialsList;
    memberList?: ItemMemberList;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    locationsList?: SerializedInventoryItemLocationsList;
    siteCategoryList?: SiteCategoryList;
    binNumberList?: InventoryItemBinNumberList;
    numbersList?: SerializedInventoryItemNumbersList;
    translationsList?: TranslationList;
    presentationItemList?: PresentationItemList;
    hierarchyVersionsList?: SerializedAssemblyItemHierarchyVersionsList;
    futureHorizon?: number;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: SerializedAssemblyItemProps);
}
export declare type PriceListProps = {
    price?: Price[];
};
export declare class PriceList extends SoapMappingBase {
    price?: Price[];
    constructor(props: PriceListProps);
}
export declare type GiftCertificateSearchProps = {
    basic?: PlatformCommon.GiftCertificateSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
};
export declare class GiftCertificateSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.GiftCertificateSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
    constructor(props: GiftCertificateSearchProps);
}
export declare type BillingScheduleMilestoneProps = {
    milestoneId?: number;
    milestoneAmount?: number;
    milestoneTerms?: PlatformCore.RecordRef;
    projectTask?: PlatformCore.RecordRef;
    milestoneDate?: string;
    milestoneCompleted?: boolean;
    milestoneActualCompletionDate?: string;
    comments?: string;
};
export declare class BillingScheduleMilestone extends SoapMappingBase {
    milestoneId?: number;
    milestoneAmount?: number;
    milestoneTerms?: PlatformCore.RecordRef;
    projectTask?: PlatformCore.RecordRef;
    milestoneDate?: string;
    milestoneCompleted?: boolean;
    milestoneActualCompletionDate?: string;
    comments?: string;
    constructor(props: BillingScheduleMilestoneProps);
}
export declare type LotNumberedInventoryItemNumbersListProps = {
    numbers?: LotNumberedInventoryItemNumbers[];
    replaceAll?: boolean;
};
export declare class LotNumberedInventoryItemNumbersList extends SoapMappingBase {
    numbers?: LotNumberedInventoryItemNumbers[];
    replaceAll?: boolean;
    constructor(props: LotNumberedInventoryItemNumbersListProps);
}
export declare type BomRevisionSearchRowProps = {
    basic?: PlatformCommon.BomRevisionSearchRowBasic;
    billOfMaterialsJoin?: PlatformCommon.BomSearchRowBasic;
    componentJoin?: PlatformCommon.BomRevisionComponentSearchRowBasic;
    transactionJoin?: PlatformCommon.TransactionSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
};
export declare class BomRevisionSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.BomRevisionSearchRowBasic;
    billOfMaterialsJoin?: PlatformCommon.BomSearchRowBasic;
    componentJoin?: PlatformCommon.BomRevisionComponentSearchRowBasic;
    transactionJoin?: PlatformCommon.TransactionSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
    constructor(props: BomRevisionSearchRowProps);
}
export declare type NonInventoryResaleItemHierarchyVersionsProps = {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
};
export declare class NonInventoryResaleItemHierarchyVersions extends SoapMappingBase {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
    constructor(props: NonInventoryResaleItemHierarchyVersionsProps);
}
export declare type CustomerMessageSearchProps = {
    basic?: PlatformCommon.CustomerMessageSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class CustomerMessageSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.CustomerMessageSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: CustomerMessageSearchProps);
}
export declare type LotNumberedAssemblyItemBillOfMaterialsProps = {
    billOfMaterials?: PlatformCore.RecordRef;
    currentRevision?: string;
    masterDefault?: boolean;
    defaultForLocationList?: PlatformCore.RecordRefList;
    inactive?: string;
    memo?: string;
};
export declare class LotNumberedAssemblyItemBillOfMaterials extends SoapMappingBase {
    billOfMaterials?: PlatformCore.RecordRef;
    currentRevision?: string;
    masterDefault?: boolean;
    defaultForLocationList?: PlatformCore.RecordRefList;
    inactive?: string;
    memo?: string;
    constructor(props: LotNumberedAssemblyItemBillOfMaterialsProps);
}
export declare type AccountingPeriodSearchProps = {
    basic?: PlatformCommon.AccountingPeriodSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    userNotesJoin?: PlatformCommon.NoteSearchBasic;
};
export declare class AccountingPeriodSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.AccountingPeriodSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    userNotesJoin?: PlatformCommon.NoteSearchBasic;
    constructor(props: AccountingPeriodSearchProps);
}
export declare type TaxGroupTaxItemListProps = {
    taxItem?: TaxGroupTaxItem[];
    replaceAll?: boolean;
};
export declare class TaxGroupTaxItemList extends SoapMappingBase {
    taxItem?: TaxGroupTaxItem[];
    replaceAll?: boolean;
    constructor(props: TaxGroupTaxItemListProps);
}
export declare type SerializedInventoryItemHierarchyVersionsProps = {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
};
export declare class SerializedInventoryItemHierarchyVersions extends SoapMappingBase {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
    constructor(props: SerializedInventoryItemHierarchyVersionsProps);
}
export declare type ItemAccountingBookDetailListProps = {
    itemAccountingBookDetail?: ItemAccountingBookDetail[];
    replaceAll?: boolean;
};
export declare class ItemAccountingBookDetailList extends SoapMappingBase {
    itemAccountingBookDetail?: ItemAccountingBookDetail[];
    replaceAll?: boolean;
    constructor(props: ItemAccountingBookDetailListProps);
}
export declare type TaxTypeNexusesTaxProps = {
    nexus?: PlatformCore.RecordRef;
    description?: string;
    saleTaxAcct?: PlatformCore.RecordRef;
    purchTaxAcct?: PlatformCore.RecordRef;
};
export declare class TaxTypeNexusesTax extends SoapMappingBase {
    nexus?: PlatformCore.RecordRef;
    description?: string;
    saleTaxAcct?: PlatformCore.RecordRef;
    purchTaxAcct?: PlatformCore.RecordRef;
    constructor(props: TaxTypeNexusesTaxProps);
}
export declare type PricingGroupProps = {
    name?: string;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class PricingGroup extends PlatformCore.Record {
    name?: string;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
    constructor(props: PricingGroupProps);
}
export declare type DepartmentProps = {
    name?: string;
    includeChildren?: boolean;
    parent?: PlatformCore.RecordRef;
    isInactive?: boolean;
    classTranslationList?: ClassTranslationList;
    subsidiaryList?: PlatformCore.RecordRefList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class Department extends PlatformCore.Record {
    name?: string;
    includeChildren?: boolean;
    parent?: PlatformCore.RecordRef;
    isInactive?: boolean;
    classTranslationList?: ClassTranslationList;
    subsidiaryList?: PlatformCore.RecordRefList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: DepartmentProps);
}
export declare type SerializedInventoryItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    includeChildren?: boolean;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isHazmatItem?: boolean;
    hazmatId?: string;
    hazmatShippingName?: string;
    hazmatHazardClass?: string;
    hazmatPackingGroup?: ListsAccountingTypes.HazmatPackingGroup;
    hazmatItemUnits?: string;
    hazmatItemUnitsQty?: number;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    costingMethod?: ListsAccountingTypes.ItemCostingMethod;
    subsidiaryList?: PlatformCore.RecordRefList;
    purchaseDescription?: string;
    copyDescription?: boolean;
    issueProduct?: PlatformCore.RecordRef;
    currency?: string;
    cogsAccount?: PlatformCore.RecordRef;
    intercoCogsAccount?: PlatformCore.RecordRef;
    vendor?: PlatformCore.RecordRef;
    salesDescription?: string;
    lastInvtCountDate?: string;
    nextInvtCountDate?: string;
    invtCountInterval?: number;
    invtClassification?: ListsAccountingTypes.ItemInvtClassification;
    incomeAccount?: PlatformCore.RecordRef;
    intercoIncomeAccount?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    taxSchedule?: PlatformCore.RecordRef;
    dropshipExpenseAccount?: PlatformCore.RecordRef;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    assetAccount?: PlatformCore.RecordRef;
    matchBillToReceipt?: boolean;
    billQtyVarianceAcct?: PlatformCore.RecordRef;
    billPriceVarianceAcct?: PlatformCore.RecordRef;
    billExchRateVarianceAcct?: PlatformCore.RecordRef;
    gainLossAccount?: PlatformCore.RecordRef;
    shippingCost?: number;
    handlingCost?: number;
    weight?: number;
    costingMethodDisplay?: string;
    shippingCostUnits?: string;
    handlingCostUnits?: string;
    unitsType?: PlatformCore.RecordRef;
    stockUnit?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    minimumQuantityUnits?: string;
    safetyStockLevelUnits?: string;
    billingSchedule?: PlatformCore.RecordRef;
    trackLandedCost?: boolean;
    matrixItemNameTemplate?: string;
    isDropShipItem?: boolean;
    isSpecialOrderItem?: boolean;
    stockDescription?: string;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    producer?: boolean;
    manufacturer?: string;
    revRecSchedule?: PlatformCore.RecordRef;
    mpn?: string;
    multManufactureAddr?: boolean;
    manufacturerAddr1?: string;
    manufacturerCity?: string;
    manufacturerState?: string;
    manufacturerZip?: string;
    countryOfManufacture?: PlatformCommonTypes.Country;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    roundUpAsComponent?: boolean;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    itemShipMethodList?: PlatformCore.RecordRefList;
    manufacturerTaxId?: string;
    scheduleBNumber?: string;
    scheduleBQuantity?: number;
    scheduleBCode?: string;
    manufacturerTariff?: string;
    preferenceCriterion?: ListsAccountingTypes.ItemPreferenceCriterion;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    shipPackage?: PlatformCore.RecordRef;
    shipIndividually?: boolean;
    softDescriptor?: PlatformCore.RecordRef;
    costCategory?: PlatformCore.RecordRef;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    useMarginalRates?: boolean;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    transferPrice?: number;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    preferredLocation?: PlatformCore.RecordRef;
    isStorePickupAllowed?: boolean;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    cost?: number;
    costUnits?: string;
    quantityReorderUnits?: string;
    reorderMultiple?: number;
    totalValue?: number;
    useBins?: boolean;
    leadTime?: number;
    autoLeadTime?: boolean;
    autoReorderPoint?: boolean;
    autoPreferredStockLevel?: boolean;
    preferredStockLevelDays?: number;
    averageCost?: number;
    safetyStockLevel?: number;
    lastPurchasePrice?: number;
    safetyStockLevelDays?: number;
    backwardConsumptionDays?: number;
    seasonalDemand?: boolean;
    demandModifier?: number;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    weightUnit?: ListsAccountingTypes.ItemWeightUnit;
    weightUnits?: string;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    shoppingDotComCategory?: string;
    shopzillaCategoryId?: number;
    nexTagCategory?: string;
    quantityOnHand?: number;
    quantityOnHandUnits?: string;
    onHandValueMli?: number;
    serialNumbers?: string;
    reorderPoint?: number;
    preferredStockLevel?: number;
    reorderPointUnits?: string;
    defaultReturnCost?: number;
    supplyReplenishmentMethod?: PlatformCore.RecordRef;
    alternateDemandSourceItem?: PlatformCore.RecordRef;
    fixedLotSize?: number;
    periodicLotSizeType?: ListsAccountingTypes.PeriodicLotSizeType;
    supplyType?: PlatformCore.RecordRef;
    demandTimeFence?: number;
    supplyTimeFence?: number;
    rescheduleInDays?: number;
    rescheduleOutDays?: number;
    periodicLotSizeDays?: number;
    supplyLotSizingMethod?: PlatformCore.RecordRef;
    forwardConsumptionDays?: number;
    demandSource?: PlatformCore.RecordRef;
    quantityOnOrder?: number;
    preferredStockLevelUnits?: string;
    quantityCommitted?: number;
    quantityAvailable?: number;
    quantityBackOrdered?: number;
    purchaseTaxCode?: PlatformCore.RecordRef;
    purchasePriceVarianceAcct?: PlatformCore.RecordRef;
    rate?: number;
    salesTaxCode?: PlatformCore.RecordRef;
    onSpecial?: boolean;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    specialsDescription?: string;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    relatedItemsDescription?: string;
    featuredDescription?: string;
    productFeedList?: ProductFeedList;
    urlComponent?: string;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    itemVendorList?: ItemVendorList;
    pricingMatrix?: PricingMatrix;
    hierarchyVersionsList?: SerializedInventoryItemHierarchyVersionsList;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    itemNumberOptionsList?: PlatformCore.RecordRefList;
    numbersList?: SerializedInventoryItemNumbersList;
    binNumberList?: InventoryItemBinNumberList;
    siteCategoryList?: SiteCategoryList;
    locationsList?: SerializedInventoryItemLocationsList;
    translationsList?: TranslationList;
    presentationItemList?: PresentationItemList;
    futureHorizon?: number;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class SerializedInventoryItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    includeChildren?: boolean;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isHazmatItem?: boolean;
    hazmatId?: string;
    hazmatShippingName?: string;
    hazmatHazardClass?: string;
    hazmatPackingGroup?: ListsAccountingTypes.HazmatPackingGroup;
    hazmatItemUnits?: string;
    hazmatItemUnitsQty?: number;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    costingMethod?: ListsAccountingTypes.ItemCostingMethod;
    subsidiaryList?: PlatformCore.RecordRefList;
    purchaseDescription?: string;
    copyDescription?: boolean;
    issueProduct?: PlatformCore.RecordRef;
    currency?: string;
    cogsAccount?: PlatformCore.RecordRef;
    intercoCogsAccount?: PlatformCore.RecordRef;
    vendor?: PlatformCore.RecordRef;
    salesDescription?: string;
    lastInvtCountDate?: string;
    nextInvtCountDate?: string;
    invtCountInterval?: number;
    invtClassification?: ListsAccountingTypes.ItemInvtClassification;
    incomeAccount?: PlatformCore.RecordRef;
    intercoIncomeAccount?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    taxSchedule?: PlatformCore.RecordRef;
    dropshipExpenseAccount?: PlatformCore.RecordRef;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    assetAccount?: PlatformCore.RecordRef;
    matchBillToReceipt?: boolean;
    billQtyVarianceAcct?: PlatformCore.RecordRef;
    billPriceVarianceAcct?: PlatformCore.RecordRef;
    billExchRateVarianceAcct?: PlatformCore.RecordRef;
    gainLossAccount?: PlatformCore.RecordRef;
    shippingCost?: number;
    handlingCost?: number;
    weight?: number;
    costingMethodDisplay?: string;
    shippingCostUnits?: string;
    handlingCostUnits?: string;
    unitsType?: PlatformCore.RecordRef;
    stockUnit?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    minimumQuantityUnits?: string;
    safetyStockLevelUnits?: string;
    billingSchedule?: PlatformCore.RecordRef;
    trackLandedCost?: boolean;
    matrixItemNameTemplate?: string;
    isDropShipItem?: boolean;
    isSpecialOrderItem?: boolean;
    stockDescription?: string;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    producer?: boolean;
    manufacturer?: string;
    revRecSchedule?: PlatformCore.RecordRef;
    mpn?: string;
    multManufactureAddr?: boolean;
    manufacturerAddr1?: string;
    manufacturerCity?: string;
    manufacturerState?: string;
    manufacturerZip?: string;
    countryOfManufacture?: PlatformCommonTypes.Country;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    roundUpAsComponent?: boolean;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    itemShipMethodList?: PlatformCore.RecordRefList;
    manufacturerTaxId?: string;
    scheduleBNumber?: string;
    scheduleBQuantity?: number;
    scheduleBCode?: string;
    manufacturerTariff?: string;
    preferenceCriterion?: ListsAccountingTypes.ItemPreferenceCriterion;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    shipPackage?: PlatformCore.RecordRef;
    shipIndividually?: boolean;
    softDescriptor?: PlatformCore.RecordRef;
    costCategory?: PlatformCore.RecordRef;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    useMarginalRates?: boolean;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    transferPrice?: number;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    preferredLocation?: PlatformCore.RecordRef;
    isStorePickupAllowed?: boolean;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    cost?: number;
    costUnits?: string;
    quantityReorderUnits?: string;
    reorderMultiple?: number;
    totalValue?: number;
    useBins?: boolean;
    leadTime?: number;
    autoLeadTime?: boolean;
    autoReorderPoint?: boolean;
    autoPreferredStockLevel?: boolean;
    preferredStockLevelDays?: number;
    averageCost?: number;
    safetyStockLevel?: number;
    lastPurchasePrice?: number;
    safetyStockLevelDays?: number;
    backwardConsumptionDays?: number;
    seasonalDemand?: boolean;
    demandModifier?: number;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    weightUnit?: ListsAccountingTypes.ItemWeightUnit;
    weightUnits?: string;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    shoppingDotComCategory?: string;
    shopzillaCategoryId?: number;
    nexTagCategory?: string;
    quantityOnHand?: number;
    quantityOnHandUnits?: string;
    onHandValueMli?: number;
    serialNumbers?: string;
    reorderPoint?: number;
    preferredStockLevel?: number;
    reorderPointUnits?: string;
    defaultReturnCost?: number;
    supplyReplenishmentMethod?: PlatformCore.RecordRef;
    alternateDemandSourceItem?: PlatformCore.RecordRef;
    fixedLotSize?: number;
    periodicLotSizeType?: ListsAccountingTypes.PeriodicLotSizeType;
    supplyType?: PlatformCore.RecordRef;
    demandTimeFence?: number;
    supplyTimeFence?: number;
    rescheduleInDays?: number;
    rescheduleOutDays?: number;
    periodicLotSizeDays?: number;
    supplyLotSizingMethod?: PlatformCore.RecordRef;
    forwardConsumptionDays?: number;
    demandSource?: PlatformCore.RecordRef;
    quantityOnOrder?: number;
    preferredStockLevelUnits?: string;
    quantityCommitted?: number;
    quantityAvailable?: number;
    quantityBackOrdered?: number;
    purchaseTaxCode?: PlatformCore.RecordRef;
    purchasePriceVarianceAcct?: PlatformCore.RecordRef;
    rate?: number;
    salesTaxCode?: PlatformCore.RecordRef;
    onSpecial?: boolean;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    specialsDescription?: string;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    relatedItemsDescription?: string;
    featuredDescription?: string;
    productFeedList?: ProductFeedList;
    urlComponent?: string;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    itemVendorList?: ItemVendorList;
    pricingMatrix?: PricingMatrix;
    hierarchyVersionsList?: SerializedInventoryItemHierarchyVersionsList;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    itemNumberOptionsList?: PlatformCore.RecordRefList;
    numbersList?: SerializedInventoryItemNumbersList;
    binNumberList?: InventoryItemBinNumberList;
    siteCategoryList?: SiteCategoryList;
    locationsList?: SerializedInventoryItemLocationsList;
    translationsList?: TranslationList;
    presentationItemList?: PresentationItemList;
    futureHorizon?: number;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: SerializedInventoryItemProps);
}
export declare type BillingScheduleMilestoneListProps = {
    billingScheduleMilestone?: BillingScheduleMilestone[];
    replaceAll?: boolean;
};
export declare class BillingScheduleMilestoneList extends SoapMappingBase {
    billingScheduleMilestone?: BillingScheduleMilestone[];
    replaceAll?: boolean;
    constructor(props: BillingScheduleMilestoneListProps);
}
export declare type ContactRoleSearchRowProps = {
    basic?: PlatformCommon.ContactRoleSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class ContactRoleSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.ContactRoleSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: ContactRoleSearchRowProps);
}
export declare type ServiceResaleItemHierarchyVersionsProps = {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
};
export declare class ServiceResaleItemHierarchyVersions extends SoapMappingBase {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
    constructor(props: ServiceResaleItemHierarchyVersionsProps);
}
export declare type PricingGroupSearchAdvancedProps = {
    criteria?: PricingGroupSearch;
    columns?: PricingGroupSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class PricingGroupSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: PricingGroupSearch;
    columns?: PricingGroupSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: PricingGroupSearchAdvancedProps);
}
export declare type RateListProps = {
    rate?: Rate[];
};
export declare class RateList extends SoapMappingBase {
    rate?: Rate[];
    constructor(props: RateListProps);
}
export declare type MerchandiseHierarchyNodeHierarchyVersionsListProps = {
    merchandiseHierarchyNodeHierarchyVersions?: MerchandiseHierarchyNodeHierarchyVersions[];
    replaceAll?: boolean;
};
export declare class MerchandiseHierarchyNodeHierarchyVersionsList extends SoapMappingBase {
    merchandiseHierarchyNodeHierarchyVersions?: MerchandiseHierarchyNodeHierarchyVersions[];
    replaceAll?: boolean;
    constructor(props: MerchandiseHierarchyNodeHierarchyVersionsListProps);
}
export declare type TaxGroupSearchAdvancedProps = {
    criteria?: TaxGroupSearch;
    columns?: TaxGroupSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class TaxGroupSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: TaxGroupSearch;
    columns?: TaxGroupSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: TaxGroupSearchAdvancedProps);
}
export declare type TaxTypeNexusesTaxListProps = {
    nexusesTax?: TaxTypeNexusesTax[];
    replaceAll?: boolean;
};
export declare class TaxTypeNexusesTaxList extends SoapMappingBase {
    nexusesTax?: TaxTypeNexusesTax[];
    replaceAll?: boolean;
    constructor(props: TaxTypeNexusesTaxListProps);
}
export declare type SubsidiaryAccountingBookDetailProps = {
    accountingBook?: PlatformCore.RecordRef;
    currency?: PlatformCore.RecordRef;
    bookStatus?: ListsAccountingTypes.AccountingBookStatus;
};
export declare class SubsidiaryAccountingBookDetail extends SoapMappingBase {
    accountingBook?: PlatformCore.RecordRef;
    currency?: PlatformCore.RecordRef;
    bookStatus?: ListsAccountingTypes.AccountingBookStatus;
    constructor(props: SubsidiaryAccountingBookDetailProps);
}
export declare type BinSearchRowProps = {
    basic?: PlatformCommon.BinSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
};
export declare class BinSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.BinSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
    constructor(props: BinSearchRowProps);
}
export declare type MerchandiseHierarchyNodeSearchAdvancedProps = {
    criteria?: MerchandiseHierarchyNodeSearch;
    columns?: MerchandiseHierarchyNodeSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class MerchandiseHierarchyNodeSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: MerchandiseHierarchyNodeSearch;
    columns?: MerchandiseHierarchyNodeSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: MerchandiseHierarchyNodeSearchAdvancedProps);
}
export declare type BomRevisionSearchProps = {
    basic?: PlatformCommon.BomRevisionSearchBasic;
    billOfMaterialsJoin?: PlatformCommon.BomSearchBasic;
    componentJoin?: PlatformCommon.BomRevisionComponentSearchBasic;
    transactionJoin?: PlatformCommon.TransactionSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
};
export declare class BomRevisionSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.BomRevisionSearchBasic;
    billOfMaterialsJoin?: PlatformCommon.BomSearchBasic;
    componentJoin?: PlatformCommon.BomRevisionComponentSearchBasic;
    transactionJoin?: PlatformCommon.TransactionSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
    constructor(props: BomRevisionSearchProps);
}
export declare type TaxTypeSearchRowProps = {
    basic?: PlatformCommon.TaxTypeSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class TaxTypeSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.TaxTypeSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: TaxTypeSearchRowProps);
}
export declare type NexusSearchProps = {
    basic?: PlatformCommon.NexusSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class NexusSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.NexusSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: NexusSearchProps);
}
export declare type ConsolidatedExchangeRateSearchProps = {
    basic?: PlatformCommon.ConsolidatedExchangeRateSearchBasic;
    fromSubsidiaryJoin?: PlatformCommon.SubsidiarySearchBasic;
    periodJoin?: PlatformCommon.AccountingPeriodSearchBasic;
    toSubsidiaryJoin?: PlatformCommon.SubsidiarySearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class ConsolidatedExchangeRateSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.ConsolidatedExchangeRateSearchBasic;
    fromSubsidiaryJoin?: PlatformCommon.SubsidiarySearchBasic;
    periodJoin?: PlatformCommon.AccountingPeriodSearchBasic;
    toSubsidiaryJoin?: PlatformCommon.SubsidiarySearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: ConsolidatedExchangeRateSearchProps);
}
export declare type SerializedInventoryItemHierarchyVersionsListProps = {
    serializedInventoryItemHierarchyVersions?: SerializedInventoryItemHierarchyVersions[];
    replaceAll?: boolean;
};
export declare class SerializedInventoryItemHierarchyVersionsList extends SoapMappingBase {
    serializedInventoryItemHierarchyVersions?: SerializedInventoryItemHierarchyVersions[];
    replaceAll?: boolean;
    constructor(props: SerializedInventoryItemHierarchyVersionsListProps);
}
export declare type KitItemHierarchyVersionsListProps = {
    kitItemHierarchyVersions?: KitItemHierarchyVersions[];
    replaceAll?: boolean;
};
export declare class KitItemHierarchyVersionsList extends SoapMappingBase {
    kitItemHierarchyVersions?: KitItemHierarchyVersions[];
    replaceAll?: boolean;
    constructor(props: KitItemHierarchyVersionsListProps);
}
export declare type ContactRoleSearchProps = {
    basic?: PlatformCommon.ContactRoleSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class ContactRoleSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.ContactRoleSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: ContactRoleSearchProps);
}
export declare type ItemMemberListProps = {
    itemMember?: ItemMember[];
    replaceAll?: boolean;
};
export declare class ItemMemberList extends SoapMappingBase {
    itemMember?: ItemMember[];
    replaceAll?: boolean;
    constructor(props: ItemMemberListProps);
}
export declare type PaymentMethodSearchAdvancedProps = {
    criteria?: PaymentMethodSearch;
    columns?: PaymentMethodSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class PaymentMethodSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: PaymentMethodSearch;
    columns?: PaymentMethodSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: PaymentMethodSearchAdvancedProps);
}
export declare type ContactCategoryProps = {
    name?: string;
    _private?: boolean;
    sync?: boolean;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class ContactCategory extends PlatformCore.Record {
    name?: string;
    _private?: boolean;
    sync?: boolean;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
    constructor(props: ContactCategoryProps);
}
export declare type TermSearchRowProps = {
    basic?: PlatformCommon.TermSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class TermSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.TermSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: TermSearchRowProps);
}
export declare type AccountingPeriodFiscalCalendarsProps = {
    fiscalCalendar?: PlatformCore.RecordRef;
    parent?: PlatformCore.RecordRef;
};
export declare class AccountingPeriodFiscalCalendars extends SoapMappingBase {
    fiscalCalendar?: PlatformCore.RecordRef;
    parent?: PlatformCore.RecordRef;
    constructor(props: AccountingPeriodFiscalCalendarsProps);
}
export declare type BillingScheduleSearchAdvancedProps = {
    criteria?: BillingScheduleSearch;
    columns?: BillingScheduleSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class BillingScheduleSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: BillingScheduleSearch;
    columns?: BillingScheduleSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: BillingScheduleSearchAdvancedProps);
}
export declare type ExpenseCategoryProps = {
    customForm?: PlatformCore.RecordRef;
    name?: string;
    description?: string;
    expenseAcct?: PlatformCore.RecordRef;
    isInactive?: boolean;
    rateRequired?: boolean;
    subsidiaryList?: PlatformCore.RecordRefList;
    defaultRate?: number;
    ratesList?: ExpenseCategoryRatesList;
    translationsList?: TranslationList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class ExpenseCategory extends PlatformCore.Record {
    customForm?: PlatformCore.RecordRef;
    name?: string;
    description?: string;
    expenseAcct?: PlatformCore.RecordRef;
    isInactive?: boolean;
    rateRequired?: boolean;
    subsidiaryList?: PlatformCore.RecordRefList;
    defaultRate?: number;
    ratesList?: ExpenseCategoryRatesList;
    translationsList?: TranslationList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: ExpenseCategoryProps);
}
export declare type ExpenseCategoryRatesProps = {
    subsidiary?: PlatformCore.RecordRef;
    currency?: PlatformCore.RecordRef;
    defaultRate?: number;
};
export declare class ExpenseCategoryRates extends SoapMappingBase {
    subsidiary?: PlatformCore.RecordRef;
    currency?: PlatformCore.RecordRef;
    defaultRate?: number;
    constructor(props: ExpenseCategoryRatesProps);
}
export declare type GiftCertificateItemAuthCodesListProps = {
    authCodes?: GiftCertificateItemAuthCodes[];
    replaceAll?: boolean;
};
export declare class GiftCertificateItemAuthCodesList extends SoapMappingBase {
    authCodes?: GiftCertificateItemAuthCodes[];
    replaceAll?: boolean;
    constructor(props: GiftCertificateItemAuthCodesListProps);
}
export declare type SiteCategoryProps = {
    website?: PlatformCore.RecordRef;
    category?: PlatformCore.RecordRef;
    isDefault?: boolean;
    categoryDescription?: string;
};
export declare class SiteCategory extends SoapMappingBase {
    website?: PlatformCore.RecordRef;
    category?: PlatformCore.RecordRef;
    isDefault?: boolean;
    categoryDescription?: string;
    constructor(props: SiteCategoryProps);
}
export declare type ContactCategorySearchProps = {
    basic?: PlatformCommon.ContactCategorySearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class ContactCategorySearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.ContactCategorySearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: ContactCategorySearchProps);
}
export declare type TermSearchAdvancedProps = {
    criteria?: TermSearch;
    columns?: TermSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class TermSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: TermSearch;
    columns?: TermSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: TermSearchAdvancedProps);
}
export declare type NonInventorySaleItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    salesDescription?: string;
    includeChildren?: boolean;
    incomeAccount?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    taxSchedule?: PlatformCore.RecordRef;
    shippingCost?: number;
    shippingCostUnits?: string;
    handlingCost?: number;
    handlingCostUnits?: string;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    weight?: number;
    weightUnit?: ListsAccountingTypes.ItemWeightUnit;
    weightUnits?: string;
    costEstimateUnits?: string;
    unitsType?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    issueProduct?: PlatformCore.RecordRef;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    stockDescription?: string;
    isHazmatItem?: boolean;
    hazmatId?: string;
    hazmatShippingName?: string;
    hazmatHazardClass?: string;
    hazmatPackingGroup?: ListsAccountingTypes.HazmatPackingGroup;
    hazmatItemUnits?: string;
    hazmatItemUnitsQty?: number;
    producer?: boolean;
    manufacturer?: string;
    mpn?: string;
    multManufactureAddr?: boolean;
    manufacturerAddr1?: string;
    manufacturerCity?: string;
    manufacturerState?: string;
    manufacturerZip?: string;
    countryOfManufacture?: PlatformCommonTypes.Country;
    manufacturerTaxId?: string;
    scheduleBNumber?: string;
    scheduleBQuantity?: number;
    scheduleBCode?: string;
    manufacturerTariff?: string;
    preferenceCriterion?: ListsAccountingTypes.ItemPreferenceCriterion;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: string;
    shipPackage?: PlatformCore.RecordRef;
    shipIndividually?: boolean;
    isFulfillable?: boolean;
    costCategory?: PlatformCore.RecordRef;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    useMarginalRates?: boolean;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    minimumQuantityUnits?: string;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    contingentRevenueHandling?: boolean;
    revReclassFXAccount?: PlatformCore.RecordRef;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    onSpecial?: boolean;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    relatedItemsDescription?: string;
    specialsDescription?: string;
    featuredDescription?: string;
    shoppingDotComCategory?: string;
    shopzillaCategoryId?: number;
    nexTagCategory?: string;
    productFeedList?: ProductFeedList;
    urlComponent?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    matrixItemNameTemplate?: string;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    itemShipMethodList?: PlatformCore.RecordRefList;
    subsidiaryList?: PlatformCore.RecordRefList;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    pricingMatrix?: PricingMatrix;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    purchaseTaxCode?: PlatformCore.RecordRef;
    rate?: number;
    salesTaxCode?: PlatformCore.RecordRef;
    siteCategoryList?: SiteCategoryList;
    translationsList?: TranslationList;
    presentationItemList?: PresentationItemList;
    hierarchyVersionsList?: NonInventorySaleItemHierarchyVersionsList;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class NonInventorySaleItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    salesDescription?: string;
    includeChildren?: boolean;
    incomeAccount?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    taxSchedule?: PlatformCore.RecordRef;
    shippingCost?: number;
    shippingCostUnits?: string;
    handlingCost?: number;
    handlingCostUnits?: string;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    weight?: number;
    weightUnit?: ListsAccountingTypes.ItemWeightUnit;
    weightUnits?: string;
    costEstimateUnits?: string;
    unitsType?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    issueProduct?: PlatformCore.RecordRef;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    stockDescription?: string;
    isHazmatItem?: boolean;
    hazmatId?: string;
    hazmatShippingName?: string;
    hazmatHazardClass?: string;
    hazmatPackingGroup?: ListsAccountingTypes.HazmatPackingGroup;
    hazmatItemUnits?: string;
    hazmatItemUnitsQty?: number;
    producer?: boolean;
    manufacturer?: string;
    mpn?: string;
    multManufactureAddr?: boolean;
    manufacturerAddr1?: string;
    manufacturerCity?: string;
    manufacturerState?: string;
    manufacturerZip?: string;
    countryOfManufacture?: PlatformCommonTypes.Country;
    manufacturerTaxId?: string;
    scheduleBNumber?: string;
    scheduleBQuantity?: number;
    scheduleBCode?: string;
    manufacturerTariff?: string;
    preferenceCriterion?: ListsAccountingTypes.ItemPreferenceCriterion;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: string;
    shipPackage?: PlatformCore.RecordRef;
    shipIndividually?: boolean;
    isFulfillable?: boolean;
    costCategory?: PlatformCore.RecordRef;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    useMarginalRates?: boolean;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    minimumQuantityUnits?: string;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    contingentRevenueHandling?: boolean;
    revReclassFXAccount?: PlatformCore.RecordRef;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    onSpecial?: boolean;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    relatedItemsDescription?: string;
    specialsDescription?: string;
    featuredDescription?: string;
    shoppingDotComCategory?: string;
    shopzillaCategoryId?: number;
    nexTagCategory?: string;
    productFeedList?: ProductFeedList;
    urlComponent?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    matrixItemNameTemplate?: string;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    itemShipMethodList?: PlatformCore.RecordRefList;
    subsidiaryList?: PlatformCore.RecordRefList;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    pricingMatrix?: PricingMatrix;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    purchaseTaxCode?: PlatformCore.RecordRef;
    rate?: number;
    salesTaxCode?: PlatformCore.RecordRef;
    siteCategoryList?: SiteCategoryList;
    translationsList?: TranslationList;
    presentationItemList?: PresentationItemList;
    hierarchyVersionsList?: NonInventorySaleItemHierarchyVersionsList;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: NonInventorySaleItemProps);
}
export declare type SerializedAssemblyItemHierarchyVersionsProps = {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
};
export declare class SerializedAssemblyItemHierarchyVersions extends SoapMappingBase {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
    constructor(props: SerializedAssemblyItemHierarchyVersionsProps);
}
export declare type ItemAccountMappingProps = {
    customForm?: PlatformCore.RecordRef;
    effectiveDate?: string;
    endDate?: string;
    accountingBook?: PlatformCore.RecordRef;
    subsidiary?: PlatformCore.RecordRef;
    itemAccount?: ListsAccountingTypes.ItemAccountMappingItemAccount;
    sourceAccount?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    department?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    destinationAccount?: PlatformCore.RecordRef;
    customDimension?: PlatformCore.BaseRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class ItemAccountMapping extends PlatformCore.Record {
    customForm?: PlatformCore.RecordRef;
    effectiveDate?: string;
    endDate?: string;
    accountingBook?: PlatformCore.RecordRef;
    subsidiary?: PlatformCore.RecordRef;
    itemAccount?: ListsAccountingTypes.ItemAccountMappingItemAccount;
    sourceAccount?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    department?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    destinationAccount?: PlatformCore.RecordRef;
    customDimension?: PlatformCore.BaseRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: ItemAccountMappingProps);
}
export declare type AccountSearchRowProps = {
    basic?: PlatformCommon.AccountSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
};
export declare class AccountSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.AccountSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
    constructor(props: AccountSearchRowProps);
}
export declare type WinLossReasonSearchProps = {
    basic?: PlatformCommon.WinLossReasonSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class WinLossReasonSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.WinLossReasonSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: WinLossReasonSearchProps);
}
export declare type PartnerCategorySearchRowProps = {
    basic?: PlatformCommon.PartnerCategorySearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class PartnerCategorySearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.PartnerCategorySearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: PartnerCategorySearchRowProps);
}
export declare type ServiceSaleItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    salesDescription?: string;
    includeChildren?: boolean;
    incomeAccount?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    taxSchedule?: PlatformCore.RecordRef;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    unitsType?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    issueProduct?: PlatformCore.RecordRef;
    costEstimateUnits?: string;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: string;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    useMarginalRates?: boolean;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    isFulfillable?: boolean;
    costCategory?: PlatformCore.RecordRef;
    pricingGroup?: PlatformCore.RecordRef;
    minimumQuantityUnits?: string;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    contingentRevenueHandling?: boolean;
    revReclassFXAccount?: PlatformCore.RecordRef;
    createJob?: boolean;
    matrixItemNameTemplate?: string;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    urlComponent?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    onSpecial?: boolean;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    relatedItemsDescription?: string;
    specialsDescription?: string;
    itemTaskTemplatesList?: ServiceItemTaskTemplatesList;
    featuredDescription?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    billingRatesMatrix?: BillingRatesMatrix;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    pricingMatrix?: PricingMatrix;
    purchaseTaxCode?: PlatformCore.RecordRef;
    rate?: number;
    salesTaxCode?: PlatformCore.RecordRef;
    siteCategoryList?: SiteCategoryList;
    translationsList?: TranslationList;
    presentationItemList?: PresentationItemList;
    hierarchyVersionsList?: ServiceSaleItemHierarchyVersionsList;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class ServiceSaleItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    salesDescription?: string;
    includeChildren?: boolean;
    incomeAccount?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    taxSchedule?: PlatformCore.RecordRef;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    unitsType?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    issueProduct?: PlatformCore.RecordRef;
    costEstimateUnits?: string;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: string;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    useMarginalRates?: boolean;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    isFulfillable?: boolean;
    costCategory?: PlatformCore.RecordRef;
    pricingGroup?: PlatformCore.RecordRef;
    minimumQuantityUnits?: string;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    contingentRevenueHandling?: boolean;
    revReclassFXAccount?: PlatformCore.RecordRef;
    createJob?: boolean;
    matrixItemNameTemplate?: string;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    urlComponent?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    onSpecial?: boolean;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    relatedItemsDescription?: string;
    specialsDescription?: string;
    itemTaskTemplatesList?: ServiceItemTaskTemplatesList;
    featuredDescription?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    billingRatesMatrix?: BillingRatesMatrix;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    pricingMatrix?: PricingMatrix;
    purchaseTaxCode?: PlatformCore.RecordRef;
    rate?: number;
    salesTaxCode?: PlatformCore.RecordRef;
    siteCategoryList?: SiteCategoryList;
    translationsList?: TranslationList;
    presentationItemList?: PresentationItemList;
    hierarchyVersionsList?: ServiceSaleItemHierarchyVersionsList;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: ServiceSaleItemProps);
}
export declare type ContactCategorySearchRowProps = {
    basic?: PlatformCommon.ContactCategorySearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class ContactCategorySearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.ContactCategorySearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: ContactCategorySearchRowProps);
}
export declare type LocationBusinessHoursProps = {
    startTime?: string;
    endTime?: string;
    isSunday?: boolean;
    isMonday?: boolean;
    isTuesday?: boolean;
    isWednesday?: boolean;
    isThursday?: boolean;
    isFriday?: boolean;
    isSaturday?: boolean;
    sameDayPickupCutOffTime?: string;
};
export declare class LocationBusinessHours extends SoapMappingBase {
    startTime?: string;
    endTime?: string;
    isSunday?: boolean;
    isMonday?: boolean;
    isTuesday?: boolean;
    isWednesday?: boolean;
    isThursday?: boolean;
    isFriday?: boolean;
    isSaturday?: boolean;
    sameDayPickupCutOffTime?: string;
    constructor(props: LocationBusinessHoursProps);
}
export declare type TranslationProps = {
    locale?: PlatformCommonTypes.Language;
    language?: string;
    displayName?: string;
    description?: string;
    salesDescription?: string;
    storeDisplayName?: string;
    storeDescription?: string;
    storeDetailedDescription?: string;
    featuredDescription?: string;
    specialsDescription?: string;
    pageTitle?: string;
    noPriceMessage?: string;
    outOfStockMessage?: string;
};
export declare class Translation extends SoapMappingBase {
    locale?: PlatformCommonTypes.Language;
    language?: string;
    displayName?: string;
    description?: string;
    salesDescription?: string;
    storeDisplayName?: string;
    storeDescription?: string;
    storeDetailedDescription?: string;
    featuredDescription?: string;
    specialsDescription?: string;
    pageTitle?: string;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    constructor(props: TranslationProps);
}
export declare type SerializedAssemblyItemHierarchyVersionsListProps = {
    serializedAssemblyItemHierarchyVersions?: SerializedAssemblyItemHierarchyVersions[];
    replaceAll?: boolean;
};
export declare class SerializedAssemblyItemHierarchyVersionsList extends SoapMappingBase {
    serializedAssemblyItemHierarchyVersions?: SerializedAssemblyItemHierarchyVersions[];
    replaceAll?: boolean;
    constructor(props: SerializedAssemblyItemHierarchyVersionsListProps);
}
export declare type ItemRevisionSearchProps = {
    basic?: PlatformCommon.ItemRevisionSearchBasic;
    itemJoin?: PlatformCommon.ItemSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class ItemRevisionSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.ItemRevisionSearchBasic;
    itemJoin?: PlatformCommon.ItemSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: ItemRevisionSearchProps);
}
export declare type ServicePurchaseItemHierarchyVersionsListProps = {
    servicePurchaseItemHierarchyVersions?: ServicePurchaseItemHierarchyVersions[];
    replaceAll?: boolean;
};
export declare class ServicePurchaseItemHierarchyVersionsList extends SoapMappingBase {
    servicePurchaseItemHierarchyVersions?: ServicePurchaseItemHierarchyVersions[];
    replaceAll?: boolean;
    constructor(props: ServicePurchaseItemHierarchyVersionsListProps);
}
export declare type FairValuePriceProps = {
    customForm?: PlatformCore.RecordRef;
    item?: PlatformCore.RecordRef;
    itemRevenueCategory?: PlatformCore.RecordRef;
    fairValue?: number;
    fairValueFormula?: PlatformCore.RecordRef;
    currency?: PlatformCore.RecordRef;
    unitsType?: PlatformCore.RecordRef;
    units?: PlatformCore.RecordRef;
    fairValueRangePolicy?: ListsAccountingTypes.FairValuePriceFairValueRangePolicy;
    lowValue?: number;
    lowValuePercent?: number;
    highValue?: number;
    highValuePercent?: number;
    isVsoePrice?: boolean;
    startDate?: string;
    endDate?: string;
    customFieldList?: PlatformCore.CustomFieldList;
    dimensionList?: PlatformCore.DimensionList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class FairValuePrice extends PlatformCore.Record {
    customForm?: PlatformCore.RecordRef;
    item?: PlatformCore.RecordRef;
    itemRevenueCategory?: PlatformCore.RecordRef;
    fairValue?: number;
    fairValueFormula?: PlatformCore.RecordRef;
    currency?: PlatformCore.RecordRef;
    unitsType?: PlatformCore.RecordRef;
    units?: PlatformCore.RecordRef;
    fairValueRangePolicy?: ListsAccountingTypes.FairValuePriceFairValueRangePolicy;
    lowValue?: number;
    lowValuePercent?: number;
    highValue?: number;
    highValuePercent?: number;
    isVsoePrice?: boolean;
    startDate?: string;
    endDate?: string;
    customFieldList?: PlatformCore.CustomFieldList;
    dimensionList?: PlatformCore.DimensionList;
    internalId?: string;
    externalId?: string;
    constructor(props: FairValuePriceProps);
}
export declare type InventoryItemHierarchyVersionsProps = {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
};
export declare class InventoryItemHierarchyVersions extends SoapMappingBase {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
    constructor(props: InventoryItemHierarchyVersionsProps);
}
export declare type ServicePurchaseItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    purchaseDescription?: string;
    manufacturingChargeItem?: boolean;
    cost?: number;
    costUnits?: string;
    issueProduct?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    expenseAccount?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    unitsType?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isInactive?: boolean;
    matrixItemNameTemplate?: string;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    taxSchedule?: PlatformCore.RecordRef;
    deferralAccount?: PlatformCore.RecordRef;
    amortizationTemplate?: PlatformCore.RecordRef;
    residual?: string;
    amortizationPeriod?: number;
    isFulfillable?: boolean;
    generateAccruals?: boolean;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    costCategory?: PlatformCore.RecordRef;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    currency?: string;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    itemVendorList?: ItemVendorList;
    purchaseTaxCode?: PlatformCore.RecordRef;
    salesTaxCode?: PlatformCore.RecordRef;
    translationsList?: TranslationList;
    vendor?: PlatformCore.RecordRef;
    hierarchyVersionsList?: ServicePurchaseItemHierarchyVersionsList;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class ServicePurchaseItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    purchaseDescription?: string;
    manufacturingChargeItem?: boolean;
    cost?: number;
    costUnits?: string;
    issueProduct?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    expenseAccount?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    unitsType?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isInactive?: boolean;
    matrixItemNameTemplate?: string;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    taxSchedule?: PlatformCore.RecordRef;
    deferralAccount?: PlatformCore.RecordRef;
    amortizationTemplate?: PlatformCore.RecordRef;
    residual?: string;
    amortizationPeriod?: number;
    isFulfillable?: boolean;
    generateAccruals?: boolean;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    costCategory?: PlatformCore.RecordRef;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    currency?: string;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    itemVendorList?: ItemVendorList;
    purchaseTaxCode?: PlatformCore.RecordRef;
    salesTaxCode?: PlatformCore.RecordRef;
    translationsList?: TranslationList;
    vendor?: PlatformCore.RecordRef;
    hierarchyVersionsList?: ServicePurchaseItemHierarchyVersionsList;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: ServicePurchaseItemProps);
}
export declare type ClassificationSearchRowProps = {
    basic?: PlatformCommon.ClassificationSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
};
export declare class ClassificationSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.ClassificationSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
    constructor(props: ClassificationSearchRowProps);
}
export declare type InventoryItemBinNumberProps = {
    binNumber?: PlatformCore.RecordRef;
    onHand?: string;
    onHandAvail?: string;
    location?: string;
    preferredBin?: boolean;
};
export declare class InventoryItemBinNumber extends SoapMappingBase {
    binNumber?: PlatformCore.RecordRef;
    onHand?: string;
    onHandAvail?: string;
    location?: string;
    preferredBin?: boolean;
    constructor(props: InventoryItemBinNumberProps);
}
export declare type DownloadItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    salesDescription?: string;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    onSpecial?: boolean;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    subsidiaryList?: PlatformCore.RecordRefList;
    department?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    incomeAccount?: PlatformCore.RecordRef;
    numOfAllowedDownloads?: number;
    daysBeforeExpiration?: number;
    immediateDownload?: boolean;
    isTaxable?: boolean;
    issueProduct?: PlatformCore.RecordRef;
    taxSchedule?: PlatformCore.RecordRef;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    billingSchedule?: PlatformCore.RecordRef;
    isFulfillable?: boolean;
    useMarginalRates?: boolean;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    featuredDescription?: string;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    relatedItemsDescription?: string;
    specialsDescription?: string;
    pricingMatrix?: PricingMatrix;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    siteCategoryList?: SiteCategoryList;
    presentationItemList?: PresentationItemList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class DownloadItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    salesDescription?: string;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    onSpecial?: boolean;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    subsidiaryList?: PlatformCore.RecordRefList;
    department?: PlatformCore.RecordRef;
    includeChildren?: boolean;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    incomeAccount?: PlatformCore.RecordRef;
    numOfAllowedDownloads?: number;
    daysBeforeExpiration?: number;
    immediateDownload?: boolean;
    isTaxable?: boolean;
    issueProduct?: PlatformCore.RecordRef;
    taxSchedule?: PlatformCore.RecordRef;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    billingSchedule?: PlatformCore.RecordRef;
    isFulfillable?: boolean;
    useMarginalRates?: boolean;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    featuredDescription?: string;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    relatedItemsDescription?: string;
    specialsDescription?: string;
    pricingMatrix?: PricingMatrix;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    siteCategoryList?: SiteCategoryList;
    presentationItemList?: PresentationItemList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: DownloadItemProps);
}
export declare type InventoryNumberLocationsListProps = {
    locations?: InventoryNumberLocations[];
    replaceAll?: boolean;
};
export declare class InventoryNumberLocationsList extends SoapMappingBase {
    locations?: InventoryNumberLocations[];
    replaceAll?: boolean;
    constructor(props: InventoryNumberLocationsListProps);
}
export declare type RevRecTemplateSearchRowProps = {
    basic?: PlatformCommon.RevRecTemplateSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class RevRecTemplateSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.RevRecTemplateSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: RevRecTemplateSearchRowProps);
}
export declare type OtherChargePurchaseItemHierarchyVersionsListProps = {
    otherChargePurchaseItemHierarchyVersions?: OtherChargePurchaseItemHierarchyVersions[];
    replaceAll?: boolean;
};
export declare class OtherChargePurchaseItemHierarchyVersionsList extends SoapMappingBase {
    otherChargePurchaseItemHierarchyVersions?: OtherChargePurchaseItemHierarchyVersions[];
    replaceAll?: boolean;
    constructor(props: OtherChargePurchaseItemHierarchyVersionsListProps);
}
export declare type RevRecTemplateProps = {
    name?: string;
    amortizationType?: ListsAccountingTypes.RevRecScheduleAmortizationType;
    recurrenceType?: ListsAccountingTypes.RevRecScheduleRecurrenceType;
    recogIntervalSrc?: ListsAccountingTypes.RevRecScheduleRecogIntervalSrc;
    amortizationPeriod?: number;
    periodOffset?: number;
    revRecOffset?: number;
    initialAmount?: number;
    isInactive?: boolean;
    recurrenceList?: RevRecTemplateRecurrenceList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class RevRecTemplate extends PlatformCore.Record {
    name?: string;
    amortizationType?: ListsAccountingTypes.RevRecScheduleAmortizationType;
    recurrenceType?: ListsAccountingTypes.RevRecScheduleRecurrenceType;
    recogIntervalSrc?: ListsAccountingTypes.RevRecScheduleRecogIntervalSrc;
    amortizationPeriod?: number;
    periodOffset?: number;
    revRecOffset?: number;
    initialAmount?: number;
    isInactive?: boolean;
    recurrenceList?: RevRecTemplateRecurrenceList;
    internalId?: string;
    externalId?: string;
    constructor(props: RevRecTemplateProps);
}
export declare type BillingScheduleProps = {
    scheduleType?: ListsAccountingTypes.BillingScheduleType;
    name?: string;
    recurrencePattern?: ListsAccountingTypes.BillingScheduleRecurrencePattern;
    project?: PlatformCore.RecordRef;
    initialAmount?: string;
    initialTerms?: PlatformCore.RecordRef;
    frequency?: ListsAccountingTypes.BillingScheduleFrequency;
    recurrenceDowMaskList?: PlatformCommon.RecurrenceDowMaskList;
    yearMode?: ListsAccountingTypes.BillingScheduleRecurrenceMode;
    yearDowim?: ListsAccountingTypes.BillingScheduleYearDowim;
    yearDow?: ListsAccountingTypes.BillingScheduleYearDow;
    yearDowimMonth?: ListsAccountingTypes.BillingScheduleYearDowimMonth;
    yearMonth?: ListsAccountingTypes.BillingScheduleYearMonth;
    yearDom?: number;
    monthMode?: ListsAccountingTypes.BillingScheduleRecurrenceMode;
    monthDowim?: ListsAccountingTypes.BillingScheduleMonthDowim;
    monthDow?: ListsAccountingTypes.BillingScheduleMonthDow;
    monthDom?: number;
    dayPeriod?: number;
    repeatEvery?: string;
    billForActuals?: boolean;
    numberRemaining?: number;
    inArrears?: boolean;
    recurrenceTerms?: PlatformCore.RecordRef;
    isPublic?: boolean;
    applyToSubtotal?: boolean;
    transaction?: PlatformCore.RecordRef;
    isInactive?: boolean;
    seriesStartDate?: string;
    recurrenceList?: BillingScheduleRecurrenceList;
    milestoneList?: BillingScheduleMilestoneList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class BillingSchedule extends PlatformCore.Record {
    scheduleType?: ListsAccountingTypes.BillingScheduleType;
    name?: string;
    recurrencePattern?: ListsAccountingTypes.BillingScheduleRecurrencePattern;
    project?: PlatformCore.RecordRef;
    initialAmount?: string;
    initialTerms?: PlatformCore.RecordRef;
    frequency?: ListsAccountingTypes.BillingScheduleFrequency;
    recurrenceDowMaskList?: PlatformCommon.RecurrenceDowMaskList;
    yearMode?: ListsAccountingTypes.BillingScheduleRecurrenceMode;
    yearDowim?: ListsAccountingTypes.BillingScheduleYearDowim;
    yearDow?: ListsAccountingTypes.BillingScheduleYearDow;
    yearDowimMonth?: ListsAccountingTypes.BillingScheduleYearDowimMonth;
    yearMonth?: ListsAccountingTypes.BillingScheduleYearMonth;
    yearDom?: number;
    monthMode?: ListsAccountingTypes.BillingScheduleRecurrenceMode;
    monthDowim?: ListsAccountingTypes.BillingScheduleMonthDowim;
    monthDow?: ListsAccountingTypes.BillingScheduleMonthDow;
    monthDom?: number;
    dayPeriod?: number;
    repeatEvery?: string;
    billForActuals?: boolean;
    numberRemaining?: number;
    inArrears?: boolean;
    recurrenceTerms?: PlatformCore.RecordRef;
    isPublic?: boolean;
    applyToSubtotal?: boolean;
    transaction?: PlatformCore.RecordRef;
    isInactive?: boolean;
    seriesStartDate?: string;
    recurrenceList?: BillingScheduleRecurrenceList;
    milestoneList?: BillingScheduleMilestoneList;
    internalId?: string;
    externalId?: string;
    constructor(props: BillingScheduleProps);
}
export declare type OtherChargeSaleItemHierarchyVersionsProps = {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
};
export declare class OtherChargeSaleItemHierarchyVersions extends SoapMappingBase {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
    constructor(props: OtherChargeSaleItemHierarchyVersionsProps);
}
export declare type FairValuePriceSearchAdvancedProps = {
    criteria?: FairValuePriceSearch;
    columns?: FairValuePriceSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class FairValuePriceSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: FairValuePriceSearch;
    columns?: FairValuePriceSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: FairValuePriceSearchAdvancedProps);
}
export declare type GeneralTokenProps = {
    entity?: PlatformCore.RecordRef;
    mask?: string;
    supportedOperationsList?: GeneralTokenSupportedOperationsListList;
    paymentMethod?: PlatformCore.RecordRef;
    memo?: string;
    state?: ListsAccountingTypes.PaymentInstrumentState;
    isInactive?: boolean;
    preserveOnFile?: boolean;
    isDefault?: boolean;
    token?: string;
    tokenExpirationDate?: string;
    tokenFamily?: ListsAccountingTypes.TokenFamily;
    tokenNamespace?: string;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class GeneralToken extends PlatformCore.Record {
    entity?: PlatformCore.RecordRef;
    mask?: string;
    supportedOperationsList?: GeneralTokenSupportedOperationsListList;
    paymentMethod?: PlatformCore.RecordRef;
    memo?: string;
    state?: ListsAccountingTypes.PaymentInstrumentState;
    isInactive?: boolean;
    preserveOnFile?: boolean;
    isDefault?: boolean;
    token?: string;
    tokenExpirationDate?: string;
    tokenFamily?: ListsAccountingTypes.TokenFamily;
    tokenNamespace?: string;
    internalId?: string;
    externalId?: string;
    constructor(props: GeneralTokenProps);
}
export declare type ContactCategorySearchAdvancedProps = {
    criteria?: ContactCategorySearch;
    columns?: ContactCategorySearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class ContactCategorySearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: ContactCategorySearch;
    columns?: ContactCategorySearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: ContactCategorySearchAdvancedProps);
}
export declare type SalesRoleSearchRowProps = {
    basic?: PlatformCommon.SalesRoleSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class SalesRoleSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.SalesRoleSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: SalesRoleSearchRowProps);
}
export declare type TermProps = {
    name?: string;
    dateDriven?: boolean;
    daysUntilNetDue?: number;
    discountPercent?: number;
    daysUntilExpiry?: number;
    dayOfMonthNetDue?: number;
    dueNextMonthIfWithinDays?: number;
    discountPercentDateDriven?: number;
    dayDiscountExpires?: number;
    preferred?: boolean;
    isInactive?: boolean;
    installment?: boolean;
    recurrenceFrequency?: PlatformCommonTypes.TermRecurrenceFrequency;
    recurrenceCount?: number;
    repeatEvery?: number;
    splitEvenly?: boolean;
    percentagesList?: TermPercentagesList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class Term extends PlatformCore.Record {
    name?: string;
    dateDriven?: boolean;
    daysUntilNetDue?: number;
    discountPercent?: number;
    daysUntilExpiry?: number;
    dayOfMonthNetDue?: number;
    dueNextMonthIfWithinDays?: number;
    discountPercentDateDriven?: number;
    dayDiscountExpires?: number;
    preferred?: boolean;
    isInactive?: boolean;
    installment?: boolean;
    recurrenceFrequency?: PlatformCommonTypes.TermRecurrenceFrequency;
    recurrenceCount?: number;
    repeatEvery?: number;
    splitEvenly?: boolean;
    percentagesList?: TermPercentagesList;
    internalId?: string;
    externalId?: string;
    constructor(props: TermProps);
}
export declare type LotNumberedInventoryItemLocationsListProps = {
    locations?: LotNumberedInventoryItemLocations[];
    replaceAll?: boolean;
};
export declare class LotNumberedInventoryItemLocationsList extends SoapMappingBase {
    locations?: LotNumberedInventoryItemLocations[];
    replaceAll?: boolean;
    constructor(props: LotNumberedInventoryItemLocationsListProps);
}
export declare type TaxTypeNexusAccountsProps = {
    nexus?: PlatformCore.RecordRef;
    payablesAccount?: PlatformCore.RecordRef;
    receivablesAccount?: PlatformCore.RecordRef;
};
export declare class TaxTypeNexusAccounts extends SoapMappingBase {
    nexus?: PlatformCore.RecordRef;
    payablesAccount?: PlatformCore.RecordRef;
    receivablesAccount?: PlatformCore.RecordRef;
    constructor(props: TaxTypeNexusAccountsProps);
}
export declare type GlobalAccountMappingSearchAdvancedProps = {
    criteria?: GlobalAccountMappingSearch;
    columns?: GlobalAccountMappingSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class GlobalAccountMappingSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: GlobalAccountMappingSearch;
    columns?: GlobalAccountMappingSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: GlobalAccountMappingSearchAdvancedProps);
}
export declare type UnitsTypeUomListProps = {
    uom?: UnitsTypeUom[];
    replaceAll?: boolean;
};
export declare class UnitsTypeUomList extends SoapMappingBase {
    uom?: UnitsTypeUom[];
    replaceAll?: boolean;
    constructor(props: UnitsTypeUomListProps);
}
export declare type NoteTypeProps = {
    name?: string;
    description?: string;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class NoteType extends PlatformCore.Record {
    name?: string;
    description?: string;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
    constructor(props: NoteTypeProps);
}
export declare type RevRecScheduleRecurrenceListProps = {
    revRecScheduleRecurrence?: RevRecScheduleRecurrence[];
    replaceAll?: boolean;
};
export declare class RevRecScheduleRecurrenceList extends SoapMappingBase {
    revRecScheduleRecurrence?: RevRecScheduleRecurrence[];
    replaceAll?: boolean;
    constructor(props: RevRecScheduleRecurrenceListProps);
}
export declare type NoteTypeSearchProps = {
    basic?: PlatformCommon.NoteTypeSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class NoteTypeSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.NoteTypeSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: NoteTypeSearchProps);
}
export declare type PriceLevelSearchRowProps = {
    basic?: PlatformCommon.PriceLevelSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class PriceLevelSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.PriceLevelSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: PriceLevelSearchRowProps);
}
export declare type ItemRevisionSearchAdvancedProps = {
    criteria?: ItemRevisionSearch;
    columns?: ItemRevisionSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class ItemRevisionSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: ItemRevisionSearch;
    columns?: ItemRevisionSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: ItemRevisionSearchAdvancedProps);
}
export declare type LotNumberedAssemblyItemBillOfMaterialsListProps = {
    lotNumberedAssemblyItemBillOfMaterials?: LotNumberedAssemblyItemBillOfMaterials[];
    replaceAll?: boolean;
};
export declare class LotNumberedAssemblyItemBillOfMaterialsList extends SoapMappingBase {
    lotNumberedAssemblyItemBillOfMaterials?: LotNumberedAssemblyItemBillOfMaterials[];
    replaceAll?: boolean;
    constructor(props: LotNumberedAssemblyItemBillOfMaterialsListProps);
}
export declare type CurrencyRateSearchRowProps = {
    basic?: PlatformCommon.CurrencyRateSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class CurrencyRateSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.CurrencyRateSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: CurrencyRateSearchRowProps);
}
export declare type InventoryNumberSearchRowProps = {
    basic?: PlatformCommon.InventoryNumberSearchRowBasic;
    itemJoin?: PlatformCommon.ItemSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
};
export declare class InventoryNumberSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.InventoryNumberSearchRowBasic;
    itemJoin?: PlatformCommon.ItemSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
    constructor(props: InventoryNumberSearchRowProps);
}
export declare type LocationRegionsListProps = {
    locationRegions?: LocationRegions[];
    replaceAll?: boolean;
};
export declare class LocationRegionsList extends SoapMappingBase {
    locationRegions?: LocationRegions[];
    replaceAll?: boolean;
    constructor(props: LocationRegionsListProps);
}
export declare type InventoryItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    purchaseDescription?: string;
    copyDescription?: boolean;
    expenseAccount?: PlatformCore.RecordRef;
    dateConvertedToInv?: string;
    originalItemType?: ListsAccountingTypes.ItemType;
    originalItemSubtype?: ListsAccountingTypes.ItemSubType;
    cogsAccount?: PlatformCore.RecordRef;
    intercoCogsAccount?: PlatformCore.RecordRef;
    salesDescription?: string;
    fraudRisk?: ListsAccountingTypes.InventoryItemFraudRisk;
    includeChildren?: boolean;
    incomeAccount?: PlatformCore.RecordRef;
    intercoIncomeAccount?: PlatformCore.RecordRef;
    taxSchedule?: PlatformCore.RecordRef;
    dropshipExpenseAccount?: PlatformCore.RecordRef;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    contingentRevenueHandling?: boolean;
    revReclassFXAccount?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    assetAccount?: PlatformCore.RecordRef;
    matchBillToReceipt?: boolean;
    billQtyVarianceAcct?: PlatformCore.RecordRef;
    billPriceVarianceAcct?: PlatformCore.RecordRef;
    billExchRateVarianceAcct?: PlatformCore.RecordRef;
    gainLossAccount?: PlatformCore.RecordRef;
    shippingCost?: number;
    shippingCostUnits?: string;
    handlingCost?: number;
    handlingCostUnits?: string;
    weight?: number;
    weightUnit?: ListsAccountingTypes.ItemWeightUnit;
    weightUnits?: string;
    costingMethodDisplay?: string;
    unitsType?: PlatformCore.RecordRef;
    stockUnit?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    issueProduct?: PlatformCore.RecordRef;
    billingSchedule?: PlatformCore.RecordRef;
    trackLandedCost?: boolean;
    matrixItemNameTemplate?: string;
    isDropShipItem?: boolean;
    isSpecialOrderItem?: boolean;
    stockDescription?: string;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    intercoDefRevAccount?: PlatformCore.RecordRef;
    producer?: boolean;
    manufacturer?: string;
    revRecSchedule?: PlatformCore.RecordRef;
    mpn?: string;
    multManufactureAddr?: boolean;
    manufacturerAddr1?: string;
    manufacturerCity?: string;
    manufacturerState?: string;
    manufacturerZip?: string;
    countryOfManufacture?: PlatformCommonTypes.Country;
    roundUpAsComponent?: boolean;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    itemShipMethodList?: PlatformCore.RecordRefList;
    manufacturerTaxId?: string;
    scheduleBNumber?: string;
    scheduleBQuantity?: number;
    scheduleBCode?: string;
    manufacturerTariff?: string;
    preferenceCriterion?: ListsAccountingTypes.ItemPreferenceCriterion;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    minimumQuantityUnits?: string;
    softDescriptor?: PlatformCore.RecordRef;
    shipPackage?: PlatformCore.RecordRef;
    shipIndividually?: boolean;
    costCategory?: PlatformCore.RecordRef;
    pricesIncludeTax?: boolean;
    purchasePriceVarianceAcct?: PlatformCore.RecordRef;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    reorderPointUnits?: string;
    useMarginalRates?: boolean;
    preferredStockLevelUnits?: string;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    transferPrice?: number;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    costEstimateUnits?: string;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    preferredLocation?: PlatformCore.RecordRef;
    isStorePickupAllowed?: boolean;
    reorderMultiple?: number;
    cost?: number;
    lastInvtCountDate?: string;
    nextInvtCountDate?: string;
    invtCountInterval?: number;
    invtClassification?: ListsAccountingTypes.ItemInvtClassification;
    costUnits?: string;
    totalValue?: number;
    averageCost?: number;
    useBins?: boolean;
    quantityReorderUnits?: string;
    leadTime?: number;
    autoLeadTime?: boolean;
    lastPurchasePrice?: number;
    autoPreferredStockLevel?: boolean;
    preferredStockLevelDays?: number;
    safetyStockLevel?: number;
    safetyStockLevelDays?: number;
    backwardConsumptionDays?: number;
    seasonalDemand?: boolean;
    safetyStockLevelUnits?: string;
    demandModifier?: number;
    distributionNetwork?: PlatformCore.RecordRef;
    distributionCategory?: PlatformCore.RecordRef;
    autoReorderPoint?: boolean;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    onSpecial?: boolean;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    relatedItemsDescription?: string;
    specialsDescription?: string;
    featuredDescription?: string;
    shoppingDotComCategory?: string;
    shopzillaCategoryId?: number;
    nexTagCategory?: string;
    urlComponent?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isHazmatItem?: boolean;
    hazmatId?: string;
    hazmatShippingName?: string;
    hazmatHazardClass?: string;
    hazmatPackingGroup?: ListsAccountingTypes.HazmatPackingGroup;
    hazmatItemUnits?: string;
    hazmatItemUnitsQty?: number;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    costingMethod?: ListsAccountingTypes.ItemCostingMethod;
    currency?: string;
    preferredStockLevel?: number;
    pricingMatrix?: PricingMatrix;
    hierarchyVersionsList?: InventoryItemHierarchyVersionsList;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    purchaseTaxCode?: PlatformCore.RecordRef;
    defaultReturnCost?: number;
    supplyReplenishmentMethod?: PlatformCore.RecordRef;
    alternateDemandSourceItem?: PlatformCore.RecordRef;
    fixedLotSize?: number;
    periodicLotSizeType?: ListsAccountingTypes.PeriodicLotSizeType;
    supplyType?: PlatformCore.RecordRef;
    demandTimeFence?: number;
    supplyTimeFence?: number;
    rescheduleInDays?: number;
    rescheduleOutDays?: number;
    periodicLotSizeDays?: number;
    supplyLotSizingMethod?: PlatformCore.RecordRef;
    forwardConsumptionDays?: number;
    demandSource?: PlatformCore.RecordRef;
    quantityBackOrdered?: number;
    quantityCommitted?: number;
    quantityAvailable?: number;
    quantityOnHand?: number;
    onHandValueMli?: number;
    quantityOnOrder?: number;
    rate?: number;
    reorderPoint?: number;
    quantityCommittedUnits?: string;
    salesTaxCode?: PlatformCore.RecordRef;
    quantityAvailableUnits?: string;
    quantityOnHandUnits?: string;
    vendor?: PlatformCore.RecordRef;
    quantityOnOrderUnits?: string;
    productFeedList?: ProductFeedList;
    subsidiaryList?: PlatformCore.RecordRefList;
    itemOptionsList?: ItemOptionsList;
    itemVendorList?: ItemVendorList;
    siteCategoryList?: SiteCategoryList;
    translationsList?: TranslationList;
    binNumberList?: InventoryItemBinNumberList;
    locationsList?: InventoryItemLocationsList;
    matrixOptionList?: MatrixOptionList;
    presentationItemList?: PresentationItemList;
    futureHorizon?: number;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class InventoryItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    purchaseDescription?: string;
    copyDescription?: boolean;
    expenseAccount?: PlatformCore.RecordRef;
    dateConvertedToInv?: string;
    originalItemType?: ListsAccountingTypes.ItemType;
    originalItemSubtype?: ListsAccountingTypes.ItemSubType;
    cogsAccount?: PlatformCore.RecordRef;
    intercoCogsAccount?: PlatformCore.RecordRef;
    salesDescription?: string;
    fraudRisk?: ListsAccountingTypes.InventoryItemFraudRisk;
    includeChildren?: boolean;
    incomeAccount?: PlatformCore.RecordRef;
    intercoIncomeAccount?: PlatformCore.RecordRef;
    taxSchedule?: PlatformCore.RecordRef;
    dropshipExpenseAccount?: PlatformCore.RecordRef;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    contingentRevenueHandling?: boolean;
    revReclassFXAccount?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    assetAccount?: PlatformCore.RecordRef;
    matchBillToReceipt?: boolean;
    billQtyVarianceAcct?: PlatformCore.RecordRef;
    billPriceVarianceAcct?: PlatformCore.RecordRef;
    billExchRateVarianceAcct?: PlatformCore.RecordRef;
    gainLossAccount?: PlatformCore.RecordRef;
    shippingCost?: number;
    shippingCostUnits?: string;
    handlingCost?: number;
    handlingCostUnits?: string;
    weight?: number;
    weightUnit?: ListsAccountingTypes.ItemWeightUnit;
    weightUnits?: string;
    costingMethodDisplay?: string;
    unitsType?: PlatformCore.RecordRef;
    stockUnit?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    issueProduct?: PlatformCore.RecordRef;
    billingSchedule?: PlatformCore.RecordRef;
    trackLandedCost?: boolean;
    matrixItemNameTemplate?: string;
    isDropShipItem?: boolean;
    isSpecialOrderItem?: boolean;
    stockDescription?: string;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    intercoDefRevAccount?: PlatformCore.RecordRef;
    producer?: boolean;
    manufacturer?: string;
    revRecSchedule?: PlatformCore.RecordRef;
    mpn?: string;
    multManufactureAddr?: boolean;
    manufacturerAddr1?: string;
    manufacturerCity?: string;
    manufacturerState?: string;
    manufacturerZip?: string;
    countryOfManufacture?: PlatformCommonTypes.Country;
    roundUpAsComponent?: boolean;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    defaultItemShipMethod?: PlatformCore.RecordRef;
    itemCarrier?: PlatformCommonTypes.ShippingCarrier;
    itemShipMethodList?: PlatformCore.RecordRefList;
    manufacturerTaxId?: string;
    scheduleBNumber?: string;
    scheduleBQuantity?: number;
    scheduleBCode?: string;
    manufacturerTariff?: string;
    preferenceCriterion?: ListsAccountingTypes.ItemPreferenceCriterion;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    minimumQuantityUnits?: string;
    softDescriptor?: PlatformCore.RecordRef;
    shipPackage?: PlatformCore.RecordRef;
    shipIndividually?: boolean;
    costCategory?: PlatformCore.RecordRef;
    pricesIncludeTax?: boolean;
    purchasePriceVarianceAcct?: PlatformCore.RecordRef;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    reorderPointUnits?: string;
    useMarginalRates?: boolean;
    preferredStockLevelUnits?: string;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    transferPrice?: number;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    costEstimateUnits?: string;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    preferredLocation?: PlatformCore.RecordRef;
    isStorePickupAllowed?: boolean;
    reorderMultiple?: number;
    cost?: number;
    lastInvtCountDate?: string;
    nextInvtCountDate?: string;
    invtCountInterval?: number;
    invtClassification?: ListsAccountingTypes.ItemInvtClassification;
    costUnits?: string;
    totalValue?: number;
    averageCost?: number;
    useBins?: boolean;
    quantityReorderUnits?: string;
    leadTime?: number;
    autoLeadTime?: boolean;
    lastPurchasePrice?: number;
    autoPreferredStockLevel?: boolean;
    preferredStockLevelDays?: number;
    safetyStockLevel?: number;
    safetyStockLevelDays?: number;
    backwardConsumptionDays?: number;
    seasonalDemand?: boolean;
    safetyStockLevelUnits?: string;
    demandModifier?: number;
    distributionNetwork?: PlatformCore.RecordRef;
    distributionCategory?: PlatformCore.RecordRef;
    autoReorderPoint?: boolean;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    onSpecial?: boolean;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    relatedItemsDescription?: string;
    specialsDescription?: string;
    featuredDescription?: string;
    shoppingDotComCategory?: string;
    shopzillaCategoryId?: number;
    nexTagCategory?: string;
    urlComponent?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isHazmatItem?: boolean;
    hazmatId?: string;
    hazmatShippingName?: string;
    hazmatHazardClass?: string;
    hazmatPackingGroup?: ListsAccountingTypes.HazmatPackingGroup;
    hazmatItemUnits?: string;
    hazmatItemUnitsQty?: number;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    costingMethod?: ListsAccountingTypes.ItemCostingMethod;
    currency?: string;
    preferredStockLevel?: number;
    pricingMatrix?: PricingMatrix;
    hierarchyVersionsList?: InventoryItemHierarchyVersionsList;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    purchaseTaxCode?: PlatformCore.RecordRef;
    defaultReturnCost?: number;
    supplyReplenishmentMethod?: PlatformCore.RecordRef;
    alternateDemandSourceItem?: PlatformCore.RecordRef;
    fixedLotSize?: number;
    periodicLotSizeType?: ListsAccountingTypes.PeriodicLotSizeType;
    supplyType?: PlatformCore.RecordRef;
    demandTimeFence?: number;
    supplyTimeFence?: number;
    rescheduleInDays?: number;
    rescheduleOutDays?: number;
    periodicLotSizeDays?: number;
    supplyLotSizingMethod?: PlatformCore.RecordRef;
    forwardConsumptionDays?: number;
    demandSource?: PlatformCore.RecordRef;
    quantityBackOrdered?: number;
    quantityCommitted?: number;
    quantityAvailable?: number;
    quantityOnHand?: number;
    onHandValueMli?: number;
    quantityOnOrder?: number;
    rate?: number;
    reorderPoint?: number;
    quantityCommittedUnits?: string;
    salesTaxCode?: PlatformCore.RecordRef;
    quantityAvailableUnits?: string;
    quantityOnHandUnits?: string;
    vendor?: PlatformCore.RecordRef;
    quantityOnOrderUnits?: string;
    productFeedList?: ProductFeedList;
    subsidiaryList?: PlatformCore.RecordRefList;
    itemOptionsList?: ItemOptionsList;
    itemVendorList?: ItemVendorList;
    siteCategoryList?: SiteCategoryList;
    translationsList?: TranslationList;
    binNumberList?: InventoryItemBinNumberList;
    locationsList?: InventoryItemLocationsList;
    matrixOptionList?: MatrixOptionList;
    presentationItemList?: PresentationItemList;
    futureHorizon?: number;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: InventoryItemProps);
}
export declare type SalesTaxItemSearchProps = {
    basic?: PlatformCommon.SalesTaxItemSearchBasic;
    taxTypeJoin?: PlatformCommon.TaxTypeSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
};
export declare class SalesTaxItemSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.SalesTaxItemSearchBasic;
    taxTypeJoin?: PlatformCommon.TaxTypeSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
    constructor(props: SalesTaxItemSearchProps);
}
export declare type VendorCategorySearchRowProps = {
    basic?: PlatformCommon.VendorCategorySearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class VendorCategorySearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.VendorCategorySearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: VendorCategorySearchRowProps);
}
export declare type ServiceResaleItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    purchaseDescription?: string;
    manufacturingChargeItem?: boolean;
    cost?: number;
    costUnits?: string;
    expenseAccount?: PlatformCore.RecordRef;
    intercoExpenseAccount?: PlatformCore.RecordRef;
    salesDescription?: string;
    includeChildren?: boolean;
    incomeAccount?: PlatformCore.RecordRef;
    intercoIncomeAccount?: PlatformCore.RecordRef;
    taxSchedule?: PlatformCore.RecordRef;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    isTaxable?: boolean;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    unitsType?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    costEstimateUnits?: string;
    issueProduct?: PlatformCore.RecordRef;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    intercoDefRevAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    deferralAccount?: PlatformCore.RecordRef;
    amortizationTemplate?: PlatformCore.RecordRef;
    residual?: string;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    contingentRevenueHandling?: boolean;
    revReclassFXAccount?: PlatformCore.RecordRef;
    amortizationPeriod?: number;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: string;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    useMarginalRates?: boolean;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    isFulfillable?: boolean;
    generateAccruals?: boolean;
    costCategory?: PlatformCore.RecordRef;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    pricingGroup?: PlatformCore.RecordRef;
    minimumQuantityUnits?: string;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    createJob?: boolean;
    matrixItemNameTemplate?: string;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    urlComponent?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    onSpecial?: boolean;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    relatedItemsDescription?: string;
    specialsDescription?: string;
    itemTaskTemplatesList?: ServiceItemTaskTemplatesList;
    featuredDescription?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    currency?: string;
    billingRatesMatrix?: BillingRatesMatrix;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    itemVendorList?: ItemVendorList;
    pricingMatrix?: PricingMatrix;
    purchaseTaxCode?: PlatformCore.RecordRef;
    rate?: number;
    salesTaxCode?: PlatformCore.RecordRef;
    siteCategoryList?: SiteCategoryList;
    translationsList?: TranslationList;
    vendor?: PlatformCore.RecordRef;
    presentationItemList?: PresentationItemList;
    hierarchyVersionsList?: ServiceResaleItemHierarchyVersionsList;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class ServiceResaleItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    purchaseDescription?: string;
    manufacturingChargeItem?: boolean;
    cost?: number;
    costUnits?: string;
    expenseAccount?: PlatformCore.RecordRef;
    intercoExpenseAccount?: PlatformCore.RecordRef;
    salesDescription?: string;
    includeChildren?: boolean;
    incomeAccount?: PlatformCore.RecordRef;
    intercoIncomeAccount?: PlatformCore.RecordRef;
    taxSchedule?: PlatformCore.RecordRef;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    isTaxable?: boolean;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    unitsType?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    costEstimateUnits?: string;
    issueProduct?: PlatformCore.RecordRef;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    intercoDefRevAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    deferralAccount?: PlatformCore.RecordRef;
    amortizationTemplate?: PlatformCore.RecordRef;
    residual?: string;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    contingentRevenueHandling?: boolean;
    revReclassFXAccount?: PlatformCore.RecordRef;
    amortizationPeriod?: number;
    minimumQuantity?: number;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: string;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    useMarginalRates?: boolean;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    isFulfillable?: boolean;
    generateAccruals?: boolean;
    costCategory?: PlatformCore.RecordRef;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    pricingGroup?: PlatformCore.RecordRef;
    minimumQuantityUnits?: string;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    createJob?: boolean;
    matrixItemNameTemplate?: string;
    storeDisplayName?: string;
    storeDisplayThumbnail?: PlatformCore.RecordRef;
    storeDisplayImage?: PlatformCore.RecordRef;
    storeDescription?: string;
    storeDetailedDescription?: string;
    storeItemTemplate?: PlatformCore.RecordRef;
    pageTitle?: string;
    urlComponent?: string;
    metaTagHtml?: string;
    excludeFromSitemap?: boolean;
    sitemapPriority?: string;
    searchKeywords?: string;
    isDonationItem?: boolean;
    showDefaultDonationAmount?: boolean;
    maxDonationAmount?: number;
    dontShowPrice?: boolean;
    noPriceMessage?: string;
    outOfStockMessage?: string;
    onSpecial?: boolean;
    outOfStockBehavior?: ListsAccountingTypes.ItemOutOfStockBehavior;
    relatedItemsDescription?: string;
    specialsDescription?: string;
    itemTaskTemplatesList?: ServiceItemTaskTemplatesList;
    featuredDescription?: string;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    currency?: string;
    billingRatesMatrix?: BillingRatesMatrix;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    itemVendorList?: ItemVendorList;
    pricingMatrix?: PricingMatrix;
    purchaseTaxCode?: PlatformCore.RecordRef;
    rate?: number;
    salesTaxCode?: PlatformCore.RecordRef;
    siteCategoryList?: SiteCategoryList;
    translationsList?: TranslationList;
    vendor?: PlatformCore.RecordRef;
    presentationItemList?: PresentationItemList;
    hierarchyVersionsList?: ServiceResaleItemHierarchyVersionsList;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: ServiceResaleItemProps);
}
export declare type TaxTypeProps = {
    name?: string;
    description?: string;
    doesNotAddToTotal?: boolean;
    postToItemCost?: boolean;
    taxInNetAmount?: boolean;
    reverseCharge?: boolean;
    isInactive?: boolean;
    nexusAccountsList?: TaxTypeNexusAccountsList;
    nexusesTaxList?: TaxTypeNexusesTaxList;
    country?: PlatformCommonTypes.Country;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class TaxType extends PlatformCore.Record {
    name?: string;
    description?: string;
    doesNotAddToTotal?: boolean;
    postToItemCost?: boolean;
    taxInNetAmount?: boolean;
    reverseCharge?: boolean;
    isInactive?: boolean;
    nexusAccountsList?: TaxTypeNexusAccountsList;
    nexusesTaxList?: TaxTypeNexusesTaxList;
    country?: PlatformCommonTypes.Country;
    internalId?: string;
    externalId?: string;
    constructor(props: TaxTypeProps);
}
export declare type ExpenseCategorySearchAdvancedProps = {
    criteria?: ExpenseCategorySearch;
    columns?: ExpenseCategorySearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class ExpenseCategorySearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: ExpenseCategorySearch;
    columns?: ExpenseCategorySearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: ExpenseCategorySearchAdvancedProps);
}
export declare type CustomerCategorySearchProps = {
    basic?: PlatformCommon.CustomerCategorySearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
};
export declare class CustomerCategorySearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.CustomerCategorySearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    constructor(props: CustomerCategorySearchProps);
}
export declare type PricingGroupSearchRowProps = {
    basic?: PlatformCommon.PricingGroupSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class PricingGroupSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.PricingGroupSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: PricingGroupSearchRowProps);
}
export declare type ConsolidatedExchangeRateProps = {
    postingPeriod?: string;
    fromSubsidiary?: string;
    fromCurrency?: string;
    toSubsidiary?: string;
    toCurrency?: string;
    averageRate?: number;
    currentRate?: number;
    historicalRate?: number;
    accountingBook?: string;
    isPeriodClosed?: boolean;
    isDerived?: boolean;
    isEliminationSubsidiary?: boolean;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class ConsolidatedExchangeRate extends PlatformCore.Record {
    postingPeriod?: string;
    fromSubsidiary?: string;
    fromCurrency?: string;
    toSubsidiary?: string;
    toCurrency?: string;
    averageRate?: number;
    currentRate?: number;
    historicalRate?: number;
    accountingBook?: string;
    isPeriodClosed?: boolean;
    isDerived?: boolean;
    isEliminationSubsidiary?: boolean;
    internalId?: string;
    externalId?: string;
    constructor(props: ConsolidatedExchangeRateProps);
}
export declare type CustomerCategorySearchAdvancedProps = {
    criteria?: CustomerCategorySearch;
    columns?: CustomerCategorySearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class CustomerCategorySearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: CustomerCategorySearch;
    columns?: CustomerCategorySearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: CustomerCategorySearchAdvancedProps);
}
export declare type BillingScheduleSearchProps = {
    basic?: PlatformCommon.BillingScheduleSearchBasic;
};
export declare class BillingScheduleSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.BillingScheduleSearchBasic;
    constructor(props: BillingScheduleSearchProps);
}
export declare type OtherChargeResaleItemProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    purchaseDescription?: string;
    manufacturingChargeItem?: boolean;
    cost?: number;
    costUnits?: string;
    expenseAccount?: PlatformCore.RecordRef;
    intercoExpenseAccount?: PlatformCore.RecordRef;
    salesDescription?: string;
    includeChildren?: boolean;
    incomeAccount?: PlatformCore.RecordRef;
    intercoIncomeAccount?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    taxSchedule?: PlatformCore.RecordRef;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    unitsType?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    costEstimateUnits?: string;
    issueProduct?: PlatformCore.RecordRef;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    intercoDefRevAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    deferralAccount?: PlatformCore.RecordRef;
    amortizationTemplate?: PlatformCore.RecordRef;
    residual?: string;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    contingentRevenueHandling?: boolean;
    revReclassFXAccount?: PlatformCore.RecordRef;
    amortizationPeriod?: number;
    minimumQuantity?: number;
    minimumQuantityUnits?: string;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: string;
    isFulfillable?: boolean;
    generateAccruals?: boolean;
    costCategory?: PlatformCore.RecordRef;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    useMarginalRates?: boolean;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    matrixItemNameTemplate?: string;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    currency?: string;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    itemVendorList?: ItemVendorList;
    pricingMatrix?: PricingMatrix;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    purchaseTaxCode?: PlatformCore.RecordRef;
    rate?: number;
    salesTaxCode?: PlatformCore.RecordRef;
    translationsList?: TranslationList;
    vendor?: PlatformCore.RecordRef;
    hierarchyVersionsList?: OtherChargeResaleItemHierarchyVersionsList;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class OtherChargeResaleItem extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    purchaseDescription?: string;
    manufacturingChargeItem?: boolean;
    cost?: number;
    costUnits?: string;
    expenseAccount?: PlatformCore.RecordRef;
    intercoExpenseAccount?: PlatformCore.RecordRef;
    salesDescription?: string;
    includeChildren?: boolean;
    incomeAccount?: PlatformCore.RecordRef;
    intercoIncomeAccount?: PlatformCore.RecordRef;
    isTaxable?: boolean;
    matrixType?: ListsAccountingTypes.ItemMatrixType;
    taxSchedule?: PlatformCore.RecordRef;
    costEstimateType?: PlatformCommonTypes.ItemCostEstimateType;
    costEstimate?: number;
    unitsType?: PlatformCore.RecordRef;
    purchaseUnit?: PlatformCore.RecordRef;
    saleUnit?: PlatformCore.RecordRef;
    costEstimateUnits?: string;
    issueProduct?: PlatformCore.RecordRef;
    billingSchedule?: PlatformCore.RecordRef;
    deferredRevenueAccount?: PlatformCore.RecordRef;
    intercoDefRevAccount?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    deferralAccount?: PlatformCore.RecordRef;
    amortizationTemplate?: PlatformCore.RecordRef;
    residual?: string;
    deferRevRec?: boolean;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revenueAllocationGroup?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    directRevenuePosting?: boolean;
    contingentRevenueHandling?: boolean;
    revReclassFXAccount?: PlatformCore.RecordRef;
    amortizationPeriod?: number;
    minimumQuantity?: number;
    minimumQuantityUnits?: string;
    enforceMinQtyInternally?: boolean;
    maximumQuantity?: number;
    softDescriptor?: string;
    isFulfillable?: boolean;
    generateAccruals?: boolean;
    costCategory?: PlatformCore.RecordRef;
    purchaseOrderQuantity?: number;
    purchaseOrderAmount?: number;
    purchaseOrderQuantityDiff?: number;
    receiptQuantity?: number;
    receiptAmount?: number;
    receiptQuantityDiff?: number;
    pricesIncludeTax?: boolean;
    quantityPricingSchedule?: PlatformCore.RecordRef;
    useMarginalRates?: boolean;
    overallQuantityPricingType?: ListsAccountingTypes.ItemOverallQuantityPricingType;
    pricingGroup?: PlatformCore.RecordRef;
    customForm?: PlatformCore.RecordRef;
    itemId?: string;
    upcCode?: string;
    displayName?: string;
    vendorName?: string;
    parent?: PlatformCore.RecordRef;
    isOnline?: boolean;
    isGcoCompliant?: boolean;
    offerSupport?: boolean;
    isInactive?: boolean;
    matrixItemNameTemplate?: string;
    availableToPartners?: boolean;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiaryList?: PlatformCore.RecordRefList;
    vsoePrice?: number;
    vsoeSopGroup?: PlatformCommonTypes.VsoeSopGroup;
    vsoeDeferral?: PlatformCommonTypes.VsoeDeferral;
    vsoePermitDiscount?: PlatformCommonTypes.VsoePermitDiscount;
    vsoeDelivered?: boolean;
    itemRevenueCategory?: PlatformCore.RecordRef;
    currency?: string;
    itemOptionsList?: ItemOptionsList;
    matrixOptionList?: MatrixOptionList;
    itemVendorList?: ItemVendorList;
    pricingMatrix?: PricingMatrix;
    accountingBookDetailList?: ItemAccountingBookDetailList;
    purchaseTaxCode?: PlatformCore.RecordRef;
    rate?: number;
    salesTaxCode?: PlatformCore.RecordRef;
    translationsList?: TranslationList;
    vendor?: PlatformCore.RecordRef;
    hierarchyVersionsList?: OtherChargeResaleItemHierarchyVersionsList;
    consumptionUnit?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: OtherChargeResaleItemProps);
}
export declare type LocationSearchRowProps = {
    basic?: PlatformCommon.LocationSearchRowBasic;
    addressJoin?: PlatformCommon.AddressSearchRowBasic;
    returnAddressJoin?: PlatformCommon.AddressSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
};
export declare class LocationSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.LocationSearchRowBasic;
    addressJoin?: PlatformCommon.AddressSearchRowBasic;
    returnAddressJoin?: PlatformCommon.AddressSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
    constructor(props: LocationSearchRowProps);
}
export declare type DepartmentSearchAdvancedProps = {
    criteria?: DepartmentSearch;
    columns?: DepartmentSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class DepartmentSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: DepartmentSearch;
    columns?: DepartmentSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: DepartmentSearchAdvancedProps);
}
export declare type ContactRoleProps = {
    name?: string;
    description?: string;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class ContactRole extends PlatformCore.Record {
    name?: string;
    description?: string;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
    constructor(props: ContactRoleProps);
}
export declare type SerializedAssemblyItemBillOfMaterialsProps = {
    billOfMaterials?: PlatformCore.RecordRef;
    currentRevision?: string;
    masterDefault?: boolean;
    defaultForLocationList?: PlatformCore.RecordRefList;
    inactive?: string;
    memo?: string;
};
export declare class SerializedAssemblyItemBillOfMaterials extends SoapMappingBase {
    billOfMaterials?: PlatformCore.RecordRef;
    currentRevision?: string;
    masterDefault?: boolean;
    defaultForLocationList?: PlatformCore.RecordRefList;
    inactive?: string;
    memo?: string;
    constructor(props: SerializedAssemblyItemBillOfMaterialsProps);
}
export declare type ItemVendorProps = {
    vendor?: PlatformCore.RecordRef;
    vendorCode?: string;
    vendorCurrencyName?: string;
    vendorCurrency?: PlatformCore.RecordRef;
    purchasePrice?: number;
    preferredVendor?: boolean;
    schedule?: PlatformCore.RecordRef;
    subsidiary?: PlatformCore.RecordRef;
};
export declare class ItemVendor extends SoapMappingBase {
    vendor?: PlatformCore.RecordRef;
    vendorCode?: string;
    vendorCurrencyName?: string;
    vendorCurrency?: PlatformCore.RecordRef;
    purchasePrice?: number;
    preferredVendor?: boolean;
    schedule?: PlatformCore.RecordRef;
    subsidiary?: PlatformCore.RecordRef;
    constructor(props: ItemVendorProps);
}
export declare type AccountingPeriodProps = {
    periodName?: string;
    parent?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    fiscalCalendar?: PlatformCore.RecordRef;
    closedOnDate?: string;
    isAdjust?: boolean;
    fiscalCalendarsList?: AccountingPeriodFiscalCalendarsList;
    isQuarter?: boolean;
    isYear?: boolean;
    closed?: boolean;
    apLocked?: boolean;
    arLocked?: boolean;
    payrollLocked?: boolean;
    allLocked?: boolean;
    allowNonGLChanges?: boolean;
    internalId?: string;
} & PlatformCore.RecordProps;
export declare class AccountingPeriod extends PlatformCore.Record {
    periodName?: string;
    parent?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    fiscalCalendar?: PlatformCore.RecordRef;
    closedOnDate?: string;
    isAdjust?: boolean;
    fiscalCalendarsList?: AccountingPeriodFiscalCalendarsList;
    isQuarter?: boolean;
    isYear?: boolean;
    closed?: boolean;
    apLocked?: boolean;
    arLocked?: boolean;
    payrollLocked?: boolean;
    allLocked?: boolean;
    allowNonGLChanges?: boolean;
    internalId?: string;
    constructor(props: AccountingPeriodProps);
}
export declare type BomProps = {
    customForm?: PlatformCore.RecordRef;
    name?: string;
    usedOnAssembly?: boolean;
    createdDate?: string;
    isInactive?: boolean;
    useComponentYield?: boolean;
    memo?: string;
    legacyBomForAssembly?: PlatformCore.RecordRef;
    availableForAllAssemblies?: boolean;
    restrictToAssembliesList?: PlatformCore.RecordRefList;
    availableForAllLocations?: boolean;
    restrictToLocationsList?: PlatformCore.RecordRefList;
    subsidiaryList?: PlatformCore.RecordRefList;
    includeChildren?: boolean;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class Bom extends PlatformCore.Record {
    customForm?: PlatformCore.RecordRef;
    name?: string;
    usedOnAssembly?: boolean;
    createdDate?: string;
    isInactive?: boolean;
    useComponentYield?: boolean;
    memo?: string;
    legacyBomForAssembly?: PlatformCore.RecordRef;
    availableForAllAssemblies?: boolean;
    restrictToAssembliesList?: PlatformCore.RecordRefList;
    availableForAllLocations?: boolean;
    restrictToLocationsList?: PlatformCore.RecordRefList;
    subsidiaryList?: PlatformCore.RecordRefList;
    includeChildren?: boolean;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: BomProps);
}
export declare type SalesTaxItemSearchAdvancedProps = {
    criteria?: SalesTaxItemSearch;
    columns?: SalesTaxItemSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class SalesTaxItemSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: SalesTaxItemSearch;
    columns?: SalesTaxItemSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: SalesTaxItemSearchAdvancedProps);
}
export declare type BomRevisionSearchAdvancedProps = {
    criteria?: BomRevisionSearch;
    columns?: BomRevisionSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class BomRevisionSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: BomRevisionSearch;
    columns?: BomRevisionSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: BomRevisionSearchAdvancedProps);
}
export declare type TaxTypeNexusAccountsListProps = {
    taxTypeNexusAccounts?: TaxTypeNexusAccounts[];
    replaceAll?: boolean;
};
export declare class TaxTypeNexusAccountsList extends SoapMappingBase {
    taxTypeNexusAccounts?: TaxTypeNexusAccounts[];
    replaceAll?: boolean;
    constructor(props: TaxTypeNexusAccountsListProps);
}
export declare type ItemAccountMappingSearchRowProps = {
    basic?: PlatformCommon.ItemAccountMappingSearchRowBasic;
    classJoin?: PlatformCommon.ClassificationSearchRowBasic;
    departmentJoin?: PlatformCommon.DepartmentSearchRowBasic;
    destinationAccountJoin?: PlatformCommon.AccountSearchRowBasic;
    locationJoin?: PlatformCommon.LocationSearchRowBasic;
    sourceAccountJoin?: PlatformCommon.AccountSearchRowBasic;
    subsidiaryJoin?: PlatformCommon.SubsidiarySearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
};
export declare class ItemAccountMappingSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.ItemAccountMappingSearchRowBasic;
    classJoin?: PlatformCommon.ClassificationSearchRowBasic;
    departmentJoin?: PlatformCommon.DepartmentSearchRowBasic;
    destinationAccountJoin?: PlatformCommon.AccountSearchRowBasic;
    locationJoin?: PlatformCommon.LocationSearchRowBasic;
    sourceAccountJoin?: PlatformCommon.AccountSearchRowBasic;
    subsidiaryJoin?: PlatformCommon.SubsidiarySearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
    constructor(props: ItemAccountMappingSearchRowProps);
}
export declare type PriceLevelProps = {
    name?: string;
    discountpct?: number;
    updateExistingPrices?: boolean;
    isOnline?: boolean;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class PriceLevel extends PlatformCore.Record {
    name?: string;
    discountpct?: number;
    updateExistingPrices?: boolean;
    isOnline?: boolean;
    isInactive?: boolean;
    internalId?: string;
    externalId?: string;
    constructor(props: PriceLevelProps);
}
export declare type SiteCategoryListProps = {
    siteCategory?: SiteCategory[];
    replaceAll?: boolean;
};
export declare class SiteCategoryList extends SoapMappingBase {
    siteCategory?: SiteCategory[];
    replaceAll?: boolean;
    constructor(props: SiteCategoryListProps);
}
export declare type LotNumberedAssemblyItemHierarchyVersionsListProps = {
    lotNumberedAssemblyItemHierarchyVersions?: LotNumberedAssemblyItemHierarchyVersions[];
    replaceAll?: boolean;
};
export declare class LotNumberedAssemblyItemHierarchyVersionsList extends SoapMappingBase {
    lotNumberedAssemblyItemHierarchyVersions?: LotNumberedAssemblyItemHierarchyVersions[];
    replaceAll?: boolean;
    constructor(props: LotNumberedAssemblyItemHierarchyVersionsListProps);
}
export declare type BinSearchProps = {
    basic?: PlatformCommon.BinSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
};
export declare class BinSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.BinSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
    constructor(props: BinSearchProps);
}
export declare type OtherChargeSaleItemHierarchyVersionsListProps = {
    otherChargeSaleItemHierarchyVersions?: OtherChargeSaleItemHierarchyVersions[];
    replaceAll?: boolean;
};
export declare class OtherChargeSaleItemHierarchyVersionsList extends SoapMappingBase {
    otherChargeSaleItemHierarchyVersions?: OtherChargeSaleItemHierarchyVersions[];
    replaceAll?: boolean;
    constructor(props: OtherChargeSaleItemHierarchyVersionsListProps);
}
export declare type ItemSearchRowProps = {
    basic?: PlatformCommon.ItemSearchRowBasic;
    accountingBookRevRecScheduleJoin?: PlatformCommon.RevRecTemplateSearchRowBasic;
    assemblyItemBillOfMaterialsJoin?: PlatformCommon.AssemblyItemBomSearchRowBasic;
    binNumberJoin?: PlatformCommon.BinSearchRowBasic;
    binOnHandJoin?: PlatformCommon.ItemBinNumberSearchRowBasic;
    correlatedItemJoin?: PlatformCommon.ItemSearchRowBasic;
    effectiveRevisionJoin?: PlatformCommon.ItemRevisionSearchRowBasic;
    fileJoin?: PlatformCommon.FileSearchRowBasic;
    inventoryDetailJoin?: PlatformCommon.InventoryDetailSearchRowBasic;
    inventoryLocationJoin?: PlatformCommon.LocationSearchRowBasic;
    inventoryNumberJoin?: PlatformCommon.InventoryNumberSearchRowBasic;
    inventoryNumberBinOnHandJoin?: PlatformCommon.InventoryNumberBinSearchRowBasic;
    memberItemJoin?: PlatformCommon.ItemSearchRowBasic;
    obsoleteRevisionJoin?: PlatformCommon.ItemRevisionSearchRowBasic;
    parentJoin?: PlatformCommon.ItemSearchRowBasic;
    preferredLocationJoin?: PlatformCommon.LocationSearchRowBasic;
    preferredVendorJoin?: PlatformCommon.VendorSearchRowBasic;
    pricingJoin?: PlatformCommon.PricingSearchRowBasic;
    shopperJoin?: PlatformCommon.CustomerSearchRowBasic;
    transactionJoin?: PlatformCommon.TransactionSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    userNotesJoin?: PlatformCommon.NoteSearchRowBasic;
    vendorJoin?: PlatformCommon.VendorSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
};
export declare class ItemSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.ItemSearchRowBasic;
    accountingBookRevRecScheduleJoin?: PlatformCommon.RevRecTemplateSearchRowBasic;
    assemblyItemBillOfMaterialsJoin?: PlatformCommon.AssemblyItemBomSearchRowBasic;
    binNumberJoin?: PlatformCommon.BinSearchRowBasic;
    binOnHandJoin?: PlatformCommon.ItemBinNumberSearchRowBasic;
    correlatedItemJoin?: PlatformCommon.ItemSearchRowBasic;
    effectiveRevisionJoin?: PlatformCommon.ItemRevisionSearchRowBasic;
    fileJoin?: PlatformCommon.FileSearchRowBasic;
    inventoryDetailJoin?: PlatformCommon.InventoryDetailSearchRowBasic;
    inventoryLocationJoin?: PlatformCommon.LocationSearchRowBasic;
    inventoryNumberJoin?: PlatformCommon.InventoryNumberSearchRowBasic;
    inventoryNumberBinOnHandJoin?: PlatformCommon.InventoryNumberBinSearchRowBasic;
    memberItemJoin?: PlatformCommon.ItemSearchRowBasic;
    obsoleteRevisionJoin?: PlatformCommon.ItemRevisionSearchRowBasic;
    parentJoin?: PlatformCommon.ItemSearchRowBasic;
    preferredLocationJoin?: PlatformCommon.LocationSearchRowBasic;
    preferredVendorJoin?: PlatformCommon.VendorSearchRowBasic;
    pricingJoin?: PlatformCommon.PricingSearchRowBasic;
    shopperJoin?: PlatformCommon.CustomerSearchRowBasic;
    transactionJoin?: PlatformCommon.TransactionSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    userNotesJoin?: PlatformCommon.NoteSearchRowBasic;
    vendorJoin?: PlatformCommon.VendorSearchRowBasic;
    customSearchJoin?: PlatformCommon.CustomSearchRowBasic[];
    constructor(props: ItemSearchRowProps);
}
export declare type AccountingPeriodSearchAdvancedProps = {
    criteria?: AccountingPeriodSearch;
    columns?: AccountingPeriodSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
};
export declare class AccountingPeriodSearchAdvanced extends PlatformCore.SearchRecord {
    criteria?: AccountingPeriodSearch;
    columns?: AccountingPeriodSearchRow;
    savedSearchId?: string;
    savedSearchScriptId?: string;
    constructor(props: AccountingPeriodSearchAdvancedProps);
}
export declare type GeneralTokenSupportedOperationsListListProps = {
    generalTokenSupportedOperationsList?: ListsAccountingTypes.PaymentInstrumentSupportedOperation[];
};
export declare class GeneralTokenSupportedOperationsListList extends SoapMappingBase {
    generalTokenSupportedOperationsList?: ListsAccountingTypes.PaymentInstrumentSupportedOperation[];
    constructor(props: GeneralTokenSupportedOperationsListListProps);
}
export declare type NexusSearchRowProps = {
    basic?: PlatformCommon.NexusSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
};
export declare class NexusSearchRow extends PlatformCore.SearchRow {
    basic?: PlatformCommon.NexusSearchRowBasic;
    userJoin?: PlatformCommon.EmployeeSearchRowBasic;
    constructor(props: NexusSearchRowProps);
}
export declare type BillingRatesProps = {
    currency?: PlatformCore.RecordRef;
    billingClass?: PlatformCore.RecordRef;
    rateList?: RateList;
};
export declare class BillingRates extends SoapMappingBase {
    currency?: PlatformCore.RecordRef;
    billingClass?: PlatformCore.RecordRef;
    rateList?: RateList;
    constructor(props: BillingRatesProps);
}
export declare type GlobalAccountMappingProps = {
    customForm?: PlatformCore.RecordRef;
    effectiveDate?: string;
    endDate?: string;
    accountingBook?: PlatformCore.RecordRef;
    subsidiary?: PlatformCore.RecordRef;
    sourceAccount?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    department?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    destinationAccount?: PlatformCore.RecordRef;
    customDimension?: PlatformCore.BaseRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class GlobalAccountMapping extends PlatformCore.Record {
    customForm?: PlatformCore.RecordRef;
    effectiveDate?: string;
    endDate?: string;
    accountingBook?: PlatformCore.RecordRef;
    subsidiary?: PlatformCore.RecordRef;
    sourceAccount?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    department?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    destinationAccount?: PlatformCore.RecordRef;
    customDimension?: PlatformCore.BaseRef;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: GlobalAccountMappingProps);
}
export declare type AccountSearchProps = {
    basic?: PlatformCommon.AccountSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
};
export declare class AccountSearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.AccountSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
    constructor(props: AccountSearchProps);
}
export declare type LotNumberedAssemblyItemHierarchyVersionsProps = {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
};
export declare class LotNumberedAssemblyItemHierarchyVersions extends SoapMappingBase {
    isIncluded?: boolean;
    hierarchyVersion?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    hierarchyNode?: PlatformCore.RecordRef;
    constructor(props: LotNumberedAssemblyItemHierarchyVersionsProps);
}
export declare type ItemAccountingBookDetailProps = {
    accountingBook?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    sameAsPrimaryRevRec?: boolean;
    amortizationTemplate?: PlatformCore.RecordRef;
    sameAsPrimaryAmortization?: boolean;
};
export declare class ItemAccountingBookDetail extends SoapMappingBase {
    accountingBook?: PlatformCore.RecordRef;
    createRevenuePlansOn?: PlatformCore.RecordRef;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    revRecForecastRule?: PlatformCore.RecordRef;
    revRecSchedule?: PlatformCore.RecordRef;
    sameAsPrimaryRevRec?: boolean;
    amortizationTemplate?: PlatformCore.RecordRef;
    sameAsPrimaryAmortization?: boolean;
    constructor(props: ItemAccountingBookDetailProps);
}
export declare type NonInventoryResaleItemHierarchyVersionsListProps = {
    nonInventoryResaleItemHierarchyVersions?: NonInventoryResaleItemHierarchyVersions[];
    replaceAll?: boolean;
};
export declare class NonInventoryResaleItemHierarchyVersionsList extends SoapMappingBase {
    nonInventoryResaleItemHierarchyVersions?: NonInventoryResaleItemHierarchyVersions[];
    replaceAll?: boolean;
    constructor(props: NonInventoryResaleItemHierarchyVersionsListProps);
}
export declare type SubsidiaryTaxRegistrationListProps = {
    subsidiaryTaxRegistration?: SubsidiaryTaxRegistration[];
    replaceAll?: boolean;
};
export declare class SubsidiaryTaxRegistrationList extends SoapMappingBase {
    subsidiaryTaxRegistration?: SubsidiaryTaxRegistration[];
    replaceAll?: boolean;
    constructor(props: SubsidiaryTaxRegistrationListProps);
}
export declare type SubsidiaryNexusProps = {
    nexusId?: PlatformCore.RecordRef;
    country?: string;
};
export declare class SubsidiaryNexus extends SoapMappingBase {
    nexusId?: PlatformCore.RecordRef;
    country?: string;
    constructor(props: SubsidiaryNexusProps);
}
export declare type SubsidiarySearchProps = {
    basic?: PlatformCommon.SubsidiarySearchBasic;
    addressJoin?: PlatformCommon.AddressSearchBasic;
    defaultAdvanceToApplyAccountJoin?: PlatformCommon.AccountSearchBasic;
    returnAddressJoin?: PlatformCommon.AddressSearchBasic;
    shippingAddressJoin?: PlatformCommon.AddressSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
};
export declare class SubsidiarySearch extends PlatformCore.SearchRecord {
    basic?: PlatformCommon.SubsidiarySearchBasic;
    addressJoin?: PlatformCommon.AddressSearchBasic;
    defaultAdvanceToApplyAccountJoin?: PlatformCommon.AccountSearchBasic;
    returnAddressJoin?: PlatformCommon.AddressSearchBasic;
    shippingAddressJoin?: PlatformCommon.AddressSearchBasic;
    userJoin?: PlatformCommon.EmployeeSearchBasic;
    customSearchJoin?: PlatformCommon.CustomSearchJoin[];
    constructor(props: SubsidiarySearchProps);
}
