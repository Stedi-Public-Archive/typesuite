"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DepositOther = exports.Check = exports.DepositOtherList = exports.Deposit = exports.CheckExpense = exports.DepositCashBackList = exports.CheckLandedCostList = exports.CheckItem = exports.DepositPayment = exports.DepositPaymentList = exports.CheckExpenseList = exports.DepositCashBack = exports.CheckItemList = void 0;
const PlatformCore = __importStar(require("./platform_core"));
const soap_types_1 = require("../../soap-types");
const MAPPINGS_NAME = "com_netsuite_webservices_transactions_bank_2019_2";
class CheckItemList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.item = props.item;
        this.replaceAll = props.replaceAll;
    }
}
exports.CheckItemList = CheckItemList;
class DepositCashBack extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.amount = props.amount;
        this.account = props.account;
        this.department = props.department;
        this.clazz = props.clazz;
        this.location = props.location;
        this.memo = props.memo;
    }
}
exports.DepositCashBack = DepositCashBack;
class CheckExpenseList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.expense = props.expense;
        this.replaceAll = props.replaceAll;
    }
}
exports.CheckExpenseList = CheckExpenseList;
class DepositPaymentList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.depositPayment = props.depositPayment;
        this.replaceAll = props.replaceAll;
    }
}
exports.DepositPaymentList = DepositPaymentList;
class DepositPayment extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.deposit = props.deposit;
        this.id = props.id;
        this.docDate = props.docDate;
        this.type = props.type;
        this.docNumber = props.docNumber;
        this.memo = props.memo;
        this.paymentMethod = props.paymentMethod;
        this.refNum = props.refNum;
        this.entity = props.entity;
        this.currency = props.currency;
        this.transactionAmount = props.transactionAmount;
        this.paymentAmount = props.paymentAmount;
        this.lineId = props.lineId;
    }
}
exports.DepositPayment = DepositPayment;
class CheckItem extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.item = props.item;
        this.vendorName = props.vendorName;
        this.line = props.line;
        this.quantity = props.quantity;
        this.units = props.units;
        this.inventoryDetail = props.inventoryDetail;
        this.description = props.description;
        this.binNumbers = props.binNumbers;
        this.serialNumbers = props.serialNumbers;
        this.expirationDate = props.expirationDate;
        this.rate = props.rate;
        this.taxCode = props.taxCode;
        this.amount = props.amount;
        this.options = props.options;
        this.taxRate1 = props.taxRate1;
        this.taxRate2 = props.taxRate2;
        this.department = props.department;
        this.grossAmt = props.grossAmt;
        this.clazz = props.clazz;
        this.tax1Amt = props.tax1Amt;
        this.location = props.location;
        this.customer = props.customer;
        this.isBillable = props.isBillable;
        this.landedCost = props.landedCost;
        this.customFieldList = props.customFieldList;
    }
}
exports.CheckItem = CheckItem;
class CheckLandedCostList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.landedCost = props.landedCost;
        this.replaceAll = props.replaceAll;
    }
}
exports.CheckLandedCostList = CheckLandedCostList;
class DepositCashBackList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.depositCashBack = props.depositCashBack;
        this.replaceAll = props.replaceAll;
    }
}
exports.DepositCashBackList = DepositCashBackList;
class CheckExpense extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.line = props.line;
        this.category = props.category;
        this.account = props.account;
        this.amount = props.amount;
        this.memo = props.memo;
        this.department = props.department;
        this.clazz = props.clazz;
        this.location = props.location;
        this.customer = props.customer;
        this.isBillable = props.isBillable;
        this.taxCode = props.taxCode;
        this.taxRate1 = props.taxRate1;
        this.tax1Amt = props.tax1Amt;
        this.taxRate2 = props.taxRate2;
        this.grossAmt = props.grossAmt;
        this.customFieldList = props.customFieldList;
    }
}
exports.CheckExpense = CheckExpense;
class Deposit extends PlatformCore.Record {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.createdDate = props.createdDate;
        this.lastModifiedDate = props.lastModifiedDate;
        this.customForm = props.customForm;
        this.currencyName = props.currencyName;
        this.tranId = props.tranId;
        this.account = props.account;
        this.total = props.total;
        this.exchangeRate = props.exchangeRate;
        this.tranDate = props.tranDate;
        this.postingPeriod = props.postingPeriod;
        this.memo = props.memo;
        this.toBePrinted = props.toBePrinted;
        this.subsidiary = props.subsidiary;
        this.department = props.department;
        this.clazz = props.clazz;
        this.location = props.location;
        this.paymentList = props.paymentList;
        this.otherList = props.otherList;
        this.cashBackList = props.cashBackList;
        this.accountingBookDetailList = props.accountingBookDetailList;
        this.customFieldList = props.customFieldList;
        this.internalId = props.internalId;
        this.externalId = props.externalId;
    }
}
exports.Deposit = Deposit;
class DepositOtherList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.depositOther = props.depositOther;
        this.replaceAll = props.replaceAll;
    }
}
exports.DepositOtherList = DepositOtherList;
class Check extends PlatformCore.Record {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.createdDate = props.createdDate;
        this.lastModifiedDate = props.lastModifiedDate;
        this.status = props.status;
        this.customForm = props.customForm;
        this.account = props.account;
        this.balance = props.balance;
        this.entity = props.entity;
        this.address = props.address;
        this.subsidiary = props.subsidiary;
        this.postingPeriod = props.postingPeriod;
        this.tranDate = props.tranDate;
        this.currency = props.currency;
        this.voidJournal = props.voidJournal;
        this.exchangeRate = props.exchangeRate;
        this.toBePrinted = props.toBePrinted;
        this.tranId = props.tranId;
        this.memo = props.memo;
        this.department = props.department;
        this.taxTotal = props.taxTotal;
        this.clazz = props.clazz;
        this.tax2Total = props.tax2Total;
        this.location = props.location;
        this.userTotal = props.userTotal;
        this.landedCostMethod = props.landedCostMethod;
        this.landedCostPerLine = props.landedCostPerLine;
        this.transactionNumber = props.transactionNumber;
        this.expenseList = props.expenseList;
        this.itemList = props.itemList;
        this.accountingBookDetailList = props.accountingBookDetailList;
        this.landedCostsList = props.landedCostsList;
        this.billPay = props.billPay;
        this.customFieldList = props.customFieldList;
        this.internalId = props.internalId;
        this.externalId = props.externalId;
    }
}
exports.Check = Check;
class DepositOther extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.entity = props.entity;
        this.amount = props.amount;
        this.account = props.account;
        this.paymentMethod = props.paymentMethod;
        this.refNum = props.refNum;
        this.department = props.department;
        this.clazz = props.clazz;
        this.location = props.location;
        this.memo = props.memo;
    }
}
exports.DepositOther = DepositOther;
//# sourceMappingURL=data:application/json;base64,