"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManufacturingCostTemplate = exports.ManufacturingCostTemplateSearchRow = exports.ManufacturingRoutingSearch = exports.ManufacturingRoutingSearchRow = exports.ManufacturingOperationTaskPredecessor = exports.ManufacturingCostDetail = exports.ManufacturingRoutingRoutingComponentList = exports.ManufacturingOperationTaskSearch = exports.ManufacturingRoutingSearchAdvanced = exports.ManufacturingRoutingRoutingComponent = exports.ManufacturingRoutingRoutingStep = exports.ManufacturingRoutingRoutingStepList = exports.ManufacturingCostTemplateSearch = exports.ManufacturingOperationTaskSearchRow = exports.ManufacturingOperationTaskPredecessorList = exports.ManufacturingRouting = exports.ManufacturingCostDetailList = exports.ManufacturingCostTemplateSearchAdvanced = exports.ManufacturingOperationTaskSearchAdvanced = exports.ManufacturingOperationTask = void 0;
const PlatformCore = __importStar(require("./platform_core"));
const soap_types_1 = require("../../soap-types");
const MAPPINGS_NAME = "com_netsuite_webservices_lists_supplychain_2019_2";
class ManufacturingOperationTask extends PlatformCore.Record {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.customForm = props.customForm;
        this.manufacturingWorkCenter = props.manufacturingWorkCenter;
        this.manufacturingCostTemplate = props.manufacturingCostTemplate;
        this.title = props.title;
        this.operationSequence = props.operationSequence;
        this.workOrder = props.workOrder;
        this.order = props.order;
        this.status = props.status;
        this.message = props.message;
        this.estimatedWork = props.estimatedWork;
        this.actualWork = props.actualWork;
        this.remainingWork = props.remainingWork;
        this.inputQuantity = props.inputQuantity;
        this.completedQuantity = props.completedQuantity;
        this.setupTime = props.setupTime;
        this.runRate = props.runRate;
        this.startDate = props.startDate;
        this.endDate = props.endDate;
        this.autoCalculateLag = props.autoCalculateLag;
        this.machineResources = props.machineResources;
        this.laborResources = props.laborResources;
        this.costDetailList = props.costDetailList;
        this.predecessorList = props.predecessorList;
        this.customFieldList = props.customFieldList;
        this.internalId = props.internalId;
        this.externalId = props.externalId;
    }
}
exports.ManufacturingOperationTask = ManufacturingOperationTask;
class ManufacturingOperationTaskSearchAdvanced extends PlatformCore.SearchRecord {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.criteria = props.criteria;
        this.columns = props.columns;
        this.savedSearchId = props.savedSearchId;
        this.savedSearchScriptId = props.savedSearchScriptId;
    }
}
exports.ManufacturingOperationTaskSearchAdvanced = ManufacturingOperationTaskSearchAdvanced;
class ManufacturingCostTemplateSearchAdvanced extends PlatformCore.SearchRecord {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.criteria = props.criteria;
        this.columns = props.columns;
        this.savedSearchId = props.savedSearchId;
        this.savedSearchScriptId = props.savedSearchScriptId;
    }
}
exports.ManufacturingCostTemplateSearchAdvanced = ManufacturingCostTemplateSearchAdvanced;
class ManufacturingCostDetailList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.manufacturingCostDetail = props.manufacturingCostDetail;
        this.replaceAll = props.replaceAll;
    }
}
exports.ManufacturingCostDetailList = ManufacturingCostDetailList;
class ManufacturingRouting extends PlatformCore.Record {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.customForm = props.customForm;
        this.billOfMaterials = props.billOfMaterials;
        this.subsidiary = props.subsidiary;
        this.item = props.item;
        this.locationList = props.locationList;
        this.name = props.name;
        this.memo = props.memo;
        this.isDefault = props.isDefault;
        this.isInactive = props.isInactive;
        this.autoCalculateLag = props.autoCalculateLag;
        this.routingStepList = props.routingStepList;
        this.routingComponentList = props.routingComponentList;
        this.customFieldList = props.customFieldList;
        this.internalId = props.internalId;
        this.externalId = props.externalId;
    }
}
exports.ManufacturingRouting = ManufacturingRouting;
class ManufacturingOperationTaskPredecessorList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.manufacturingOperationTaskPredecessor =
            props.manufacturingOperationTaskPredecessor;
        this.replaceAll = props.replaceAll;
    }
}
exports.ManufacturingOperationTaskPredecessorList = ManufacturingOperationTaskPredecessorList;
class ManufacturingOperationTaskSearchRow extends PlatformCore.SearchRow {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.basic = props.basic;
        this.predecessorJoin = props.predecessorJoin;
        this.userJoin = props.userJoin;
        this.workOrderJoin = props.workOrderJoin;
        this.customSearchJoin = props.customSearchJoin;
    }
}
exports.ManufacturingOperationTaskSearchRow = ManufacturingOperationTaskSearchRow;
class ManufacturingCostTemplateSearch extends PlatformCore.SearchRecord {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.basic = props.basic;
        this.itemJoin = props.itemJoin;
        this.userJoin = props.userJoin;
        this.customSearchJoin = props.customSearchJoin;
    }
}
exports.ManufacturingCostTemplateSearch = ManufacturingCostTemplateSearch;
class ManufacturingRoutingRoutingStepList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.manufacturingRoutingRoutingStep =
            props.manufacturingRoutingRoutingStep;
        this.replaceAll = props.replaceAll;
    }
}
exports.ManufacturingRoutingRoutingStepList = ManufacturingRoutingRoutingStepList;
class ManufacturingRoutingRoutingStep extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.operationSequence = props.operationSequence;
        this.operationName = props.operationName;
        this.manufacturingWorkCenter = props.manufacturingWorkCenter;
        this.machineResources = props.machineResources;
        this.laborResources = props.laborResources;
        this.manufacturingCostTemplate = props.manufacturingCostTemplate;
        this.setupTime = props.setupTime;
        this.runRate = props.runRate;
        this.lagType = props.lagType;
        this.lagAmount = props.lagAmount;
        this.lagUnits = props.lagUnits;
    }
}
exports.ManufacturingRoutingRoutingStep = ManufacturingRoutingRoutingStep;
class ManufacturingRoutingRoutingComponent extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.itemName = props.itemName;
        this.revision = props.revision;
        this.description = props.description;
        this.yield = props.yield;
        this.bomQuantity = props.bomQuantity;
        this.quantity = props.quantity;
        this.units = props.units;
        this.operationDisplayText = props.operationDisplayText;
        this.operationSequenceNumber = props.operationSequenceNumber;
        this.component = props.component;
        this.item = props.item;
    }
}
exports.ManufacturingRoutingRoutingComponent = ManufacturingRoutingRoutingComponent;
class ManufacturingRoutingSearchAdvanced extends PlatformCore.SearchRecord {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.criteria = props.criteria;
        this.columns = props.columns;
        this.savedSearchId = props.savedSearchId;
        this.savedSearchScriptId = props.savedSearchScriptId;
    }
}
exports.ManufacturingRoutingSearchAdvanced = ManufacturingRoutingSearchAdvanced;
class ManufacturingOperationTaskSearch extends PlatformCore.SearchRecord {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.basic = props.basic;
        this.predecessorJoin = props.predecessorJoin;
        this.userJoin = props.userJoin;
        this.workOrderJoin = props.workOrderJoin;
        this.customSearchJoin = props.customSearchJoin;
    }
}
exports.ManufacturingOperationTaskSearch = ManufacturingOperationTaskSearch;
class ManufacturingRoutingRoutingComponentList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.manufacturingRoutingRoutingComponent =
            props.manufacturingRoutingRoutingComponent;
        this.replaceAll = props.replaceAll;
    }
}
exports.ManufacturingRoutingRoutingComponentList = ManufacturingRoutingRoutingComponentList;
class ManufacturingCostDetail extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.costCategory = props.costCategory;
        this.item = props.item;
        this.fixedRate = props.fixedRate;
        this.runRate = props.runRate;
    }
}
exports.ManufacturingCostDetail = ManufacturingCostDetail;
class ManufacturingOperationTaskPredecessor extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.task = props.task;
        this.type = props.type;
        this.startDate = props.startDate;
        this.endDate = props.endDate;
        this.lagType = props.lagType;
        this.lagAmount = props.lagAmount;
        this.lagUnits = props.lagUnits;
    }
}
exports.ManufacturingOperationTaskPredecessor = ManufacturingOperationTaskPredecessor;
class ManufacturingRoutingSearchRow extends PlatformCore.SearchRow {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.basic = props.basic;
        this.itemJoin = props.itemJoin;
        this.locationJoin = props.locationJoin;
        this.manufacturingCostTemplateJoin = props.manufacturingCostTemplateJoin;
        this.manufacturingWorkCenterJoin = props.manufacturingWorkCenterJoin;
        this.userJoin = props.userJoin;
        this.customSearchJoin = props.customSearchJoin;
    }
}
exports.ManufacturingRoutingSearchRow = ManufacturingRoutingSearchRow;
class ManufacturingRoutingSearch extends PlatformCore.SearchRecord {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.basic = props.basic;
        this.itemJoin = props.itemJoin;
        this.locationJoin = props.locationJoin;
        this.manufacturingCostTemplateJoin = props.manufacturingCostTemplateJoin;
        this.manufacturingWorkCenterJoin = props.manufacturingWorkCenterJoin;
        this.userJoin = props.userJoin;
        this.customSearchJoin = props.customSearchJoin;
    }
}
exports.ManufacturingRoutingSearch = ManufacturingRoutingSearch;
class ManufacturingCostTemplateSearchRow extends PlatformCore.SearchRow {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.basic = props.basic;
        this.itemJoin = props.itemJoin;
        this.userJoin = props.userJoin;
        this.customSearchJoin = props.customSearchJoin;
    }
}
exports.ManufacturingCostTemplateSearchRow = ManufacturingCostTemplateSearchRow;
class ManufacturingCostTemplate extends PlatformCore.Record {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.customForm = props.customForm;
        this.subsidiary = props.subsidiary;
        this.name = props.name;
        this.memo = props.memo;
        this.isInactive = props.isInactive;
        this.costDetailList = props.costDetailList;
        this.customFieldList = props.customFieldList;
        this.internalId = props.internalId;
        this.externalId = props.externalId;
    }
}
exports.ManufacturingCostTemplate = ManufacturingCostTemplate;
//# sourceMappingURL=data:application/json;base64,