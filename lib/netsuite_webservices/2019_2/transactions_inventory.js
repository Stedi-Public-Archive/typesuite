"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InventoryTransferInventory = exports.InterCompanyTransferOrder = exports.WorkOrderClose = exports.BinWorksheet = exports.WorkOrderCompletionComponentList = exports.WorkOrderCompletionOperation = exports.BinTransferInventory = exports.InventoryTransfer = exports.WorkOrderCompletion = exports.InventoryTransferInventoryList = exports.WorkOrder = exports.InventoryCostRevaluationCostComponentList = exports.TransferOrderItem = exports.InventoryAdjustmentInventoryList = exports.AssemblyComponent = exports.AssemblyUnbuild = exports.InventoryCostRevaluation = exports.AssemblyComponentList = exports.SalesTeamList = exports.WorkOrderIssueComponent = exports.InterCompanyTransferOrderItem = exports.BinTransferInventoryList = exports.InventoryAdjustment = exports.InventoryCostRevaluationCostComponent = exports.TransferOrder = exports.AssemblyBuild = exports.WorkOrderCompletionComponent = exports.BinWorksheetItem = exports.WorkOrderItemList = exports.PartnersList = exports.InterCompanyTransferOrderItemList = exports.WorkOrderCompletionOperationList = exports.BinWorksheetItemList = exports.WorkOrderIssue = exports.WorkOrderIssueComponentList = exports.BinTransfer = exports.InventoryAdjustmentInventory = exports.TransferOrderItemList = exports.WorkOrderItem = void 0;
const PlatformCore = __importStar(require("./platform_core"));
const soap_types_1 = require("../../soap-types");
const MAPPINGS_NAME = "com_netsuite_webservices_transactions_inventory_2019_2";
class WorkOrderItem extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.line = props.line;
        this.item = props.item;
        this.operationSequenceNumber = props.operationSequenceNumber;
        this.componentYield = props.componentYield;
        this.bomQuantity = props.bomQuantity;
        this.quantityCommitted = props.quantityCommitted;
        this.quantityBackOrdered = props.quantityBackOrdered;
        this.quantityAvailable = props.quantityAvailable;
        this.averageCost = props.averageCost;
        this.lastPurchasePrice = props.lastPurchasePrice;
        this.quantityOnHand = props.quantityOnHand;
        this.quantity = props.quantity;
        this.units = props.units;
        this.inventoryDetail = props.inventoryDetail;
        this.serialNumbers = props.serialNumbers;
        this.orderPriority = props.orderPriority;
        this.options = props.options;
        this.itemSource = props.itemSource;
        this.department = props.department;
        this.clazz = props.clazz;
        this.location = props.location;
        this.poVendor = props.poVendor;
        this.poRate = props.poRate;
        this.percentComplete = props.percentComplete;
        this.contribution = props.contribution;
        this.description = props.description;
        this.commitInventory = props.commitInventory;
        this.plannedIssueDate = props.plannedIssueDate;
        this.customFieldList = props.customFieldList;
    }
}
exports.WorkOrderItem = WorkOrderItem;
class TransferOrderItemList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.item = props.item;
        this.replaceAll = props.replaceAll;
    }
}
exports.TransferOrderItemList = TransferOrderItemList;
class InventoryAdjustmentInventory extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.item = props.item;
        this.line = props.line;
        this.inventoryDetail = props.inventoryDetail;
        this.description = props.description;
        this.department = props.department;
        this.clazz = props.clazz;
        this.location = props.location;
        this.units = props.units;
        this.quantityOnHand = props.quantityOnHand;
        this.currentValue = props.currentValue;
        this.adjustQtyBy = props.adjustQtyBy;
        this.binNumbers = props.binNumbers;
        this.serialNumbers = props.serialNumbers;
        this.newQuantity = props.newQuantity;
        this.unitCost = props.unitCost;
        this.foreignCurrencyUnitCost = props.foreignCurrencyUnitCost;
        this.memo = props.memo;
        this.currency = props.currency;
        this.expirationDate = props.expirationDate;
        this.exchangeRate = props.exchangeRate;
    }
}
exports.InventoryAdjustmentInventory = InventoryAdjustmentInventory;
class BinTransfer extends PlatformCore.Record {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.createdDate = props.createdDate;
        this.lastModifiedDate = props.lastModifiedDate;
        this.tranDate = props.tranDate;
        this.memo = props.memo;
        this.location = props.location;
        this.inventoryList = props.inventoryList;
        this.subsidiary = props.subsidiary;
        this.tranId = props.tranId;
        this.customFieldList = props.customFieldList;
        this.internalId = props.internalId;
        this.externalId = props.externalId;
    }
}
exports.BinTransfer = BinTransfer;
class WorkOrderIssueComponentList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.workOrderIssueComponent = props.workOrderIssueComponent;
        this.replaceAll = props.replaceAll;
    }
}
exports.WorkOrderIssueComponentList = WorkOrderIssueComponentList;
class WorkOrderIssue extends PlatformCore.Record {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.createdDate = props.createdDate;
        this.lastModifiedDate = props.lastModifiedDate;
        this.customForm = props.customForm;
        this.tranId = props.tranId;
        this.item = props.item;
        this.createdFrom = props.createdFrom;
        this.tranDate = props.tranDate;
        this.postingPeriod = props.postingPeriod;
        this.memo = props.memo;
        this.subsidiary = props.subsidiary;
        this.department = props.department;
        this.clazz = props.clazz;
        this.location = props.location;
        this.revision = props.revision;
        this.manufacturingRouting = props.manufacturingRouting;
        this.startOperation = props.startOperation;
        this.endOperation = props.endOperation;
        this.componentList = props.componentList;
        this.customFieldList = props.customFieldList;
        this.internalId = props.internalId;
        this.externalId = props.externalId;
    }
}
exports.WorkOrderIssue = WorkOrderIssue;
class BinWorksheetItemList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.item = props.item;
        this.replaceAll = props.replaceAll;
    }
}
exports.BinWorksheetItemList = BinWorksheetItemList;
class WorkOrderCompletionOperationList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.workOrderCompletionOperation = props.workOrderCompletionOperation;
        this.replaceAll = props.replaceAll;
    }
}
exports.WorkOrderCompletionOperationList = WorkOrderCompletionOperationList;
class InterCompanyTransferOrderItemList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.item = props.item;
        this.replaceAll = props.replaceAll;
    }
}
exports.InterCompanyTransferOrderItemList = InterCompanyTransferOrderItemList;
class PartnersList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.partners = props.partners;
        this.replaceAll = props.replaceAll;
    }
}
exports.PartnersList = PartnersList;
class WorkOrderItemList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.item = props.item;
        this.replaceAll = props.replaceAll;
    }
}
exports.WorkOrderItemList = WorkOrderItemList;
class BinWorksheetItem extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.item = props.item;
        this.itemName = props.itemName;
        this.description = props.description;
        this.quantity = props.quantity;
        this.itemOnHand = props.itemOnHand;
        this.itemUnitsLabel = props.itemUnitsLabel;
        this.inventoryDetail = props.inventoryDetail;
        this.itemBins = props.itemBins;
        this.itemBinNumbers = props.itemBinNumbers;
        this.itemBinList = props.itemBinList;
        this.itemPreferBin = props.itemPreferBin;
        this.itemBlank = props.itemBlank;
    }
}
exports.BinWorksheetItem = BinWorksheetItem;
class WorkOrderCompletionComponent extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.item = props.item;
        this.operationSequenceNumber = props.operationSequenceNumber;
        this.quantityPer = props.quantityPer;
        this.quantity = props.quantity;
        this.componentInventoryDetail = props.componentInventoryDetail;
        this.lineNumber = props.lineNumber;
    }
}
exports.WorkOrderCompletionComponent = WorkOrderCompletionComponent;
class AssemblyBuild extends PlatformCore.Record {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.createdDate = props.createdDate;
        this.expirationDate = props.expirationDate;
        this.lastModifiedDate = props.lastModifiedDate;
        this.customForm = props.customForm;
        this.createdFrom = props.createdFrom;
        this.tranDate = props.tranDate;
        this.postingPeriod = props.postingPeriod;
        this.tranId = props.tranId;
        this.item = props.item;
        this.buildable = props.buildable;
        this.quantity = props.quantity;
        this.units = props.units;
        this.total = props.total;
        this.billOfMaterials = props.billOfMaterials;
        this.inventoryDetail = props.inventoryDetail;
        this.serialNumbers = props.serialNumbers;
        this.binNumbers = props.binNumbers;
        this.subsidiary = props.subsidiary;
        this.department = props.department;
        this.clazz = props.clazz;
        this.location = props.location;
        this.revision = props.revision;
        this.billOfMaterialsRevision = props.billOfMaterialsRevision;
        this.memo = props.memo;
        this.componentList = props.componentList;
        this.accountingBookDetailList = props.accountingBookDetailList;
        this.customFieldList = props.customFieldList;
        this.internalId = props.internalId;
        this.externalId = props.externalId;
    }
}
exports.AssemblyBuild = AssemblyBuild;
class TransferOrder extends PlatformCore.Record {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.createdDate = props.createdDate;
        this.lastModifiedDate = props.lastModifiedDate;
        this.customForm = props.customForm;
        this.shippingCost = props.shippingCost;
        this.subTotal = props.subTotal;
        this.status = props.status;
        this.shippingAddress = props.shippingAddress;
        this.shipIsResidential = props.shipIsResidential;
        this.shipAddressList = props.shipAddressList;
        this.fob = props.fob;
        this.tranDate = props.tranDate;
        this.tranId = props.tranId;
        this.source = props.source;
        this.orderStatus = props.orderStatus;
        this.subsidiary = props.subsidiary;
        this.employee = props.employee;
        this.useItemCostAsTransferCost = props.useItemCostAsTransferCost;
        this.incoterm = props.incoterm;
        this.firmed = props.firmed;
        this.department = props.department;
        this.clazz = props.clazz;
        this.location = props.location;
        this.transferLocation = props.transferLocation;
        this.memo = props.memo;
        this.shipDate = props.shipDate;
        this.shipMethod = props.shipMethod;
        this.trackingNumbers = props.trackingNumbers;
        this.linkedTrackingNumbers = props.linkedTrackingNumbers;
        this.shipComplete = props.shipComplete;
        this.altShippingCost = props.altShippingCost;
        this.shippingTax1Rate = props.shippingTax1Rate;
        this.shippingTax2Rate = props.shippingTax2Rate;
        this.handlingTax1Rate = props.handlingTax1Rate;
        this.handlingTax2Rate = props.handlingTax2Rate;
        this.shippingTaxCode = props.shippingTaxCode;
        this.handlingTaxCode = props.handlingTaxCode;
        this.total = props.total;
        this.itemList = props.itemList;
        this.accountingBookDetailList = props.accountingBookDetailList;
        this.customFieldList = props.customFieldList;
        this.internalId = props.internalId;
        this.externalId = props.externalId;
    }
}
exports.TransferOrder = TransferOrder;
class InventoryCostRevaluationCostComponent extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.cost = props.cost;
        this.componentItem = props.componentItem;
        this.quantity = props.quantity;
        this.units = props.units;
        this.costCategory = props.costCategory;
    }
}
exports.InventoryCostRevaluationCostComponent = InventoryCostRevaluationCostComponent;
class InventoryAdjustment extends PlatformCore.Record {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.postingPeriod = props.postingPeriod;
        this.tranDate = props.tranDate;
        this.createdDate = props.createdDate;
        this.tranId = props.tranId;
        this.lastModifiedDate = props.lastModifiedDate;
        this.subsidiary = props.subsidiary;
        this.account = props.account;
        this.customForm = props.customForm;
        this.estimatedTotalValue = props.estimatedTotalValue;
        this.customer = props.customer;
        this.department = props.department;
        this.clazz = props.clazz;
        this.adjLocation = props.adjLocation;
        this.location = props.location;
        this.memo = props.memo;
        this.inventoryList = props.inventoryList;
        this.accountingBookDetailList = props.accountingBookDetailList;
        this.customFieldList = props.customFieldList;
        this.internalId = props.internalId;
        this.externalId = props.externalId;
    }
}
exports.InventoryAdjustment = InventoryAdjustment;
class BinTransferInventoryList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.inventory = props.inventory;
        this.replaceAll = props.replaceAll;
    }
}
exports.BinTransferInventoryList = BinTransferInventoryList;
class InterCompanyTransferOrderItem extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.item = props.item;
        this.line = props.line;
        this.quantityAvailable = props.quantityAvailable;
        this.quantityOnHand = props.quantityOnHand;
        this.quantityBackOrdered = props.quantityBackOrdered;
        this.quantityCommitted = props.quantityCommitted;
        this.quantityFulfilled = props.quantityFulfilled;
        this.quantityReceived = props.quantityReceived;
        this.quantity = props.quantity;
        this.rate = props.rate;
        this.units = props.units;
        this.amount = props.amount;
        this.description = props.description;
        this.inventoryDetail = props.inventoryDetail;
        this.commitInventory = props.commitInventory;
        this.options = props.options;
        this.department = props.department;
        this.clazz = props.clazz;
        this.lastPurchasePrice = props.lastPurchasePrice;
        this.averageCost = props.averageCost;
        this.customFieldList = props.customFieldList;
    }
}
exports.InterCompanyTransferOrderItem = InterCompanyTransferOrderItem;
class WorkOrderIssueComponent extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.item = props.item;
        this.operationSequenceNumber = props.operationSequenceNumber;
        this.quantity = props.quantity;
        this.componentInventoryDetail = props.componentInventoryDetail;
        this.lineNumber = props.lineNumber;
    }
}
exports.WorkOrderIssueComponent = WorkOrderIssueComponent;
class SalesTeamList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.salesTeam = props.salesTeam;
        this.replaceAll = props.replaceAll;
    }
}
exports.SalesTeamList = SalesTeamList;
class AssemblyComponentList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.component = props.component;
        this.replaceAll = props.replaceAll;
    }
}
exports.AssemblyComponentList = AssemblyComponentList;
class InventoryCostRevaluation extends PlatformCore.Record {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.createdDate = props.createdDate;
        this.lastModifiedDate = props.lastModifiedDate;
        this.customForm = props.customForm;
        this.subsidiary = props.subsidiary;
        this.tranDate = props.tranDate;
        this.postingPeriod = props.postingPeriod;
        this.tranId = props.tranId;
        this.account = props.account;
        this.item = props.item;
        this.department = props.department;
        this.clazz = props.clazz;
        this.location = props.location;
        this.memo = props.memo;
        this.total = props.total;
        this.inventoryValue = props.inventoryValue;
        this.unitCost = props.unitCost;
        this.costComponentList = props.costComponentList;
        this.accountingBookDetailList = props.accountingBookDetailList;
        this.customFieldList = props.customFieldList;
        this.internalId = props.internalId;
        this.externalId = props.externalId;
    }
}
exports.InventoryCostRevaluation = InventoryCostRevaluation;
class AssemblyUnbuild extends PlatformCore.Record {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.createdDate = props.createdDate;
        this.lastModifiedDate = props.lastModifiedDate;
        this.customForm = props.customForm;
        this.tranDate = props.tranDate;
        this.postingPeriod = props.postingPeriod;
        this.tranId = props.tranId;
        this.item = props.item;
        this.built = props.built;
        this.quantity = props.quantity;
        this.units = props.units;
        this.total = props.total;
        this.billOfMaterials = props.billOfMaterials;
        this.billOfMaterialsRevision = props.billOfMaterialsRevision;
        this.serialNumbers = props.serialNumbers;
        this.inventoryDetail = props.inventoryDetail;
        this.binNumbers = props.binNumbers;
        this.subsidiary = props.subsidiary;
        this.department = props.department;
        this.clazz = props.clazz;
        this.location = props.location;
        this.memo = props.memo;
        this.componentList = props.componentList;
        this.accountingBookDetailList = props.accountingBookDetailList;
        this.customFieldList = props.customFieldList;
        this.internalId = props.internalId;
        this.externalId = props.externalId;
    }
}
exports.AssemblyUnbuild = AssemblyUnbuild;
class AssemblyComponent extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.item = props.item;
        this.quantity = props.quantity;
        this.quantityOnHand = props.quantityOnHand;
        this.componentInventoryDetail = props.componentInventoryDetail;
        this.componentNumbers = props.componentNumbers;
        this.binNumbers = props.binNumbers;
        this.lineNumber = props.lineNumber;
    }
}
exports.AssemblyComponent = AssemblyComponent;
class InventoryAdjustmentInventoryList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.inventory = props.inventory;
        this.replaceAll = props.replaceAll;
    }
}
exports.InventoryAdjustmentInventoryList = InventoryAdjustmentInventoryList;
class TransferOrderItem extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.item = props.item;
        this.line = props.line;
        this.quantityAvailable = props.quantityAvailable;
        this.quantityOnHand = props.quantityOnHand;
        this.quantityBackOrdered = props.quantityBackOrdered;
        this.quantityCommitted = props.quantityCommitted;
        this.quantityFulfilled = props.quantityFulfilled;
        this.quantityPacked = props.quantityPacked;
        this.quantityPicked = props.quantityPicked;
        this.quantityReceived = props.quantityReceived;
        this.quantity = props.quantity;
        this.rate = props.rate;
        this.units = props.units;
        this.amount = props.amount;
        this.description = props.description;
        this.inventoryDetail = props.inventoryDetail;
        this.serialNumbers = props.serialNumbers;
        this.commitInventory = props.commitInventory;
        this.orderPriority = props.orderPriority;
        this.options = props.options;
        this.isClosed = props.isClosed;
        this.department = props.department;
        this.clazz = props.clazz;
        this.lastPurchasePrice = props.lastPurchasePrice;
        this.averageCost = props.averageCost;
        this.expectedShipDate = props.expectedShipDate;
        this.expectedReceiptDate = props.expectedReceiptDate;
        this.customFieldList = props.customFieldList;
    }
}
exports.TransferOrderItem = TransferOrderItem;
class InventoryCostRevaluationCostComponentList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.costComponent = props.costComponent;
        this.replaceAll = props.replaceAll;
    }
}
exports.InventoryCostRevaluationCostComponentList = InventoryCostRevaluationCostComponentList;
class WorkOrder extends PlatformCore.Record {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.createdDate = props.createdDate;
        this.lastModifiedDate = props.lastModifiedDate;
        this.customForm = props.customForm;
        this.manufacturingRouting = props.manufacturingRouting;
        this.autoCalculateLag = props.autoCalculateLag;
        this.status = props.status;
        this.tranId = props.tranId;
        this.entity = props.entity;
        this.job = props.job;
        this.assemblyItem = props.assemblyItem;
        this.expandAssembly = props.expandAssembly;
        this.isWip = props.isWip;
        this.quantity = props.quantity;
        this.billOfMaterials = props.billOfMaterials;
        this.units = props.units;
        this.tranDate = props.tranDate;
        this.orderStatus = props.orderStatus;
        this.firmed = props.firmed;
        this.memo = props.memo;
        this.department = props.department;
        this.clazz = props.clazz;
        this.itemList = props.itemList;
        this.location = props.location;
        this.schedulingMethod = props.schedulingMethod;
        this.salesTeamList = props.salesTeamList;
        this.partnersList = props.partnersList;
        this.createdFrom = props.createdFrom;
        this.sourceTransactionId = props.sourceTransactionId;
        this.sourceTransactionLine = props.sourceTransactionLine;
        this.specialOrder = props.specialOrder;
        this.buildable = props.buildable;
        this.options = props.options;
        this.built = props.built;
        this.startDate = props.startDate;
        this.endDate = props.endDate;
        this.revision = props.revision;
        this.billOfMaterialsRevision = props.billOfMaterialsRevision;
        this.subsidiary = props.subsidiary;
        this.accountingBookDetailList = props.accountingBookDetailList;
        this.customFieldList = props.customFieldList;
        this.internalId = props.internalId;
        this.externalId = props.externalId;
    }
}
exports.WorkOrder = WorkOrder;
class InventoryTransferInventoryList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.inventory = props.inventory;
        this.replaceAll = props.replaceAll;
    }
}
exports.InventoryTransferInventoryList = InventoryTransferInventoryList;
class WorkOrderCompletion extends PlatformCore.Record {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.createdDate = props.createdDate;
        this.lastModifiedDate = props.lastModifiedDate;
        this.customForm = props.customForm;
        this.tranId = props.tranId;
        this.item = props.item;
        this.quantity = props.quantity;
        this.scrapQuantity = props.scrapQuantity;
        this.units = props.units;
        this.isBackflush = props.isBackflush;
        this.orderQuantity = props.orderQuantity;
        this.total = props.total;
        this.createdFrom = props.createdFrom;
        this.inventoryDetail = props.inventoryDetail;
        this.tranDate = props.tranDate;
        this.postingPeriod = props.postingPeriod;
        this.memo = props.memo;
        this.subsidiary = props.subsidiary;
        this.department = props.department;
        this.clazz = props.clazz;
        this.location = props.location;
        this.revision = props.revision;
        this.startOperation = props.startOperation;
        this.endOperation = props.endOperation;
        this.completedQuantity = props.completedQuantity;
        this.manufacturingRouting = props.manufacturingRouting;
        this.componentList = props.componentList;
        this.operationList = props.operationList;
        this.customFieldList = props.customFieldList;
        this.internalId = props.internalId;
        this.externalId = props.externalId;
    }
}
exports.WorkOrderCompletion = WorkOrderCompletion;
class InventoryTransfer extends PlatformCore.Record {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.createdDate = props.createdDate;
        this.lastModifiedDate = props.lastModifiedDate;
        this.tranDate = props.tranDate;
        this.postingPeriod = props.postingPeriod;
        this.tranId = props.tranId;
        this.memo = props.memo;
        this.location = props.location;
        this.transferLocation = props.transferLocation;
        this.department = props.department;
        this.clazz = props.clazz;
        this.subsidiary = props.subsidiary;
        this.inventoryList = props.inventoryList;
        this.customFieldList = props.customFieldList;
        this.internalId = props.internalId;
        this.externalId = props.externalId;
    }
}
exports.InventoryTransfer = InventoryTransfer;
class BinTransferInventory extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.line = props.line;
        this.item = props.item;
        this.description = props.description;
        this.preferredBin = props.preferredBin;
        this.quantity = props.quantity;
        this.itemUnitsLabel = props.itemUnitsLabel;
        this.inventoryDetail = props.inventoryDetail;
        this.fromBins = props.fromBins;
        this.toBins = props.toBins;
    }
}
exports.BinTransferInventory = BinTransferInventory;
class WorkOrderCompletionOperation extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.operationSequence = props.operationSequence;
        this.operationName = props.operationName;
        this.workCenter = props.workCenter;
        this.machineResources = props.machineResources;
        this.laborResources = props.laborResources;
        this.inputQuantity = props.inputQuantity;
        this.quantityRemaining = props.quantityRemaining;
        this.predecessorCompletedQuantity = props.predecessorCompletedQuantity;
        this.completedQuantity = props.completedQuantity;
        this.recordSetup = props.recordSetup;
        this.machineSetupTime = props.machineSetupTime;
        this.laborSetupTime = props.laborSetupTime;
        this.machineRunTime = props.machineRunTime;
        this.laborRunTime = props.laborRunTime;
    }
}
exports.WorkOrderCompletionOperation = WorkOrderCompletionOperation;
class WorkOrderCompletionComponentList extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.workOrderCompletionComponent = props.workOrderCompletionComponent;
        this.replaceAll = props.replaceAll;
    }
}
exports.WorkOrderCompletionComponentList = WorkOrderCompletionComponentList;
class BinWorksheet extends PlatformCore.Record {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.createdDate = props.createdDate;
        this.lastModifiedDate = props.lastModifiedDate;
        this.tranDate = props.tranDate;
        this.memo = props.memo;
        this.location = props.location;
        this.tranId = props.tranId;
        this.itemList = props.itemList;
        this.customFieldList = props.customFieldList;
        this.internalId = props.internalId;
        this.externalId = props.externalId;
    }
}
exports.BinWorksheet = BinWorksheet;
class WorkOrderClose extends PlatformCore.Record {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.createdDate = props.createdDate;
        this.lastModifiedDate = props.lastModifiedDate;
        this.customForm = props.customForm;
        this.tranId = props.tranId;
        this.item = props.item;
        this.quantity = props.quantity;
        this.orderQuantity = props.orderQuantity;
        this.scrapQuantity = props.scrapQuantity;
        this.createdFrom = props.createdFrom;
        this.tranDate = props.tranDate;
        this.postingPeriod = props.postingPeriod;
        this.memo = props.memo;
        this.subsidiary = props.subsidiary;
        this.department = props.department;
        this.clazz = props.clazz;
        this.location = props.location;
        this.revision = props.revision;
        this.customFieldList = props.customFieldList;
        this.internalId = props.internalId;
        this.externalId = props.externalId;
    }
}
exports.WorkOrderClose = WorkOrderClose;
class InterCompanyTransferOrder extends PlatformCore.Record {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.createdDate = props.createdDate;
        this.lastModifiedDate = props.lastModifiedDate;
        this.customForm = props.customForm;
        this.shippingCost = props.shippingCost;
        this.subTotal = props.subTotal;
        this.status = props.status;
        this.shippingAddress = props.shippingAddress;
        this.shipIsResidential = props.shipIsResidential;
        this.shipAddressList = props.shipAddressList;
        this.fob = props.fob;
        this.tranDate = props.tranDate;
        this.tranId = props.tranId;
        this.source = props.source;
        this.orderStatus = props.orderStatus;
        this.subsidiary = props.subsidiary;
        this.toSubsidiary = props.toSubsidiary;
        this.employee = props.employee;
        this.useItemCostAsTransferCost = props.useItemCostAsTransferCost;
        this.incoterm = props.incoterm;
        this.department = props.department;
        this.clazz = props.clazz;
        this.location = props.location;
        this.transferLocation = props.transferLocation;
        this.memo = props.memo;
        this.shipDate = props.shipDate;
        this.shipMethod = props.shipMethod;
        this.trackingNumbers = props.trackingNumbers;
        this.linkedTrackingNumbers = props.linkedTrackingNumbers;
        this.shipComplete = props.shipComplete;
        this.altShippingCost = props.altShippingCost;
        this.shippingTax1Rate = props.shippingTax1Rate;
        this.handlingTax1Rate = props.handlingTax1Rate;
        this.shippingTax2Rate = props.shippingTax2Rate;
        this.handlingTax2Rate = props.handlingTax2Rate;
        this.shippingTaxCode = props.shippingTaxCode;
        this.handlingTaxCode = props.handlingTaxCode;
        this.total = props.total;
        this.itemList = props.itemList;
        this.accountingBookDetailList = props.accountingBookDetailList;
        this.customFieldList = props.customFieldList;
        this.internalId = props.internalId;
        this.externalId = props.externalId;
    }
}
exports.InterCompanyTransferOrder = InterCompanyTransferOrder;
class InventoryTransferInventory extends soap_types_1.SoapMappingBase {
    constructor(props) {
        super(soap_types_1.propsWithMappingsName(props, MAPPINGS_NAME));
        this.line = props.line;
        this.item = props.item;
        this.description = props.description;
        this.units = props.units;
        this.quantityOnHand = props.quantityOnHand;
        this.adjustQtyBy = props.adjustQtyBy;
        this.serialNumbers = props.serialNumbers;
        this.fromBinNumbers = props.fromBinNumbers;
        this.toBinNumbers = props.toBinNumbers;
        this.inventoryDetail = props.inventoryDetail;
        this.customFieldList = props.customFieldList;
    }
}
exports.InventoryTransferInventory = InventoryTransferInventory;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNhY3Rpb25zX2ludmVudG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9uZXRzdWl0ZV93ZWJzZXJ2aWNlcy8yMDE5XzIvdHJhbnNhY3Rpb25zX2ludmVudG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsOERBQWdEO0FBR2hELGlEQUEwRTtBQUMxRSxNQUFNLGFBQWEsR0FBRyx3REFBd0QsQ0FBQztBQWlDL0UsTUFBYSxhQUFjLFNBQVEsNEJBQWU7SUE4QmhELFlBQVksS0FBeUI7UUFDbkMsS0FBSyxDQUFDLGtDQUFxQixDQUFDLEtBQUssRUFBRSxhQUFhLENBQUMsQ0FBQyxDQUFDO1FBQ25ELElBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQztRQUN2QixJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUM7UUFDdkIsSUFBSSxDQUFDLHVCQUF1QixHQUFHLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQztRQUM3RCxJQUFJLENBQUMsY0FBYyxHQUFHLEtBQUssQ0FBQyxjQUFjLENBQUM7UUFDM0MsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUMsV0FBVyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxLQUFLLENBQUMsaUJBQWlCLENBQUM7UUFDakQsSUFBSSxDQUFDLG1CQUFtQixHQUFHLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQztRQUNyRCxJQUFJLENBQUMsaUJBQWlCLEdBQUcsS0FBSyxDQUFDLGlCQUFpQixDQUFDO1FBQ2pELElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDLFdBQVcsQ0FBQztRQUNyQyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsS0FBSyxDQUFDLGlCQUFpQixDQUFDO1FBQ2pELElBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDLGNBQWMsQ0FBQztRQUMzQyxJQUFJLENBQUMsUUFBUSxH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YUFBYSxHQUFHLEtBQUssQ0FBQyxhQUFhLENBQUM7UUFDekMsSUFBSSxDQUFDLGNBQWMsR0FBRyxLQUFLLENBQUMsY0FBYyxDQUFDO1FBQzNDLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDLFlBQVksQ0FBQztRQUN2QyxJQUFJLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQyxlQUFlLENBQUM7UUFDN0MsSUFBSSxDQUFDLGVBQWUsR0FBRyxLQUFLLENBQUMsZUFBZSxDQUFDO0lBQy9DLENBQUM7Q0FDRjtBQTFCRCxnRUEwQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBUcmFuc2FjdGlvbnNJbnZlbnRvcnlUeXBlcyBmcm9tIFwiLi90cmFuc2FjdGlvbnNfaW52ZW50b3J5X3R5cGVzXCI7XG5pbXBvcnQgKiBhcyBQbGF0Zm9ybUNvcmUgZnJvbSBcIi4vcGxhdGZvcm1fY29yZVwiO1xuaW1wb3J0ICogYXMgUGxhdGZvcm1Db21tb24gZnJvbSBcIi4vcGxhdGZvcm1fY29tbW9uXCI7XG5pbXBvcnQgKiBhcyBQbGF0Zm9ybUNvbW1vblR5cGVzIGZyb20gXCIuL3BsYXRmb3JtX2NvbW1vbl90eXBlc1wiO1xuaW1wb3J0IHsgU29hcE1hcHBpbmdCYXNlLCBwcm9wc1dpdGhNYXBwaW5nc05hbWUgfSBmcm9tIFwiLi4vLi4vc29hcC10eXBlc1wiO1xuY29uc3QgTUFQUElOR1NfTkFNRSA9IFwiY29tX25ldHN1aXRlX3dlYnNlcnZpY2VzX3RyYW5zYWN0aW9uc19pbnZlbnRvcnlfMjAxOV8yXCI7XG5leHBvcnQgdHlwZSBXb3JrT3JkZXJJdGVtUHJvcHMgPSB7XG4gIGxpbmU/OiBudW1iZXI7XG4gIGl0ZW0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBvcGVyYXRpb25TZXF1ZW5jZU51bWJlcj86IG51bWJlcjtcbiAgY29tcG9uZW50WWllbGQ/OiBudW1iZXI7XG4gIGJvbVF1YW50aXR5PzogbnVtYmVyO1xuICBxdWFudGl0eUNvbW1pdHRlZD86IG51bWJlcjtcbiAgcXVhbnRpdHlCYWNrT3JkZXJlZD86IG51bWJlcjtcbiAgcXVhbnRpdHlBdmFpbGFibGU/OiBudW1iZXI7XG4gIGF2ZXJhZ2VDb3N0PzogbnVtYmVyO1xuICBsYXN0UHVyY2hhc2VQcmljZT86IG51bWJlcjtcbiAgcXVhbnRpdHlPbkhhbmQ/OiBudW1iZXI7XG4gIHF1YW50aXR5PzogbnVtYmVyO1xuICB1bml0cz86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGludmVudG9yeURldGFpbD86IFBsYXRmb3JtQ29tbW9uLkludmVudG9yeURldGFpbDtcbiAgc2VyaWFsTnVtYmVycz86IHN0cmluZztcbiAgb3JkZXJQcmlvcml0eT86IG51bWJlcjtcbiAgb3B0aW9ucz86IFBsYXRmb3JtQ29yZS5DdXN0b21GaWVsZExpc3Q7XG4gIGl0ZW1Tb3VyY2U/OiBQbGF0Zm9ybUNvbW1vblR5cGVzLkl0ZW1Tb3VyY2U7XG4gIGRlcGFydG1lbnQ/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBjbGF6ej86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGxvY2F0aW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgcG9WZW5kb3I/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBwb1JhdGU/OiBudW1iZXI7XG4gIHBlcmNlbnRDb21wbGV0ZT86IG51bWJlcjtcbiAgY29udHJpYnV0aW9uPzogbnVtYmVyO1xuICBkZXNjcmlwdGlvbj86IHN0cmluZztcbiAgY29tbWl0SW52ZW50b3J5PzogVHJhbnNhY3Rpb25zSW52ZW50b3J5VHlwZXMuV29ya09yZGVySXRlbUl0ZW1Db21taXRJbnZlbnRvcnk7XG4gIHBsYW5uZWRJc3N1ZURhdGU/OiBzdHJpbmc7XG4gIGN1c3RvbUZpZWxkTGlzdD86IFBsYXRmb3JtQ29yZS5DdXN0b21GaWVsZExpc3Q7XG59O1xuXG5leHBvcnQgY2xhc3MgV29ya09yZGVySXRlbSBleHRlbmRzIFNvYXBNYXBwaW5nQmFzZSB7XG4gIGxpbmU/OiBudW1iZXI7XG4gIGl0ZW0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBvcGVyYXRpb25TZXF1ZW5jZU51bWJlcj86IG51bWJlcjtcbiAgY29tcG9uZW50WWllbGQ/OiBudW1iZXI7XG4gIGJvbVF1YW50aXR5PzogbnVtYmVyO1xuICBxdWFudGl0eUNvbW1pdHRlZD86IG51bWJlcjtcbiAgcXVhbnRpdHlCYWNrT3JkZXJlZD86IG51bWJlcjtcbiAgcXVhbnRpdHlBdmFpbGFibGU/OiBudW1iZXI7XG4gIGF2ZXJhZ2VDb3N0PzogbnVtYmVyO1xuICBsYXN0UHVyY2hhc2VQcmljZT86IG51bWJlcjtcbiAgcXVhbnRpdHlPbkhhbmQ/OiBudW1iZXI7XG4gIHF1YW50aXR5PzogbnVtYmVyO1xuICB1bml0cz86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGludmVudG9yeURldGFpbD86IFBsYXRmb3JtQ29tbW9uLkludmVudG9yeURldGFpbDtcbiAgc2VyaWFsTnVtYmVycz86IHN0cmluZztcbiAgb3JkZXJQcmlvcml0eT86IG51bWJlcjtcbiAgb3B0aW9ucz86IFBsYXRmb3JtQ29yZS5DdXN0b21GaWVsZExpc3Q7XG4gIGl0ZW1Tb3VyY2U/OiBQbGF0Zm9ybUNvbW1vblR5cGVzLkl0ZW1Tb3VyY2U7XG4gIGRlcGFydG1lbnQ/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBjbGF6ej86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGxvY2F0aW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgcG9WZW5kb3I/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBwb1JhdGU/OiBudW1iZXI7XG4gIHBlcmNlbnRDb21wbGV0ZT86IG51bWJlcjtcbiAgY29udHJpYnV0aW9uPzogbnVtYmVyO1xuICBkZXNjcmlwdGlvbj86IHN0cmluZztcbiAgY29tbWl0SW52ZW50b3J5PzogVHJhbnNhY3Rpb25zSW52ZW50b3J5VHlwZXMuV29ya09yZGVySXRlbUl0ZW1Db21taXRJbnZlbnRvcnk7XG4gIHBsYW5uZWRJc3N1ZURhdGU/OiBzdHJpbmc7XG4gIGN1c3RvbUZpZWxkTGlzdD86IFBsYXRmb3JtQ29yZS5DdXN0b21GaWVsZExpc3Q7XG4gIGNvbnN0cnVjdG9yKHByb3BzOiBXb3JrT3JkZXJJdGVtUHJvcHMpIHtcbiAgICBzdXBlcihwcm9wc1dpdGhNYXBwaW5nc05hbWUocHJvcHMsIE1BUFBJTkdTX05BTUUpKTtcbiAgICB0aGlzLmxpbmUgPSBwcm9wcy5saW5lO1xuICAgIHRoaXMuaXRlbSA9IHByb3BzLml0ZW07XG4gICAgdGhpcy5vcGVyYXRpb25TZXF1ZW5jZU51bWJlciA9IHByb3BzLm9wZXJhdGlvblNlcXVlbmNlTnVtYmVyO1xuICAgIHRoaXMuY29tcG9uZW50WWllbGQgPSBwcm9wcy5jb21wb25lbnRZaWVsZDtcbiAgICB0aGlzLmJvbVF1YW50aXR5ID0gcHJvcHMuYm9tUXVhbnRpdHk7XG4gICAgdGhpcy5xdWFudGl0eUNvbW1pdHRlZCA9IHByb3BzLnF1YW50aXR5Q29tbWl0dGVkO1xuICAgIHRoaXMucXVhbnRpdHlCYWNrT3JkZXJlZCA9IHByb3BzLnF1YW50aXR5QmFja09yZGVyZWQ7XG4gICAgdGhpcy5xdWFudGl0eUF2YWlsYWJsZSA9IHByb3BzLnF1YW50aXR5QXZhaWxhYmxlO1xuICAgIHRoaXMuYXZlcmFnZUNvc3QgPSBwcm9wcy5hdmVyYWdlQ29zdDtcbiAgICB0aGlzLmxhc3RQdXJjaGFzZVByaWNlID0gcHJvcHMubGFzdFB1cmNoYXNlUHJpY2U7XG4gICAgdGhpcy5xdWFudGl0eU9uSGFuZCA9IHByb3BzLnF1YW50aXR5T25IYW5kO1xuICAgIHRoaXMucXVhbnRpdHkgPSBwcm9wcy5xdWFudGl0eTtcbiAgICB0aGlzLnVuaXRzID0gcHJvcHMudW5pdHM7XG4gICAgdGhpcy5pbnZlbnRvcnlEZXRhaWwgPSBwcm9wcy5pbnZlbnRvcnlEZXRhaWw7XG4gICAgdGhpcy5zZXJpYWxOdW1iZXJzID0gcHJvcHMuc2VyaWFsTnVtYmVycztcbiAgICB0aGlzLm9yZGVyUHJpb3JpdHkgPSBwcm9wcy5vcmRlclByaW9yaXR5O1xuICAgIHRoaXMub3B0aW9ucyA9IHByb3BzLm9wdGlvbnM7XG4gICAgdGhpcy5pdGVtU291cmNlID0gcHJvcHMuaXRlbVNvdXJjZTtcbiAgICB0aGlzLmRlcGFydG1lbnQgPSBwcm9wcy5kZXBhcnRtZW50O1xuICAgIHRoaXMuY2xhenogPSBwcm9wcy5jbGF6ejtcbiAgICB0aGlzLmxvY2F0aW9uID0gcHJvcHMubG9jYXRpb247XG4gICAgdGhpcy5wb1ZlbmRvciA9IHByb3BzLnBvVmVuZG9yO1xuICAgIHRoaXMucG9SYXRlID0gcHJvcHMucG9SYXRlO1xuICAgIHRoaXMucGVyY2VudENvbXBsZXRlID0gcHJvcHMucGVyY2VudENvbXBsZXRlO1xuICAgIHRoaXMuY29udHJpYnV0aW9uID0gcHJvcHMuY29udHJpYnV0aW9uO1xuICAgIHRoaXMuZGVzY3JpcHRpb24gPSBwcm9wcy5kZXNjcmlwdGlvbjtcbiAgICB0aGlzLmNvbW1pdEludmVudG9yeSA9IHByb3BzLmNvbW1pdEludmVudG9yeTtcbiAgICB0aGlzLnBsYW5uZWRJc3N1ZURhdGUgPSBwcm9wcy5wbGFubmVkSXNzdWVEYXRlO1xuICAgIHRoaXMuY3VzdG9tRmllbGRMaXN0ID0gcHJvcHMuY3VzdG9tRmllbGRMaXN0O1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIFRyYW5zZmVyT3JkZXJJdGVtTGlzdFByb3BzID0ge1xuICBpdGVtPzogVHJhbnNmZXJPcmRlckl0ZW1bXTtcbiAgcmVwbGFjZUFsbD86IGJvb2xlYW47XG59O1xuXG5leHBvcnQgY2xhc3MgVHJhbnNmZXJPcmRlckl0ZW1MaXN0IGV4dGVuZHMgU29hcE1hcHBpbmdCYXNlIHtcbiAgaXRlbT86IFRyYW5zZmVyT3JkZXJJdGVtW107XG4gIHJlcGxhY2VBbGw/OiBib29sZWFuO1xuICBjb25zdHJ1Y3Rvcihwcm9wczogVHJhbnNmZXJPcmRlckl0ZW1MaXN0UHJvcHMpIHtcbiAgICBzdXBlcihwcm9wc1dpdGhNYXBwaW5nc05hbWUocHJvcHMsIE1BUFBJTkdTX05BTUUpKTtcbiAgICB0aGlzLml0ZW0gPSBwcm9wcy5pdGVtO1xuICAgIHRoaXMucmVwbGFjZUFsbCA9IHByb3BzLnJlcGxhY2VBbGw7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgSW52ZW50b3J5QWRqdXN0bWVudEludmVudG9yeVByb3BzID0ge1xuICBpdGVtPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgbGluZT86IG51bWJlcjtcbiAgaW52ZW50b3J5RGV0YWlsPzogUGxhdGZvcm1Db21tb24uSW52ZW50b3J5RGV0YWlsO1xuICBkZXNjcmlwdGlvbj86IHN0cmluZztcbiAgZGVwYXJ0bWVudD86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGNsYXp6PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgbG9jYXRpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICB1bml0cz86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHF1YW50aXR5T25IYW5kPzogbnVtYmVyO1xuICBjdXJyZW50VmFsdWU/OiBudW1iZXI7XG4gIGFkanVzdFF0eUJ5PzogbnVtYmVyO1xuICBiaW5OdW1iZXJzPzogc3RyaW5nO1xuICBzZXJpYWxOdW1iZXJzPzogc3RyaW5nO1xuICBuZXdRdWFudGl0eT86IG51bWJlcjtcbiAgdW5pdENvc3Q/OiBudW1iZXI7XG4gIGZvcmVpZ25DdXJyZW5jeVVuaXRDb3N0PzogbnVtYmVyO1xuICBtZW1vPzogc3RyaW5nO1xuICBjdXJyZW5jeT86IHN0cmluZztcbiAgZXhwaXJhdGlvbkRhdGU/OiBzdHJpbmc7XG4gIGV4Y2hhbmdlUmF0ZT86IG51bWJlcjtcbn07XG5cbmV4cG9ydCBjbGFzcyBJbnZlbnRvcnlBZGp1c3RtZW50SW52ZW50b3J5IGV4dGVuZHMgU29hcE1hcHBpbmdCYXNlIHtcbiAgaXRlbT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGxpbmU/OiBudW1iZXI7XG4gIGludmVudG9yeURldGFpbD86IFBsYXRmb3JtQ29tbW9uLkludmVudG9yeURldGFpbDtcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIGRlcGFydG1lbnQ/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBjbGF6ej86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGxvY2F0aW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgdW5pdHM/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBxdWFudGl0eU9uSGFuZD86IG51bWJlcjtcbiAgY3VycmVudFZhbHVlPzogbnVtYmVyO1xuICBhZGp1c3RRdHlCeT86IG51bWJlcjtcbiAgYmluTnVtYmVycz86IHN0cmluZztcbiAgc2VyaWFsTnVtYmVycz86IHN0cmluZztcbiAgbmV3UXVhbnRpdHk/OiBudW1iZXI7XG4gIHVuaXRDb3N0PzogbnVtYmVyO1xuICBmb3JlaWduQ3VycmVuY3lVbml0Q29zdD86IG51bWJlcjtcbiAgbWVtbz86IHN0cmluZztcbiAgY3VycmVuY3k/OiBzdHJpbmc7XG4gIGV4cGlyYXRpb25EYXRlPzogc3RyaW5nO1xuICBleGNoYW5nZVJhdGU/OiBudW1iZXI7XG4gIGNvbnN0cnVjdG9yKHByb3BzOiBJbnZlbnRvcnlBZGp1c3RtZW50SW52ZW50b3J5UHJvcHMpIHtcbiAgICBzdXBlcihwcm9wc1dpdGhNYXBwaW5nc05hbWUocHJvcHMsIE1BUFBJTkdTX05BTUUpKTtcbiAgICB0aGlzLml0ZW0gPSBwcm9wcy5pdGVtO1xuICAgIHRoaXMubGluZSA9IHByb3BzLmxpbmU7XG4gICAgdGhpcy5pbnZlbnRvcnlEZXRhaWwgPSBwcm9wcy5pbnZlbnRvcnlEZXRhaWw7XG4gICAgdGhpcy5kZXNjcmlwdGlvbiA9IHByb3BzLmRlc2NyaXB0aW9uO1xuICAgIHRoaXMuZGVwYXJ0bWVudCA9IHByb3BzLmRlcGFydG1lbnQ7XG4gICAgdGhpcy5jbGF6eiA9IHByb3BzLmNsYXp6O1xuICAgIHRoaXMubG9jYXRpb24gPSBwcm9wcy5sb2NhdGlvbjtcbiAgICB0aGlzLnVuaXRzID0gcHJvcHMudW5pdHM7XG4gICAgdGhpcy5xdWFudGl0eU9uSGFuZCA9IHByb3BzLnF1YW50aXR5T25IYW5kO1xuICAgIHRoaXMuY3VycmVudFZhbHVlID0gcHJvcHMuY3VycmVudFZhbHVlO1xuICAgIHRoaXMuYWRqdXN0UXR5QnkgPSBwcm9wcy5hZGp1c3RRdHlCeTtcbiAgICB0aGlzLmJpbk51bWJlcnMgPSBwcm9wcy5iaW5OdW1iZXJzO1xuICAgIHRoaXMuc2VyaWFsTnVtYmVycyA9IHByb3BzLnNlcmlhbE51bWJlcnM7XG4gICAgdGhpcy5uZXdRdWFudGl0eSA9IHByb3BzLm5ld1F1YW50aXR5O1xuICAgIHRoaXMudW5pdENvc3QgPSBwcm9wcy51bml0Q29zdDtcbiAgICB0aGlzLmZvcmVpZ25DdXJyZW5jeVVuaXRDb3N0ID0gcHJvcHMuZm9yZWlnbkN1cnJlbmN5VW5pdENvc3Q7XG4gICAgdGhpcy5tZW1vID0gcHJvcHMubWVtbztcbiAgICB0aGlzLmN1cnJlbmN5ID0gcHJvcHMuY3VycmVuY3k7XG4gICAgdGhpcy5leHBpcmF0aW9uRGF0ZSA9IHByb3BzLmV4cGlyYXRpb25EYXRlO1xuICAgIHRoaXMuZXhjaGFuZ2VSYXRlID0gcHJvcHMuZXhjaGFuZ2VSYXRlO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIEJpblRyYW5zZmVyUHJvcHMgPSB7XG4gIGNyZWF0ZWREYXRlPzogc3RyaW5nO1xuICBsYXN0TW9kaWZpZWREYXRlPzogc3RyaW5nO1xuICB0cmFuRGF0ZT86IHN0cmluZztcbiAgbWVtbz86IHN0cmluZztcbiAgbG9jYXRpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBpbnZlbnRvcnlMaXN0PzogQmluVHJhbnNmZXJJbnZlbnRvcnlMaXN0O1xuICBzdWJzaWRpYXJ5PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgdHJhbklkPzogc3RyaW5nO1xuICBjdXN0b21GaWVsZExpc3Q/OiBQbGF0Zm9ybUNvcmUuQ3VzdG9tRmllbGRMaXN0O1xuICBpbnRlcm5hbElkPzogc3RyaW5nO1xuICBleHRlcm5hbElkPzogc3RyaW5nO1xufSAmIFBsYXRmb3JtQ29yZS5SZWNvcmRQcm9wcztcblxuZXhwb3J0IGNsYXNzIEJpblRyYW5zZmVyIGV4dGVuZHMgUGxhdGZvcm1Db3JlLlJlY29yZCB7XG4gIGNyZWF0ZWREYXRlPzogc3RyaW5nO1xuICBsYXN0TW9kaWZpZWREYXRlPzogc3RyaW5nO1xuICB0cmFuRGF0ZT86IHN0cmluZztcbiAgbWVtbz86IHN0cmluZztcbiAgbG9jYXRpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBpbnZlbnRvcnlMaXN0PzogQmluVHJhbnNmZXJJbnZlbnRvcnlMaXN0O1xuICBzdWJzaWRpYXJ5PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgdHJhbklkPzogc3RyaW5nO1xuICBjdXN0b21GaWVsZExpc3Q/OiBQbGF0Zm9ybUNvcmUuQ3VzdG9tRmllbGRMaXN0O1xuICBpbnRlcm5hbElkPzogc3RyaW5nO1xuICBleHRlcm5hbElkPzogc3RyaW5nO1xuICBjb25zdHJ1Y3Rvcihwcm9wczogQmluVHJhbnNmZXJQcm9wcykge1xuICAgIHN1cGVyKHByb3BzV2l0aE1hcHBpbmdzTmFtZShwcm9wcywgTUFQUElOR1NfTkFNRSkpO1xuICAgIHRoaXMuY3JlYXRlZERhdGUgPSBwcm9wcy5jcmVhdGVkRGF0ZTtcbiAgICB0aGlzLmxhc3RNb2RpZmllZERhdGUgPSBwcm9wcy5sYXN0TW9kaWZpZWREYXRlO1xuICAgIHRoaXMudHJhbkRhdGUgPSBwcm9wcy50cmFuRGF0ZTtcbiAgICB0aGlzLm1lbW8gPSBwcm9wcy5tZW1vO1xuICAgIHRoaXMubG9jYXRpb24gPSBwcm9wcy5sb2NhdGlvbjtcbiAgICB0aGlzLmludmVudG9yeUxpc3QgPSBwcm9wcy5pbnZlbnRvcnlMaXN0O1xuICAgIHRoaXMuc3Vic2lkaWFyeSA9IHByb3BzLnN1YnNpZGlhcnk7XG4gICAgdGhpcy50cmFuSWQgPSBwcm9wcy50cmFuSWQ7XG4gICAgdGhpcy5jdXN0b21GaWVsZExpc3QgPSBwcm9wcy5jdXN0b21GaWVsZExpc3Q7XG4gICAgdGhpcy5pbnRlcm5hbElkID0gcHJvcHMuaW50ZXJuYWxJZDtcbiAgICB0aGlzLmV4dGVybmFsSWQgPSBwcm9wcy5leHRlcm5hbElkO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIFdvcmtPcmRlcklzc3VlQ29tcG9uZW50TGlzdFByb3BzID0ge1xuICB3b3JrT3JkZXJJc3N1ZUNvbXBvbmVudD86IFdvcmtPcmRlcklzc3VlQ29tcG9uZW50W107XG4gIHJlcGxhY2VBbGw/OiBib29sZWFuO1xufTtcblxuZXhwb3J0IGNsYXNzIFdvcmtPcmRlcklzc3VlQ29tcG9uZW50TGlzdCBleHRlbmRzIFNvYXBNYXBwaW5nQmFzZSB7XG4gIHdvcmtPcmRlcklzc3VlQ29tcG9uZW50PzogV29ya09yZGVySXNzdWVDb21wb25lbnRbXTtcbiAgcmVwbGFjZUFsbD86IGJvb2xlYW47XG4gIGNvbnN0cnVjdG9yKHByb3BzOiBXb3JrT3JkZXJJc3N1ZUNvbXBvbmVudExpc3RQcm9wcykge1xuICAgIHN1cGVyKHByb3BzV2l0aE1hcHBpbmdzTmFtZShwcm9wcywgTUFQUElOR1NfTkFNRSkpO1xuICAgIHRoaXMud29ya09yZGVySXNzdWVDb21wb25lbnQgPSBwcm9wcy53b3JrT3JkZXJJc3N1ZUNvbXBvbmVudDtcbiAgICB0aGlzLnJlcGxhY2VBbGwgPSBwcm9wcy5yZXBsYWNlQWxsO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIFdvcmtPcmRlcklzc3VlUHJvcHMgPSB7XG4gIGNyZWF0ZWREYXRlPzogc3RyaW5nO1xuICBsYXN0TW9kaWZpZWREYXRlPzogc3RyaW5nO1xuICBjdXN0b21Gb3JtPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgdHJhbklkPzogc3RyaW5nO1xuICBpdGVtPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgY3JlYXRlZEZyb20/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICB0cmFuRGF0ZT86IHN0cmluZztcbiAgcG9zdGluZ1BlcmlvZD86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIG1lbW8/OiBzdHJpbmc7XG4gIHN1YnNpZGlhcnk/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBkZXBhcnRtZW50PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgY2xheno/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBsb2NhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHJldmlzaW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgbWFudWZhY3R1cmluZ1JvdXRpbmc/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBzdGFydE9wZXJhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGVuZE9wZXJhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGNvbXBvbmVudExpc3Q/OiBXb3JrT3JkZXJJc3N1ZUNvbXBvbmVudExpc3Q7XG4gIGN1c3RvbUZpZWxkTGlzdD86IFBsYXRmb3JtQ29yZS5DdXN0b21GaWVsZExpc3Q7XG4gIGludGVybmFsSWQ/OiBzdHJpbmc7XG4gIGV4dGVybmFsSWQ/OiBzdHJpbmc7XG59ICYgUGxhdGZvcm1Db3JlLlJlY29yZFByb3BzO1xuXG5leHBvcnQgY2xhc3MgV29ya09yZGVySXNzdWUgZXh0ZW5kcyBQbGF0Zm9ybUNvcmUuUmVjb3JkIHtcbiAgY3JlYXRlZERhdGU/OiBzdHJpbmc7XG4gIGxhc3RNb2RpZmllZERhdGU/OiBzdHJpbmc7XG4gIGN1c3RvbUZvcm0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICB0cmFuSWQ/OiBzdHJpbmc7XG4gIGl0ZW0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBjcmVhdGVkRnJvbT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHRyYW5EYXRlPzogc3RyaW5nO1xuICBwb3N0aW5nUGVyaW9kPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgbWVtbz86IHN0cmluZztcbiAgc3Vic2lkaWFyeT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGRlcGFydG1lbnQ/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBjbGF6ej86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGxvY2F0aW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgcmV2aXNpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBtYW51ZmFjdHVyaW5nUm91dGluZz86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHN0YXJ0T3BlcmF0aW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgZW5kT3BlcmF0aW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgY29tcG9uZW50TGlzdD86IFdvcmtPcmRlcklzc3VlQ29tcG9uZW50TGlzdDtcbiAgY3VzdG9tRmllbGRMaXN0PzogUGxhdGZvcm1Db3JlLkN1c3RvbUZpZWxkTGlzdDtcbiAgaW50ZXJuYWxJZD86IHN0cmluZztcbiAgZXh0ZXJuYWxJZD86IHN0cmluZztcbiAgY29uc3RydWN0b3IocHJvcHM6IFdvcmtPcmRlcklzc3VlUHJvcHMpIHtcbiAgICBzdXBlcihwcm9wc1dpdGhNYXBwaW5nc05hbWUocHJvcHMsIE1BUFBJTkdTX05BTUUpKTtcbiAgICB0aGlzLmNyZWF0ZWREYXRlID0gcHJvcHMuY3JlYXRlZERhdGU7XG4gICAgdGhpcy5sYXN0TW9kaWZpZWREYXRlID0gcHJvcHMubGFzdE1vZGlmaWVkRGF0ZTtcbiAgICB0aGlzLmN1c3RvbUZvcm0gPSBwcm9wcy5jdXN0b21Gb3JtO1xuICAgIHRoaXMudHJhbklkID0gcHJvcHMudHJhbklkO1xuICAgIHRoaXMuaXRlbSA9IHByb3BzLml0ZW07XG4gICAgdGhpcy5jcmVhdGVkRnJvbSA9IHByb3BzLmNyZWF0ZWRGcm9tO1xuICAgIHRoaXMudHJhbkRhdGUgPSBwcm9wcy50cmFuRGF0ZTtcbiAgICB0aGlzLnBvc3RpbmdQZXJpb2QgPSBwcm9wcy5wb3N0aW5nUGVyaW9kO1xuICAgIHRoaXMubWVtbyA9IHByb3BzLm1lbW87XG4gICAgdGhpcy5zdWJzaWRpYXJ5ID0gcHJvcHMuc3Vic2lkaWFyeTtcbiAgICB0aGlzLmRlcGFydG1lbnQgPSBwcm9wcy5kZXBhcnRtZW50O1xuICAgIHRoaXMuY2xhenogPSBwcm9wcy5jbGF6ejtcbiAgICB0aGlzLmxvY2F0aW9uID0gcHJvcHMubG9jYXRpb247XG4gICAgdGhpcy5yZXZpc2lvbiA9IHByb3BzLnJldmlzaW9uO1xuICAgIHRoaXMubWFudWZhY3R1cmluZ1JvdXRpbmcgPSBwcm9wcy5tYW51ZmFjdHVyaW5nUm91dGluZztcbiAgICB0aGlzLnN0YXJ0T3BlcmF0aW9uID0gcHJvcHMuc3RhcnRPcGVyYXRpb247XG4gICAgdGhpcy5lbmRPcGVyYXRpb24gPSBwcm9wcy5lbmRPcGVyYXRpb247XG4gICAgdGhpcy5jb21wb25lbnRMaXN0ID0gcHJvcHMuY29tcG9uZW50TGlzdDtcbiAgICB0aGlzLmN1c3RvbUZpZWxkTGlzdCA9IHByb3BzLmN1c3RvbUZpZWxkTGlzdDtcbiAgICB0aGlzLmludGVybmFsSWQgPSBwcm9wcy5pbnRlcm5hbElkO1xuICAgIHRoaXMuZXh0ZXJuYWxJZCA9IHByb3BzLmV4dGVybmFsSWQ7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgQmluV29ya3NoZWV0SXRlbUxpc3RQcm9wcyA9IHtcbiAgaXRlbT86IEJpbldvcmtzaGVldEl0ZW1bXTtcbiAgcmVwbGFjZUFsbD86IGJvb2xlYW47XG59O1xuXG5leHBvcnQgY2xhc3MgQmluV29ya3NoZWV0SXRlbUxpc3QgZXh0ZW5kcyBTb2FwTWFwcGluZ0Jhc2Uge1xuICBpdGVtPzogQmluV29ya3NoZWV0SXRlbVtdO1xuICByZXBsYWNlQWxsPzogYm9vbGVhbjtcbiAgY29uc3RydWN0b3IocHJvcHM6IEJpbldvcmtzaGVldEl0ZW1MaXN0UHJvcHMpIHtcbiAgICBzdXBlcihwcm9wc1dpdGhNYXBwaW5nc05hbWUocHJvcHMsIE1BUFBJTkdTX05BTUUpKTtcbiAgICB0aGlzLml0ZW0gPSBwcm9wcy5pdGVtO1xuICAgIHRoaXMucmVwbGFjZUFsbCA9IHByb3BzLnJlcGxhY2VBbGw7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgV29ya09yZGVyQ29tcGxldGlvbk9wZXJhdGlvbkxpc3RQcm9wcyA9IHtcbiAgd29ya09yZGVyQ29tcGxldGlvbk9wZXJhdGlvbj86IFdvcmtPcmRlckNvbXBsZXRpb25PcGVyYXRpb25bXTtcbiAgcmVwbGFjZUFsbD86IGJvb2xlYW47XG59O1xuXG5leHBvcnQgY2xhc3MgV29ya09yZGVyQ29tcGxldGlvbk9wZXJhdGlvbkxpc3QgZXh0ZW5kcyBTb2FwTWFwcGluZ0Jhc2Uge1xuICB3b3JrT3JkZXJDb21wbGV0aW9uT3BlcmF0aW9uPzogV29ya09yZGVyQ29tcGxldGlvbk9wZXJhdGlvbltdO1xuICByZXBsYWNlQWxsPzogYm9vbGVhbjtcbiAgY29uc3RydWN0b3IocHJvcHM6IFdvcmtPcmRlckNvbXBsZXRpb25PcGVyYXRpb25MaXN0UHJvcHMpIHtcbiAgICBzdXBlcihwcm9wc1dpdGhNYXBwaW5nc05hbWUocHJvcHMsIE1BUFBJTkdTX05BTUUpKTtcbiAgICB0aGlzLndvcmtPcmRlckNvbXBsZXRpb25PcGVyYXRpb24gPSBwcm9wcy53b3JrT3JkZXJDb21wbGV0aW9uT3BlcmF0aW9uO1xuICAgIHRoaXMucmVwbGFjZUFsbCA9IHByb3BzLnJlcGxhY2VBbGw7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgSW50ZXJDb21wYW55VHJhbnNmZXJPcmRlckl0ZW1MaXN0UHJvcHMgPSB7XG4gIGl0ZW0/OiBJbnRlckNvbXBhbnlUcmFuc2Zlck9yZGVySXRlbVtdO1xuICByZXBsYWNlQWxsPzogYm9vbGVhbjtcbn07XG5cbmV4cG9ydCBjbGFzcyBJbnRlckNvbXBhbnlUcmFuc2Zlck9yZGVySXRlbUxpc3QgZXh0ZW5kcyBTb2FwTWFwcGluZ0Jhc2Uge1xuICBpdGVtPzogSW50ZXJDb21wYW55VHJhbnNmZXJPcmRlckl0ZW1bXTtcbiAgcmVwbGFjZUFsbD86IGJvb2xlYW47XG4gIGNvbnN0cnVjdG9yKHByb3BzOiBJbnRlckNvbXBhbnlUcmFuc2Zlck9yZGVySXRlbUxpc3RQcm9wcykge1xuICAgIHN1cGVyKHByb3BzV2l0aE1hcHBpbmdzTmFtZShwcm9wcywgTUFQUElOR1NfTkFNRSkpO1xuICAgIHRoaXMuaXRlbSA9IHByb3BzLml0ZW07XG4gICAgdGhpcy5yZXBsYWNlQWxsID0gcHJvcHMucmVwbGFjZUFsbDtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBQYXJ0bmVyc0xpc3RQcm9wcyA9IHtcbiAgcGFydG5lcnM/OiBQbGF0Zm9ybUNvbW1vbi5QYXJ0bmVyc1tdO1xuICByZXBsYWNlQWxsPzogYm9vbGVhbjtcbn07XG5cbmV4cG9ydCBjbGFzcyBQYXJ0bmVyc0xpc3QgZXh0ZW5kcyBTb2FwTWFwcGluZ0Jhc2Uge1xuICBwYXJ0bmVycz86IFBsYXRmb3JtQ29tbW9uLlBhcnRuZXJzW107XG4gIHJlcGxhY2VBbGw/OiBib29sZWFuO1xuICBjb25zdHJ1Y3Rvcihwcm9wczogUGFydG5lcnNMaXN0UHJvcHMpIHtcbiAgICBzdXBlcihwcm9wc1dpdGhNYXBwaW5nc05hbWUocHJvcHMsIE1BUFBJTkdTX05BTUUpKTtcbiAgICB0aGlzLnBhcnRuZXJzID0gcHJvcHMucGFydG5lcnM7XG4gICAgdGhpcy5yZXBsYWNlQWxsID0gcHJvcHMucmVwbGFjZUFsbDtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBXb3JrT3JkZXJJdGVtTGlzdFByb3BzID0ge1xuICBpdGVtPzogV29ya09yZGVySXRlbVtdO1xuICByZXBsYWNlQWxsPzogYm9vbGVhbjtcbn07XG5cbmV4cG9ydCBjbGFzcyBXb3JrT3JkZXJJdGVtTGlzdCBleHRlbmRzIFNvYXBNYXBwaW5nQmFzZSB7XG4gIGl0ZW0/OiBXb3JrT3JkZXJJdGVtW107XG4gIHJlcGxhY2VBbGw/OiBib29sZWFuO1xuICBjb25zdHJ1Y3Rvcihwcm9wczogV29ya09yZGVySXRlbUxpc3RQcm9wcykge1xuICAgIHN1cGVyKHByb3BzV2l0aE1hcHBpbmdzTmFtZShwcm9wcywgTUFQUElOR1NfTkFNRSkpO1xuICAgIHRoaXMuaXRlbSA9IHByb3BzLml0ZW07XG4gICAgdGhpcy5yZXBsYWNlQWxsID0gcHJvcHMucmVwbGFjZUFsbDtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBCaW5Xb3Jrc2hlZXRJdGVtUHJvcHMgPSB7XG4gIGl0ZW0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBpdGVtTmFtZT86IHN0cmluZztcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIHF1YW50aXR5PzogbnVtYmVyO1xuICBpdGVtT25IYW5kPzogc3RyaW5nO1xuICBpdGVtVW5pdHNMYWJlbD86IHN0cmluZztcbiAgaW52ZW50b3J5RGV0YWlsPzogUGxhdGZvcm1Db21tb24uSW52ZW50b3J5RGV0YWlsO1xuICBpdGVtQmlucz86IHN0cmluZztcbiAgaXRlbUJpbk51bWJlcnM/OiBzdHJpbmc7XG4gIGl0ZW1CaW5MaXN0Pzogc3RyaW5nO1xuICBpdGVtUHJlZmVyQmluPzogc3RyaW5nO1xuICBpdGVtQmxhbms/OiBzdHJpbmc7XG59O1xuXG5leHBvcnQgY2xhc3MgQmluV29ya3NoZWV0SXRlbSBleHRlbmRzIFNvYXBNYXBwaW5nQmFzZSB7XG4gIGl0ZW0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBpdGVtTmFtZT86IHN0cmluZztcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIHF1YW50aXR5PzogbnVtYmVyO1xuICBpdGVtT25IYW5kPzogc3RyaW5nO1xuICBpdGVtVW5pdHNMYWJlbD86IHN0cmluZztcbiAgaW52ZW50b3J5RGV0YWlsPzogUGxhdGZvcm1Db21tb24uSW52ZW50b3J5RGV0YWlsO1xuICBpdGVtQmlucz86IHN0cmluZztcbiAgaXRlbUJpbk51bWJlcnM/OiBzdHJpbmc7XG4gIGl0ZW1CaW5MaXN0Pzogc3RyaW5nO1xuICBpdGVtUHJlZmVyQmluPzogc3RyaW5nO1xuICBpdGVtQmxhbms/OiBzdHJpbmc7XG4gIGNvbnN0cnVjdG9yKHByb3BzOiBCaW5Xb3Jrc2hlZXRJdGVtUHJvcHMpIHtcbiAgICBzdXBlcihwcm9wc1dpdGhNYXBwaW5nc05hbWUocHJvcHMsIE1BUFBJTkdTX05BTUUpKTtcbiAgICB0aGlzLml0ZW0gPSBwcm9wcy5pdGVtO1xuICAgIHRoaXMuaXRlbU5hbWUgPSBwcm9wcy5pdGVtTmFtZTtcbiAgICB0aGlzLmRlc2NyaXB0aW9uID0gcHJvcHMuZGVzY3JpcHRpb247XG4gICAgdGhpcy5xdWFudGl0eSA9IHByb3BzLnF1YW50aXR5O1xuICAgIHRoaXMuaXRlbU9uSGFuZCA9IHByb3BzLml0ZW1PbkhhbmQ7XG4gICAgdGhpcy5pdGVtVW5pdHNMYWJlbCA9IHByb3BzLml0ZW1Vbml0c0xhYmVsO1xuICAgIHRoaXMuaW52ZW50b3J5RGV0YWlsID0gcHJvcHMuaW52ZW50b3J5RGV0YWlsO1xuICAgIHRoaXMuaXRlbUJpbnMgPSBwcm9wcy5pdGVtQmlucztcbiAgICB0aGlzLml0ZW1CaW5OdW1iZXJzID0gcHJvcHMuaXRlbUJpbk51bWJlcnM7XG4gICAgdGhpcy5pdGVtQmluTGlzdCA9IHByb3BzLml0ZW1CaW5MaXN0O1xuICAgIHRoaXMuaXRlbVByZWZlckJpbiA9IHByb3BzLml0ZW1QcmVmZXJCaW47XG4gICAgdGhpcy5pdGVtQmxhbmsgPSBwcm9wcy5pdGVtQmxhbms7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgV29ya09yZGVyQ29tcGxldGlvbkNvbXBvbmVudFByb3BzID0ge1xuICBpdGVtPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgb3BlcmF0aW9uU2VxdWVuY2VOdW1iZXI/OiBudW1iZXI7XG4gIHF1YW50aXR5UGVyPzogbnVtYmVyO1xuICBxdWFudGl0eT86IG51bWJlcjtcbiAgY29tcG9uZW50SW52ZW50b3J5RGV0YWlsPzogUGxhdGZvcm1Db21tb24uSW52ZW50b3J5RGV0YWlsO1xuICBsaW5lTnVtYmVyPzogbnVtYmVyO1xufTtcblxuZXhwb3J0IGNsYXNzIFdvcmtPcmRlckNvbXBsZXRpb25Db21wb25lbnQgZXh0ZW5kcyBTb2FwTWFwcGluZ0Jhc2Uge1xuICBpdGVtPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgb3BlcmF0aW9uU2VxdWVuY2VOdW1iZXI/OiBudW1iZXI7XG4gIHF1YW50aXR5UGVyPzogbnVtYmVyO1xuICBxdWFudGl0eT86IG51bWJlcjtcbiAgY29tcG9uZW50SW52ZW50b3J5RGV0YWlsPzogUGxhdGZvcm1Db21tb24uSW52ZW50b3J5RGV0YWlsO1xuICBsaW5lTnVtYmVyPzogbnVtYmVyO1xuICBjb25zdHJ1Y3Rvcihwcm9wczogV29ya09yZGVyQ29tcGxldGlvbkNvbXBvbmVudFByb3BzKSB7XG4gICAgc3VwZXIocHJvcHNXaXRoTWFwcGluZ3NOYW1lKHByb3BzLCBNQVBQSU5HU19OQU1FKSk7XG4gICAgdGhpcy5pdGVtID0gcHJvcHMuaXRlbTtcbiAgICB0aGlzLm9wZXJhdGlvblNlcXVlbmNlTnVtYmVyID0gcHJvcHMub3BlcmF0aW9uU2VxdWVuY2VOdW1iZXI7XG4gICAgdGhpcy5xdWFudGl0eVBlciA9IHByb3BzLnF1YW50aXR5UGVyO1xuICAgIHRoaXMucXVhbnRpdHkgPSBwcm9wcy5xdWFudGl0eTtcbiAgICB0aGlzLmNvbXBvbmVudEludmVudG9yeURldGFpbCA9IHByb3BzLmNvbXBvbmVudEludmVudG9yeURldGFpbDtcbiAgICB0aGlzLmxpbmVOdW1iZXIgPSBwcm9wcy5saW5lTnVtYmVyO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIEFzc2VtYmx5QnVpbGRQcm9wcyA9IHtcbiAgY3JlYXRlZERhdGU/OiBzdHJpbmc7XG4gIGV4cGlyYXRpb25EYXRlPzogc3RyaW5nO1xuICBsYXN0TW9kaWZpZWREYXRlPzogc3RyaW5nO1xuICBjdXN0b21Gb3JtPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgY3JlYXRlZEZyb20/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICB0cmFuRGF0ZT86IHN0cmluZztcbiAgcG9zdGluZ1BlcmlvZD86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHRyYW5JZD86IHN0cmluZztcbiAgaXRlbT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGJ1aWxkYWJsZT86IG51bWJlcjtcbiAgcXVhbnRpdHk/OiBudW1iZXI7XG4gIHVuaXRzPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgdG90YWw/OiBudW1iZXI7XG4gIGJpbGxPZk1hdGVyaWFscz86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGludmVudG9yeURldGFpbD86IFBsYXRmb3JtQ29tbW9uLkludmVudG9yeURldGFpbDtcbiAgc2VyaWFsTnVtYmVycz86IHN0cmluZztcbiAgYmluTnVtYmVycz86IHN0cmluZztcbiAgc3Vic2lkaWFyeT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGRlcGFydG1lbnQ/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBjbGF6ej86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGxvY2F0aW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgcmV2aXNpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBiaWxsT2ZNYXRlcmlhbHNSZXZpc2lvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIG1lbW8/OiBzdHJpbmc7XG4gIGNvbXBvbmVudExpc3Q/OiBBc3NlbWJseUNvbXBvbmVudExpc3Q7XG4gIGFjY291bnRpbmdCb29rRGV0YWlsTGlzdD86IFBsYXRmb3JtQ29tbW9uLkFjY291bnRpbmdCb29rRGV0YWlsTGlzdDtcbiAgY3VzdG9tRmllbGRMaXN0PzogUGxhdGZvcm1Db3JlLkN1c3RvbUZpZWxkTGlzdDtcbiAgaW50ZXJuYWxJZD86IHN0cmluZztcbiAgZXh0ZXJuYWxJZD86IHN0cmluZztcbn0gJiBQbGF0Zm9ybUNvcmUuUmVjb3JkUHJvcHM7XG5cbmV4cG9ydCBjbGFzcyBBc3NlbWJseUJ1aWxkIGV4dGVuZHMgUGxhdGZvcm1Db3JlLlJlY29yZCB7XG4gIGNyZWF0ZWREYXRlPzogc3RyaW5nO1xuICBleHBpcmF0aW9uRGF0ZT86IHN0cmluZztcbiAgbGFzdE1vZGlmaWVkRGF0ZT86IHN0cmluZztcbiAgY3VzdG9tRm9ybT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGNyZWF0ZWRGcm9tPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgdHJhbkRhdGU/OiBzdHJpbmc7XG4gIHBvc3RpbmdQZXJpb2Q/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICB0cmFuSWQ/OiBzdHJpbmc7XG4gIGl0ZW0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBidWlsZGFibGU/OiBudW1iZXI7XG4gIHF1YW50aXR5PzogbnVtYmVyO1xuICB1bml0cz86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHRvdGFsPzogbnVtYmVyO1xuICBiaWxsT2ZNYXRlcmlhbHM/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBpbnZlbnRvcnlEZXRhaWw/OiBQbGF0Zm9ybUNvbW1vbi5JbnZlbnRvcnlEZXRhaWw7XG4gIHNlcmlhbE51bWJlcnM/OiBzdHJpbmc7XG4gIGJpbk51bWJlcnM/OiBzdHJpbmc7XG4gIHN1YnNpZGlhcnk/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBkZXBhcnRtZW50PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgY2xheno/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBsb2NhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHJldmlzaW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgYmlsbE9mTWF0ZXJpYWxzUmV2aXNpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBtZW1vPzogc3RyaW5nO1xuICBjb21wb25lbnRMaXN0PzogQXNzZW1ibHlDb21wb25lbnRMaXN0O1xuICBhY2NvdW50aW5nQm9va0RldGFpbExpc3Q/OiBQbGF0Zm9ybUNvbW1vbi5BY2NvdW50aW5nQm9va0RldGFpbExpc3Q7XG4gIGN1c3RvbUZpZWxkTGlzdD86IFBsYXRmb3JtQ29yZS5DdXN0b21GaWVsZExpc3Q7XG4gIGludGVybmFsSWQ/OiBzdHJpbmc7XG4gIGV4dGVybmFsSWQ/OiBzdHJpbmc7XG4gIGNvbnN0cnVjdG9yKHByb3BzOiBBc3NlbWJseUJ1aWxkUHJvcHMpIHtcbiAgICBzdXBlcihwcm9wc1dpdGhNYXBwaW5nc05hbWUocHJvcHMsIE1BUFBJTkdTX05BTUUpKTtcbiAgICB0aGlzLmNyZWF0ZWREYXRlID0gcHJvcHMuY3JlYXRlZERhdGU7XG4gICAgdGhpcy5leHBpcmF0aW9uRGF0ZSA9IHByb3BzLmV4cGlyYXRpb25EYXRlO1xuICAgIHRoaXMubGFzdE1vZGlmaWVkRGF0ZSA9IHByb3BzLmxhc3RNb2RpZmllZERhdGU7XG4gICAgdGhpcy5jdXN0b21Gb3JtID0gcHJvcHMuY3VzdG9tRm9ybTtcbiAgICB0aGlzLmNyZWF0ZWRGcm9tID0gcHJvcHMuY3JlYXRlZEZyb207XG4gICAgdGhpcy50cmFuRGF0ZSA9IHByb3BzLnRyYW5EYXRlO1xuICAgIHRoaXMucG9zdGluZ1BlcmlvZCA9IHByb3BzLnBvc3RpbmdQZXJpb2Q7XG4gICAgdGhpcy50cmFuSWQgPSBwcm9wcy50cmFuSWQ7XG4gICAgdGhpcy5pdGVtID0gcHJvcHMuaXRlbTtcbiAgICB0aGlzLmJ1aWxkYWJsZSA9IHByb3BzLmJ1aWxkYWJsZTtcbiAgICB0aGlzLnF1YW50aXR5ID0gcHJvcHMucXVhbnRpdHk7XG4gICAgdGhpcy51bml0cyA9IHByb3BzLnVuaXRzO1xuICAgIHRoaXMudG90YWwgPSBwcm9wcy50b3RhbDtcbiAgICB0aGlzLmJpbGxPZk1hdGVyaWFscyA9IHByb3BzLmJpbGxPZk1hdGVyaWFscztcbiAgICB0aGlzLmludmVudG9yeURldGFpbCA9IHByb3BzLmludmVudG9yeURldGFpbDtcbiAgICB0aGlzLnNlcmlhbE51bWJlcnMgPSBwcm9wcy5zZXJpYWxOdW1iZXJzO1xuICAgIHRoaXMuYmluTnVtYmVycyA9IHByb3BzLmJpbk51bWJlcnM7XG4gICAgdGhpcy5zdWJzaWRpYXJ5ID0gcHJvcHMuc3Vic2lkaWFyeTtcbiAgICB0aGlzLmRlcGFydG1lbnQgPSBwcm9wcy5kZXBhcnRtZW50O1xuICAgIHRoaXMuY2xhenogPSBwcm9wcy5jbGF6ejtcbiAgICB0aGlzLmxvY2F0aW9uID0gcHJvcHMubG9jYXRpb247XG4gICAgdGhpcy5yZXZpc2lvbiA9IHByb3BzLnJldmlzaW9uO1xuICAgIHRoaXMuYmlsbE9mTWF0ZXJpYWxzUmV2aXNpb24gPSBwcm9wcy5iaWxsT2ZNYXRlcmlhbHNSZXZpc2lvbjtcbiAgICB0aGlzLm1lbW8gPSBwcm9wcy5tZW1vO1xuICAgIHRoaXMuY29tcG9uZW50TGlzdCA9IHByb3BzLmNvbXBvbmVudExpc3Q7XG4gICAgdGhpcy5hY2NvdW50aW5nQm9va0RldGFpbExpc3QgPSBwcm9wcy5hY2NvdW50aW5nQm9va0RldGFpbExpc3Q7XG4gICAgdGhpcy5jdXN0b21GaWVsZExpc3QgPSBwcm9wcy5jdXN0b21GaWVsZExpc3Q7XG4gICAgdGhpcy5pbnRlcm5hbElkID0gcHJvcHMuaW50ZXJuYWxJZDtcbiAgICB0aGlzLmV4dGVybmFsSWQgPSBwcm9wcy5leHRlcm5hbElkO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIFRyYW5zZmVyT3JkZXJQcm9wcyA9IHtcbiAgY3JlYXRlZERhdGU/OiBzdHJpbmc7XG4gIGxhc3RNb2RpZmllZERhdGU/OiBzdHJpbmc7XG4gIGN1c3RvbUZvcm0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBzaGlwcGluZ0Nvc3Q/OiBudW1iZXI7XG4gIHN1YlRvdGFsPzogbnVtYmVyO1xuICBzdGF0dXM/OiBzdHJpbmc7XG4gIHNoaXBwaW5nQWRkcmVzcz86IFBsYXRmb3JtQ29tbW9uLkFkZHJlc3M7XG4gIHNoaXBJc1Jlc2lkZW50aWFsPzogYm9vbGVhbjtcbiAgc2hpcEFkZHJlc3NMaXN0PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgZm9iPzogc3RyaW5nO1xuICB0cmFuRGF0ZT86IHN0cmluZztcbiAgdHJhbklkPzogc3RyaW5nO1xuICBzb3VyY2U/OiBzdHJpbmc7XG4gIG9yZGVyU3RhdHVzPzogVHJhbnNhY3Rpb25zSW52ZW50b3J5VHlwZXMuVHJhbnNmZXJPcmRlck9yZGVyU3RhdHVzO1xuICBzdWJzaWRpYXJ5PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgZW1wbG95ZWU/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICB1c2VJdGVtQ29zdEFzVHJhbnNmZXJDb3N0PzogYm9vbGVhbjtcbiAgaW5jb3Rlcm0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBmaXJtZWQ/OiBib29sZWFuO1xuICBkZXBhcnRtZW50PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgY2xheno/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBsb2NhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHRyYW5zZmVyTG9jYXRpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBtZW1vPzogc3RyaW5nO1xuICBzaGlwRGF0ZT86IHN0cmluZztcbiAgc2hpcE1ldGhvZD86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHRyYWNraW5nTnVtYmVycz86IHN0cmluZztcbiAgbGlua2VkVHJhY2tpbmdOdW1iZXJzPzogc3RyaW5nO1xuICBzaGlwQ29tcGxldGU/OiBib29sZWFuO1xuICBhbHRTaGlwcGluZ0Nvc3Q/OiBudW1iZXI7XG4gIHNoaXBwaW5nVGF4MVJhdGU/OiBudW1iZXI7XG4gIHNoaXBwaW5nVGF4MlJhdGU/OiBudW1iZXI7XG4gIGhhbmRsaW5nVGF4MVJhdGU/OiBudW1iZXI7XG4gIGhhbmRsaW5nVGF4MlJhdGU/OiBudW1iZXI7XG4gIHNoaXBwaW5nVGF4Q29kZT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGhhbmRsaW5nVGF4Q29kZT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHRvdGFsPzogbnVtYmVyO1xuICBpdGVtTGlzdD86IFRyYW5zZmVyT3JkZXJJdGVtTGlzdDtcbiAgYWNjb3VudGluZ0Jvb2tEZXRhaWxMaXN0PzogUGxhdGZvcm1Db21tb24uQWNjb3VudGluZ0Jvb2tEZXRhaWxMaXN0O1xuICBjdXN0b21GaWVsZExpc3Q/OiBQbGF0Zm9ybUNvcmUuQ3VzdG9tRmllbGRMaXN0O1xuICBpbnRlcm5hbElkPzogc3RyaW5nO1xuICBleHRlcm5hbElkPzogc3RyaW5nO1xufSAmIFBsYXRmb3JtQ29yZS5SZWNvcmRQcm9wcztcblxuZXhwb3J0IGNsYXNzIFRyYW5zZmVyT3JkZXIgZXh0ZW5kcyBQbGF0Zm9ybUNvcmUuUmVjb3JkIHtcbiAgY3JlYXRlZERhdGU/OiBzdHJpbmc7XG4gIGxhc3RNb2RpZmllZERhdGU/OiBzdHJpbmc7XG4gIGN1c3RvbUZvcm0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBzaGlwcGluZ0Nvc3Q/OiBudW1iZXI7XG4gIHN1YlRvdGFsPzogbnVtYmVyO1xuICBzdGF0dXM/OiBzdHJpbmc7XG4gIHNoaXBwaW5nQWRkcmVzcz86IFBsYXRmb3JtQ29tbW9uLkFkZHJlc3M7XG4gIHNoaXBJc1Jlc2lkZW50aWFsPzogYm9vbGVhbjtcbiAgc2hpcEFkZHJlc3NMaXN0PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgZm9iPzogc3RyaW5nO1xuICB0cmFuRGF0ZT86IHN0cmluZztcbiAgdHJhbklkPzogc3RyaW5nO1xuICBzb3VyY2U/OiBzdHJpbmc7XG4gIG9yZGVyU3RhdHVzPzogVHJhbnNhY3Rpb25zSW52ZW50b3J5VHlwZXMuVHJhbnNmZXJPcmRlck9yZGVyU3RhdHVzO1xuICBzdWJzaWRpYXJ5PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgZW1wbG95ZWU/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICB1c2VJdGVtQ29zdEFzVHJhbnNmZXJDb3N0PzogYm9vbGVhbjtcbiAgaW5jb3Rlcm0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBmaXJtZWQ/OiBib29sZWFuO1xuICBkZXBhcnRtZW50PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgY2xheno/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBsb2NhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHRyYW5zZmVyTG9jYXRpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBtZW1vPzogc3RyaW5nO1xuICBzaGlwRGF0ZT86IHN0cmluZztcbiAgc2hpcE1ldGhvZD86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHRyYWNraW5nTnVtYmVycz86IHN0cmluZztcbiAgbGlua2VkVHJhY2tpbmdOdW1iZXJzPzogc3RyaW5nO1xuICBzaGlwQ29tcGxldGU/OiBib29sZWFuO1xuICBhbHRTaGlwcGluZ0Nvc3Q/OiBudW1iZXI7XG4gIHNoaXBwaW5nVGF4MVJhdGU/OiBudW1iZXI7XG4gIHNoaXBwaW5nVGF4MlJhdGU/OiBudW1iZXI7XG4gIGhhbmRsaW5nVGF4MVJhdGU/OiBudW1iZXI7XG4gIGhhbmRsaW5nVGF4MlJhdGU/OiBudW1iZXI7XG4gIHNoaXBwaW5nVGF4Q29kZT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGhhbmRsaW5nVGF4Q29kZT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHRvdGFsPzogbnVtYmVyO1xuICBpdGVtTGlzdD86IFRyYW5zZmVyT3JkZXJJdGVtTGlzdDtcbiAgYWNjb3VudGluZ0Jvb2tEZXRhaWxMaXN0PzogUGxhdGZvcm1Db21tb24uQWNjb3VudGluZ0Jvb2tEZXRhaWxMaXN0O1xuICBjdXN0b21GaWVsZExpc3Q/OiBQbGF0Zm9ybUNvcmUuQ3VzdG9tRmllbGRMaXN0O1xuICBpbnRlcm5hbElkPzogc3RyaW5nO1xuICBleHRlcm5hbElkPzogc3RyaW5nO1xuICBjb25zdHJ1Y3Rvcihwcm9wczogVHJhbnNmZXJPcmRlclByb3BzKSB7XG4gICAgc3VwZXIocHJvcHNXaXRoTWFwcGluZ3NOYW1lKHByb3BzLCBNQVBQSU5HU19OQU1FKSk7XG4gICAgdGhpcy5jcmVhdGVkRGF0ZSA9IHByb3BzLmNyZWF0ZWREYXRlO1xuICAgIHRoaXMubGFzdE1vZGlmaWVkRGF0ZSA9IHByb3BzLmxhc3RNb2RpZmllZERhdGU7XG4gICAgdGhpcy5jdXN0b21Gb3JtID0gcHJvcHMuY3VzdG9tRm9ybTtcbiAgICB0aGlzLnNoaXBwaW5nQ29zdCA9IHByb3BzLnNoaXBwaW5nQ29zdDtcbiAgICB0aGlzLnN1YlRvdGFsID0gcHJvcHMuc3ViVG90YWw7XG4gICAgdGhpcy5zdGF0dXMgPSBwcm9wcy5zdGF0dXM7XG4gICAgdGhpcy5zaGlwcGluZ0FkZHJlc3MgPSBwcm9wcy5zaGlwcGluZ0FkZHJlc3M7XG4gICAgdGhpcy5zaGlwSXNSZXNpZGVudGlhbCA9IHByb3BzLnNoaXBJc1Jlc2lkZW50aWFsO1xuICAgIHRoaXMuc2hpcEFkZHJlc3NMaXN0ID0gcHJvcHMuc2hpcEFkZHJlc3NMaXN0O1xuICAgIHRoaXMuZm9iID0gcHJvcHMuZm9iO1xuICAgIHRoaXMudHJhbkRhdGUgPSBwcm9wcy50cmFuRGF0ZTtcbiAgICB0aGlzLnRyYW5JZCA9IHByb3BzLnRyYW5JZDtcbiAgICB0aGlzLnNvdXJjZSA9IHByb3BzLnNvdXJjZTtcbiAgICB0aGlzLm9yZGVyU3RhdHVzID0gcHJvcHMub3JkZXJTdGF0dXM7XG4gICAgdGhpcy5zdWJzaWRpYXJ5ID0gcHJvcHMuc3Vic2lkaWFyeTtcbiAgICB0aGlzLmVtcGxveWVlID0gcHJvcHMuZW1wbG95ZWU7XG4gICAgdGhpcy51c2VJdGVtQ29zdEFzVHJhbnNmZXJDb3N0ID0gcHJvcHMudXNlSXRlbUNvc3RBc1RyYW5zZmVyQ29zdDtcbiAgICB0aGlzLmluY290ZXJtID0gcHJvcHMuaW5jb3Rlcm07XG4gICAgdGhpcy5maXJtZWQgPSBwcm9wcy5maXJtZWQ7XG4gICAgdGhpcy5kZXBhcnRtZW50ID0gcHJvcHMuZGVwYXJ0bWVudDtcbiAgICB0aGlzLmNsYXp6ID0gcHJvcHMuY2xheno7XG4gICAgdGhpcy5sb2NhdGlvbiA9IHByb3BzLmxvY2F0aW9uO1xuICAgIHRoaXMudHJhbnNmZXJMb2NhdGlvbiA9IHByb3BzLnRyYW5zZmVyTG9jYXRpb247XG4gICAgdGhpcy5tZW1vID0gcHJvcHMubWVtbztcbiAgICB0aGlzLnNoaXBEYXRlID0gcHJvcHMuc2hpcERhdGU7XG4gICAgdGhpcy5zaGlwTWV0aG9kID0gcHJvcHMuc2hpcE1ldGhvZDtcbiAgICB0aGlzLnRyYWNraW5nTnVtYmVycyA9IHByb3BzLnRyYWNraW5nTnVtYmVycztcbiAgICB0aGlzLmxpbmtlZFRyYWNraW5nTnVtYmVycyA9IHByb3BzLmxpbmtlZFRyYWNraW5nTnVtYmVycztcbiAgICB0aGlzLnNoaXBDb21wbGV0ZSA9IHByb3BzLnNoaXBDb21wbGV0ZTtcbiAgICB0aGlzLmFsdFNoaXBwaW5nQ29zdCA9IHByb3BzLmFsdFNoaXBwaW5nQ29zdDtcbiAgICB0aGlzLnNoaXBwaW5nVGF4MVJhdGUgPSBwcm9wcy5zaGlwcGluZ1RheDFSYXRlO1xuICAgIHRoaXMuc2hpcHBpbmdUYXgyUmF0ZSA9IHByb3BzLnNoaXBwaW5nVGF4MlJhdGU7XG4gICAgdGhpcy5oYW5kbGluZ1RheDFSYXRlID0gcHJvcHMuaGFuZGxpbmdUYXgxUmF0ZTtcbiAgICB0aGlzLmhhbmRsaW5nVGF4MlJhdGUgPSBwcm9wcy5oYW5kbGluZ1RheDJSYXRlO1xuICAgIHRoaXMuc2hpcHBpbmdUYXhDb2RlID0gcHJvcHMuc2hpcHBpbmdUYXhDb2RlO1xuICAgIHRoaXMuaGFuZGxpbmdUYXhDb2RlID0gcHJvcHMuaGFuZGxpbmdUYXhDb2RlO1xuICAgIHRoaXMudG90YWwgPSBwcm9wcy50b3RhbDtcbiAgICB0aGlzLml0ZW1MaXN0ID0gcHJvcHMuaXRlbUxpc3Q7XG4gICAgdGhpcy5hY2NvdW50aW5nQm9va0RldGFpbExpc3QgPSBwcm9wcy5hY2NvdW50aW5nQm9va0RldGFpbExpc3Q7XG4gICAgdGhpcy5jdXN0b21GaWVsZExpc3QgPSBwcm9wcy5jdXN0b21GaWVsZExpc3Q7XG4gICAgdGhpcy5pbnRlcm5hbElkID0gcHJvcHMuaW50ZXJuYWxJZDtcbiAgICB0aGlzLmV4dGVybmFsSWQgPSBwcm9wcy5leHRlcm5hbElkO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIEludmVudG9yeUNvc3RSZXZhbHVhdGlvbkNvc3RDb21wb25lbnRQcm9wcyA9IHtcbiAgY29zdD86IG51bWJlcjtcbiAgY29tcG9uZW50SXRlbT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHF1YW50aXR5PzogbnVtYmVyO1xuICB1bml0cz86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGNvc3RDYXRlZ29yeT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG59O1xuXG5leHBvcnQgY2xhc3MgSW52ZW50b3J5Q29zdFJldmFsdWF0aW9uQ29zdENvbXBvbmVudCBleHRlbmRzIFNvYXBNYXBwaW5nQmFzZSB7XG4gIGNvc3Q/OiBudW1iZXI7XG4gIGNvbXBvbmVudEl0ZW0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBxdWFudGl0eT86IG51bWJlcjtcbiAgdW5pdHM/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBjb3N0Q2F0ZWdvcnk/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBjb25zdHJ1Y3Rvcihwcm9wczogSW52ZW50b3J5Q29zdFJldmFsdWF0aW9uQ29zdENvbXBvbmVudFByb3BzKSB7XG4gICAgc3VwZXIocHJvcHNXaXRoTWFwcGluZ3NOYW1lKHByb3BzLCBNQVBQSU5HU19OQU1FKSk7XG4gICAgdGhpcy5jb3N0ID0gcHJvcHMuY29zdDtcbiAgICB0aGlzLmNvbXBvbmVudEl0ZW0gPSBwcm9wcy5jb21wb25lbnRJdGVtO1xuICAgIHRoaXMucXVhbnRpdHkgPSBwcm9wcy5xdWFudGl0eTtcbiAgICB0aGlzLnVuaXRzID0gcHJvcHMudW5pdHM7XG4gICAgdGhpcy5jb3N0Q2F0ZWdvcnkgPSBwcm9wcy5jb3N0Q2F0ZWdvcnk7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgSW52ZW50b3J5QWRqdXN0bWVudFByb3BzID0ge1xuICBwb3N0aW5nUGVyaW9kPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgdHJhbkRhdGU/OiBzdHJpbmc7XG4gIGNyZWF0ZWREYXRlPzogc3RyaW5nO1xuICB0cmFuSWQ/OiBzdHJpbmc7XG4gIGxhc3RNb2RpZmllZERhdGU/OiBzdHJpbmc7XG4gIHN1YnNpZGlhcnk/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBhY2NvdW50PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgY3VzdG9tRm9ybT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGVzdGltYXRlZFRvdGFsVmFsdWU/OiBudW1iZXI7XG4gIGN1c3RvbWVyPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgZGVwYXJ0bWVudD86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGNsYXp6PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgYWRqTG9jYXRpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBsb2NhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIG1lbW8/OiBzdHJpbmc7XG4gIGludmVudG9yeUxpc3Q/OiBJbnZlbnRvcnlBZGp1c3RtZW50SW52ZW50b3J5TGlzdDtcbiAgYWNjb3VudGluZ0Jvb2tEZXRhaWxMaXN0PzogUGxhdGZvcm1Db21tb24uQWNjb3VudGluZ0Jvb2tEZXRhaWxMaXN0O1xuICBjdXN0b21GaWVsZExpc3Q/OiBQbGF0Zm9ybUNvcmUuQ3VzdG9tRmllbGRMaXN0O1xuICBpbnRlcm5hbElkPzogc3RyaW5nO1xuICBleHRlcm5hbElkPzogc3RyaW5nO1xufSAmIFBsYXRmb3JtQ29yZS5SZWNvcmRQcm9wcztcblxuZXhwb3J0IGNsYXNzIEludmVudG9yeUFkanVzdG1lbnQgZXh0ZW5kcyBQbGF0Zm9ybUNvcmUuUmVjb3JkIHtcbiAgcG9zdGluZ1BlcmlvZD86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHRyYW5EYXRlPzogc3RyaW5nO1xuICBjcmVhdGVkRGF0ZT86IHN0cmluZztcbiAgdHJhbklkPzogc3RyaW5nO1xuICBsYXN0TW9kaWZpZWREYXRlPzogc3RyaW5nO1xuICBzdWJzaWRpYXJ5PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgYWNjb3VudD86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGN1c3RvbUZvcm0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBlc3RpbWF0ZWRUb3RhbFZhbHVlPzogbnVtYmVyO1xuICBjdXN0b21lcj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGRlcGFydG1lbnQ/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBjbGF6ej86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGFkakxvY2F0aW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgbG9jYXRpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBtZW1vPzogc3RyaW5nO1xuICBpbnZlbnRvcnlMaXN0PzogSW52ZW50b3J5QWRqdXN0bWVudEludmVudG9yeUxpc3Q7XG4gIGFjY291bnRpbmdCb29rRGV0YWlsTGlzdD86IFBsYXRmb3JtQ29tbW9uLkFjY291bnRpbmdCb29rRGV0YWlsTGlzdDtcbiAgY3VzdG9tRmllbGRMaXN0PzogUGxhdGZvcm1Db3JlLkN1c3RvbUZpZWxkTGlzdDtcbiAgaW50ZXJuYWxJZD86IHN0cmluZztcbiAgZXh0ZXJuYWxJZD86IHN0cmluZztcbiAgY29uc3RydWN0b3IocHJvcHM6IEludmVudG9yeUFkanVzdG1lbnRQcm9wcykge1xuICAgIHN1cGVyKHByb3BzV2l0aE1hcHBpbmdzTmFtZShwcm9wcywgTUFQUElOR1NfTkFNRSkpO1xuICAgIHRoaXMucG9zdGluZ1BlcmlvZCA9IHByb3BzLnBvc3RpbmdQZXJpb2Q7XG4gICAgdGhpcy50cmFuRGF0ZSA9IHByb3BzLnRyYW5EYXRlO1xuICAgIHRoaXMuY3JlYXRlZERhdGUgPSBwcm9wcy5jcmVhdGVkRGF0ZTtcbiAgICB0aGlzLnRyYW5JZCA9IHByb3BzLnRyYW5JZDtcbiAgICB0aGlzLmxhc3RNb2RpZmllZERhdGUgPSBwcm9wcy5sYXN0TW9kaWZpZWREYXRlO1xuICAgIHRoaXMuc3Vic2lkaWFyeSA9IHByb3BzLnN1YnNpZGlhcnk7XG4gICAgdGhpcy5hY2NvdW50ID0gcHJvcHMuYWNjb3VudDtcbiAgICB0aGlzLmN1c3RvbUZvcm0gPSBwcm9wcy5jdXN0b21Gb3JtO1xuICAgIHRoaXMuZXN0aW1hdGVkVG90YWxWYWx1ZSA9IHByb3BzLmVzdGltYXRlZFRvdGFsVmFsdWU7XG4gICAgdGhpcy5jdXN0b21lciA9IHByb3BzLmN1c3RvbWVyO1xuICAgIHRoaXMuZGVwYXJ0bWVudCA9IHByb3BzLmRlcGFydG1lbnQ7XG4gICAgdGhpcy5jbGF6eiA9IHByb3BzLmNsYXp6O1xuICAgIHRoaXMuYWRqTG9jYXRpb24gPSBwcm9wcy5hZGpMb2NhdGlvbjtcbiAgICB0aGlzLmxvY2F0aW9uID0gcHJvcHMubG9jYXRpb247XG4gICAgdGhpcy5tZW1vID0gcHJvcHMubWVtbztcbiAgICB0aGlzLmludmVudG9yeUxpc3QgPSBwcm9wcy5pbnZlbnRvcnlMaXN0O1xuICAgIHRoaXMuYWNjb3VudGluZ0Jvb2tEZXRhaWxMaXN0ID0gcHJvcHMuYWNjb3VudGluZ0Jvb2tEZXRhaWxMaXN0O1xuICAgIHRoaXMuY3VzdG9tRmllbGRMaXN0ID0gcHJvcHMuY3VzdG9tRmllbGRMaXN0O1xuICAgIHRoaXMuaW50ZXJuYWxJZCA9IHByb3BzLmludGVybmFsSWQ7XG4gICAgdGhpcy5leHRlcm5hbElkID0gcHJvcHMuZXh0ZXJuYWxJZDtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBCaW5UcmFuc2ZlckludmVudG9yeUxpc3RQcm9wcyA9IHtcbiAgaW52ZW50b3J5PzogQmluVHJhbnNmZXJJbnZlbnRvcnlbXTtcbiAgcmVwbGFjZUFsbD86IGJvb2xlYW47XG59O1xuXG5leHBvcnQgY2xhc3MgQmluVHJhbnNmZXJJbnZlbnRvcnlMaXN0IGV4dGVuZHMgU29hcE1hcHBpbmdCYXNlIHtcbiAgaW52ZW50b3J5PzogQmluVHJhbnNmZXJJbnZlbnRvcnlbXTtcbiAgcmVwbGFjZUFsbD86IGJvb2xlYW47XG4gIGNvbnN0cnVjdG9yKHByb3BzOiBCaW5UcmFuc2ZlckludmVudG9yeUxpc3RQcm9wcykge1xuICAgIHN1cGVyKHByb3BzV2l0aE1hcHBpbmdzTmFtZShwcm9wcywgTUFQUElOR1NfTkFNRSkpO1xuICAgIHRoaXMuaW52ZW50b3J5ID0gcHJvcHMuaW52ZW50b3J5O1xuICAgIHRoaXMucmVwbGFjZUFsbCA9IHByb3BzLnJlcGxhY2VBbGw7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgSW50ZXJDb21wYW55VHJhbnNmZXJPcmRlckl0ZW1Qcm9wcyA9IHtcbiAgaXRlbT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGxpbmU/OiBudW1iZXI7XG4gIHF1YW50aXR5QXZhaWxhYmxlPzogbnVtYmVyO1xuICBxdWFudGl0eU9uSGFuZD86IG51bWJlcjtcbiAgcXVhbnRpdHlCYWNrT3JkZXJlZD86IG51bWJlcjtcbiAgcXVhbnRpdHlDb21taXR0ZWQ/OiBudW1iZXI7XG4gIHF1YW50aXR5RnVsZmlsbGVkPzogbnVtYmVyO1xuICBxdWFudGl0eVJlY2VpdmVkPzogbnVtYmVyO1xuICBxdWFudGl0eT86IG51bWJlcjtcbiAgcmF0ZT86IG51bWJlcjtcbiAgdW5pdHM/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBhbW91bnQ/OiBudW1iZXI7XG4gIGRlc2NyaXB0aW9uPzogc3RyaW5nO1xuICBpbnZlbnRvcnlEZXRhaWw/OiBQbGF0Zm9ybUNvbW1vbi5JbnZlbnRvcnlEZXRhaWw7XG4gIGNvbW1pdEludmVudG9yeT86IFRyYW5zYWN0aW9uc0ludmVudG9yeVR5cGVzLlRyYW5zZmVyT3JkZXJJdGVtQ29tbWl0SW52ZW50b3J5O1xuICBvcHRpb25zPzogUGxhdGZvcm1Db3JlLkN1c3RvbUZpZWxkTGlzdDtcbiAgZGVwYXJ0bWVudD86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGNsYXp6PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgbGFzdFB1cmNoYXNlUHJpY2U/OiBudW1iZXI7XG4gIGF2ZXJhZ2VDb3N0PzogbnVtYmVyO1xuICBjdXN0b21GaWVsZExpc3Q/OiBQbGF0Zm9ybUNvcmUuQ3VzdG9tRmllbGRMaXN0O1xufTtcblxuZXhwb3J0IGNsYXNzIEludGVyQ29tcGFueVRyYW5zZmVyT3JkZXJJdGVtIGV4dGVuZHMgU29hcE1hcHBpbmdCYXNlIHtcbiAgaXRlbT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGxpbmU/OiBudW1iZXI7XG4gIHF1YW50aXR5QXZhaWxhYmxlPzogbnVtYmVyO1xuICBxdWFudGl0eU9uSGFuZD86IG51bWJlcjtcbiAgcXVhbnRpdHlCYWNrT3JkZXJlZD86IG51bWJlcjtcbiAgcXVhbnRpdHlDb21taXR0ZWQ/OiBudW1iZXI7XG4gIHF1YW50aXR5RnVsZmlsbGVkPzogbnVtYmVyO1xuICBxdWFudGl0eVJlY2VpdmVkPzogbnVtYmVyO1xuICBxdWFudGl0eT86IG51bWJlcjtcbiAgcmF0ZT86IG51bWJlcjtcbiAgdW5pdHM/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBhbW91bnQ/OiBudW1iZXI7XG4gIGRlc2NyaXB0aW9uPzogc3RyaW5nO1xuICBpbnZlbnRvcnlEZXRhaWw/OiBQbGF0Zm9ybUNvbW1vbi5JbnZlbnRvcnlEZXRhaWw7XG4gIGNvbW1pdEludmVudG9yeT86IFRyYW5zYWN0aW9uc0ludmVudG9yeVR5cGVzLlRyYW5zZmVyT3JkZXJJdGVtQ29tbWl0SW52ZW50b3J5O1xuICBvcHRpb25zPzogUGxhdGZvcm1Db3JlLkN1c3RvbUZpZWxkTGlzdDtcbiAgZGVwYXJ0bWVudD86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGNsYXp6PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgbGFzdFB1cmNoYXNlUHJpY2U/OiBudW1iZXI7XG4gIGF2ZXJhZ2VDb3N0PzogbnVtYmVyO1xuICBjdXN0b21GaWVsZExpc3Q/OiBQbGF0Zm9ybUNvcmUuQ3VzdG9tRmllbGRMaXN0O1xuICBjb25zdHJ1Y3Rvcihwcm9wczogSW50ZXJDb21wYW55VHJhbnNmZXJPcmRlckl0ZW1Qcm9wcykge1xuICAgIHN1cGVyKHByb3BzV2l0aE1hcHBpbmdzTmFtZShwcm9wcywgTUFQUElOR1NfTkFNRSkpO1xuICAgIHRoaXMuaXRlbSA9IHByb3BzLml0ZW07XG4gICAgdGhpcy5saW5lID0gcHJvcHMubGluZTtcbiAgICB0aGlzLnF1YW50aXR5QXZhaWxhYmxlID0gcHJvcHMucXVhbnRpdHlBdmFpbGFibGU7XG4gICAgdGhpcy5xdWFudGl0eU9uSGFuZCA9IHByb3BzLnF1YW50aXR5T25IYW5kO1xuICAgIHRoaXMucXVhbnRpdHlCYWNrT3JkZXJlZCA9IHByb3BzLnF1YW50aXR5QmFja09yZGVyZWQ7XG4gICAgdGhpcy5xdWFudGl0eUNvbW1pdHRlZCA9IHByb3BzLnF1YW50aXR5Q29tbWl0dGVkO1xuICAgIHRoaXMucXVhbnRpdHlGdWxmaWxsZWQgPSBwcm9wcy5xdWFudGl0eUZ1bGZpbGxlZDtcbiAgICB0aGlzLnF1YW50aXR5UmVjZWl2ZWQgPSBwcm9wcy5xdWFudGl0eVJlY2VpdmVkO1xuICAgIHRoaXMucXVhbnRpdHkgPSBwcm9wcy5xdWFudGl0eTtcbiAgICB0aGlzLnJhdGUgPSBwcm9wcy5yYXRlO1xuICAgIHRoaXMudW5pdHMgPSBwcm9wcy51bml0cztcbiAgICB0aGlzLmFtb3VudCA9IHByb3BzLmFtb3VudDtcbiAgICB0aGlzLmRlc2NyaXB0aW9uID0gcHJvcHMuZGVzY3JpcHRpb247XG4gICAgdGhpcy5pbnZlbnRvcnlEZXRhaWwgPSBwcm9wcy5pbnZlbnRvcnlEZXRhaWw7XG4gICAgdGhpcy5jb21taXRJbnZlbnRvcnkgPSBwcm9wcy5jb21taXRJbnZlbnRvcnk7XG4gICAgdGhpcy5vcHRpb25zID0gcHJvcHMub3B0aW9ucztcbiAgICB0aGlzLmRlcGFydG1lbnQgPSBwcm9wcy5kZXBhcnRtZW50O1xuICAgIHRoaXMuY2xhenogPSBwcm9wcy5jbGF6ejtcbiAgICB0aGlzLmxhc3RQdXJjaGFzZVByaWNlID0gcHJvcHMubGFzdFB1cmNoYXNlUHJpY2U7XG4gICAgdGhpcy5hdmVyYWdlQ29zdCA9IHByb3BzLmF2ZXJhZ2VDb3N0O1xuICAgIHRoaXMuY3VzdG9tRmllbGRMaXN0ID0gcHJvcHMuY3VzdG9tRmllbGRMaXN0O1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIFdvcmtPcmRlcklzc3VlQ29tcG9uZW50UHJvcHMgPSB7XG4gIGl0ZW0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBvcGVyYXRpb25TZXF1ZW5jZU51bWJlcj86IG51bWJlcjtcbiAgcXVhbnRpdHk/OiBudW1iZXI7XG4gIGNvbXBvbmVudEludmVudG9yeURldGFpbD86IFBsYXRmb3JtQ29tbW9uLkludmVudG9yeURldGFpbDtcbiAgbGluZU51bWJlcj86IG51bWJlcjtcbn07XG5cbmV4cG9ydCBjbGFzcyBXb3JrT3JkZXJJc3N1ZUNvbXBvbmVudCBleHRlbmRzIFNvYXBNYXBwaW5nQmFzZSB7XG4gIGl0ZW0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBvcGVyYXRpb25TZXF1ZW5jZU51bWJlcj86IG51bWJlcjtcbiAgcXVhbnRpdHk/OiBudW1iZXI7XG4gIGNvbXBvbmVudEludmVudG9yeURldGFpbD86IFBsYXRmb3JtQ29tbW9uLkludmVudG9yeURldGFpbDtcbiAgbGluZU51bWJlcj86IG51bWJlcjtcbiAgY29uc3RydWN0b3IocHJvcHM6IFdvcmtPcmRlcklzc3VlQ29tcG9uZW50UHJvcHMpIHtcbiAgICBzdXBlcihwcm9wc1dpdGhNYXBwaW5nc05hbWUocHJvcHMsIE1BUFBJTkdTX05BTUUpKTtcbiAgICB0aGlzLml0ZW0gPSBwcm9wcy5pdGVtO1xuICAgIHRoaXMub3BlcmF0aW9uU2VxdWVuY2VOdW1iZXIgPSBwcm9wcy5vcGVyYXRpb25TZXF1ZW5jZU51bWJlcjtcbiAgICB0aGlzLnF1YW50aXR5ID0gcHJvcHMucXVhbnRpdHk7XG4gICAgdGhpcy5jb21wb25lbnRJbnZlbnRvcnlEZXRhaWwgPSBwcm9wcy5jb21wb25lbnRJbnZlbnRvcnlEZXRhaWw7XG4gICAgdGhpcy5saW5lTnVtYmVyID0gcHJvcHMubGluZU51bWJlcjtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBTYWxlc1RlYW1MaXN0UHJvcHMgPSB7XG4gIHNhbGVzVGVhbT86IFBsYXRmb3JtQ29tbW9uLkN1c3RvbWVyU2FsZXNUZWFtW107XG4gIHJlcGxhY2VBbGw/OiBib29sZWFuO1xufTtcblxuZXhwb3J0IGNsYXNzIFNhbGVzVGVhbUxpc3QgZXh0ZW5kcyBTb2FwTWFwcGluZ0Jhc2Uge1xuICBzYWxlc1RlYW0/OiBQbGF0Zm9ybUNvbW1vbi5DdXN0b21lclNhbGVzVGVhbVtdO1xuICByZXBsYWNlQWxsPzogYm9vbGVhbjtcbiAgY29uc3RydWN0b3IocHJvcHM6IFNhbGVzVGVhbUxpc3RQcm9wcykge1xuICAgIHN1cGVyKHByb3BzV2l0aE1hcHBpbmdzTmFtZShwcm9wcywgTUFQUElOR1NfTkFNRSkpO1xuICAgIHRoaXMuc2FsZXNUZWFtID0gcHJvcHMuc2FsZXNUZWFtO1xuICAgIHRoaXMucmVwbGFjZUFsbCA9IHByb3BzLnJlcGxhY2VBbGw7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgQXNzZW1ibHlDb21wb25lbnRMaXN0UHJvcHMgPSB7XG4gIGNvbXBvbmVudD86IEFzc2VtYmx5Q29tcG9uZW50W107XG4gIHJlcGxhY2VBbGw/OiBib29sZWFuO1xufTtcblxuZXhwb3J0IGNsYXNzIEFzc2VtYmx5Q29tcG9uZW50TGlzdCBleHRlbmRzIFNvYXBNYXBwaW5nQmFzZSB7XG4gIGNvbXBvbmVudD86IEFzc2VtYmx5Q29tcG9uZW50W107XG4gIHJlcGxhY2VBbGw/OiBib29sZWFuO1xuICBjb25zdHJ1Y3Rvcihwcm9wczogQXNzZW1ibHlDb21wb25lbnRMaXN0UHJvcHMpIHtcbiAgICBzdXBlcihwcm9wc1dpdGhNYXBwaW5nc05hbWUocHJvcHMsIE1BUFBJTkdTX05BTUUpKTtcbiAgICB0aGlzLmNvbXBvbmVudCA9IHByb3BzLmNvbXBvbmVudDtcbiAgICB0aGlzLnJlcGxhY2VBbGwgPSBwcm9wcy5yZXBsYWNlQWxsO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIEludmVudG9yeUNvc3RSZXZhbHVhdGlvblByb3BzID0ge1xuICBjcmVhdGVkRGF0ZT86IHN0cmluZztcbiAgbGFzdE1vZGlmaWVkRGF0ZT86IHN0cmluZztcbiAgY3VzdG9tRm9ybT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHN1YnNpZGlhcnk/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICB0cmFuRGF0ZT86IHN0cmluZztcbiAgcG9zdGluZ1BlcmlvZD86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHRyYW5JZD86IHN0cmluZztcbiAgYWNjb3VudD86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGl0ZW0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBkZXBhcnRtZW50PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgY2xheno/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBsb2NhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIG1lbW8/OiBzdHJpbmc7XG4gIHRvdGFsPzogbnVtYmVyO1xuICBpbnZlbnRvcnlWYWx1ZT86IG51bWJlcjtcbiAgdW5pdENvc3Q/OiBudW1iZXI7XG4gIGNvc3RDb21wb25lbnRMaXN0PzogSW52ZW50b3J5Q29zdFJldmFsdWF0aW9uQ29zdENvbXBvbmVudExpc3Q7XG4gIGFjY291bnRpbmdCb29rRGV0YWlsTGlzdD86IFBsYXRmb3JtQ29tbW9uLkFjY291bnRpbmdCb29rRGV0YWlsTGlzdDtcbiAgY3VzdG9tRmllbGRMaXN0PzogUGxhdGZvcm1Db3JlLkN1c3RvbUZpZWxkTGlzdDtcbiAgaW50ZXJuYWxJZD86IHN0cmluZztcbiAgZXh0ZXJuYWxJZD86IHN0cmluZztcbn0gJiBQbGF0Zm9ybUNvcmUuUmVjb3JkUHJvcHM7XG5cbmV4cG9ydCBjbGFzcyBJbnZlbnRvcnlDb3N0UmV2YWx1YXRpb24gZXh0ZW5kcyBQbGF0Zm9ybUNvcmUuUmVjb3JkIHtcbiAgY3JlYXRlZERhdGU/OiBzdHJpbmc7XG4gIGxhc3RNb2RpZmllZERhdGU/OiBzdHJpbmc7XG4gIGN1c3RvbUZvcm0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBzdWJzaWRpYXJ5PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgdHJhbkRhdGU/OiBzdHJpbmc7XG4gIHBvc3RpbmdQZXJpb2Q/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICB0cmFuSWQ/OiBzdHJpbmc7XG4gIGFjY291bnQ/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBpdGVtPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgZGVwYXJ0bWVudD86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGNsYXp6PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgbG9jYXRpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBtZW1vPzogc3RyaW5nO1xuICB0b3RhbD86IG51bWJlcjtcbiAgaW52ZW50b3J5VmFsdWU/OiBudW1iZXI7XG4gIHVuaXRDb3N0PzogbnVtYmVyO1xuICBjb3N0Q29tcG9uZW50TGlzdD86IEludmVudG9yeUNvc3RSZXZhbHVhdGlvbkNvc3RDb21wb25lbnRMaXN0O1xuICBhY2NvdW50aW5nQm9va0RldGFpbExpc3Q/OiBQbGF0Zm9ybUNvbW1vbi5BY2NvdW50aW5nQm9va0RldGFpbExpc3Q7XG4gIGN1c3RvbUZpZWxkTGlzdD86IFBsYXRmb3JtQ29yZS5DdXN0b21GaWVsZExpc3Q7XG4gIGludGVybmFsSWQ/OiBzdHJpbmc7XG4gIGV4dGVybmFsSWQ/OiBzdHJpbmc7XG4gIGNvbnN0cnVjdG9yKHByb3BzOiBJbnZlbnRvcnlDb3N0UmV2YWx1YXRpb25Qcm9wcykge1xuICAgIHN1cGVyKHByb3BzV2l0aE1hcHBpbmdzTmFtZShwcm9wcywgTUFQUElOR1NfTkFNRSkpO1xuICAgIHRoaXMuY3JlYXRlZERhdGUgPSBwcm9wcy5jcmVhdGVkRGF0ZTtcbiAgICB0aGlzLmxhc3RNb2RpZmllZERhdGUgPSBwcm9wcy5sYXN0TW9kaWZpZWREYXRlO1xuICAgIHRoaXMuY3VzdG9tRm9ybSA9IHByb3BzLmN1c3RvbUZvcm07XG4gICAgdGhpcy5zdWJzaWRpYXJ5ID0gcHJvcHMuc3Vic2lkaWFyeTtcbiAgICB0aGlzLnRyYW5EYXRlID0gcHJvcHMudHJhbkRhdGU7XG4gICAgdGhpcy5wb3N0aW5nUGVyaW9kID0gcHJvcHMucG9zdGluZ1BlcmlvZDtcbiAgICB0aGlzLnRyYW5JZCA9IHByb3BzLnRyYW5JZDtcbiAgICB0aGlzLmFjY291bnQgPSBwcm9wcy5hY2NvdW50O1xuICAgIHRoaXMuaXRlbSA9IHByb3BzLml0ZW07XG4gICAgdGhpcy5kZXBhcnRtZW50ID0gcHJvcHMuZGVwYXJ0bWVudDtcbiAgICB0aGlzLmNsYXp6ID0gcHJvcHMuY2xheno7XG4gICAgdGhpcy5sb2NhdGlvbiA9IHByb3BzLmxvY2F0aW9uO1xuICAgIHRoaXMubWVtbyA9IHByb3BzLm1lbW87XG4gICAgdGhpcy50b3RhbCA9IHByb3BzLnRvdGFsO1xuICAgIHRoaXMuaW52ZW50b3J5VmFsdWUgPSBwcm9wcy5pbnZlbnRvcnlWYWx1ZTtcbiAgICB0aGlzLnVuaXRDb3N0ID0gcHJvcHMudW5pdENvc3Q7XG4gICAgdGhpcy5jb3N0Q29tcG9uZW50TGlzdCA9IHByb3BzLmNvc3RDb21wb25lbnRMaXN0O1xuICAgIHRoaXMuYWNjb3VudGluZ0Jvb2tEZXRhaWxMaXN0ID0gcHJvcHMuYWNjb3VudGluZ0Jvb2tEZXRhaWxMaXN0O1xuICAgIHRoaXMuY3VzdG9tRmllbGRMaXN0ID0gcHJvcHMuY3VzdG9tRmllbGRMaXN0O1xuICAgIHRoaXMuaW50ZXJuYWxJZCA9IHByb3BzLmludGVybmFsSWQ7XG4gICAgdGhpcy5leHRlcm5hbElkID0gcHJvcHMuZXh0ZXJuYWxJZDtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBBc3NlbWJseVVuYnVpbGRQcm9wcyA9IHtcbiAgY3JlYXRlZERhdGU/OiBzdHJpbmc7XG4gIGxhc3RNb2RpZmllZERhdGU/OiBzdHJpbmc7XG4gIGN1c3RvbUZvcm0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICB0cmFuRGF0ZT86IHN0cmluZztcbiAgcG9zdGluZ1BlcmlvZD86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHRyYW5JZD86IHN0cmluZztcbiAgaXRlbT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGJ1aWx0PzogbnVtYmVyO1xuICBxdWFudGl0eT86IG51bWJlcjtcbiAgdW5pdHM/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICB0b3RhbD86IG51bWJlcjtcbiAgYmlsbE9mTWF0ZXJpYWxzPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgYmlsbE9mTWF0ZXJpYWxzUmV2aXNpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBzZXJpYWxOdW1iZXJzPzogc3RyaW5nO1xuICBpbnZlbnRvcnlEZXRhaWw/OiBQbGF0Zm9ybUNvbW1vbi5JbnZlbnRvcnlEZXRhaWw7XG4gIGJpbk51bWJlcnM/OiBzdHJpbmc7XG4gIHN1YnNpZGlhcnk/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBkZXBhcnRtZW50PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgY2xheno/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBsb2NhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIG1lbW8/OiBzdHJpbmc7XG4gIGNvbXBvbmVudExpc3Q/OiBBc3NlbWJseUNvbXBvbmVudExpc3Q7XG4gIGFjY291bnRpbmdCb29rRGV0YWlsTGlzdD86IFBsYXRmb3JtQ29tbW9uLkFjY291bnRpbmdCb29rRGV0YWlsTGlzdDtcbiAgY3VzdG9tRmllbGRMaXN0PzogUGxhdGZvcm1Db3JlLkN1c3RvbUZpZWxkTGlzdDtcbiAgaW50ZXJuYWxJZD86IHN0cmluZztcbiAgZXh0ZXJuYWxJZD86IHN0cmluZztcbn0gJiBQbGF0Zm9ybUNvcmUuUmVjb3JkUHJvcHM7XG5cbmV4cG9ydCBjbGFzcyBBc3NlbWJseVVuYnVpbGQgZXh0ZW5kcyBQbGF0Zm9ybUNvcmUuUmVjb3JkIHtcbiAgY3JlYXRlZERhdGU/OiBzdHJpbmc7XG4gIGxhc3RNb2RpZmllZERhdGU/OiBzdHJpbmc7XG4gIGN1c3RvbUZvcm0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICB0cmFuRGF0ZT86IHN0cmluZztcbiAgcG9zdGluZ1BlcmlvZD86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHRyYW5JZD86IHN0cmluZztcbiAgaXRlbT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGJ1aWx0PzogbnVtYmVyO1xuICBxdWFudGl0eT86IG51bWJlcjtcbiAgdW5pdHM/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICB0b3RhbD86IG51bWJlcjtcbiAgYmlsbE9mTWF0ZXJpYWxzPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgYmlsbE9mTWF0ZXJpYWxzUmV2aXNpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBzZXJpYWxOdW1iZXJzPzogc3RyaW5nO1xuICBpbnZlbnRvcnlEZXRhaWw/OiBQbGF0Zm9ybUNvbW1vbi5JbnZlbnRvcnlEZXRhaWw7XG4gIGJpbk51bWJlcnM/OiBzdHJpbmc7XG4gIHN1YnNpZGlhcnk/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBkZXBhcnRtZW50PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgY2xheno/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBsb2NhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIG1lbW8/OiBzdHJpbmc7XG4gIGNvbXBvbmVudExpc3Q/OiBBc3NlbWJseUNvbXBvbmVudExpc3Q7XG4gIGFjY291bnRpbmdCb29rRGV0YWlsTGlzdD86IFBsYXRmb3JtQ29tbW9uLkFjY291bnRpbmdCb29rRGV0YWlsTGlzdDtcbiAgY3VzdG9tRmllbGRMaXN0PzogUGxhdGZvcm1Db3JlLkN1c3RvbUZpZWxkTGlzdDtcbiAgaW50ZXJuYWxJZD86IHN0cmluZztcbiAgZXh0ZXJuYWxJZD86IHN0cmluZztcbiAgY29uc3RydWN0b3IocHJvcHM6IEFzc2VtYmx5VW5idWlsZFByb3BzKSB7XG4gICAgc3VwZXIocHJvcHNXaXRoTWFwcGluZ3NOYW1lKHByb3BzLCBNQVBQSU5HU19OQU1FKSk7XG4gICAgdGhpcy5jcmVhdGVkRGF0ZSA9IHByb3BzLmNyZWF0ZWREYXRlO1xuICAgIHRoaXMubGFzdE1vZGlmaWVkRGF0ZSA9IHByb3BzLmxhc3RNb2RpZmllZERhdGU7XG4gICAgdGhpcy5jdXN0b21Gb3JtID0gcHJvcHMuY3VzdG9tRm9ybTtcbiAgICB0aGlzLnRyYW5EYXRlID0gcHJvcHMudHJhbkRhdGU7XG4gICAgdGhpcy5wb3N0aW5nUGVyaW9kID0gcHJvcHMucG9zdGluZ1BlcmlvZDtcbiAgICB0aGlzLnRyYW5JZCA9IHByb3BzLnRyYW5JZDtcbiAgICB0aGlzLml0ZW0gPSBwcm9wcy5pdGVtO1xuICAgIHRoaXMuYnVpbHQgPSBwcm9wcy5idWlsdDtcbiAgICB0aGlzLnF1YW50aXR5ID0gcHJvcHMucXVhbnRpdHk7XG4gICAgdGhpcy51bml0cyA9IHByb3BzLnVuaXRzO1xuICAgIHRoaXMudG90YWwgPSBwcm9wcy50b3RhbDtcbiAgICB0aGlzLmJpbGxPZk1hdGVyaWFscyA9IHByb3BzLmJpbGxPZk1hdGVyaWFscztcbiAgICB0aGlzLmJpbGxPZk1hdGVyaWFsc1JldmlzaW9uID0gcHJvcHMuYmlsbE9mTWF0ZXJpYWxzUmV2aXNpb247XG4gICAgdGhpcy5zZXJpYWxOdW1iZXJzID0gcHJvcHMuc2VyaWFsTnVtYmVycztcbiAgICB0aGlzLmludmVudG9yeURldGFpbCA9IHByb3BzLmludmVudG9yeURldGFpbDtcbiAgICB0aGlzLmJpbk51bWJlcnMgPSBwcm9wcy5iaW5OdW1iZXJzO1xuICAgIHRoaXMuc3Vic2lkaWFyeSA9IHByb3BzLnN1YnNpZGlhcnk7XG4gICAgdGhpcy5kZXBhcnRtZW50ID0gcHJvcHMuZGVwYXJ0bWVudDtcbiAgICB0aGlzLmNsYXp6ID0gcHJvcHMuY2xheno7XG4gICAgdGhpcy5sb2NhdGlvbiA9IHByb3BzLmxvY2F0aW9uO1xuICAgIHRoaXMubWVtbyA9IHByb3BzLm1lbW87XG4gICAgdGhpcy5jb21wb25lbnRMaXN0ID0gcHJvcHMuY29tcG9uZW50TGlzdDtcbiAgICB0aGlzLmFjY291bnRpbmdCb29rRGV0YWlsTGlzdCA9IHByb3BzLmFjY291bnRpbmdCb29rRGV0YWlsTGlzdDtcbiAgICB0aGlzLmN1c3RvbUZpZWxkTGlzdCA9IHByb3BzLmN1c3RvbUZpZWxkTGlzdDtcbiAgICB0aGlzLmludGVybmFsSWQgPSBwcm9wcy5pbnRlcm5hbElkO1xuICAgIHRoaXMuZXh0ZXJuYWxJZCA9IHByb3BzLmV4dGVybmFsSWQ7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgQXNzZW1ibHlDb21wb25lbnRQcm9wcyA9IHtcbiAgaXRlbT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHF1YW50aXR5PzogbnVtYmVyO1xuICBxdWFudGl0eU9uSGFuZD86IG51bWJlcjtcbiAgY29tcG9uZW50SW52ZW50b3J5RGV0YWlsPzogUGxhdGZvcm1Db21tb24uSW52ZW50b3J5RGV0YWlsO1xuICBjb21wb25lbnROdW1iZXJzPzogc3RyaW5nO1xuICBiaW5OdW1iZXJzPzogc3RyaW5nO1xuICBsaW5lTnVtYmVyPzogbnVtYmVyO1xufTtcblxuZXhwb3J0IGNsYXNzIEFzc2VtYmx5Q29tcG9uZW50IGV4dGVuZHMgU29hcE1hcHBpbmdCYXNlIHtcbiAgaXRlbT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHF1YW50aXR5PzogbnVtYmVyO1xuICBxdWFudGl0eU9uSGFuZD86IG51bWJlcjtcbiAgY29tcG9uZW50SW52ZW50b3J5RGV0YWlsPzogUGxhdGZvcm1Db21tb24uSW52ZW50b3J5RGV0YWlsO1xuICBjb21wb25lbnROdW1iZXJzPzogc3RyaW5nO1xuICBiaW5OdW1iZXJzPzogc3RyaW5nO1xuICBsaW5lTnVtYmVyPzogbnVtYmVyO1xuICBjb25zdHJ1Y3Rvcihwcm9wczogQXNzZW1ibHlDb21wb25lbnRQcm9wcykge1xuICAgIHN1cGVyKHByb3BzV2l0aE1hcHBpbmdzTmFtZShwcm9wcywgTUFQUElOR1NfTkFNRSkpO1xuICAgIHRoaXMuaXRlbSA9IHByb3BzLml0ZW07XG4gICAgdGhpcy5xdWFudGl0eSA9IHByb3BzLnF1YW50aXR5O1xuICAgIHRoaXMucXVhbnRpdHlPbkhhbmQgPSBwcm9wcy5xdWFudGl0eU9uSGFuZDtcbiAgICB0aGlzLmNvbXBvbmVudEludmVudG9yeURldGFpbCA9IHByb3BzLmNvbXBvbmVudEludmVudG9yeURldGFpbDtcbiAgICB0aGlzLmNvbXBvbmVudE51bWJlcnMgPSBwcm9wcy5jb21wb25lbnROdW1iZXJzO1xuICAgIHRoaXMuYmluTnVtYmVycyA9IHByb3BzLmJpbk51bWJlcnM7XG4gICAgdGhpcy5saW5lTnVtYmVyID0gcHJvcHMubGluZU51bWJlcjtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBJbnZlbnRvcnlBZGp1c3RtZW50SW52ZW50b3J5TGlzdFByb3BzID0ge1xuICBpbnZlbnRvcnk/OiBJbnZlbnRvcnlBZGp1c3RtZW50SW52ZW50b3J5W107XG4gIHJlcGxhY2VBbGw/OiBib29sZWFuO1xufTtcblxuZXhwb3J0IGNsYXNzIEludmVudG9yeUFkanVzdG1lbnRJbnZlbnRvcnlMaXN0IGV4dGVuZHMgU29hcE1hcHBpbmdCYXNlIHtcbiAgaW52ZW50b3J5PzogSW52ZW50b3J5QWRqdXN0bWVudEludmVudG9yeVtdO1xuICByZXBsYWNlQWxsPzogYm9vbGVhbjtcbiAgY29uc3RydWN0b3IocHJvcHM6IEludmVudG9yeUFkanVzdG1lbnRJbnZlbnRvcnlMaXN0UHJvcHMpIHtcbiAgICBzdXBlcihwcm9wc1dpdGhNYXBwaW5nc05hbWUocHJvcHMsIE1BUFBJTkdTX05BTUUpKTtcbiAgICB0aGlzLmludmVudG9yeSA9IHByb3BzLmludmVudG9yeTtcbiAgICB0aGlzLnJlcGxhY2VBbGwgPSBwcm9wcy5yZXBsYWNlQWxsO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIFRyYW5zZmVyT3JkZXJJdGVtUHJvcHMgPSB7XG4gIGl0ZW0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBsaW5lPzogbnVtYmVyO1xuICBxdWFudGl0eUF2YWlsYWJsZT86IG51bWJlcjtcbiAgcXVhbnRpdHlPbkhhbmQ/OiBudW1iZXI7XG4gIHF1YW50aXR5QmFja09yZGVyZWQ/OiBudW1iZXI7XG4gIHF1YW50aXR5Q29tbWl0dGVkPzogbnVtYmVyO1xuICBxdWFudGl0eUZ1bGZpbGxlZD86IG51bWJlcjtcbiAgcXVhbnRpdHlQYWNrZWQ/OiBudW1iZXI7XG4gIHF1YW50aXR5UGlja2VkPzogbnVtYmVyO1xuICBxdWFudGl0eVJlY2VpdmVkPzogbnVtYmVyO1xuICBxdWFudGl0eT86IG51bWJlcjtcbiAgcmF0ZT86IG51bWJlcjtcbiAgdW5pdHM/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBhbW91bnQ/OiBudW1iZXI7XG4gIGRlc2NyaXB0aW9uPzogc3RyaW5nO1xuICBpbnZlbnRvcnlEZXRhaWw/OiBQbGF0Zm9ybUNvbW1vbi5JbnZlbnRvcnlEZXRhaWw7XG4gIHNlcmlhbE51bWJlcnM/OiBzdHJpbmc7XG4gIGNvbW1pdEludmVudG9yeT86IFRyYW5zYWN0aW9uc0ludmVudG9yeVR5cGVzLlRyYW5zZmVyT3JkZXJJdGVtQ29tbWl0SW52ZW50b3J5O1xuICBvcmRlclByaW9yaXR5PzogbnVtYmVyO1xuICBvcHRpb25zPzogUGxhdGZvcm1Db3JlLkN1c3RvbUZpZWxkTGlzdDtcbiAgaXNDbG9zZWQ/OiBib29sZWFuO1xuICBkZXBhcnRtZW50PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgY2xheno/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBsYXN0UHVyY2hhc2VQcmljZT86IG51bWJlcjtcbiAgYXZlcmFnZUNvc3Q/OiBudW1iZXI7XG4gIGV4cGVjdGVkU2hpcERhdGU/OiBzdHJpbmc7XG4gIGV4cGVjdGVkUmVjZWlwdERhdGU/OiBzdHJpbmc7XG4gIGN1c3RvbUZpZWxkTGlzdD86IFBsYXRmb3JtQ29yZS5DdXN0b21GaWVsZExpc3Q7XG59O1xuXG5leHBvcnQgY2xhc3MgVHJhbnNmZXJPcmRlckl0ZW0gZXh0ZW5kcyBTb2FwTWFwcGluZ0Jhc2Uge1xuICBpdGVtPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgbGluZT86IG51bWJlcjtcbiAgcXVhbnRpdHlBdmFpbGFibGU/OiBudW1iZXI7XG4gIHF1YW50aXR5T25IYW5kPzogbnVtYmVyO1xuICBxdWFudGl0eUJhY2tPcmRlcmVkPzogbnVtYmVyO1xuICBxdWFudGl0eUNvbW1pdHRlZD86IG51bWJlcjtcbiAgcXVhbnRpdHlGdWxmaWxsZWQ/OiBudW1iZXI7XG4gIHF1YW50aXR5UGFja2VkPzogbnVtYmVyO1xuICBxdWFudGl0eVBpY2tlZD86IG51bWJlcjtcbiAgcXVhbnRpdHlSZWNlaXZlZD86IG51bWJlcjtcbiAgcXVhbnRpdHk/OiBudW1iZXI7XG4gIHJhdGU/OiBudW1iZXI7XG4gIHVuaXRzPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgYW1vdW50PzogbnVtYmVyO1xuICBkZXNjcmlwdGlvbj86IHN0cmluZztcbiAgaW52ZW50b3J5RGV0YWlsPzogUGxhdGZvcm1Db21tb24uSW52ZW50b3J5RGV0YWlsO1xuICBzZXJpYWxOdW1iZXJzPzogc3RyaW5nO1xuICBjb21taXRJbnZlbnRvcnk/OiBUcmFuc2FjdGlvbnNJbnZlbnRvcnlUeXBlcy5UcmFuc2Zlck9yZGVySXRlbUNvbW1pdEludmVudG9yeTtcbiAgb3JkZXJQcmlvcml0eT86IG51bWJlcjtcbiAgb3B0aW9ucz86IFBsYXRmb3JtQ29yZS5DdXN0b21GaWVsZExpc3Q7XG4gIGlzQ2xvc2VkPzogYm9vbGVhbjtcbiAgZGVwYXJ0bWVudD86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGNsYXp6PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgbGFzdFB1cmNoYXNlUHJpY2U/OiBudW1iZXI7XG4gIGF2ZXJhZ2VDb3N0PzogbnVtYmVyO1xuICBleHBlY3RlZFNoaXBEYXRlPzogc3RyaW5nO1xuICBleHBlY3RlZFJlY2VpcHREYXRlPzogc3RyaW5nO1xuICBjdXN0b21GaWVsZExpc3Q/OiBQbGF0Zm9ybUNvcmUuQ3VzdG9tRmllbGRMaXN0O1xuICBjb25zdHJ1Y3Rvcihwcm9wczogVHJhbnNmZXJPcmRlckl0ZW1Qcm9wcykge1xuICAgIHN1cGVyKHByb3BzV2l0aE1hcHBpbmdzTmFtZShwcm9wcywgTUFQUElOR1NfTkFNRSkpO1xuICAgIHRoaXMuaXRlbSA9IHByb3BzLml0ZW07XG4gICAgdGhpcy5saW5lID0gcHJvcHMubGluZTtcbiAgICB0aGlzLnF1YW50aXR5QXZhaWxhYmxlID0gcHJvcHMucXVhbnRpdHlBdmFpbGFibGU7XG4gICAgdGhpcy5xdWFudGl0eU9uSGFuZCA9IHByb3BzLnF1YW50aXR5T25IYW5kO1xuICAgIHRoaXMucXVhbnRpdHlCYWNrT3JkZXJlZCA9IHByb3BzLnF1YW50aXR5QmFja09yZGVyZWQ7XG4gICAgdGhpcy5xdWFudGl0eUNvbW1pdHRlZCA9IHByb3BzLnF1YW50aXR5Q29tbWl0dGVkO1xuICAgIHRoaXMucXVhbnRpdHlGdWxmaWxsZWQgPSBwcm9wcy5xdWFudGl0eUZ1bGZpbGxlZDtcbiAgICB0aGlzLnF1YW50aXR5UGFja2VkID0gcHJvcHMucXVhbnRpdHlQYWNrZWQ7XG4gICAgdGhpcy5xdWFudGl0eVBpY2tlZCA9IHByb3BzLnF1YW50aXR5UGlja2VkO1xuICAgIHRoaXMucXVhbnRpdHlSZWNlaXZlZCA9IHByb3BzLnF1YW50aXR5UmVjZWl2ZWQ7XG4gICAgdGhpcy5xdWFudGl0eSA9IHByb3BzLnF1YW50aXR5O1xuICAgIHRoaXMucmF0ZSA9IHByb3BzLnJhdGU7XG4gICAgdGhpcy51bml0cyA9IHByb3BzLnVuaXRzO1xuICAgIHRoaXMuYW1vdW50ID0gcHJvcHMuYW1vdW50O1xuICAgIHRoaXMuZGVzY3JpcHRpb24gPSBwcm9wcy5kZXNjcmlwdGlvbjtcbiAgICB0aGlzLmludmVudG9yeURldGFpbCA9IHByb3BzLmludmVudG9yeURldGFpbDtcbiAgICB0aGlzLnNlcmlhbE51bWJlcnMgPSBwcm9wcy5zZXJpYWxOdW1iZXJzO1xuICAgIHRoaXMuY29tbWl0SW52ZW50b3J5ID0gcHJvcHMuY29tbWl0SW52ZW50b3J5O1xuICAgIHRoaXMub3JkZXJQcmlvcml0eSA9IHByb3BzLm9yZGVyUHJpb3JpdHk7XG4gICAgdGhpcy5vcHRpb25zID0gcHJvcHMub3B0aW9ucztcbiAgICB0aGlzLmlzQ2xvc2VkID0gcHJvcHMuaXNDbG9zZWQ7XG4gICAgdGhpcy5kZXBhcnRtZW50ID0gcHJvcHMuZGVwYXJ0bWVudDtcbiAgICB0aGlzLmNsYXp6ID0gcHJvcHMuY2xheno7XG4gICAgdGhpcy5sYXN0UHVyY2hhc2VQcmljZSA9IHByb3BzLmxhc3RQdXJjaGFzZVByaWNlO1xuICAgIHRoaXMuYXZlcmFnZUNvc3QgPSBwcm9wcy5hdmVyYWdlQ29zdDtcbiAgICB0aGlzLmV4cGVjdGVkU2hpcERhdGUgPSBwcm9wcy5leHBlY3RlZFNoaXBEYXRlO1xuICAgIHRoaXMuZXhwZWN0ZWRSZWNlaXB0RGF0ZSA9IHByb3BzLmV4cGVjdGVkUmVjZWlwdERhdGU7XG4gICAgdGhpcy5jdXN0b21GaWVsZExpc3QgPSBwcm9wcy5jdXN0b21GaWVsZExpc3Q7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgSW52ZW50b3J5Q29zdFJldmFsdWF0aW9uQ29zdENvbXBvbmVudExpc3RQcm9wcyA9IHtcbiAgY29zdENvbXBvbmVudD86IEludmVudG9yeUNvc3RSZXZhbHVhdGlvbkNvc3RDb21wb25lbnRbXTtcbiAgcmVwbGFjZUFsbD86IGJvb2xlYW47XG59O1xuXG5leHBvcnQgY2xhc3MgSW52ZW50b3J5Q29zdFJldmFsdWF0aW9uQ29zdENvbXBvbmVudExpc3QgZXh0ZW5kcyBTb2FwTWFwcGluZ0Jhc2Uge1xuICBjb3N0Q29tcG9uZW50PzogSW52ZW50b3J5Q29zdFJldmFsdWF0aW9uQ29zdENvbXBvbmVudFtdO1xuICByZXBsYWNlQWxsPzogYm9vbGVhbjtcbiAgY29uc3RydWN0b3IocHJvcHM6IEludmVudG9yeUNvc3RSZXZhbHVhdGlvbkNvc3RDb21wb25lbnRMaXN0UHJvcHMpIHtcbiAgICBzdXBlcihwcm9wc1dpdGhNYXBwaW5nc05hbWUocHJvcHMsIE1BUFBJTkdTX05BTUUpKTtcbiAgICB0aGlzLmNvc3RDb21wb25lbnQgPSBwcm9wcy5jb3N0Q29tcG9uZW50O1xuICAgIHRoaXMucmVwbGFjZUFsbCA9IHByb3BzLnJlcGxhY2VBbGw7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgV29ya09yZGVyUHJvcHMgPSB7XG4gIGNyZWF0ZWREYXRlPzogc3RyaW5nO1xuICBsYXN0TW9kaWZpZWREYXRlPzogc3RyaW5nO1xuICBjdXN0b21Gb3JtPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgbWFudWZhY3R1cmluZ1JvdXRpbmc/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBhdXRvQ2FsY3VsYXRlTGFnPzogYm9vbGVhbjtcbiAgc3RhdHVzPzogc3RyaW5nO1xuICB0cmFuSWQ/OiBzdHJpbmc7XG4gIGVudGl0eT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGpvYj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGFzc2VtYmx5SXRlbT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGV4cGFuZEFzc2VtYmx5PzogYm9vbGVhbjtcbiAgaXNXaXA/OiBib29sZWFuO1xuICBxdWFudGl0eT86IG51bWJlcjtcbiAgYmlsbE9mTWF0ZXJpYWxzPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgdW5pdHM/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICB0cmFuRGF0ZT86IHN0cmluZztcbiAgb3JkZXJTdGF0dXM/OiBUcmFuc2FjdGlvbnNJbnZlbnRvcnlUeXBlcy5Xb3JrT3JkZXJPcmRlclN0YXR1cztcbiAgZmlybWVkPzogYm9vbGVhbjtcbiAgbWVtbz86IHN0cmluZztcbiAgZGVwYXJ0bWVudD86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGNsYXp6PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgaXRlbUxpc3Q/OiBXb3JrT3JkZXJJdGVtTGlzdDtcbiAgbG9jYXRpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBzY2hlZHVsaW5nTWV0aG9kPzogVHJhbnNhY3Rpb25zSW52ZW50b3J5VHlwZXMuV29ya09yZGVyU2NoZWR1bGluZ01ldGhvZDtcbiAgc2FsZXNUZWFtTGlzdD86IFNhbGVzVGVhbUxpc3Q7XG4gIHBhcnRuZXJzTGlzdD86IFBhcnRuZXJzTGlzdDtcbiAgY3JlYXRlZEZyb20/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBzb3VyY2VUcmFuc2FjdGlvbklkPzogc3RyaW5nO1xuICBzb3VyY2VUcmFuc2FjdGlvbkxpbmU/OiBudW1iZXI7XG4gIHNwZWNpYWxPcmRlcj86IGJvb2xlYW47XG4gIGJ1aWxkYWJsZT86IG51bWJlcjtcbiAgb3B0aW9ucz86IFBsYXRmb3JtQ29yZS5DdXN0b21GaWVsZExpc3Q7XG4gIGJ1aWx0PzogbnVtYmVyO1xuICBzdGFydERhdGU/OiBzdHJpbmc7XG4gIGVuZERhdGU/OiBzdHJpbmc7XG4gIHJldmlzaW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgYmlsbE9mTWF0ZXJpYWxzUmV2aXNpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBzdWJzaWRpYXJ5PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgYWNjb3VudGluZ0Jvb2tEZXRhaWxMaXN0PzogUGxhdGZvcm1Db21tb24uQWNjb3VudGluZ0Jvb2tEZXRhaWxMaXN0O1xuICBjdXN0b21GaWVsZExpc3Q/OiBQbGF0Zm9ybUNvcmUuQ3VzdG9tRmllbGRMaXN0O1xuICBpbnRlcm5hbElkPzogc3RyaW5nO1xuICBleHRlcm5hbElkPzogc3RyaW5nO1xufSAmIFBsYXRmb3JtQ29yZS5SZWNvcmRQcm9wcztcblxuZXhwb3J0IGNsYXNzIFdvcmtPcmRlciBleHRlbmRzIFBsYXRmb3JtQ29yZS5SZWNvcmQge1xuICBjcmVhdGVkRGF0ZT86IHN0cmluZztcbiAgbGFzdE1vZGlmaWVkRGF0ZT86IHN0cmluZztcbiAgY3VzdG9tRm9ybT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIG1hbnVmYWN0dXJpbmdSb3V0aW5nPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgYXV0b0NhbGN1bGF0ZUxhZz86IGJvb2xlYW47XG4gIHN0YXR1cz86IHN0cmluZztcbiAgdHJhbklkPzogc3RyaW5nO1xuICBlbnRpdHk/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBqb2I/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBhc3NlbWJseUl0ZW0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBleHBhbmRBc3NlbWJseT86IGJvb2xlYW47XG4gIGlzV2lwPzogYm9vbGVhbjtcbiAgcXVhbnRpdHk/OiBudW1iZXI7XG4gIGJpbGxPZk1hdGVyaWFscz86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHVuaXRzPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgdHJhbkRhdGU/OiBzdHJpbmc7XG4gIG9yZGVyU3RhdHVzPzogVHJhbnNhY3Rpb25zSW52ZW50b3J5VHlwZXMuV29ya09yZGVyT3JkZXJTdGF0dXM7XG4gIGZpcm1lZD86IGJvb2xlYW47XG4gIG1lbW8/OiBzdHJpbmc7XG4gIGRlcGFydG1lbnQ/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBjbGF6ej86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGl0ZW1MaXN0PzogV29ya09yZGVySXRlbUxpc3Q7XG4gIGxvY2F0aW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgc2NoZWR1bGluZ01ldGhvZD86IFRyYW5zYWN0aW9uc0ludmVudG9yeVR5cGVzLldvcmtPcmRlclNjaGVkdWxpbmdNZXRob2Q7XG4gIHNhbGVzVGVhbUxpc3Q/OiBTYWxlc1RlYW1MaXN0O1xuICBwYXJ0bmVyc0xpc3Q/OiBQYXJ0bmVyc0xpc3Q7XG4gIGNyZWF0ZWRGcm9tPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgc291cmNlVHJhbnNhY3Rpb25JZD86IHN0cmluZztcbiAgc291cmNlVHJhbnNhY3Rpb25MaW5lPzogbnVtYmVyO1xuICBzcGVjaWFsT3JkZXI/OiBib29sZWFuO1xuICBidWlsZGFibGU/OiBudW1iZXI7XG4gIG9wdGlvbnM/OiBQbGF0Zm9ybUNvcmUuQ3VzdG9tRmllbGRMaXN0O1xuICBidWlsdD86IG51bWJlcjtcbiAgc3RhcnREYXRlPzogc3RyaW5nO1xuICBlbmREYXRlPzogc3RyaW5nO1xuICByZXZpc2lvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGJpbGxPZk1hdGVyaWFsc1JldmlzaW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgc3Vic2lkaWFyeT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGFjY291bnRpbmdCb29rRGV0YWlsTGlzdD86IFBsYXRmb3JtQ29tbW9uLkFjY291bnRpbmdCb29rRGV0YWlsTGlzdDtcbiAgY3VzdG9tRmllbGRMaXN0PzogUGxhdGZvcm1Db3JlLkN1c3RvbUZpZWxkTGlzdDtcbiAgaW50ZXJuYWxJZD86IHN0cmluZztcbiAgZXh0ZXJuYWxJZD86IHN0cmluZztcbiAgY29uc3RydWN0b3IocHJvcHM6IFdvcmtPcmRlclByb3BzKSB7XG4gICAgc3VwZXIocHJvcHNXaXRoTWFwcGluZ3NOYW1lKHByb3BzLCBNQVBQSU5HU19OQU1FKSk7XG4gICAgdGhpcy5jcmVhdGVkRGF0ZSA9IHByb3BzLmNyZWF0ZWREYXRlO1xuICAgIHRoaXMubGFzdE1vZGlmaWVkRGF0ZSA9IHByb3BzLmxhc3RNb2RpZmllZERhdGU7XG4gICAgdGhpcy5jdXN0b21Gb3JtID0gcHJvcHMuY3VzdG9tRm9ybTtcbiAgICB0aGlzLm1hbnVmYWN0dXJpbmdSb3V0aW5nID0gcHJvcHMubWFudWZhY3R1cmluZ1JvdXRpbmc7XG4gICAgdGhpcy5hdXRvQ2FsY3VsYXRlTGFnID0gcHJvcHMuYXV0b0NhbGN1bGF0ZUxhZztcbiAgICB0aGlzLnN0YXR1cyA9IHByb3BzLnN0YXR1cztcbiAgICB0aGlzLnRyYW5JZCA9IHByb3BzLnRyYW5JZDtcbiAgICB0aGlzLmVudGl0eSA9IHByb3BzLmVudGl0eTtcbiAgICB0aGlzLmpvYiA9IHByb3BzLmpvYjtcbiAgICB0aGlzLmFzc2VtYmx5SXRlbSA9IHByb3BzLmFzc2VtYmx5SXRlbTtcbiAgICB0aGlzLmV4cGFuZEFzc2VtYmx5ID0gcHJvcHMuZXhwYW5kQXNzZW1ibHk7XG4gICAgdGhpcy5pc1dpcCA9IHByb3BzLmlzV2lwO1xuICAgIHRoaXMucXVhbnRpdHkgPSBwcm9wcy5xdWFudGl0eTtcbiAgICB0aGlzLmJpbGxPZk1hdGVyaWFscyA9IHByb3BzLmJpbGxPZk1hdGVyaWFscztcbiAgICB0aGlzLnVuaXRzID0gcHJvcHMudW5pdHM7XG4gICAgdGhpcy50cmFuRGF0ZSA9IHByb3BzLnRyYW5EYXRlO1xuICAgIHRoaXMub3JkZXJTdGF0dXMgPSBwcm9wcy5vcmRlclN0YXR1cztcbiAgICB0aGlzLmZpcm1lZCA9IHByb3BzLmZpcm1lZDtcbiAgICB0aGlzLm1lbW8gPSBwcm9wcy5tZW1vO1xuICAgIHRoaXMuZGVwYXJ0bWVudCA9IHByb3BzLmRlcGFydG1lbnQ7XG4gICAgdGhpcy5jbGF6eiA9IHByb3BzLmNsYXp6O1xuICAgIHRoaXMuaXRlbUxpc3QgPSBwcm9wcy5pdGVtTGlzdDtcbiAgICB0aGlzLmxvY2F0aW9uID0gcHJvcHMubG9jYXRpb247XG4gICAgdGhpcy5zY2hlZHVsaW5nTWV0aG9kID0gcHJvcHMuc2NoZWR1bGluZ01ldGhvZDtcbiAgICB0aGlzLnNhbGVzVGVhbUxpc3QgPSBwcm9wcy5zYWxlc1RlYW1MaXN0O1xuICAgIHRoaXMucGFydG5lcnNMaXN0ID0gcHJvcHMucGFydG5lcnNMaXN0O1xuICAgIHRoaXMuY3JlYXRlZEZyb20gPSBwcm9wcy5jcmVhdGVkRnJvbTtcbiAgICB0aGlzLnNvdXJjZVRyYW5zYWN0aW9uSWQgPSBwcm9wcy5zb3VyY2VUcmFuc2FjdGlvbklkO1xuICAgIHRoaXMuc291cmNlVHJhbnNhY3Rpb25MaW5lID0gcHJvcHMuc291cmNlVHJhbnNhY3Rpb25MaW5lO1xuICAgIHRoaXMuc3BlY2lhbE9yZGVyID0gcHJvcHMuc3BlY2lhbE9yZGVyO1xuICAgIHRoaXMuYnVpbGRhYmxlID0gcHJvcHMuYnVpbGRhYmxlO1xuICAgIHRoaXMub3B0aW9ucyA9IHByb3BzLm9wdGlvbnM7XG4gICAgdGhpcy5idWlsdCA9IHByb3BzLmJ1aWx0O1xuICAgIHRoaXMuc3RhcnREYXRlID0gcHJvcHMuc3RhcnREYXRlO1xuICAgIHRoaXMuZW5kRGF0ZSA9IHByb3BzLmVuZERhdGU7XG4gICAgdGhpcy5yZXZpc2lvbiA9IHByb3BzLnJldmlzaW9uO1xuICAgIHRoaXMuYmlsbE9mTWF0ZXJpYWxzUmV2aXNpb24gPSBwcm9wcy5iaWxsT2ZNYXRlcmlhbHNSZXZpc2lvbjtcbiAgICB0aGlzLnN1YnNpZGlhcnkgPSBwcm9wcy5zdWJzaWRpYXJ5O1xuICAgIHRoaXMuYWNjb3VudGluZ0Jvb2tEZXRhaWxMaXN0ID0gcHJvcHMuYWNjb3VudGluZ0Jvb2tEZXRhaWxMaXN0O1xuICAgIHRoaXMuY3VzdG9tRmllbGRMaXN0ID0gcHJvcHMuY3VzdG9tRmllbGRMaXN0O1xuICAgIHRoaXMuaW50ZXJuYWxJZCA9IHByb3BzLmludGVybmFsSWQ7XG4gICAgdGhpcy5leHRlcm5hbElkID0gcHJvcHMuZXh0ZXJuYWxJZDtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBJbnZlbnRvcnlUcmFuc2ZlckludmVudG9yeUxpc3RQcm9wcyA9IHtcbiAgaW52ZW50b3J5PzogSW52ZW50b3J5VHJhbnNmZXJJbnZlbnRvcnlbXTtcbiAgcmVwbGFjZUFsbD86IGJvb2xlYW47XG59O1xuXG5leHBvcnQgY2xhc3MgSW52ZW50b3J5VHJhbnNmZXJJbnZlbnRvcnlMaXN0IGV4dGVuZHMgU29hcE1hcHBpbmdCYXNlIHtcbiAgaW52ZW50b3J5PzogSW52ZW50b3J5VHJhbnNmZXJJbnZlbnRvcnlbXTtcbiAgcmVwbGFjZUFsbD86IGJvb2xlYW47XG4gIGNvbnN0cnVjdG9yKHByb3BzOiBJbnZlbnRvcnlUcmFuc2ZlckludmVudG9yeUxpc3RQcm9wcykge1xuICAgIHN1cGVyKHByb3BzV2l0aE1hcHBpbmdzTmFtZShwcm9wcywgTUFQUElOR1NfTkFNRSkpO1xuICAgIHRoaXMuaW52ZW50b3J5ID0gcHJvcHMuaW52ZW50b3J5O1xuICAgIHRoaXMucmVwbGFjZUFsbCA9IHByb3BzLnJlcGxhY2VBbGw7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgV29ya09yZGVyQ29tcGxldGlvblByb3BzID0ge1xuICBjcmVhdGVkRGF0ZT86IHN0cmluZztcbiAgbGFzdE1vZGlmaWVkRGF0ZT86IHN0cmluZztcbiAgY3VzdG9tRm9ybT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHRyYW5JZD86IHN0cmluZztcbiAgaXRlbT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHF1YW50aXR5PzogbnVtYmVyO1xuICBzY3JhcFF1YW50aXR5PzogbnVtYmVyO1xuICB1bml0cz86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGlzQmFja2ZsdXNoPzogYm9vbGVhbjtcbiAgb3JkZXJRdWFudGl0eT86IG51bWJlcjtcbiAgdG90YWw/OiBudW1iZXI7XG4gIGNyZWF0ZWRGcm9tPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgaW52ZW50b3J5RGV0YWlsPzogUGxhdGZvcm1Db21tb24uSW52ZW50b3J5RGV0YWlsO1xuICB0cmFuRGF0ZT86IHN0cmluZztcbiAgcG9zdGluZ1BlcmlvZD86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIG1lbW8/OiBzdHJpbmc7XG4gIHN1YnNpZGlhcnk/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBkZXBhcnRtZW50PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgY2xheno/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBsb2NhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHJldmlzaW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgc3RhcnRPcGVyYXRpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBlbmRPcGVyYXRpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBjb21wbGV0ZWRRdWFudGl0eT86IG51bWJlcjtcbiAgbWFudWZhY3R1cmluZ1JvdXRpbmc/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBjb21wb25lbnRMaXN0PzogV29ya09yZGVyQ29tcGxldGlvbkNvbXBvbmVudExpc3Q7XG4gIG9wZXJhdGlvbkxpc3Q/OiBXb3JrT3JkZXJDb21wbGV0aW9uT3BlcmF0aW9uTGlzdDtcbiAgY3VzdG9tRmllbGRMaXN0PzogUGxhdGZvcm1Db3JlLkN1c3RvbUZpZWxkTGlzdDtcbiAgaW50ZXJuYWxJZD86IHN0cmluZztcbiAgZXh0ZXJuYWxJZD86IHN0cmluZztcbn0gJiBQbGF0Zm9ybUNvcmUuUmVjb3JkUHJvcHM7XG5cbmV4cG9ydCBjbGFzcyBXb3JrT3JkZXJDb21wbGV0aW9uIGV4dGVuZHMgUGxhdGZvcm1Db3JlLlJlY29yZCB7XG4gIGNyZWF0ZWREYXRlPzogc3RyaW5nO1xuICBsYXN0TW9kaWZpZWREYXRlPzogc3RyaW5nO1xuICBjdXN0b21Gb3JtPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgdHJhbklkPzogc3RyaW5nO1xuICBpdGVtPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgcXVhbnRpdHk/OiBudW1iZXI7XG4gIHNjcmFwUXVhbnRpdHk/OiBudW1iZXI7XG4gIHVuaXRzPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgaXNCYWNrZmx1c2g/OiBib29sZWFuO1xuICBvcmRlclF1YW50aXR5PzogbnVtYmVyO1xuICB0b3RhbD86IG51bWJlcjtcbiAgY3JlYXRlZEZyb20/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBpbnZlbnRvcnlEZXRhaWw/OiBQbGF0Zm9ybUNvbW1vbi5JbnZlbnRvcnlEZXRhaWw7XG4gIHRyYW5EYXRlPzogc3RyaW5nO1xuICBwb3N0aW5nUGVyaW9kPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgbWVtbz86IHN0cmluZztcbiAgc3Vic2lkaWFyeT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGRlcGFydG1lbnQ/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBjbGF6ej86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGxvY2F0aW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgcmV2aXNpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBzdGFydE9wZXJhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGVuZE9wZXJhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGNvbXBsZXRlZFF1YW50aXR5PzogbnVtYmVyO1xuICBtYW51ZmFjdHVyaW5nUm91dGluZz86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGNvbXBvbmVudExpc3Q/OiBXb3JrT3JkZXJDb21wbGV0aW9uQ29tcG9uZW50TGlzdDtcbiAgb3BlcmF0aW9uTGlzdD86IFdvcmtPcmRlckNvbXBsZXRpb25PcGVyYXRpb25MaXN0O1xuICBjdXN0b21GaWVsZExpc3Q/OiBQbGF0Zm9ybUNvcmUuQ3VzdG9tRmllbGRMaXN0O1xuICBpbnRlcm5hbElkPzogc3RyaW5nO1xuICBleHRlcm5hbElkPzogc3RyaW5nO1xuICBjb25zdHJ1Y3Rvcihwcm9wczogV29ya09yZGVyQ29tcGxldGlvblByb3BzKSB7XG4gICAgc3VwZXIocHJvcHNXaXRoTWFwcGluZ3NOYW1lKHByb3BzLCBNQVBQSU5HU19OQU1FKSk7XG4gICAgdGhpcy5jcmVhdGVkRGF0ZSA9IHByb3BzLmNyZWF0ZWREYXRlO1xuICAgIHRoaXMubGFzdE1vZGlmaWVkRGF0ZSA9IHByb3BzLmxhc3RNb2RpZmllZERhdGU7XG4gICAgdGhpcy5jdXN0b21Gb3JtID0gcHJvcHMuY3VzdG9tRm9ybTtcbiAgICB0aGlzLnRyYW5JZCA9IHByb3BzLnRyYW5JZDtcbiAgICB0aGlzLml0ZW0gPSBwcm9wcy5pdGVtO1xuICAgIHRoaXMucXVhbnRpdHkgPSBwcm9wcy5xdWFudGl0eTtcbiAgICB0aGlzLnNjcmFwUXVhbnRpdHkgPSBwcm9wcy5zY3JhcFF1YW50aXR5O1xuICAgIHRoaXMudW5pdHMgPSBwcm9wcy51bml0cztcbiAgICB0aGlzLmlzQmFja2ZsdXNoID0gcHJvcHMuaXNCYWNrZmx1c2g7XG4gICAgdGhpcy5vcmRlclF1YW50aXR5ID0gcHJvcHMub3JkZXJRdWFudGl0eTtcbiAgICB0aGlzLnRvdGFsID0gcHJvcHMudG90YWw7XG4gICAgdGhpcy5jcmVhdGVkRnJvbSA9IHByb3BzLmNyZWF0ZWRGcm9tO1xuICAgIHRoaXMuaW52ZW50b3J5RGV0YWlsID0gcHJvcHMuaW52ZW50b3J5RGV0YWlsO1xuICAgIHRoaXMudHJhbkRhdGUgPSBwcm9wcy50cmFuRGF0ZTtcbiAgICB0aGlzLnBvc3RpbmdQZXJpb2QgPSBwcm9wcy5wb3N0aW5nUGVyaW9kO1xuICAgIHRoaXMubWVtbyA9IHByb3BzLm1lbW87XG4gICAgdGhpcy5zdWJzaWRpYXJ5ID0gcHJvcHMuc3Vic2lkaWFyeTtcbiAgICB0aGlzLmRlcGFydG1lbnQgPSBwcm9wcy5kZXBhcnRtZW50O1xuICAgIHRoaXMuY2xhenogPSBwcm9wcy5jbGF6ejtcbiAgICB0aGlzLmxvY2F0aW9uID0gcHJvcHMubG9jYXRpb247XG4gICAgdGhpcy5yZXZpc2lvbiA9IHByb3BzLnJldmlzaW9uO1xuICAgIHRoaXMuc3RhcnRPcGVyYXRpb24gPSBwcm9wcy5zdGFydE9wZXJhdGlvbjtcbiAgICB0aGlzLmVuZE9wZXJhdGlvbiA9IHByb3BzLmVuZE9wZXJhdGlvbjtcbiAgICB0aGlzLmNvbXBsZXRlZFF1YW50aXR5ID0gcHJvcHMuY29tcGxldGVkUXVhbnRpdHk7XG4gICAgdGhpcy5tYW51ZmFjdHVyaW5nUm91dGluZyA9IHByb3BzLm1hbnVmYWN0dXJpbmdSb3V0aW5nO1xuICAgIHRoaXMuY29tcG9uZW50TGlzdCA9IHByb3BzLmNvbXBvbmVudExpc3Q7XG4gICAgdGhpcy5vcGVyYXRpb25MaXN0ID0gcHJvcHMub3BlcmF0aW9uTGlzdDtcbiAgICB0aGlzLmN1c3RvbUZpZWxkTGlzdCA9IHByb3BzLmN1c3RvbUZpZWxkTGlzdDtcbiAgICB0aGlzLmludGVybmFsSWQgPSBwcm9wcy5pbnRlcm5hbElkO1xuICAgIHRoaXMuZXh0ZXJuYWxJZCA9IHByb3BzLmV4dGVybmFsSWQ7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgSW52ZW50b3J5VHJhbnNmZXJQcm9wcyA9IHtcbiAgY3JlYXRlZERhdGU/OiBzdHJpbmc7XG4gIGxhc3RNb2RpZmllZERhdGU/OiBzdHJpbmc7XG4gIHRyYW5EYXRlPzogc3RyaW5nO1xuICBwb3N0aW5nUGVyaW9kPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgdHJhbklkPzogc3RyaW5nO1xuICBtZW1vPzogc3RyaW5nO1xuICBsb2NhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHRyYW5zZmVyTG9jYXRpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBkZXBhcnRtZW50PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgY2xheno/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBzdWJzaWRpYXJ5PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgaW52ZW50b3J5TGlzdD86IEludmVudG9yeVRyYW5zZmVySW52ZW50b3J5TGlzdDtcbiAgY3VzdG9tRmllbGRMaXN0PzogUGxhdGZvcm1Db3JlLkN1c3RvbUZpZWxkTGlzdDtcbiAgaW50ZXJuYWxJZD86IHN0cmluZztcbiAgZXh0ZXJuYWxJZD86IHN0cmluZztcbn0gJiBQbGF0Zm9ybUNvcmUuUmVjb3JkUHJvcHM7XG5cbmV4cG9ydCBjbGFzcyBJbnZlbnRvcnlUcmFuc2ZlciBleHRlbmRzIFBsYXRmb3JtQ29yZS5SZWNvcmQge1xuICBjcmVhdGVkRGF0ZT86IHN0cmluZztcbiAgbGFzdE1vZGlmaWVkRGF0ZT86IHN0cmluZztcbiAgdHJhbkRhdGU/OiBzdHJpbmc7XG4gIHBvc3RpbmdQZXJpb2Q/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICB0cmFuSWQ/OiBzdHJpbmc7XG4gIG1lbW8/OiBzdHJpbmc7XG4gIGxvY2F0aW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgdHJhbnNmZXJMb2NhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGRlcGFydG1lbnQ/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBjbGF6ej86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHN1YnNpZGlhcnk/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBpbnZlbnRvcnlMaXN0PzogSW52ZW50b3J5VHJhbnNmZXJJbnZlbnRvcnlMaXN0O1xuICBjdXN0b21GaWVsZExpc3Q/OiBQbGF0Zm9ybUNvcmUuQ3VzdG9tRmllbGRMaXN0O1xuICBpbnRlcm5hbElkPzogc3RyaW5nO1xuICBleHRlcm5hbElkPzogc3RyaW5nO1xuICBjb25zdHJ1Y3Rvcihwcm9wczogSW52ZW50b3J5VHJhbnNmZXJQcm9wcykge1xuICAgIHN1cGVyKHByb3BzV2l0aE1hcHBpbmdzTmFtZShwcm9wcywgTUFQUElOR1NfTkFNRSkpO1xuICAgIHRoaXMuY3JlYXRlZERhdGUgPSBwcm9wcy5jcmVhdGVkRGF0ZTtcbiAgICB0aGlzLmxhc3RNb2RpZmllZERhdGUgPSBwcm9wcy5sYXN0TW9kaWZpZWREYXRlO1xuICAgIHRoaXMudHJhbkRhdGUgPSBwcm9wcy50cmFuRGF0ZTtcbiAgICB0aGlzLnBvc3RpbmdQZXJpb2QgPSBwcm9wcy5wb3N0aW5nUGVyaW9kO1xuICAgIHRoaXMudHJhbklkID0gcHJvcHMudHJhbklkO1xuICAgIHRoaXMubWVtbyA9IHByb3BzLm1lbW87XG4gICAgdGhpcy5sb2NhdGlvbiA9IHByb3BzLmxvY2F0aW9uO1xuICAgIHRoaXMudHJhbnNmZXJMb2NhdGlvbiA9IHByb3BzLnRyYW5zZmVyTG9jYXRpb247XG4gICAgdGhpcy5kZXBhcnRtZW50ID0gcHJvcHMuZGVwYXJ0bWVudDtcbiAgICB0aGlzLmNsYXp6ID0gcHJvcHMuY2xheno7XG4gICAgdGhpcy5zdWJzaWRpYXJ5ID0gcHJvcHMuc3Vic2lkaWFyeTtcbiAgICB0aGlzLmludmVudG9yeUxpc3QgPSBwcm9wcy5pbnZlbnRvcnlMaXN0O1xuICAgIHRoaXMuY3VzdG9tRmllbGRMaXN0ID0gcHJvcHMuY3VzdG9tRmllbGRMaXN0O1xuICAgIHRoaXMuaW50ZXJuYWxJZCA9IHByb3BzLmludGVybmFsSWQ7XG4gICAgdGhpcy5leHRlcm5hbElkID0gcHJvcHMuZXh0ZXJuYWxJZDtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBCaW5UcmFuc2ZlckludmVudG9yeVByb3BzID0ge1xuICBsaW5lPzogbnVtYmVyO1xuICBpdGVtPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIHByZWZlcnJlZEJpbj86IHN0cmluZztcbiAgcXVhbnRpdHk/OiBudW1iZXI7XG4gIGl0ZW1Vbml0c0xhYmVsPzogc3RyaW5nO1xuICBpbnZlbnRvcnlEZXRhaWw/OiBQbGF0Zm9ybUNvbW1vbi5JbnZlbnRvcnlEZXRhaWw7XG4gIGZyb21CaW5zPzogc3RyaW5nO1xuICB0b0JpbnM/OiBzdHJpbmc7XG59O1xuXG5leHBvcnQgY2xhc3MgQmluVHJhbnNmZXJJbnZlbnRvcnkgZXh0ZW5kcyBTb2FwTWFwcGluZ0Jhc2Uge1xuICBsaW5lPzogbnVtYmVyO1xuICBpdGVtPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIHByZWZlcnJlZEJpbj86IHN0cmluZztcbiAgcXVhbnRpdHk/OiBudW1iZXI7XG4gIGl0ZW1Vbml0c0xhYmVsPzogc3RyaW5nO1xuICBpbnZlbnRvcnlEZXRhaWw/OiBQbGF0Zm9ybUNvbW1vbi5JbnZlbnRvcnlEZXRhaWw7XG4gIGZyb21CaW5zPzogc3RyaW5nO1xuICB0b0JpbnM/OiBzdHJpbmc7XG4gIGNvbnN0cnVjdG9yKHByb3BzOiBCaW5UcmFuc2ZlckludmVudG9yeVByb3BzKSB7XG4gICAgc3VwZXIocHJvcHNXaXRoTWFwcGluZ3NOYW1lKHByb3BzLCBNQVBQSU5HU19OQU1FKSk7XG4gICAgdGhpcy5saW5lID0gcHJvcHMubGluZTtcbiAgICB0aGlzLml0ZW0gPSBwcm9wcy5pdGVtO1xuICAgIHRoaXMuZGVzY3JpcHRpb24gPSBwcm9wcy5kZXNjcmlwdGlvbjtcbiAgICB0aGlzLnByZWZlcnJlZEJpbiA9IHByb3BzLnByZWZlcnJlZEJpbjtcbiAgICB0aGlzLnF1YW50aXR5ID0gcHJvcHMucXVhbnRpdHk7XG4gICAgdGhpcy5pdGVtVW5pdHNMYWJlbCA9IHByb3BzLml0ZW1Vbml0c0xhYmVsO1xuICAgIHRoaXMuaW52ZW50b3J5RGV0YWlsID0gcHJvcHMuaW52ZW50b3J5RGV0YWlsO1xuICAgIHRoaXMuZnJvbUJpbnMgPSBwcm9wcy5mcm9tQmlucztcbiAgICB0aGlzLnRvQmlucyA9IHByb3BzLnRvQmlucztcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBXb3JrT3JkZXJDb21wbGV0aW9uT3BlcmF0aW9uUHJvcHMgPSB7XG4gIG9wZXJhdGlvblNlcXVlbmNlPzogbnVtYmVyO1xuICBvcGVyYXRpb25OYW1lPzogc3RyaW5nO1xuICB3b3JrQ2VudGVyPzogc3RyaW5nO1xuICBtYWNoaW5lUmVzb3VyY2VzPzogbnVtYmVyO1xuICBsYWJvclJlc291cmNlcz86IG51bWJlcjtcbiAgaW5wdXRRdWFudGl0eT86IG51bWJlcjtcbiAgcXVhbnRpdHlSZW1haW5pbmc/OiBudW1iZXI7XG4gIHByZWRlY2Vzc29yQ29tcGxldGVkUXVhbnRpdHk/OiBudW1iZXI7XG4gIGNvbXBsZXRlZFF1YW50aXR5PzogbnVtYmVyO1xuICByZWNvcmRTZXR1cD86IGJvb2xlYW47XG4gIG1hY2hpbmVTZXR1cFRpbWU/OiBudW1iZXI7XG4gIGxhYm9yU2V0dXBUaW1lPzogbnVtYmVyO1xuICBtYWNoaW5lUnVuVGltZT86IG51bWJlcjtcbiAgbGFib3JSdW5UaW1lPzogbnVtYmVyO1xufTtcblxuZXhwb3J0IGNsYXNzIFdvcmtPcmRlckNvbXBsZXRpb25PcGVyYXRpb24gZXh0ZW5kcyBTb2FwTWFwcGluZ0Jhc2Uge1xuICBvcGVyYXRpb25TZXF1ZW5jZT86IG51bWJlcjtcbiAgb3BlcmF0aW9uTmFtZT86IHN0cmluZztcbiAgd29ya0NlbnRlcj86IHN0cmluZztcbiAgbWFjaGluZVJlc291cmNlcz86IG51bWJlcjtcbiAgbGFib3JSZXNvdXJjZXM/OiBudW1iZXI7XG4gIGlucHV0UXVhbnRpdHk/OiBudW1iZXI7XG4gIHF1YW50aXR5UmVtYWluaW5nPzogbnVtYmVyO1xuICBwcmVkZWNlc3NvckNvbXBsZXRlZFF1YW50aXR5PzogbnVtYmVyO1xuICBjb21wbGV0ZWRRdWFudGl0eT86IG51bWJlcjtcbiAgcmVjb3JkU2V0dXA/OiBib29sZWFuO1xuICBtYWNoaW5lU2V0dXBUaW1lPzogbnVtYmVyO1xuICBsYWJvclNldHVwVGltZT86IG51bWJlcjtcbiAgbWFjaGluZVJ1blRpbWU/OiBudW1iZXI7XG4gIGxhYm9yUnVuVGltZT86IG51bWJlcjtcbiAgY29uc3RydWN0b3IocHJvcHM6IFdvcmtPcmRlckNvbXBsZXRpb25PcGVyYXRpb25Qcm9wcykge1xuICAgIHN1cGVyKHByb3BzV2l0aE1hcHBpbmdzTmFtZShwcm9wcywgTUFQUElOR1NfTkFNRSkpO1xuICAgIHRoaXMub3BlcmF0aW9uU2VxdWVuY2UgPSBwcm9wcy5vcGVyYXRpb25TZXF1ZW5jZTtcbiAgICB0aGlzLm9wZXJhdGlvbk5hbWUgPSBwcm9wcy5vcGVyYXRpb25OYW1lO1xuICAgIHRoaXMud29ya0NlbnRlciA9IHByb3BzLndvcmtDZW50ZXI7XG4gICAgdGhpcy5tYWNoaW5lUmVzb3VyY2VzID0gcHJvcHMubWFjaGluZVJlc291cmNlcztcbiAgICB0aGlzLmxhYm9yUmVzb3VyY2VzID0gcHJvcHMubGFib3JSZXNvdXJjZXM7XG4gICAgdGhpcy5pbnB1dFF1YW50aXR5ID0gcHJvcHMuaW5wdXRRdWFudGl0eTtcbiAgICB0aGlzLnF1YW50aXR5UmVtYWluaW5nID0gcHJvcHMucXVhbnRpdHlSZW1haW5pbmc7XG4gICAgdGhpcy5wcmVkZWNlc3NvckNvbXBsZXRlZFF1YW50aXR5ID0gcHJvcHMucHJlZGVjZXNzb3JDb21wbGV0ZWRRdWFudGl0eTtcbiAgICB0aGlzLmNvbXBsZXRlZFF1YW50aXR5ID0gcHJvcHMuY29tcGxldGVkUXVhbnRpdHk7XG4gICAgdGhpcy5yZWNvcmRTZXR1cCA9IHByb3BzLnJlY29yZFNldHVwO1xuICAgIHRoaXMubWFjaGluZVNldHVwVGltZSA9IHByb3BzLm1hY2hpbmVTZXR1cFRpbWU7XG4gICAgdGhpcy5sYWJvclNldHVwVGltZSA9IHByb3BzLmxhYm9yU2V0dXBUaW1lO1xuICAgIHRoaXMubWFjaGluZVJ1blRpbWUgPSBwcm9wcy5tYWNoaW5lUnVuVGltZTtcbiAgICB0aGlzLmxhYm9yUnVuVGltZSA9IHByb3BzLmxhYm9yUnVuVGltZTtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBXb3JrT3JkZXJDb21wbGV0aW9uQ29tcG9uZW50TGlzdFByb3BzID0ge1xuICB3b3JrT3JkZXJDb21wbGV0aW9uQ29tcG9uZW50PzogV29ya09yZGVyQ29tcGxldGlvbkNvbXBvbmVudFtdO1xuICByZXBsYWNlQWxsPzogYm9vbGVhbjtcbn07XG5cbmV4cG9ydCBjbGFzcyBXb3JrT3JkZXJDb21wbGV0aW9uQ29tcG9uZW50TGlzdCBleHRlbmRzIFNvYXBNYXBwaW5nQmFzZSB7XG4gIHdvcmtPcmRlckNvbXBsZXRpb25Db21wb25lbnQ/OiBXb3JrT3JkZXJDb21wbGV0aW9uQ29tcG9uZW50W107XG4gIHJlcGxhY2VBbGw/OiBib29sZWFuO1xuICBjb25zdHJ1Y3Rvcihwcm9wczogV29ya09yZGVyQ29tcGxldGlvbkNvbXBvbmVudExpc3RQcm9wcykge1xuICAgIHN1cGVyKHByb3BzV2l0aE1hcHBpbmdzTmFtZShwcm9wcywgTUFQUElOR1NfTkFNRSkpO1xuICAgIHRoaXMud29ya09yZGVyQ29tcGxldGlvbkNvbXBvbmVudCA9IHByb3BzLndvcmtPcmRlckNvbXBsZXRpb25Db21wb25lbnQ7XG4gICAgdGhpcy5yZXBsYWNlQWxsID0gcHJvcHMucmVwbGFjZUFsbDtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBCaW5Xb3Jrc2hlZXRQcm9wcyA9IHtcbiAgY3JlYXRlZERhdGU/OiBzdHJpbmc7XG4gIGxhc3RNb2RpZmllZERhdGU/OiBzdHJpbmc7XG4gIHRyYW5EYXRlPzogc3RyaW5nO1xuICBtZW1vPzogc3RyaW5nO1xuICBsb2NhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHRyYW5JZD86IHN0cmluZztcbiAgaXRlbUxpc3Q/OiBCaW5Xb3Jrc2hlZXRJdGVtTGlzdDtcbiAgY3VzdG9tRmllbGRMaXN0PzogUGxhdGZvcm1Db3JlLkN1c3RvbUZpZWxkTGlzdDtcbiAgaW50ZXJuYWxJZD86IHN0cmluZztcbiAgZXh0ZXJuYWxJZD86IHN0cmluZztcbn0gJiBQbGF0Zm9ybUNvcmUuUmVjb3JkUHJvcHM7XG5cbmV4cG9ydCBjbGFzcyBCaW5Xb3Jrc2hlZXQgZXh0ZW5kcyBQbGF0Zm9ybUNvcmUuUmVjb3JkIHtcbiAgY3JlYXRlZERhdGU/OiBzdHJpbmc7XG4gIGxhc3RNb2RpZmllZERhdGU/OiBzdHJpbmc7XG4gIHRyYW5EYXRlPzogc3RyaW5nO1xuICBtZW1vPzogc3RyaW5nO1xuICBsb2NhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHRyYW5JZD86IHN0cmluZztcbiAgaXRlbUxpc3Q/OiBCaW5Xb3Jrc2hlZXRJdGVtTGlzdDtcbiAgY3VzdG9tRmllbGRMaXN0PzogUGxhdGZvcm1Db3JlLkN1c3RvbUZpZWxkTGlzdDtcbiAgaW50ZXJuYWxJZD86IHN0cmluZztcbiAgZXh0ZXJuYWxJZD86IHN0cmluZztcbiAgY29uc3RydWN0b3IocHJvcHM6IEJpbldvcmtzaGVldFByb3BzKSB7XG4gICAgc3VwZXIocHJvcHNXaXRoTWFwcGluZ3NOYW1lKHByb3BzLCBNQVBQSU5HU19OQU1FKSk7XG4gICAgdGhpcy5jcmVhdGVkRGF0ZSA9IHByb3BzLmNyZWF0ZWREYXRlO1xuICAgIHRoaXMubGFzdE1vZGlmaWVkRGF0ZSA9IHByb3BzLmxhc3RNb2RpZmllZERhdGU7XG4gICAgdGhpcy50cmFuRGF0ZSA9IHByb3BzLnRyYW5EYXRlO1xuICAgIHRoaXMubWVtbyA9IHByb3BzLm1lbW87XG4gICAgdGhpcy5sb2NhdGlvbiA9IHByb3BzLmxvY2F0aW9uO1xuICAgIHRoaXMudHJhbklkID0gcHJvcHMudHJhbklkO1xuICAgIHRoaXMuaXRlbUxpc3QgPSBwcm9wcy5pdGVtTGlzdDtcbiAgICB0aGlzLmN1c3RvbUZpZWxkTGlzdCA9IHByb3BzLmN1c3RvbUZpZWxkTGlzdDtcbiAgICB0aGlzLmludGVybmFsSWQgPSBwcm9wcy5pbnRlcm5hbElkO1xuICAgIHRoaXMuZXh0ZXJuYWxJZCA9IHByb3BzLmV4dGVybmFsSWQ7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgV29ya09yZGVyQ2xvc2VQcm9wcyA9IHtcbiAgY3JlYXRlZERhdGU/OiBzdHJpbmc7XG4gIGxhc3RNb2RpZmllZERhdGU/OiBzdHJpbmc7XG4gIGN1c3RvbUZvcm0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICB0cmFuSWQ/OiBzdHJpbmc7XG4gIGl0ZW0/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBxdWFudGl0eT86IG51bWJlcjtcbiAgb3JkZXJRdWFudGl0eT86IG51bWJlcjtcbiAgc2NyYXBRdWFudGl0eT86IG51bWJlcjtcbiAgY3JlYXRlZEZyb20/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICB0cmFuRGF0ZT86IHN0cmluZztcbiAgcG9zdGluZ1BlcmlvZD86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIG1lbW8/OiBzdHJpbmc7XG4gIHN1YnNpZGlhcnk/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBkZXBhcnRtZW50PzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgY2xheno/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBsb2NhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHJldmlzaW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgY3VzdG9tRmllbGRMaXN0PzogUGxhdGZvcm1Db3JlLkN1c3RvbUZpZWxkTGlzdDtcbiAgaW50ZXJuYWxJZD86IHN0cmluZztcbiAgZXh0ZXJuYWxJZD86IHN0cmluZztcbn0gJiBQbGF0Zm9ybUNvcmUuUmVjb3JkUHJvcHM7XG5cbmV4cG9ydCBjbGFzcyBXb3JrT3JkZXJDbG9zZSBleHRlbmRzIFBsYXRmb3JtQ29yZS5SZWNvcmQge1xuICBjcmVhdGVkRGF0ZT86IHN0cmluZztcbiAgbGFzdE1vZGlmaWVkRGF0ZT86IHN0cmluZztcbiAgY3VzdG9tRm9ybT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHRyYW5JZD86IHN0cmluZztcbiAgaXRlbT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHF1YW50aXR5PzogbnVtYmVyO1xuICBvcmRlclF1YW50aXR5PzogbnVtYmVyO1xuICBzY3JhcFF1YW50aXR5PzogbnVtYmVyO1xuICBjcmVhdGVkRnJvbT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHRyYW5EYXRlPzogc3RyaW5nO1xuICBwb3N0aW5nUGVyaW9kPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgbWVtbz86IHN0cmluZztcbiAgc3Vic2lkaWFyeT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGRlcGFydG1lbnQ/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBjbGF6ej86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGxvY2F0aW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgcmV2aXNpb24/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBjdXN0b21GaWVsZExpc3Q/OiBQbGF0Zm9ybUNvcmUuQ3VzdG9tRmllbGRMaXN0O1xuICBpbnRlcm5hbElkPzogc3RyaW5nO1xuICBleHRlcm5hbElkPzogc3RyaW5nO1xuICBjb25zdHJ1Y3Rvcihwcm9wczogV29ya09yZGVyQ2xvc2VQcm9wcykge1xuICAgIHN1cGVyKHByb3BzV2l0aE1hcHBpbmdzTmFtZShwcm9wcywgTUFQUElOR1NfTkFNRSkpO1xuICAgIHRoaXMuY3JlYXRlZERhdGUgPSBwcm9wcy5jcmVhdGVkRGF0ZTtcbiAgICB0aGlzLmxhc3RNb2RpZmllZERhdGUgPSBwcm9wcy5sYXN0TW9kaWZpZWREYXRlO1xuICAgIHRoaXMuY3VzdG9tRm9ybSA9IHByb3BzLmN1c3RvbUZvcm07XG4gICAgdGhpcy50cmFuSWQgPSBwcm9wcy50cmFuSWQ7XG4gICAgdGhpcy5pdGVtID0gcHJvcHMuaXRlbTtcbiAgICB0aGlzLnF1YW50aXR5ID0gcHJvcHMucXVhbnRpdHk7XG4gICAgdGhpcy5vcmRlclF1YW50aXR5ID0gcHJvcHMub3JkZXJRdWFudGl0eTtcbiAgICB0aGlzLnNjcmFwUXVhbnRpdHkgPSBwcm9wcy5zY3JhcFF1YW50aXR5O1xuICAgIHRoaXMuY3JlYXRlZEZyb20gPSBwcm9wcy5jcmVhdGVkRnJvbTtcbiAgICB0aGlzLnRyYW5EYXRlID0gcHJvcHMudHJhbkRhdGU7XG4gICAgdGhpcy5wb3N0aW5nUGVyaW9kID0gcHJvcHMucG9zdGluZ1BlcmlvZDtcbiAgICB0aGlzLm1lbW8gPSBwcm9wcy5tZW1vO1xuICAgIHRoaXMuc3Vic2lkaWFyeSA9IHByb3BzLnN1YnNpZGlhcnk7XG4gICAgdGhpcy5kZXBhcnRtZW50ID0gcHJvcHMuZGVwYXJ0bWVudDtcbiAgICB0aGlzLmNsYXp6ID0gcHJvcHMuY2xheno7XG4gICAgdGhpcy5sb2NhdGlvbiA9IHByb3BzLmxvY2F0aW9uO1xuICAgIHRoaXMucmV2aXNpb24gPSBwcm9wcy5yZXZpc2lvbjtcbiAgICB0aGlzLmN1c3RvbUZpZWxkTGlzdCA9IHByb3BzLmN1c3RvbUZpZWxkTGlzdDtcbiAgICB0aGlzLmludGVybmFsSWQgPSBwcm9wcy5pbnRlcm5hbElkO1xuICAgIHRoaXMuZXh0ZXJuYWxJZCA9IHByb3BzLmV4dGVybmFsSWQ7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgSW50ZXJDb21wYW55VHJhbnNmZXJPcmRlclByb3BzID0ge1xuICBjcmVhdGVkRGF0ZT86IHN0cmluZztcbiAgbGFzdE1vZGlmaWVkRGF0ZT86IHN0cmluZztcbiAgY3VzdG9tRm9ybT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHNoaXBwaW5nQ29zdD86IG51bWJlcjtcbiAgc3ViVG90YWw/OiBudW1iZXI7XG4gIHN0YXR1cz86IHN0cmluZztcbiAgc2hpcHBpbmdBZGRyZXNzPzogUGxhdGZvcm1Db21tb24uQWRkcmVzcztcbiAgc2hpcElzUmVzaWRlbnRpYWw/OiBib29sZWFuO1xuICBzaGlwQWRkcmVzc0xpc3Q/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBmb2I/OiBzdHJpbmc7XG4gIHRyYW5EYXRlPzogc3RyaW5nO1xuICB0cmFuSWQ/OiBzdHJpbmc7XG4gIHNvdXJjZT86IHN0cmluZztcbiAgb3JkZXJTdGF0dXM/OiBUcmFuc2FjdGlvbnNJbnZlbnRvcnlUeXBlcy5UcmFuc2Zlck9yZGVyT3JkZXJTdGF0dXM7XG4gIHN1YnNpZGlhcnk/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICB0b1N1YnNpZGlhcnk/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBlbXBsb3llZT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHVzZUl0ZW1Db3N0QXNUcmFuc2ZlckNvc3Q/OiBib29sZWFuO1xuICBpbmNvdGVybT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGRlcGFydG1lbnQ/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBjbGF6ej86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGxvY2F0aW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgdHJhbnNmZXJMb2NhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIG1lbW8/OiBzdHJpbmc7XG4gIHNoaXBEYXRlPzogc3RyaW5nO1xuICBzaGlwTWV0aG9kPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgdHJhY2tpbmdOdW1iZXJzPzogc3RyaW5nO1xuICBsaW5rZWRUcmFja2luZ051bWJlcnM/OiBzdHJpbmc7XG4gIHNoaXBDb21wbGV0ZT86IGJvb2xlYW47XG4gIGFsdFNoaXBwaW5nQ29zdD86IG51bWJlcjtcbiAgc2hpcHBpbmdUYXgxUmF0ZT86IG51bWJlcjtcbiAgaGFuZGxpbmdUYXgxUmF0ZT86IG51bWJlcjtcbiAgc2hpcHBpbmdUYXgyUmF0ZT86IG51bWJlcjtcbiAgaGFuZGxpbmdUYXgyUmF0ZT86IG51bWJlcjtcbiAgc2hpcHBpbmdUYXhDb2RlPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgaGFuZGxpbmdUYXhDb2RlPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgdG90YWw/OiBudW1iZXI7XG4gIGl0ZW1MaXN0PzogSW50ZXJDb21wYW55VHJhbnNmZXJPcmRlckl0ZW1MaXN0O1xuICBhY2NvdW50aW5nQm9va0RldGFpbExpc3Q/OiBQbGF0Zm9ybUNvbW1vbi5BY2NvdW50aW5nQm9va0RldGFpbExpc3Q7XG4gIGN1c3RvbUZpZWxkTGlzdD86IFBsYXRmb3JtQ29yZS5DdXN0b21GaWVsZExpc3Q7XG4gIGludGVybmFsSWQ/OiBzdHJpbmc7XG4gIGV4dGVybmFsSWQ/OiBzdHJpbmc7XG59ICYgUGxhdGZvcm1Db3JlLlJlY29yZFByb3BzO1xuXG5leHBvcnQgY2xhc3MgSW50ZXJDb21wYW55VHJhbnNmZXJPcmRlciBleHRlbmRzIFBsYXRmb3JtQ29yZS5SZWNvcmQge1xuICBjcmVhdGVkRGF0ZT86IHN0cmluZztcbiAgbGFzdE1vZGlmaWVkRGF0ZT86IHN0cmluZztcbiAgY3VzdG9tRm9ybT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHNoaXBwaW5nQ29zdD86IG51bWJlcjtcbiAgc3ViVG90YWw/OiBudW1iZXI7XG4gIHN0YXR1cz86IHN0cmluZztcbiAgc2hpcHBpbmdBZGRyZXNzPzogUGxhdGZvcm1Db21tb24uQWRkcmVzcztcbiAgc2hpcElzUmVzaWRlbnRpYWw/OiBib29sZWFuO1xuICBzaGlwQWRkcmVzc0xpc3Q/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBmb2I/OiBzdHJpbmc7XG4gIHRyYW5EYXRlPzogc3RyaW5nO1xuICB0cmFuSWQ/OiBzdHJpbmc7XG4gIHNvdXJjZT86IHN0cmluZztcbiAgb3JkZXJTdGF0dXM/OiBUcmFuc2FjdGlvbnNJbnZlbnRvcnlUeXBlcy5UcmFuc2Zlck9yZGVyT3JkZXJTdGF0dXM7XG4gIHN1YnNpZGlhcnk/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICB0b1N1YnNpZGlhcnk/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBlbXBsb3llZT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHVzZUl0ZW1Db3N0QXNUcmFuc2ZlckNvc3Q/OiBib29sZWFuO1xuICBpbmNvdGVybT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGRlcGFydG1lbnQ/OiBQbGF0Zm9ybUNvcmUuUmVjb3JkUmVmO1xuICBjbGF6ej86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGxvY2F0aW9uPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgdHJhbnNmZXJMb2NhdGlvbj86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIG1lbW8/OiBzdHJpbmc7XG4gIHNoaXBEYXRlPzogc3RyaW5nO1xuICBzaGlwTWV0aG9kPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgdHJhY2tpbmdOdW1iZXJzPzogc3RyaW5nO1xuICBsaW5rZWRUcmFja2luZ051bWJlcnM/OiBzdHJpbmc7XG4gIHNoaXBDb21wbGV0ZT86IGJvb2xlYW47XG4gIGFsdFNoaXBwaW5nQ29zdD86IG51bWJlcjtcbiAgc2hpcHBpbmdUYXgxUmF0ZT86IG51bWJlcjtcbiAgaGFuZGxpbmdUYXgxUmF0ZT86IG51bWJlcjtcbiAgc2hpcHBpbmdUYXgyUmF0ZT86IG51bWJlcjtcbiAgaGFuZGxpbmdUYXgyUmF0ZT86IG51bWJlcjtcbiAgc2hpcHBpbmdUYXhDb2RlPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgaGFuZGxpbmdUYXhDb2RlPzogUGxhdGZvcm1Db3JlLlJlY29yZFJlZjtcbiAgdG90YWw/OiBudW1iZXI7XG4gIGl0ZW1MaXN0PzogSW50ZXJDb21wYW55VHJhbnNmZXJPcmRlckl0ZW1MaXN0O1xuICBhY2NvdW50aW5nQm9va0RldGFpbExpc3Q/OiBQbGF0Zm9ybUNvbW1vbi5BY2NvdW50aW5nQm9va0RldGFpbExpc3Q7XG4gIGN1c3RvbUZpZWxkTGlzdD86IFBsYXRmb3JtQ29yZS5DdXN0b21GaWVsZExpc3Q7XG4gIGludGVybmFsSWQ/OiBzdHJpbmc7XG4gIGV4dGVybmFsSWQ/OiBzdHJpbmc7XG4gIGNvbnN0cnVjdG9yKHByb3BzOiBJbnRlckNvbXBhbnlUcmFuc2Zlck9yZGVyUHJvcHMpIHtcbiAgICBzdXBlcihwcm9wc1dpdGhNYXBwaW5nc05hbWUocHJvcHMsIE1BUFBJTkdTX05BTUUpKTtcbiAgICB0aGlzLmNyZWF0ZWREYXRlID0gcHJvcHMuY3JlYXRlZERhdGU7XG4gICAgdGhpcy5sYXN0TW9kaWZpZWREYXRlID0gcHJvcHMubGFzdE1vZGlmaWVkRGF0ZTtcbiAgICB0aGlzLmN1c3RvbUZvcm0gPSBwcm9wcy5jdXN0b21Gb3JtO1xuICAgIHRoaXMuc2hpcHBpbmdDb3N0ID0gcHJvcHMuc2hpcHBpbmdDb3N0O1xuICAgIHRoaXMuc3ViVG90YWwgPSBwcm9wcy5zdWJUb3RhbDtcbiAgICB0aGlzLnN0YXR1cyA9IHByb3BzLnN0YXR1cztcbiAgICB0aGlzLnNoaXBwaW5nQWRkcmVzcyA9IHByb3BzLnNoaXBwaW5nQWRkcmVzcztcbiAgICB0aGlzLnNoaXBJc1Jlc2lkZW50aWFsID0gcHJvcHMuc2hpcElzUmVzaWRlbnRpYWw7XG4gICAgdGhpcy5zaGlwQWRkcmVzc0xpc3QgPSBwcm9wcy5zaGlwQWRkcmVzc0xpc3Q7XG4gICAgdGhpcy5mb2IgPSBwcm9wcy5mb2I7XG4gICAgdGhpcy50cmFuRGF0ZSA9IHByb3BzLnRyYW5EYXRlO1xuICAgIHRoaXMudHJhbklkID0gcHJvcHMudHJhbklkO1xuICAgIHRoaXMuc291cmNlID0gcHJvcHMuc291cmNlO1xuICAgIHRoaXMub3JkZXJTdGF0dXMgPSBwcm9wcy5vcmRlclN0YXR1cztcbiAgICB0aGlzLnN1YnNpZGlhcnkgPSBwcm9wcy5zdWJzaWRpYXJ5O1xuICAgIHRoaXMudG9TdWJzaWRpYXJ5ID0gcHJvcHMudG9TdWJzaWRpYXJ5O1xuICAgIHRoaXMuZW1wbG95ZWUgPSBwcm9wcy5lbXBsb3llZTtcbiAgICB0aGlzLnVzZUl0ZW1Db3N0QXNUcmFuc2ZlckNvc3QgPSBwcm9wcy51c2VJdGVtQ29zdEFzVHJhbnNmZXJDb3N0O1xuICAgIHRoaXMuaW5jb3Rlcm0gPSBwcm9wcy5pbmNvdGVybTtcbiAgICB0aGlzLmRlcGFydG1lbnQgPSBwcm9wcy5kZXBhcnRtZW50O1xuICAgIHRoaXMuY2xhenogPSBwcm9wcy5jbGF6ejtcbiAgICB0aGlzLmxvY2F0aW9uID0gcHJvcHMubG9jYXRpb247XG4gICAgdGhpcy50cmFuc2ZlckxvY2F0aW9uID0gcHJvcHMudHJhbnNmZXJMb2NhdGlvbjtcbiAgICB0aGlzLm1lbW8gPSBwcm9wcy5tZW1vO1xuICAgIHRoaXMuc2hpcERhdGUgPSBwcm9wcy5zaGlwRGF0ZTtcbiAgICB0aGlzLnNoaXBNZXRob2QgPSBwcm9wcy5zaGlwTWV0aG9kO1xuICAgIHRoaXMudHJhY2tpbmdOdW1iZXJzID0gcHJvcHMudHJhY2tpbmdOdW1iZXJzO1xuICAgIHRoaXMubGlua2VkVHJhY2tpbmdOdW1iZXJzID0gcHJvcHMubGlua2VkVHJhY2tpbmdOdW1iZXJzO1xuICAgIHRoaXMuc2hpcENvbXBsZXRlID0gcHJvcHMuc2hpcENvbXBsZXRlO1xuICAgIHRoaXMuYWx0U2hpcHBpbmdDb3N0ID0gcHJvcHMuYWx0U2hpcHBpbmdDb3N0O1xuICAgIHRoaXMuc2hpcHBpbmdUYXgxUmF0ZSA9IHByb3BzLnNoaXBwaW5nVGF4MVJhdGU7XG4gICAgdGhpcy5oYW5kbGluZ1RheDFSYXRlID0gcHJvcHMuaGFuZGxpbmdUYXgxUmF0ZTtcbiAgICB0aGlzLnNoaXBwaW5nVGF4MlJhdGUgPSBwcm9wcy5zaGlwcGluZ1RheDJSYXRlO1xuICAgIHRoaXMuaGFuZGxpbmdUYXgyUmF0ZSA9IHByb3BzLmhhbmRsaW5nVGF4MlJhdGU7XG4gICAgdGhpcy5zaGlwcGluZ1RheENvZGUgPSBwcm9wcy5zaGlwcGluZ1RheENvZGU7XG4gICAgdGhpcy5oYW5kbGluZ1RheENvZGUgPSBwcm9wcy5oYW5kbGluZ1RheENvZGU7XG4gICAgdGhpcy50b3RhbCA9IHByb3BzLnRvdGFsO1xuICAgIHRoaXMuaXRlbUxpc3QgPSBwcm9wcy5pdGVtTGlzdDtcbiAgICB0aGlzLmFjY291bnRpbmdCb29rRGV0YWlsTGlzdCA9IHByb3BzLmFjY291bnRpbmdCb29rRGV0YWlsTGlzdDtcbiAgICB0aGlzLmN1c3RvbUZpZWxkTGlzdCA9IHByb3BzLmN1c3RvbUZpZWxkTGlzdDtcbiAgICB0aGlzLmludGVybmFsSWQgPSBwcm9wcy5pbnRlcm5hbElkO1xuICAgIHRoaXMuZXh0ZXJuYWxJZCA9IHByb3BzLmV4dGVybmFsSWQ7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgSW52ZW50b3J5VHJhbnNmZXJJbnZlbnRvcnlQcm9wcyA9IHtcbiAgbGluZT86IG51bWJlcjtcbiAgaXRlbT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGRlc2NyaXB0aW9uPzogc3RyaW5nO1xuICB1bml0cz86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHF1YW50aXR5T25IYW5kPzogbnVtYmVyO1xuICBhZGp1c3RRdHlCeT86IG51bWJlcjtcbiAgc2VyaWFsTnVtYmVycz86IHN0cmluZztcbiAgZnJvbUJpbk51bWJlcnM/OiBzdHJpbmc7XG4gIHRvQmluTnVtYmVycz86IHN0cmluZztcbiAgaW52ZW50b3J5RGV0YWlsPzogUGxhdGZvcm1Db21tb24uSW52ZW50b3J5RGV0YWlsO1xuICBjdXN0b21GaWVsZExpc3Q/OiBQbGF0Zm9ybUNvcmUuQ3VzdG9tRmllbGRMaXN0O1xufTtcblxuZXhwb3J0IGNsYXNzIEludmVudG9yeVRyYW5zZmVySW52ZW50b3J5IGV4dGVuZHMgU29hcE1hcHBpbmdCYXNlIHtcbiAgbGluZT86IG51bWJlcjtcbiAgaXRlbT86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIGRlc2NyaXB0aW9uPzogc3RyaW5nO1xuICB1bml0cz86IFBsYXRmb3JtQ29yZS5SZWNvcmRSZWY7XG4gIHF1YW50aXR5T25IYW5kPzogbnVtYmVyO1xuICBhZGp1c3RRdHlCeT86IG51bWJlcjtcbiAgc2VyaWFsTnVtYmVycz86IHN0cmluZztcbiAgZnJvbUJpbk51bWJlcnM/OiBzdHJpbmc7XG4gIHRvQmluTnVtYmVycz86IHN0cmluZztcbiAgaW52ZW50b3J5RGV0YWlsPzogUGxhdGZvcm1Db21tb24uSW52ZW50b3J5RGV0YWlsO1xuICBjdXN0b21GaWVsZExpc3Q/OiBQbGF0Zm9ybUNvcmUuQ3VzdG9tRmllbGRMaXN0O1xuICBjb25zdHJ1Y3Rvcihwcm9wczogSW52ZW50b3J5VHJhbnNmZXJJbnZlbnRvcnlQcm9wcykge1xuICAgIHN1cGVyKHByb3BzV2l0aE1hcHBpbmdzTmFtZShwcm9wcywgTUFQUElOR1NfTkFNRSkpO1xuICAgIHRoaXMubGluZSA9IHByb3BzLmxpbmU7XG4gICAgdGhpcy5pdGVtID0gcHJvcHMuaXRlbTtcbiAgICB0aGlzLmRlc2NyaXB0aW9uID0gcHJvcHMuZGVzY3JpcHRpb247XG4gICAgdGhpcy51bml0cyA9IHByb3BzLnVuaXRzO1xuICAgIHRoaXMucXVhbnRpdHlPbkhhbmQgPSBwcm9wcy5xdWFudGl0eU9uSGFuZDtcbiAgICB0aGlzLmFkanVzdFF0eUJ5ID0gcHJvcHMuYWRqdXN0UXR5Qnk7XG4gICAgdGhpcy5zZXJpYWxOdW1iZXJzID0gcHJvcHMuc2VyaWFsTnVtYmVycztcbiAgICB0aGlzLmZyb21CaW5OdW1iZXJzID0gcHJvcHMuZnJvbUJpbk51bWJlcnM7XG4gICAgdGhpcy50b0Jpbk51bWJlcnMgPSBwcm9wcy50b0Jpbk51bWJlcnM7XG4gICAgdGhpcy5pbnZlbnRvcnlEZXRhaWwgPSBwcm9wcy5pbnZlbnRvcnlEZXRhaWw7XG4gICAgdGhpcy5jdXN0b21GaWVsZExpc3QgPSBwcm9wcy5jdXN0b21GaWVsZExpc3Q7XG4gIH1cbn1cbiJdfQ==