"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"transactions_sales_types.js","sourceRoot":"","sources":["../../../src/netsuite_webservices/2019_2/transactions_sales_types.ts"],"names":[],"mappings":"","sourcesContent":["export type ItemFulfillmentTermsOfSaleFedEx =\n  | \"_cfr\"\n  | \"_cif\"\n  | \"_cip\"\n  | \"_cpt\"\n  | \"_dap\"\n  | \"_dat\"\n  | \"_ddp\"\n  | \"_ddu\"\n  | \"_exw\"\n  | \"_fca\"\n  | \"_fob\";\n\nexport type ItemFulfillmentPackageFedExCodFreightTypeFedEx =\n  | \"_cODCharge\"\n  | \"_noneSelected\"\n  | \"_orderChargeNet\"\n  | \"_orderChargeTotal\"\n  | \"_shippingCharge\"\n  | \"_totalCharge\";\n\nexport type ItemFulfillmentAncillaryEndorsementFedEx =\n  | \"_addressCorrection\"\n  | \"_carrierLeaveIfNoResponse\"\n  | \"_changeService\"\n  | \"_forwardingService\"\n  | \"_returnService\";\n\nexport type TransactionChargeType =\n  | \"_concession\"\n  | \"_fixedDate\"\n  | \"_fixedUsage\"\n  | \"_milestone\"\n  | \"_oneTime\"\n  | \"_penalty\"\n  | \"_projectProgress\"\n  | \"_recurringService\"\n  | \"_timeBased\"\n  | \"_variableUsage\";\n\nexport type SalesOrderHandlingMode =\n  | \"_process\"\n  | \"_recordExternalEvent\"\n  | \"_saveOnly\";\n\nexport type ItemFulfillmentPackageUpsPackagingUps =\n  | \"_upsExpressBox\"\n  | \"_upsLetter\"\n  | \"_upsPak\"\n  | \"_upsTube\"\n  | \"_yourPackaging\";\n\nexport type AccountingTransactionRevenueStatus =\n  | \"_completed\"\n  | \"_inProgress\"\n  | \"_onRevCommitment\"\n  | \"_pending\";\n\nexport type ItemFulfillmentThirdPartyTypeFedEx =\n  | \"_billRecipient\"\n  | \"_billThirdParty\"\n  | \"_noneSelected\";\n\nexport type TransactionType =\n  | \"_assemblyBuild\"\n  | \"_assemblyUnbuild\"\n  | \"_binTransfer\"\n  | \"_binWorksheet\"\n  | \"_cashRefund\"\n  | \"_cashSale\"\n  | \"_check\"\n  | \"_creditMemo\"\n  | \"_custom\"\n  | \"_customPurchase\"\n  | \"_customSale\"\n  | \"_customerDeposit\"\n  | \"_customerPayment\"\n  | \"_customerRefund\"\n  | \"_deposit\"\n  | \"_depositApplication\"\n  | \"_estimate\"\n  | \"_expenseReport\"\n  | \"_inboundShipment\"\n  | \"_inventoryAdjustment\"\n  | \"_inventoryCostRevaluation\"\n  | \"_inventoryTransfer\"\n  | \"_invoice\"\n  | \"_itemFulfillment\"\n  | \"_itemReceipt\"\n  | \"_journal\"\n  | \"_opportunity\"\n  | \"_paycheck\"\n  | \"_paycheckJournal\"\n  | \"_periodEndJournal\"\n  | \"_purchaseOrder\"\n  | \"_requisition\"\n  | \"_returnAuthorization\"\n  | \"_salesOrder\"\n  | \"_transferOrder\"\n  | \"_vendorBill\"\n  | \"_vendorCredit\"\n  | \"_vendorPayment\"\n  | \"_vendorReturnAuthorization\"\n  | \"_workOrder\"\n  | \"_workOrderClose\"\n  | \"_workOrderCompletion\"\n  | \"_workOrderIssue\";\n\nexport type CashSalePaymentOperation =\n  | \"_authorization\"\n  | \"_capture\"\n  | \"_sale\"\n  | \"_refund\"\n  | \"_credit\"\n  | \"_refresh\"\n  | \"_void\";\n\nexport type ItemFulfillmentPackageFedExDeliveryConfFedEx = \"_signatureRequired\";\n\nexport type TransactionPaymentEventHoldReason =\n  | \"_amountExceedsMaximumAllowedAmount\"\n  | \"_authorizationDecline\"\n  | \"_cardExpired\"\n  | \"_cardInvalid\"\n  | \"_confirmationOfTheOperationIsPending\"\n  | \"_externalFraudRejection\"\n  | \"_externalFraudReview\"\n  | \"_failedToPrimeDevice\"\n  | \"_fatalError\"\n  | \"_forwardedToPayerAuthentication\"\n  | \"_forwardRequested\"\n  | \"_gatewayAsynchronousNotification\"\n  | \"_gatewayError\"\n  | \"_generalHold\"\n  | \"_generalReject\"\n  | \"_operationWasSuccessful\"\n  | \"_operationWasTerminated\"\n  | \"_overridenBy\"\n  | \"_partnerDecline\"\n  | \"_paymentDeviceWasPrimed\"\n  | \"_paymentOperationWasCanceled\"\n  | \"_systemError\"\n  | \"_verbalAuthorizationRequested\"\n  | \"_verificationRejection\"\n  | \"_verificationRequired\";\n\nexport type SalesOrderItemCreatePo = \"_dropShipment\" | \"_specialOrder\";\n\nexport type TransactionApprovalStatus =\n  | \"_approved\"\n  | \"_open\"\n  | \"_pendingApproval\"\n  | \"_rejected\";\n\nexport type TransactionPaymentEventResult =\n  | \"_accept\"\n  | \"_holdOverride\"\n  | \"_paymentHold\"\n  | \"_pending\"\n  | \"_reject\";\n\nexport type ItemFulfillmentAccessibilityTypeFedEx =\n  | \"_accessible\"\n  | \"_inaccessible\";\n\nexport type CashSaleHandlingMode =\n  | \"_process\"\n  | \"_recordExternalEvent\"\n  | \"_saveOnly\";\n\nexport type ItemFulfillmentPackageUpsDeliveryConfUps =\n  | \"_noneSelected\"\n  | \"_adultSignatureRequired\"\n  | \"_deliveryConfirmation\"\n  | \"_signatureRequired\";\n\nexport type ItemFulfillmentPackageUspsPackagingUsps =\n  | \"_parcel\"\n  | \"_flatRateBox\"\n  | \"_flatRateEnvelope\"\n  | \"_smallFlatRateBox\"\n  | \"_mediumFlatRateBox\"\n  | \"_largeFlatRateBox\"\n  | \"_irregularPackage\"\n  | \"_largePackage\"\n  | \"_oversizedPackage\";\n\nexport type ForecastType =\n  | \"_omitted\"\n  | \"_worstCase\"\n  | \"_mostLikely\"\n  | \"_upside\";\n\nexport type TransactionLineType =\n  | \"_adjustedQuantity\"\n  | \"_advanceToApplyAmount\"\n  | \"_billExchangeRateVariance\"\n  | \"_billPriceVariance\"\n  | \"_billQuantityVariance\"\n  | \"_countQuantity\"\n  | \"_dropshipExpense\"\n  | \"_gainLoss\"\n  | \"_inTransit\"\n  | \"_item\"\n  | \"_materialOverhead\"\n  | \"_nonReimbursuableExpenseOffset\"\n  | \"_nonReimbursuableExpenseOriginal\"\n  | \"_ownershipTransfer\"\n  | \"_personalExpensesNettingLine\"\n  | \"_personalExpensesTheExpenseLine\"\n  | \"_pickingLine\"\n  | \"_productionPriceVariance\"\n  | \"_productionQuantityVariance\"\n  | \"_purchasePriceVariance\"\n  | \"_receiving\"\n  | \"_routingItem\"\n  | \"_routingWorkInProcess\"\n  | \"_scrap\"\n  | \"_shipping\"\n  | \"_snapshotQuantity\"\n  | \"_stagingLine\"\n  | \"_totalBillVariance\"\n  | \"_unbuildVariance\"\n  | \"_workInProcess\"\n  | \"_workInProcessVariance\";\n\nexport type ItemFulfillmentPackageFedExPackagingFedEx =\n  | \"_fedExBox\"\n  | \"_fedEx10kgBox\"\n  | \"_fedEx25kgBox\"\n  | \"_fedExEnvelope\"\n  | \"_fedExPak\"\n  | \"_fedExTube\"\n  | \"_yourPackaging\";\n\nexport type SalesOrderPaymentOperation =\n  | \"_authorization\"\n  | \"_capture\"\n  | \"_sale\"\n  | \"_refund\"\n  | \"_credit\"\n  | \"_refresh\"\n  | \"_void\";\n\nexport type AccountingTransactionRevCommitStatus =\n  | \"_committed\"\n  | \"_partiallyCommitted\"\n  | \"_pendingCommitment\";\n\nexport type ItemFulfillmentHomeDeliveryTypeFedEx =\n  | \"_appointment\"\n  | \"_dateCertain\"\n  | \"_evening\";\n\nexport type ItemFulfillmentPackageFedExPriorityAlertTypeFedEx =\n  | \"_fedexPriorityAlert\"\n  | \"_fedexPriorityAlertPlus\"\n  | \"_noneSelected\";\n\nexport type ItemFulfillmentThirdPartyTypeUps =\n  | \"_consigneeBilling\"\n  | \"_noneSelected\"\n  | \"_thirdPartyBilling\";\n\nexport type ItemFulfillmentPackageFedExSignatureOptionsFedEx =\n  | \"_adult\"\n  | \"_direct\"\n  | \"_indirect\";\n\nexport type ItemFulfillmentLicenseExceptionUps =\n  | \"_agr\"\n  | \"_apr\"\n  | \"_avs\"\n  | \"_bag\"\n  | \"_civ\"\n  | \"_ctp\"\n  | \"_enc\"\n  | \"_gbs\"\n  | \"_gft\"\n  | \"_gov\"\n  | \"_kmi\"\n  | \"_lvs\"\n  | \"_nlr\"\n  | \"_rpl\"\n  | \"_tmp\"\n  | \"_tspa\"\n  | \"_tsr\"\n  | \"_tsu\";\n\nexport type ItemFulfillmentExportTypeUps =\n  | \"_domesticExports\"\n  | \"_foreignExports\"\n  | \"_foreignMilitarySales\";\n\nexport type ItemFulfillmentB13AFilingOptionFedEx =\n  | \"_filedElectronically\"\n  | \"_manuallyAttached\"\n  | \"_notRequired\"\n  | \"_summaryReporting\";\n\nexport type ItemFulfillmentPackageUspsDeliveryConfUsps =\n  | \"_deliveryConfirmation\"\n  | \"_signatureConfirmation\";\n\nexport type ItemFulfillmentPackageFedExCodMethodFedEx =\n  | \"_any\"\n  | \"_cash\"\n  | \"_guaranteedFunds\";\n\nexport type OpportunityStatus =\n  | \"_closedLost\"\n  | \"_closedWon\"\n  | \"_inProgress\"\n  | \"_issuedEstimate\";\n\nexport type TransactionLinkType =\n  | \"_advancedCostAmortization\"\n  | \"_advancedExpenseAmortization\"\n  | \"_authorizationDeposit\"\n  | \"_blcgaJeFullfillment\"\n  | \"_captureAuthorization\"\n  | \"_closedPeriodFxVariance\"\n  | \"_closeWorkOrder\"\n  | \"_cogsLink\"\n  | \"_collectTegata\"\n  | \"_commission\"\n  | \"_contractCostDeferral\"\n  | \"_contractCostDeferralReversal\"\n  | \"_deferredRevenueReallocation\"\n  | \"_depositApplication\"\n  | \"_depositRefundCheck\"\n  | \"_discountTegata\"\n  | \"_dropShipment\"\n  | \"_endorseTegata\"\n  | \"_estimateInvoicing\"\n  | \"_fulfillmentRequestFulfillment\"\n  | \"_glImpactAdjustment\"\n  | \"_intercompanyAdjustment\"\n  | \"_inTransitPayment\"\n  | \"_inventoryCountAdjustment\"\n  | \"_kitShipment\"\n  | \"_landedCost\"\n  | \"_linkedReturnCost\"\n  | \"_opportunityClose\"\n  | \"_opportunityEstimate\"\n  | \"_orderBillInvoice\"\n  | \"_orderFulfillmentRequest\"\n  | \"_orderPickingPacking\"\n  | \"_ownershipTransferItemReceipt\"\n  | \"_payment\"\n  | \"_paymentRefund\"\n  | \"_payTegata\"\n  | \"_poToOwnershipTransfer\"\n  | \"_prepaymentApplication\"\n  | \"_purchaseContractOrder\"\n  | \"_purchaseOrderPrepayment\"\n  | \"_purchaseOrderRequisition\"\n  | \"_purchaseOrderToBlanket\"\n  | \"_purchaseReturn\"\n  | \"_receiptBill\"\n  | \"_receiptFulfillment\"\n  | \"_reimbursement\"\n  | \"_revalueWorkOrder\"\n  | \"_revenueAmortizatonRecognition\"\n  | \"_revenueArrangement\"\n  | \"_revenueCommitted\"\n  | \"_rfqToVendorRfq\"\n  | \"_saleReturn\"\n  | \"_salesOrderAuthorization\"\n  | \"_salesOrderDegross\"\n  | \"_salesOrderDeposit\"\n  | \"_salesOrderRevenueRevaluation\"\n  | \"_sourceOfRevenueContract\"\n  | \"_specialOrder\"\n  | \"_systemJournal\"\n  | \"_transferOrderFulfillmentReceipt\"\n  | \"_vendorBillVariance\"\n  | \"_vendorRfqToPurchaseContract\"\n  | \"_waveOrder\"\n  | \"_waveShipment\"\n  | \"_wipBuild\"\n  | \"_workOrderBuild\";\n\nexport type ItemFulfillmentMethodOfTransportUps =\n  | \"_air\"\n  | \"_airContainerized\"\n  | \"_auto\"\n  | \"_fixedTransportInstallations\"\n  | \"_mail\"\n  | \"_passengerHandcarried\"\n  | \"_pedestrian\"\n  | \"_rail\"\n  | \"_railContainerized\"\n  | \"_roadOther\"\n  | \"_seaBarge\"\n  | \"_seaContainerized\"\n  | \"_seaNoncontainerized\"\n  | \"_truck\"\n  | \"_truckContainerized\";\n\nexport type ItemFulfillmentShipStatus = \"_packed\" | \"_picked\" | \"_shipped\";\n\nexport type TransactionStatus =\n  | \"_billCancelled\"\n  | \"_billOpen\"\n  | \"_billPaidInFull\"\n  | \"_billPaymentApproved\"\n  | \"_billPaymentConfirmed\"\n  | \"_billPaymentDeclined\"\n  | \"_billPaymentInTransit\"\n  | \"_billPaymentOnlineBillPayPendingAccountingApproval\"\n  | \"_billPaymentPendingApproval\"\n  | \"_billPaymentRejected\"\n  | \"_billPaymentVoided\"\n  | \"_billPendingApproval\"\n  | \"_billRejected\"\n  | \"_cashSaleDeposited\"\n  | \"_cashSaleNotDeposited\"\n  | \"_cashSaleUnapprovedPayment\"\n  | \"_checkOnlineBillPayPendingAccountingApproval\"\n  | \"_checkVoided\"\n  | \"_commissionOverpaid\"\n  | \"_commissionPaidInFull\"\n  | \"_commissionPendingAccountingApproval\"\n  | \"_commissionPendingPayment\"\n  | \"_commissionRejectedByAccounting\"\n  | \"_creditMemoFullyApplied\"\n  | \"_creditMemoOpen\"\n  | \"_creditMemoVoided\"\n  | \"_customerDepositDeposited\"\n  | \"_customerDepositFullyApplied\"\n  | \"_customerDepositNotDeposited\"\n  | \"_customerDepositUnapprovedPayment\"\n  | \"_customerRefundVoided\"\n  | \"_estimateClosed\"\n  | \"_estimateExpired\"\n  | \"_estimateOpen\"\n  | \"_estimateProcessed\"\n  | \"_estimateVoided\"\n  | \"_expenseReportApprovedByAccounting\"\n  | \"_expenseReportApprovedOverriddenByAccounting\"\n  | \"_expenseReportInProgress\"\n  | \"_expenseReportPaidInFull\"\n  | \"_expenseReportPaymentInTransit\"\n  | \"_expenseReportPendingAccountingApproval\"\n  | \"_expenseReportPendingSupervisorApproval\"\n  | \"_expenseReportRejectedByAccounting\"\n  | \"_expenseReportRejectedBySupervisor\"\n  | \"_expenseReportRejectedOverriddenByAccounting\"\n  | \"_expenseReportVoided\"\n  | \"_invoiceOpen\"\n  | \"_invoicePaidInFull\"\n  | \"_invoicePendingApproval\"\n  | \"_invoiceRejected\"\n  | \"_invoiceVoided\"\n  | \"_itemFulfillmentPacked\"\n  | \"_itemFulfillmentPicked\"\n  | \"_itemFulfillmentShipped\"\n  | \"_journalApprovedForPosting\"\n  | \"_journalPendingApproval\"\n  | \"_journalRejected\"\n  | \"_opportunityClosedLost\"\n  | \"_opportunityClosedWon\"\n  | \"_opportunityInProgress\"\n  | \"_opportunityIssuedEstimate\"\n  | \"_paycheckCommitted\"\n  | \"_paycheckCreated\"\n  | \"_paycheckError\"\n  | \"_paycheckPendingCommitment\"\n  | \"_paycheckPendingTaxCalculation\"\n  | \"_paycheckPreview\"\n  | \"_paycheckReversed\"\n  | \"_paymentDeposited\"\n  | \"_paymentNotDeposited\"\n  | \"_paymentUnapprovedPayment\"\n  | \"_payrollLiabilityCheckVoided\"\n  | \"_periodEndJournalApprovedForPosting\"\n  | \"_periodEndJournalPendingApproval\"\n  | \"_periodEndJournalRejected\"\n  | \"_purchaseOrderClosed\"\n  | \"_purchaseOrderFullyBilled\"\n  | \"_purchaseOrderPartiallyReceived\"\n  | \"_purchaseOrderPendingBill\"\n  | \"_purchaseOrderPendingBillingPartiallyReceived\"\n  | \"_purchaseOrderPendingReceipt\"\n  | \"_purchaseOrderPendingSupervisorApproval\"\n  | \"_purchaseOrderPlanned\"\n  | \"_purchaseOrderRejectedBySupervisor\"\n  | \"_requisitionCancelled\"\n  | \"_requisitionClosed\"\n  | \"_requisitionFullyOrdered\"\n  | \"_requisitionFullyReceived\"\n  | \"_requisitionPartiallyOrdered\"\n  | \"_requisitionPartiallyReceived\"\n  | \"_requisitionPendingApproval\"\n  | \"_requisitionPendingOrder\"\n  | \"_requisitionRejected\"\n  | \"_returnAuthorizationCancelled\"\n  | \"_returnAuthorizationClosed\"\n  | \"_returnAuthorizationPartiallyReceived\"\n  | \"_returnAuthorizationPendingApproval\"\n  | \"_returnAuthorizationPendingReceipt\"\n  | \"_returnAuthorizationPendingRefund\"\n  | \"_returnAuthorizationPendingRefundPartiallyReceived\"\n  | \"_returnAuthorizationRefunded\"\n  | \"_salesOrderBilled\"\n  | \"_salesOrderCancelled\"\n  | \"_salesOrderClosed\"\n  | \"_salesOrderPartiallyFulfilled\"\n  | \"_salesOrderPendingApproval\"\n  | \"_salesOrderPendingBilling\"\n  | \"_salesOrderPendingBillingPartiallyFulfilled\"\n  | \"_salesOrderPendingFulfillment\"\n  | \"_salesTaxPaymentOnlineBillPayPendingAccountingApproval\"\n  | \"_salesTaxPaymentVoided\"\n  | \"_statementChargeOpen\"\n  | \"_statementChargePaidInFull\"\n  | \"_taxLiabilityChequeVoided\"\n  | \"_tegataPayableEndorsed\"\n  | \"_tegataPayableIssued\"\n  | \"_tegataPayablePaid\"\n  | \"_tegataReceivablesCollected\"\n  | \"_tegataReceivablesDiscounted\"\n  | \"_tegataReceivablesEndorsed\"\n  | \"_tegataReceivablesHolding\"\n  | \"_tegataReceivablesVoided\"\n  | \"_transferOrderClosed\"\n  | \"_transferOrderPartiallyFulfilled\"\n  | \"_transferOrderPendingApproval\"\n  | \"_transferOrderPendingFulfillment\"\n  | \"_transferOrderPendingReceipt\"\n  | \"_transferOrderPendingReceiptPartiallyFulfilled\"\n  | \"_transferOrderReceived\"\n  | \"_transferOrderRejected\"\n  | \"_vendorReturnAuthorizationCancelled\"\n  | \"_vendorReturnAuthorizationClosed\"\n  | \"_vendorReturnAuthorizationCredited\"\n  | \"_vendorReturnAuthorizationPartiallyReturned\"\n  | \"_vendorReturnAuthorizationPendingApproval\"\n  | \"_vendorReturnAuthorizationPendingCredit\"\n  | \"_vendorReturnAuthorizationPendingCreditPartiallyReturned\"\n  | \"_vendorReturnAuthorizationPendingReturn\"\n  | \"_workOrderBuilt\"\n  | \"_workOrderCancelled\"\n  | \"_workOrderClosed\"\n  | \"_workOrderPartiallyBuilt\"\n  | \"_workOrderPendingBuild\"\n  | \"_workOrderPlanned\";\n\nexport type ItemFulfillmentHazmatTypeFedEx = \"_dangerousGoods\" | \"_hazmat\";\n\nexport type SalesOrderItemCommitInventory =\n  | \"_availableQty\"\n  | \"_completeQty\"\n  | \"_doNotCommit\";\n\nexport type ItemFulfillmentPackageUpsCodMethodUps =\n  | \"_cashiersCheckMoneyOrder\"\n  | \"_checkCashiersCheckMoneyOrder\";\n\nexport type SalesOrderItemFulfillmentChoice = \"_ship\" | \"_storePickup\";\n\nexport type SalesOrderOrderStatus =\n  | \"_pendingApproval\"\n  | \"_pendingFulfillment\"\n  | \"_cancelled\"\n  | \"_partiallyFulfilled\"\n  | \"_pendingBillingPartFulfilled\"\n  | \"_pendingBilling\"\n  | \"_fullyBilled\"\n  | \"_closed\"\n  | \"_undefined\";\n\nexport type ItemFulfillmentPackageFedExAdmPackageTypeFedEx =\n  | \"_bag\"\n  | \"_barrel\"\n  | \"_basketOrHamper\"\n  | \"_box\"\n  | \"_bucket\"\n  | \"_bundle\"\n  | \"_cage\"\n  | \"_carton\"\n  | \"_case\"\n  | \"_chest\"\n  | \"_container\"\n  | \"_crate\"\n  | \"_cylinder\"\n  | \"_drum\"\n  | \"_envelope\"\n  | \"_package\"\n  | \"_pail\"\n  | \"_pallet\"\n  | \"_parcel\"\n  | \"_pieces\"\n  | \"_reel\"\n  | \"_roll\"\n  | \"_sack\"\n  | \"_shrinkWrapped\"\n  | \"_skid\"\n  | \"_tank\"\n  | \"_toteBin\"\n  | \"_tube\"\n  | \"_unit\";\n\nexport type TransactionPaymentEventType =\n  | \"_authorization\"\n  | \"_captureAuthorization\"\n  | \"_credit\"\n  | \"_overrideHold\"\n  | \"_refreshAuthorization\"\n  | \"_refund\"\n  | \"_sale\"\n  | \"_voidAuthorization\";\n"]}