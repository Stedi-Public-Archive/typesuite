import * as PlatformCore from "./platform_core";
import * as PlatformCommon from "./platform_common";
import { SoapMappingBase } from "../../soap-types";
export declare type InterCompanyJournalEntryAccountingBookDetailListProps = {
    interCompanyJournalEntryAccountingBookDetail?: InterCompanyJournalEntryAccountingBookDetail[];
    replaceAll?: boolean;
};
export declare class InterCompanyJournalEntryAccountingBookDetailList extends SoapMappingBase {
    interCompanyJournalEntryAccountingBookDetail?: InterCompanyJournalEntryAccountingBookDetail[];
    replaceAll?: boolean;
    constructor(props: InterCompanyJournalEntryAccountingBookDetailListProps);
}
export declare type StatisticalJournalEntryLineListProps = {
    statisticalJournalEntryLine?: StatisticalJournalEntryLine[];
    replaceAll?: boolean;
};
export declare class StatisticalJournalEntryLineList extends SoapMappingBase {
    statisticalJournalEntryLine?: StatisticalJournalEntryLine[];
    replaceAll?: boolean;
    constructor(props: StatisticalJournalEntryLineListProps);
}
export declare type JournalEntryLineProps = {
    account?: PlatformCore.RecordRef;
    line?: number;
    debit?: number;
    credit?: number;
    taxAccount?: PlatformCore.RecordRef;
    lineTaxCode?: PlatformCore.RecordRef;
    lineTaxRate?: number;
    debitTax?: number;
    creditTax?: number;
    taxBasis?: number;
    totalAmount?: number;
    taxCode?: PlatformCore.RecordRef;
    memo?: string;
    taxRate1?: number;
    entity?: PlatformCore.RecordRef;
    grossAmt?: number;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    eliminate?: boolean;
    schedule?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    residual?: string;
    scheduleNum?: PlatformCore.RecordRef;
    tax1Amt?: number;
    tax1Acct?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
};
export declare class JournalEntryLine extends SoapMappingBase {
    account?: PlatformCore.RecordRef;
    line?: number;
    debit?: number;
    credit?: number;
    taxAccount?: PlatformCore.RecordRef;
    lineTaxCode?: PlatformCore.RecordRef;
    lineTaxRate?: number;
    debitTax?: number;
    creditTax?: number;
    taxBasis?: number;
    totalAmount?: number;
    taxCode?: PlatformCore.RecordRef;
    memo?: string;
    taxRate1?: number;
    entity?: PlatformCore.RecordRef;
    grossAmt?: number;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    eliminate?: boolean;
    schedule?: PlatformCore.RecordRef;
    startDate?: string;
    endDate?: string;
    residual?: string;
    scheduleNum?: PlatformCore.RecordRef;
    tax1Amt?: number;
    tax1Acct?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    constructor(props: JournalEntryLineProps);
}
export declare type AdvInterCompanyJournalEntryAccountingBookDetailProps = {
    accountingBook?: PlatformCore.RecordRef;
    currency?: PlatformCore.RecordRef;
    subsidiary?: PlatformCore.RecordRef;
    exchangeRate?: number;
};
export declare class AdvInterCompanyJournalEntryAccountingBookDetail extends SoapMappingBase {
    accountingBook?: PlatformCore.RecordRef;
    currency?: PlatformCore.RecordRef;
    subsidiary?: PlatformCore.RecordRef;
    exchangeRate?: number;
    constructor(props: AdvInterCompanyJournalEntryAccountingBookDetailProps);
}
export declare type AdvInterCompanyJournalEntryAccountingBookDetailListProps = {
    interCompanyJournalEntryAccountingBookDetail?: AdvInterCompanyJournalEntryAccountingBookDetail[];
    replaceAll?: boolean;
};
export declare class AdvInterCompanyJournalEntryAccountingBookDetailList extends SoapMappingBase {
    interCompanyJournalEntryAccountingBookDetail?: AdvInterCompanyJournalEntryAccountingBookDetail[];
    replaceAll?: boolean;
    constructor(props: AdvInterCompanyJournalEntryAccountingBookDetailListProps);
}
export declare type JournalEntryProps = {
    postingPeriod?: PlatformCore.RecordRef;
    tranDate?: string;
    currency?: PlatformCore.RecordRef;
    exchangeRate?: number;
    tranId?: string;
    reversalDate?: string;
    reversalDefer?: boolean;
    parentExpenseAlloc?: PlatformCore.RecordRef;
    isBookSpecific?: boolean;
    accountingBook?: PlatformCore.RecordRef;
    reversalEntry?: string;
    createdFrom?: PlatformCore.RecordRef;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiary?: PlatformCore.RecordRef;
    nexus?: PlatformCore.RecordRef;
    subsidiaryTaxRegNum?: PlatformCore.RecordRef;
    taxPointDate?: string;
    memo?: string;
    toSubsidiary?: PlatformCore.RecordRef;
    approved?: boolean;
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    lineList?: JournalEntryLineList;
    accountingBookDetailList?: PlatformCommon.AccountingBookDetailList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class JournalEntry extends PlatformCore.Record {
    postingPeriod?: PlatformCore.RecordRef;
    tranDate?: string;
    currency?: PlatformCore.RecordRef;
    exchangeRate?: number;
    tranId?: string;
    reversalDate?: string;
    reversalDefer?: boolean;
    parentExpenseAlloc?: PlatformCore.RecordRef;
    isBookSpecific?: boolean;
    accountingBook?: PlatformCore.RecordRef;
    reversalEntry?: string;
    createdFrom?: PlatformCore.RecordRef;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiary?: PlatformCore.RecordRef;
    nexus?: PlatformCore.RecordRef;
    subsidiaryTaxRegNum?: PlatformCore.RecordRef;
    taxPointDate?: string;
    memo?: string;
    toSubsidiary?: PlatformCore.RecordRef;
    approved?: boolean;
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    lineList?: JournalEntryLineList;
    accountingBookDetailList?: PlatformCommon.AccountingBookDetailList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: JournalEntryProps);
}
export declare type AdvInterCompanyJournalEntryLineListProps = {
    line?: AdvInterCompanyJournalEntryLine[];
    replaceAll?: boolean;
};
export declare class AdvInterCompanyJournalEntryLineList extends SoapMappingBase {
    line?: AdvInterCompanyJournalEntryLine[];
    replaceAll?: boolean;
    constructor(props: AdvInterCompanyJournalEntryLineListProps);
}
export declare type PeriodEndJournalProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    transactionNumber?: string;
    accountingBook?: PlatformCore.RecordRef;
    customForm?: PlatformCore.RecordRef;
    tranId?: string;
    trandate?: string;
    postingPeriod?: PlatformCore.RecordRef;
    memo?: string;
    subsidiary?: PlatformCore.RecordRef;
    sourceSubsidiary?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    department?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    mainAccount?: PlatformCore.RecordRef;
    currency?: PlatformCore.RecordRef;
    creditTotal?: number;
    debitTotal?: number;
    lineList?: PeriodEndJournalLineList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class PeriodEndJournal extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    transactionNumber?: string;
    accountingBook?: PlatformCore.RecordRef;
    customForm?: PlatformCore.RecordRef;
    tranId?: string;
    trandate?: string;
    postingPeriod?: PlatformCore.RecordRef;
    memo?: string;
    subsidiary?: PlatformCore.RecordRef;
    sourceSubsidiary?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    department?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    mainAccount?: PlatformCore.RecordRef;
    currency?: PlatformCore.RecordRef;
    creditTotal?: number;
    debitTotal?: number;
    lineList?: PeriodEndJournalLineList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: PeriodEndJournalProps);
}
export declare type AdvInterCompanyJournalEntryProps = {
    postingPeriod?: PlatformCore.RecordRef;
    customForm?: PlatformCore.RecordRef;
    tranDate?: string;
    currency?: PlatformCore.RecordRef;
    tranId?: string;
    reversalDate?: string;
    reversalDefer?: boolean;
    parentExpenseAlloc?: PlatformCore.RecordRef;
    isBookSpecific?: boolean;
    accountingBook?: PlatformCore.RecordRef;
    reversalEntry?: string;
    createdFrom?: PlatformCore.RecordRef;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiary?: PlatformCore.RecordRef;
    memo?: string;
    approved?: boolean;
    createdDate?: string;
    lastModifiedDate?: string;
    performAutoBalance?: boolean;
    lineList?: AdvInterCompanyJournalEntryLineList;
    accountingBookDetailList?: AdvInterCompanyJournalEntryAccountingBookDetailList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class AdvInterCompanyJournalEntry extends PlatformCore.Record {
    postingPeriod?: PlatformCore.RecordRef;
    customForm?: PlatformCore.RecordRef;
    tranDate?: string;
    currency?: PlatformCore.RecordRef;
    tranId?: string;
    reversalDate?: string;
    reversalDefer?: boolean;
    parentExpenseAlloc?: PlatformCore.RecordRef;
    isBookSpecific?: boolean;
    accountingBook?: PlatformCore.RecordRef;
    reversalEntry?: string;
    createdFrom?: PlatformCore.RecordRef;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiary?: PlatformCore.RecordRef;
    memo?: string;
    approved?: boolean;
    createdDate?: string;
    lastModifiedDate?: string;
    performAutoBalance?: boolean;
    lineList?: AdvInterCompanyJournalEntryLineList;
    accountingBookDetailList?: AdvInterCompanyJournalEntryAccountingBookDetailList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: AdvInterCompanyJournalEntryProps);
}
export declare type InterCompanyJournalEntryLineListProps = {
    line?: InterCompanyJournalEntryLine[];
    replaceAll?: boolean;
};
export declare class InterCompanyJournalEntryLineList extends SoapMappingBase {
    line?: InterCompanyJournalEntryLine[];
    replaceAll?: boolean;
    constructor(props: InterCompanyJournalEntryLineListProps);
}
export declare type StatisticalJournalEntryLineProps = {
    account?: PlatformCore.RecordRef;
    line?: number;
    location?: PlatformCore.RecordRef;
    scheduleNum?: PlatformCore.RecordRef;
    debit?: number;
    memo?: string;
    entity?: PlatformCore.RecordRef;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    lineUnit?: PlatformCore.RecordRef;
    previewDebit?: string;
    customFieldList?: PlatformCore.CustomFieldList;
};
export declare class StatisticalJournalEntryLine extends SoapMappingBase {
    account?: PlatformCore.RecordRef;
    line?: number;
    location?: PlatformCore.RecordRef;
    scheduleNum?: PlatformCore.RecordRef;
    debit?: number;
    memo?: string;
    entity?: PlatformCore.RecordRef;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    lineUnit?: PlatformCore.RecordRef;
    previewDebit?: string;
    customFieldList?: PlatformCore.CustomFieldList;
    constructor(props: StatisticalJournalEntryLineProps);
}
export declare type InterCompanyJournalEntryAccountingBookDetailProps = {
    accountingBook?: PlatformCore.RecordRef;
    currency?: PlatformCore.RecordRef;
    subsidiary?: PlatformCore.RecordRef;
    exchangeRate?: number;
};
export declare class InterCompanyJournalEntryAccountingBookDetail extends SoapMappingBase {
    accountingBook?: PlatformCore.RecordRef;
    currency?: PlatformCore.RecordRef;
    subsidiary?: PlatformCore.RecordRef;
    exchangeRate?: number;
    constructor(props: InterCompanyJournalEntryAccountingBookDetailProps);
}
export declare type InterCompanyJournalEntryProps = {
    postingPeriod?: PlatformCore.RecordRef;
    customForm?: PlatformCore.RecordRef;
    tranDate?: string;
    currency?: PlatformCore.RecordRef;
    exchangeRate?: number;
    tranId?: string;
    reversalDate?: string;
    reversalDefer?: boolean;
    parentExpenseAlloc?: PlatformCore.RecordRef;
    isBookSpecific?: boolean;
    accountingBook?: PlatformCore.RecordRef;
    reversalEntry?: string;
    createdFrom?: PlatformCore.RecordRef;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiary?: PlatformCore.RecordRef;
    memo?: string;
    toSubsidiary?: PlatformCore.RecordRef;
    approved?: boolean;
    createdDate?: string;
    lastModifiedDate?: string;
    lineList?: InterCompanyJournalEntryLineList;
    accountingBookDetailList?: InterCompanyJournalEntryAccountingBookDetailList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class InterCompanyJournalEntry extends PlatformCore.Record {
    postingPeriod?: PlatformCore.RecordRef;
    customForm?: PlatformCore.RecordRef;
    tranDate?: string;
    currency?: PlatformCore.RecordRef;
    exchangeRate?: number;
    tranId?: string;
    reversalDate?: string;
    reversalDefer?: boolean;
    parentExpenseAlloc?: PlatformCore.RecordRef;
    isBookSpecific?: boolean;
    accountingBook?: PlatformCore.RecordRef;
    reversalEntry?: string;
    createdFrom?: PlatformCore.RecordRef;
    department?: PlatformCore.RecordRef;
    clazz?: PlatformCore.RecordRef;
    location?: PlatformCore.RecordRef;
    subsidiary?: PlatformCore.RecordRef;
    memo?: string;
    toSubsidiary?: PlatformCore.RecordRef;
    approved?: boolean;
    createdDate?: string;
    lastModifiedDate?: string;
    lineList?: InterCompanyJournalEntryLineList;
    accountingBookDetailList?: InterCompanyJournalEntryAccountingBookDetailList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: InterCompanyJournalEntryProps);
}
export declare type InterCompanyJournalEntryLineProps = {
    lineSubsidiary?: PlatformCore.RecordRef;
    account?: PlatformCore.RecordRef;
    line?: number;
    debit?: number;
    credit?: number;
    taxCode?: PlatformCore.RecordRef;
    memo?: string;
    taxRate1?: number;
    entity?: PlatformCore.RecordRef;
    grossAmt?: number;
    schedule?: PlatformCore.RecordRef;
    department?: PlatformCore.RecordRef;
    startDate?: string;
    clazz?: PlatformCore.RecordRef;
    endDate?: string;
    location?: PlatformCore.RecordRef;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    eliminate?: boolean;
    residual?: string;
    amortizationSched?: PlatformCore.RecordRef;
    scheduleNum?: PlatformCore.RecordRef;
    amortizStartDate?: string;
    amortizationEndDate?: string;
    amortizationResidual?: string;
    tax1Amt?: number;
    tax1Acct?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
};
export declare class InterCompanyJournalEntryLine extends SoapMappingBase {
    lineSubsidiary?: PlatformCore.RecordRef;
    account?: PlatformCore.RecordRef;
    line?: number;
    debit?: number;
    credit?: number;
    taxCode?: PlatformCore.RecordRef;
    memo?: string;
    taxRate1?: number;
    entity?: PlatformCore.RecordRef;
    grossAmt?: number;
    schedule?: PlatformCore.RecordRef;
    department?: PlatformCore.RecordRef;
    startDate?: string;
    clazz?: PlatformCore.RecordRef;
    endDate?: string;
    location?: PlatformCore.RecordRef;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    eliminate?: boolean;
    residual?: string;
    amortizationSched?: PlatformCore.RecordRef;
    scheduleNum?: PlatformCore.RecordRef;
    amortizStartDate?: string;
    amortizationEndDate?: string;
    amortizationResidual?: string;
    tax1Amt?: number;
    tax1Acct?: PlatformCore.RecordRef;
    customFieldList?: PlatformCore.CustomFieldList;
    constructor(props: InterCompanyJournalEntryLineProps);
}
export declare type AdvInterCompanyJournalEntryLineProps = {
    lineSubsidiary?: PlatformCore.RecordRef;
    account?: PlatformCore.RecordRef;
    line?: number;
    debit?: number;
    credit?: number;
    taxCode?: PlatformCore.RecordRef;
    memo?: string;
    taxRate1?: number;
    entity?: PlatformCore.RecordRef;
    dueToFromSubsidiary?: PlatformCore.RecordRef;
    grossAmt?: number;
    schedule?: PlatformCore.RecordRef;
    department?: PlatformCore.RecordRef;
    startDate?: string;
    clazz?: PlatformCore.RecordRef;
    endDate?: string;
    location?: PlatformCore.RecordRef;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    eliminate?: boolean;
    residual?: string;
    amortizationSched?: PlatformCore.RecordRef;
    scheduleNum?: PlatformCore.RecordRef;
    amortizStartDate?: string;
    amortizationEndDate?: string;
    amortizationResidual?: string;
    tax1Amt?: number;
    tax1Acct?: PlatformCore.RecordRef;
    lineFxRate?: number;
    customFieldList?: PlatformCore.CustomFieldList;
};
export declare class AdvInterCompanyJournalEntryLine extends SoapMappingBase {
    lineSubsidiary?: PlatformCore.RecordRef;
    account?: PlatformCore.RecordRef;
    line?: number;
    debit?: number;
    credit?: number;
    taxCode?: PlatformCore.RecordRef;
    memo?: string;
    taxRate1?: number;
    entity?: PlatformCore.RecordRef;
    dueToFromSubsidiary?: PlatformCore.RecordRef;
    grossAmt?: number;
    schedule?: PlatformCore.RecordRef;
    department?: PlatformCore.RecordRef;
    startDate?: string;
    clazz?: PlatformCore.RecordRef;
    endDate?: string;
    location?: PlatformCore.RecordRef;
    revenueRecognitionRule?: PlatformCore.RecordRef;
    eliminate?: boolean;
    residual?: string;
    amortizationSched?: PlatformCore.RecordRef;
    scheduleNum?: PlatformCore.RecordRef;
    amortizStartDate?: string;
    amortizationEndDate?: string;
    amortizationResidual?: string;
    tax1Amt?: number;
    tax1Acct?: PlatformCore.RecordRef;
    lineFxRate?: number;
    customFieldList?: PlatformCore.CustomFieldList;
    constructor(props: AdvInterCompanyJournalEntryLineProps);
}
export declare type JournalEntryLineListProps = {
    line?: JournalEntryLine[];
    replaceAll?: boolean;
};
export declare class JournalEntryLineList extends SoapMappingBase {
    line?: JournalEntryLine[];
    replaceAll?: boolean;
    constructor(props: JournalEntryLineListProps);
}
export declare type StatisticalJournalEntryProps = {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    tranId?: string;
    parentExpenseAlloc?: PlatformCore.RecordRef;
    approved?: boolean;
    tranDate?: string;
    postingPeriod?: PlatformCore.RecordRef;
    reversalDate?: string;
    memo?: string;
    reversalDefer?: boolean;
    subsidiary?: PlatformCore.RecordRef;
    unitsType?: PlatformCore.RecordRef;
    lineList?: StatisticalJournalEntryLineList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
} & PlatformCore.RecordProps;
export declare class StatisticalJournalEntry extends PlatformCore.Record {
    createdDate?: string;
    lastModifiedDate?: string;
    customForm?: PlatformCore.RecordRef;
    tranId?: string;
    parentExpenseAlloc?: PlatformCore.RecordRef;
    approved?: boolean;
    tranDate?: string;
    postingPeriod?: PlatformCore.RecordRef;
    reversalDate?: string;
    memo?: string;
    reversalDefer?: boolean;
    subsidiary?: PlatformCore.RecordRef;
    unitsType?: PlatformCore.RecordRef;
    lineList?: StatisticalJournalEntryLineList;
    customFieldList?: PlatformCore.CustomFieldList;
    internalId?: string;
    externalId?: string;
    constructor(props: StatisticalJournalEntryProps);
}
export declare type PeriodEndJournalLineProps = {
    account?: PlatformCore.RecordRef;
    debit?: number;
    credit?: number;
    memo?: string;
    line?: number;
    customFieldList?: PlatformCore.CustomFieldList;
};
export declare class PeriodEndJournalLine extends SoapMappingBase {
    account?: PlatformCore.RecordRef;
    debit?: number;
    credit?: number;
    memo?: string;
    line?: number;
    customFieldList?: PlatformCore.CustomFieldList;
    constructor(props: PeriodEndJournalLineProps);
}
export declare type PeriodEndJournalLineListProps = {
    periodEndJournalLine?: PeriodEndJournalLine[];
    replaceAll?: boolean;
};
export declare class PeriodEndJournalLineList extends SoapMappingBase {
    periodEndJournalLine?: PeriodEndJournalLine[];
    replaceAll?: boolean;
    constructor(props: PeriodEndJournalLineListProps);
}
